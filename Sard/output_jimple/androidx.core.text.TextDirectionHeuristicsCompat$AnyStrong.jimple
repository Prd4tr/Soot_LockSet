class androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong extends java.lang.Object implements androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
{
    static final androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL;
    private final boolean mLookForRtl;

    static void <clinit>()
    {
        androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong $u0;

        $u0 = new androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        specialinvoke $u0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: void <init>(boolean)>(1);

        <androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL> = $u0;

        return;
    }

    private void <init>(boolean)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong this;
        boolean $u1;

        this := @this: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        $u1 := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl> = $u1;

        return;
    }

    public int checkRtl(java.lang.CharSequence, int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong this;
        java.lang.CharSequence $u6;
        int $u7, $u8, i;
        boolean haveUnlookedFor;
        char $u-1;
        byte $u-1#5;

        this := @this: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        $u6 := @parameter0: java.lang.CharSequence;

        $u7 := @parameter1: int;

        $u8 := @parameter2: int;

        haveUnlookedFor = 0;

        i = $u7;

        $u7 = $u7 + $u8;

     label1:
        if i >= $u7 goto label7;

        $u-1 = interfaceinvoke $u6.<java.lang.CharSequence: char charAt(int)>(i);

        $u-1#5 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($u-1);

        $u8 = staticinvoke <androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)>($u-1#5);

        if $u8 == 0 goto label4;

        if $u8 == 1 goto label2;

        goto label6;

     label2:
        haveUnlookedFor = this.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        if haveUnlookedFor != 0 goto label3;

        return 1;

     label3:
        haveUnlookedFor = 1;

        goto label6;

     label4:
        haveUnlookedFor = this.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        if haveUnlookedFor == 0 goto label5;

        return 0;

     label5:
        haveUnlookedFor = 1;

     label6:
        i = i + 1;

        goto label1;

     label7:
        if haveUnlookedFor == 0 goto label8;

        haveUnlookedFor = this.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        $u7 = (int) haveUnlookedFor;

        return $u7;

     label8:
        return 2;
    }
}
