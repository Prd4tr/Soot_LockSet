public final class androidx.appcompat.widget.ResourceManagerInternal extends java.lang.Object
{
    private static final androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE;
    private static final boolean DEBUG;
    private static final android.graphics.PorterDuff$Mode DEFAULT_MODE;
    private static androidx.appcompat.widget.ResourceManagerInternal INSTANCE;
    private static final java.lang.String PLATFORM_VD_CLAZZ;
    private static final java.lang.String SKIP_DRAWABLE_TAG;
    private static final java.lang.String TAG;
    private androidx.collection.SimpleArrayMap mDelegates;
    private final java.util.WeakHashMap mDrawableCaches;
    private boolean mHasCheckedVectorDrawableSetup;
    private androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks;
    private androidx.collection.SparseArrayCompat mKnownDrawableIdTags;
    private java.util.WeakHashMap mTintLists;
    private android.util.TypedValue mTypedValue;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $u0;
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache $u0#2;

        <androidx.appcompat.widget.ResourceManagerInternal: java.lang.String TAG> = "ResourceManagerInternal";

        <androidx.appcompat.widget.ResourceManagerInternal: java.lang.String SKIP_DRAWABLE_TAG> = "appcompat_skip_skip";

        <androidx.appcompat.widget.ResourceManagerInternal: java.lang.String PLATFORM_VD_CLAZZ> = "android.graphics.drawable.VectorDrawable";

        <androidx.appcompat.widget.ResourceManagerInternal: boolean DEBUG> = 0;

        $u0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $u0;

        $u0#2 = new androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache;

        specialinvoke $u0#2.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: void <init>(int)>(6);

        <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE> = $u0#2;

        return;
    }

    public void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        java.util.WeakHashMap $u0;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.WeakHashMap;

        specialinvoke $u0.<java.util.WeakHashMap: void <init>(int)>(0);

        this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches> = $u0;

        return;
    }

    private void addDelegate(java.lang.String, androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        java.lang.String $u2;
        androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate $u3;
        androidx.collection.SimpleArrayMap $u0;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate;

        $u0 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        if $u0 != null goto label1;

        $u0 = new androidx.collection.SimpleArrayMap;

        specialinvoke $u0.<androidx.collection.SimpleArrayMap: void <init>()>();

        this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates> = $u0;

     label1:
        $u0 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        virtualinvoke $u0.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u2, $u3);

        return;
    }

    private boolean addDrawableToCache(android.content.Context, long, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        long $u5;
        android.graphics.drawable.Drawable $u7;
        android.content.Context $u4;
        android.graphics.drawable.Drawable$ConstantState $u-1;
        java.util.WeakHashMap cache;
        java.lang.Object $u-1#4;
        androidx.collection.LongSparseArray cache#6, $u2;
        java.lang.ref.WeakReference $u2#9;
        java.lang.Throwable $u4#12;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: long;

        $u7 := @parameter2: android.graphics.drawable.Drawable;

        entermonitor this;

     label1:
        $u-1 = virtualinvoke $u7.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $u-1 == null goto label4;

        cache = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        $u-1#4 = virtualinvoke cache.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($u4);

        cache#6 = (androidx.collection.LongSparseArray) $u-1#4;

        if cache#6 != null goto label2;

        $u2 = new androidx.collection.LongSparseArray;

        specialinvoke $u2.<androidx.collection.LongSparseArray: void <init>()>();

        cache#6 = $u2;

        cache = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        virtualinvoke cache.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u4, $u2);

     label2:
        $u2#9 = new java.lang.ref.WeakReference;

        specialinvoke $u2#9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($u-1);

        virtualinvoke cache#6.<androidx.collection.LongSparseArray: void put(long,java.lang.Object)>($u5, $u2#9);

     label3:
        exitmonitor this;

        return 1;

     label4:
        exitmonitor this;

        return 0;

     label5:
        $u4#12 := @caughtexception;

        exitmonitor this;

        throw $u4#12;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    private void addTintListToCache(android.content.Context, int, android.content.res.ColorStateList)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u3;
        int $u4;
        android.content.res.ColorStateList $u5;
        java.lang.Object $u-1;
        java.util.WeakHashMap themeTints;
        androidx.collection.SparseArrayCompat themeTints#5, $u1;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: int;

        $u5 := @parameter2: android.content.res.ColorStateList;

        themeTints = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        if themeTints != null goto label1;

        themeTints = new java.util.WeakHashMap;

        specialinvoke themeTints.<java.util.WeakHashMap: void <init>()>();

        this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists> = themeTints;

     label1:
        themeTints = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        $u-1 = virtualinvoke themeTints.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($u3);

        themeTints#5 = (androidx.collection.SparseArrayCompat) $u-1;

        if themeTints#5 != null goto label2;

        $u1 = new androidx.collection.SparseArrayCompat;

        specialinvoke $u1.<androidx.collection.SparseArrayCompat: void <init>()>();

        themeTints#5 = $u1;

        themeTints = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        virtualinvoke themeTints.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u3, $u1);

     label2:
        virtualinvoke themeTints#5.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($u4, $u5);

        return;
    }

    private void checkVectorDrawableSetup(android.content.Context)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u4;
        boolean d;
        int d#3;
        android.graphics.drawable.Drawable $u-1;
        java.lang.IllegalStateException $u1;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u4 := @parameter0: android.content.Context;

        d = this.<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup>;

        if d == 0 goto label1;

        return;

     label1:
        this.<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup> = 1;

        d#3 = <androidx.appcompat.resources.R$drawable: int abc_vector_test>;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u4, d#3);

        if $u-1 == null goto label2;

        d = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)>($u-1);

        if d == 0 goto label2;

        return;

     label2:
        this.<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup> = 0;

        $u1 = new java.lang.IllegalStateException;

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.");

        throw $u1;
    }

    private static long createCacheKey(android.util.TypedValue)
    {
        android.util.TypedValue $u4;
        int $u0;
        long $u0#2, $u2;

        $u4 := @parameter0: android.util.TypedValue;

        $u0 = $u4.<android.util.TypedValue: int assetCookie>;

        $u0#2 = (long) $u0;

        $u0#2 = $u0#2 << 32;

        $u0 = $u4.<android.util.TypedValue: int data>;

        $u2 = (long) $u0;

        $u0#2 = $u0#2 | $u2;

        return $u0#2;
    }

    private android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u6;
        int $u7;
        android.util.TypedValue tv;
        android.content.res.Resources $u-1;
        long $u-1#6;
        android.graphics.drawable.Drawable $u-1#8;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $u4;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u6 := @parameter0: android.content.Context;

        $u7 := @parameter1: int;

        tv = this.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        if tv != null goto label1;

        tv = new android.util.TypedValue;

        specialinvoke tv.<android.util.TypedValue: void <init>()>();

        this.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue> = tv;

     label1:
        tv = this.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        $u-1 = virtualinvoke $u6.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $u-1.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($u7, tv, 1);

        $u-1#6 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>(tv);

        $u-1#8 = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($u6, $u-1#6);

        if $u-1#8 == null goto label2;

        return $u-1#8;

     label2:
        $u4 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $u4 != null goto label3;

        $u-1#8 = null;

        goto label4;

     label3:
        $u-1#8 = interfaceinvoke $u4.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>(this, $u6, $u7);

     label4:
        if $u-1#8 == null goto label5;

        $u7 = tv.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke $u-1#8.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($u7);

        specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($u6, $u-1#6, $u-1#8);

     label5:
        return $u-1#8;
    }

    private static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[])
    {
        android.content.res.ColorStateList $u2;
        android.graphics.PorterDuff$Mode $u3;
        int[] $u4;
        int $u-1;
        android.graphics.PorterDuffColorFilter $u-1#4;

        $u2 := @parameter0: android.content.res.ColorStateList;

        $u3 := @parameter1: android.graphics.PorterDuff$Mode;

        $u4 := @parameter2: int[];

        if $u2 == null goto label2;

        if $u3 != null goto label1;

        goto label2;

     label1:
        $u-1 = virtualinvoke $u2.<android.content.res.ColorStateList: int getColorForState(int[],int)>($u4, 0);

        $u-1#4 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($u-1, $u3);

        return $u-1#4;

     label2:
        return null;
    }

    public static androidx.appcompat.widget.ResourceManagerInternal get()
    {
        androidx.appcompat.widget.ResourceManagerInternal $u1;
        java.lang.Throwable $u1#4;

        entermonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

     label1:
        $u1 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE>;

        if $u1 != null goto label2;

        $u1 = new androidx.appcompat.widget.ResourceManagerInternal;

        specialinvoke $u1.<androidx.appcompat.widget.ResourceManagerInternal: void <init>()>();

        <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE> = $u1;

        staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)>($u1);

     label2:
        $u1 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE>;

     label3:
        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        return $u1;

     label4:
        $u1#4 := @caughtexception;

        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        throw $u1#4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private android.graphics.drawable.Drawable getCachedDrawable(android.content.Context, long)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        long $u6;
        android.content.Context $u5;
        java.util.WeakHashMap cache;
        java.lang.Object $u-1;
        androidx.collection.LongSparseArray cache#5;
        java.lang.ref.WeakReference wr;
        android.graphics.drawable.Drawable$ConstantState entry;
        android.content.res.Resources $u-1#13;
        android.graphics.drawable.Drawable $u-1#15;
        java.lang.Throwable $u5#17;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u5 := @parameter0: android.content.Context;

        $u6 := @parameter1: long;

        entermonitor this;

     label1:
        cache = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        $u-1 = virtualinvoke cache.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($u5);

        cache#5 = (androidx.collection.LongSparseArray) $u-1;

     label2:
        if cache#5 != null goto label3;

        exitmonitor this;

        return null;

     label3:
        $u-1 = virtualinvoke cache#5.<androidx.collection.LongSparseArray: java.lang.Object get(long)>($u6);

        wr = (java.lang.ref.WeakReference) $u-1;

        if wr == null goto label6;

        $u-1 = virtualinvoke wr.<java.lang.ref.WeakReference: java.lang.Object get()>();

        entry = (android.graphics.drawable.Drawable$ConstantState) $u-1;

        if entry == null goto label5;

        $u-1#13 = virtualinvoke $u5.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#15 = virtualinvoke entry.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($u-1#13);

     label4:
        exitmonitor this;

        return $u-1#15;

     label5:
        virtualinvoke cache#5.<androidx.collection.LongSparseArray: void remove(long)>($u6);

     label6:
        exitmonitor this;

        return null;

     label7:
        $u5#17 := @caughtexception;

        exitmonitor this;

        throw $u5#17;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $u4;
        android.graphics.PorterDuffColorFilter $u-1, filter#3;
        int $u3;
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache filter;
        java.lang.Throwable $u3#6;

        $u3 := @parameter0: int;

        $u4 := @parameter1: android.graphics.PorterDuff$Mode;

        entermonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

     label1:
        filter = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE>;

        $u-1 = virtualinvoke filter.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>($u3, $u4);

        filter#3 = $u-1;

        if $u-1 != null goto label2;

        $u-1 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $u-1.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($u3, $u4);

        filter#3 = $u-1;

        filter = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE>;

        virtualinvoke filter.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>($u3, $u4, $u-1);

     label2:
        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        return filter#3;

     label3:
        $u3#6 := @caughtexception;

        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        throw $u3#6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private android.content.res.ColorStateList getTintListFromCache(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u3;
        int $u4;
        java.util.WeakHashMap tints;
        java.lang.Object $u-1;
        androidx.collection.SparseArrayCompat tints#5;
        android.content.res.ColorStateList $u1;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: int;

        tints = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        if tints == null goto label1;

        $u-1 = virtualinvoke tints.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($u3);

        tints#5 = (androidx.collection.SparseArrayCompat) $u-1;

        if tints#5 == null goto label1;

        $u-1 = virtualinvoke tints#5.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>($u4);

        $u1 = (android.content.res.ColorStateList) $u-1;

        return $u1;

     label1:
        return null;
    }

    private static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    {
        androidx.appcompat.widget.ResourceManagerInternal $u2;
        int $u0;
        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate $u0#3;
        androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate $u0#5;
        androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate $u0#7;

        $u2 := @parameter0: androidx.appcompat.widget.ResourceManagerInternal;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 >= 24 goto label1;

        $u0#3 = new androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate;

        specialinvoke $u0#3.<androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: void <init>()>();

        specialinvoke $u2.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("vector", $u0#3);

        $u0#5 = new androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate;

        specialinvoke $u0#5.<androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: void <init>()>();

        specialinvoke $u2.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("animated-vector", $u0#5);

        $u0#7 = new androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate;

        specialinvoke $u0#7.<androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: void <init>()>();

        specialinvoke $u2.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("animated-selector", $u0#7);

     label1:
        return;
    }

    private static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        java.lang.String $u1, $u-1#4;
        boolean $u0;
        java.lang.Class $u-1;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = $u2 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;

        if $u0 != 0 goto label2;

        $u-1 = virtualinvoke $u2.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#4 = virtualinvoke $u-1.<java.lang.Class: java.lang.String getName()>();

        $u1 = "android.graphics.drawable.VectorDrawable";

        $u0 = virtualinvoke $u1.<java.lang.String: boolean equals(java.lang.Object)>($u-1#4);

        if $u0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u13;
        int $u14, $u-1#35;
        java.lang.String $u2, cachedTagName#8;
        androidx.collection.SimpleArrayMap cachedTagName;
        boolean $u-1;
        androidx.collection.SparseArrayCompat cachedTagName#5;
        java.lang.Object $u-1#6;
        android.util.TypedValue cachedTagName#15;
        android.content.res.Resources $u-1#18;
        long $u-1#21;
        android.graphics.drawable.Drawable $u-1#22, dr;
        java.lang.CharSequence parser;
        android.content.res.XmlResourceParser $u-1#31;
        android.util.AttributeSet $u-1#33;
        androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate delegate;
        android.content.res.Resources$Theme $u-1#45;
        org.xmlpull.v1.XmlPullParserException tagName;
        java.lang.Exception tagName#52;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u13 := @parameter0: android.content.Context;

        $u14 := @parameter1: int;

        cachedTagName = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        if cachedTagName == null goto label22;

        $u-1 = virtualinvoke cachedTagName.<androidx.collection.SimpleArrayMap: boolean isEmpty()>();

        if $u-1 != 0 goto label22;

        cachedTagName#5 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        $u2 = "appcompat_skip_skip";

        if cachedTagName#5 == null goto label03;

        $u-1#6 = virtualinvoke cachedTagName#5.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>($u14);

        cachedTagName#8 = (java.lang.String) $u-1#6;

        $u-1 = virtualinvoke $u2.<java.lang.String: boolean equals(java.lang.Object)>(cachedTagName#8);

        if $u-1 != 0 goto label02;

        if cachedTagName#8 == null goto label01;

        cachedTagName = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        $u-1#6 = virtualinvoke cachedTagName.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(cachedTagName#8);

        if $u-1#6 != null goto label01;

        return null;

     label01:
        goto label04;

     label02:
        return null;

     label03:
        cachedTagName#5 = new androidx.collection.SparseArrayCompat;

        specialinvoke cachedTagName#5.<androidx.collection.SparseArrayCompat: void <init>()>();

        this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags> = cachedTagName#5;

     label04:
        cachedTagName#15 = this.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        if cachedTagName#15 != null goto label05;

        cachedTagName#15 = new android.util.TypedValue;

        specialinvoke cachedTagName#15.<android.util.TypedValue: void <init>()>();

        this.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue> = cachedTagName#15;

     label05:
        cachedTagName#15 = this.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        $u-1#18 = virtualinvoke $u13.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $u-1#18.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($u14, cachedTagName#15, 1);

        $u-1#21 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>(cachedTagName#15);

        $u-1#22 = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($u13, $u-1#21);

        dr = $u-1#22;

        if $u-1#22 == null goto label06;

        return $u-1#22;

     label06:
        parser = cachedTagName#15.<android.util.TypedValue: java.lang.CharSequence string>;

        if parser == null goto label21;

        parser = cachedTagName#15.<android.util.TypedValue: java.lang.CharSequence string>;

        $u2 = interfaceinvoke parser.<java.lang.CharSequence: java.lang.String toString()>();

        $u-1 = virtualinvoke $u2.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $u-1 == 0 goto label21;

     label07:
        $u-1#31 = virtualinvoke $u-1#18.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($u14);

        $u-1#33 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($u-1#31);

     label08:
        $u-1#35 = interfaceinvoke $u-1#31.<org.xmlpull.v1.XmlPullParser: int next()>();

     label09:
        if $u-1#35 == 2 goto label10;

        if $u-1#35 == 1 goto label10;

        goto label08;

     label10:
        if $u-1#35 != 2 goto label18;

     label11:
        $u2 = interfaceinvoke $u-1#31.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        cachedTagName#5 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke cachedTagName#5.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($u14, $u2);

        cachedTagName = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        $u-1#6 = virtualinvoke cachedTagName.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($u2);

        delegate = (androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) $u-1#6;

     label12:
        if delegate == null goto label15;

     label13:
        $u-1#45 = virtualinvoke $u13.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u-1#22 = interfaceinvoke delegate.<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u13, $u-1#31, $u-1#33, $u-1#45);

     label14:
        dr = $u-1#22;

     label15:
        if dr == null goto label17;

     label16:
        $u-1#35 = cachedTagName#15.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke dr.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($u-1#35);

        specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($u13, $u-1#21, dr);

     label17:
        goto label21;

     label18:
        tagName = new org.xmlpull.v1.XmlPullParserException;

     label19:
        specialinvoke tagName.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw tagName;

     label20:
        tagName#52 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourceManagerInternal", "Exception while inflating drawable", tagName#52);

     label21:
        if dr != null goto label23;

        cachedTagName#5 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke cachedTagName#5.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($u14, "appcompat_skip_skip");

        return dr;

     label22:
        return null;

     label23:
        return dr;

        catch java.lang.Exception from label07 to label09 with label20;
        catch java.lang.Exception from label11 to label12 with label20;
        catch java.lang.Exception from label13 to label14 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label19 to label20 with label20;
    }

    private android.graphics.drawable.Drawable tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u3;
        int $u4;
        boolean $u5, $u-1#10;
        android.graphics.drawable.Drawable $u6, $u-1#6;
        android.content.res.ColorStateList $u-1;
        android.graphics.PorterDuff$Mode $u-1#7;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks tintMode;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: int;

        $u5 := @parameter2: boolean;

        $u6 := @parameter3: android.graphics.drawable.Drawable;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)>($u3, $u4);

        if $u-1 == null goto label3;

        $u5 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u6);

        if $u5 == 0 goto label1;

        $u6 = virtualinvoke $u6.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        $u-1#6 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($u6);

        $u6 = $u-1#6;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($u-1#6, $u-1);

        $u-1#7 = virtualinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)>($u4);

        if $u-1#7 == null goto label2;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($u-1#6, $u-1#7);

     label2:
        return $u6;

     label3:
        tintMode = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if tintMode == null goto label4;

        $u-1#10 = interfaceinvoke tintMode.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)>($u3, $u4, $u6);

        if $u-1#10 == 0 goto label4;

        goto label2;

     label4:
        $u-1#10 = virtualinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>($u3, $u4, $u6);

        if $u-1#10 != 0 goto label5;

        if $u5 == 0 goto label5;

        return null;

     label5:
        return $u6;
    }

    static void tintDrawable(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[])
    {
        android.graphics.drawable.Drawable $u2, $u-1#3;
        androidx.appcompat.widget.TintInfo $u3;
        int[] $u4;
        boolean $u-1;
        android.content.res.ColorStateList $u0;
        android.graphics.PorterDuff$Mode $u1;
        android.graphics.PorterDuffColorFilter $u-1#13;
        int $u0#15;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: androidx.appcompat.widget.TintInfo;

        $u4 := @parameter2: int[];

        $u-1 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u2);

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke $u2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $u-1#3 == $u2 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ResourceManagerInternal", "Mutated drawable is not the same instance as the input.");

        return;

     label1:
        $u-1 = $u3.<androidx.appcompat.widget.TintInfo: boolean mHasTintList>;

        if $u-1 != 0 goto label3;

        $u-1 = $u3.<androidx.appcompat.widget.TintInfo: boolean mHasTintMode>;

        if $u-1 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $u2.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        goto label8;

     label3:
        $u-1 = $u3.<androidx.appcompat.widget.TintInfo: boolean mHasTintList>;

        if $u-1 == 0 goto label4;

        $u0 = $u3.<androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList>;

        goto label5;

     label4:
        $u0 = null;

     label5:
        $u-1 = $u3.<androidx.appcompat.widget.TintInfo: boolean mHasTintMode>;

        if $u-1 == 0 goto label6;

        $u1 = $u3.<androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode>;

        goto label7;

     label6:
        $u1 = <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label7:
        $u-1#13 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])>($u0, $u1, $u4);

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($u-1#13);

     label8:
        $u0#15 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0#15 > 23 goto label9;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label9:
        return;
    }

    public android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        int $u3;
        android.graphics.drawable.Drawable $u-1;
        android.content.Context $u2;
        java.lang.Throwable $u2#4;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: int;

        entermonitor this;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>($u2, $u3, 0);

     label2:
        exitmonitor this;

        return $u-1;

     label3:
        $u2#4 := @caughtexception;

        exitmonitor this;

        throw $u2#4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.graphics.drawable.Drawable getDrawable(android.content.Context, int, boolean)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        int $u4;
        boolean $u5;
        android.content.Context $u3;
        android.graphics.drawable.Drawable $u-1, drawable;
        java.lang.Throwable $u3#10;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: int;

        $u5 := @parameter2: boolean;

        entermonitor this;

     label1:
        specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)>($u3);

        $u-1 = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($u3, $u4);

        drawable = $u-1;

        if $u-1 != null goto label2;

        drawable = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>($u3, $u4);

     label2:
        if drawable != null goto label3;

        drawable = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u3, $u4);

     label3:
        if drawable == null goto label4;

        drawable = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($u3, $u4, $u5, drawable);

     label4:
        if drawable == null goto label5;

        staticinvoke <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>(drawable);

     label5:
        exitmonitor this;

        return drawable;

     label6:
        $u3#10 := @caughtexception;

        exitmonitor this;

        throw $u3#10;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    android.content.res.ColorStateList getTintList(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        int $u4;
        android.content.Context $u3;
        android.content.res.ColorStateList $u-1, tint;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $u1;
        java.lang.Throwable $u3#8;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: int;

        entermonitor this;

     label1:
        $u-1 = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>($u3, $u4);

        tint = $u-1;

        if $u-1 != null goto label4;

        $u1 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $u1 != null goto label2;

        $u-1 = null;

        goto label3;

     label2:
        $u1 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        $u-1 = interfaceinvoke $u1.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)>($u3, $u4);

     label3:
        tint = $u-1;

        if $u-1 == null goto label4;

        specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>($u3, $u4, $u-1);

     label4:
        exitmonitor this;

        return tint;

     label5:
        $u3#8 := @caughtexception;

        exitmonitor this;

        throw $u3#8;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    android.graphics.PorterDuff$Mode getTintMode(int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        int $u2;
        android.graphics.PorterDuff$Mode $u-1;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $u0;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $u0 != null goto label1;

        return null;

     label1:
        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)>($u2);

        return $u-1;
    }

    public void onConfigurationChanged(android.content.Context)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        java.lang.Object $u-1;
        android.content.Context $u2;
        java.util.WeakHashMap cache;
        androidx.collection.LongSparseArray cache#4;
        java.lang.Throwable $u2#5;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u2 := @parameter0: android.content.Context;

        entermonitor this;

     label1:
        cache = this.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        $u-1 = virtualinvoke cache.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($u2);

        cache#4 = (androidx.collection.LongSparseArray) $u-1;

        if cache#4 == null goto label2;

        virtualinvoke cache#4.<androidx.collection.LongSparseArray: void clear()>();

     label2:
        exitmonitor this;

        return;

     label3:
        $u2#5 := @caughtexception;

        exitmonitor this;

        throw $u2#5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context, androidx.appcompat.widget.VectorEnabledTintResources, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        androidx.appcompat.widget.VectorEnabledTintResources $u4;
        int $u5;
        android.content.Context $u3;
        android.graphics.drawable.Drawable $u-1, drawable;
        java.lang.Throwable $u3#10;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: androidx.appcompat.widget.VectorEnabledTintResources;

        $u5 := @parameter2: int;

        entermonitor this;

     label1:
        $u-1 = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($u3, $u5);

        drawable = $u-1;

        if $u-1 != null goto label2;

        drawable = virtualinvoke $u4.<androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)>($u5);

     label2:
        if drawable == null goto label4;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($u3, $u5, 0, drawable);

     label3:
        exitmonitor this;

        return $u-1;

     label4:
        exitmonitor this;

        return null;

     label5:
        $u3#10 := @caughtexception;

        exitmonitor this;

        throw $u3#10;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $u1;
        java.lang.Throwable $u1#2;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u1 := @parameter0: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks;

        entermonitor this;

     label1:
        this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks> = $u1;

     label2:
        exitmonitor this;

        return;

     label3:
        $u1#2 := @caughtexception;

        exitmonitor this;

        throw $u1#2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ResourceManagerInternal this;
        android.content.Context $u2;
        int $u3;
        android.graphics.drawable.Drawable $u4;
        boolean $u-1;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $u0;

        this := @this: androidx.appcompat.widget.ResourceManagerInternal;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: int;

        $u4 := @parameter2: android.graphics.drawable.Drawable;

        $u0 = this.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $u0 == null goto label1;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>($u2, $u3, $u4);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
