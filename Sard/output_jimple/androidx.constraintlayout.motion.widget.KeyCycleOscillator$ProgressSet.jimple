class androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet extends androidx.constraintlayout.motion.widget.KeyCycleOscillator
{
    boolean mNoMethod;

    void <init>()
    {
        androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet this;

        this := @this: androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet;

        specialinvoke this.<androidx.constraintlayout.motion.widget.KeyCycleOscillator: void <init>()>();

        this.<androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet: boolean mNoMethod> = 0;

        return;
    }

    public void setProperty(android.view.View, float)
    {
        androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet this;
        android.view.View $u10;
        float $u11;
        java.lang.Class[] $u7;
        java.lang.Class $u8, $u-1;
        boolean method;
        androidx.constraintlayout.motion.widget.MotionLayout $u0;
        java.lang.reflect.Method method#9, $u-1#14;
        java.lang.NoSuchMethodException e1;
        java.lang.Object[] $u4;
        java.lang.Float $u-1#20;
        java.lang.reflect.InvocationTargetException e;
        java.lang.IllegalAccessException e#23;

        this := @this: androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet;

        $u10 := @parameter0: android.view.View;

        $u11 := @parameter1: float;

        method = $u10 instanceof androidx.constraintlayout.motion.widget.MotionLayout;

        if method == 0 goto label01;

        $u0 = (androidx.constraintlayout.motion.widget.MotionLayout) $u10;

        $u11 = virtualinvoke this.<androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet: float get(float)>($u11);

        virtualinvoke $u0.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>($u11);

        return;

     label01:
        method = this.<androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet: boolean mNoMethod>;

        if method == 0 goto label02;

        return;

     label02:
        method#9 = null;

     label03:
        $u-1 = virtualinvoke $u10.<java.lang.Object: java.lang.Class getClass()>();

     label04:
        $u7 = newarray (java.lang.Class)[1];

        $u8 = <java.lang.Float: java.lang.Class TYPE>;

        $u7[0] = $u8;

     label05:
        $u-1#14 = virtualinvoke $u-1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setProgress", $u7);

     label06:
        method#9 = $u-1#14;

        goto label08;

     label07:
        e1 := @caughtexception;

        this.<androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet: boolean mNoMethod> = 1;

     label08:
        if method#9 == null goto label15;

        $u4 = newarray (java.lang.Object)[1];

     label09:
        $u11 = virtualinvoke this.<androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet: float get(float)>($u11);

        $u-1#20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($u11);

     label10:
        $u4[0] = $u-1#20;

     label11:
        virtualinvoke method#9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($u10, $u4);

     label12:
        return;

     label13:
        e := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyCycleOscillator", "unable to setProgress", e);

        return;

     label14:
        e#23 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyCycleOscillator", "unable to setProgress", e#23);

     label15:
        return;

        catch java.lang.NoSuchMethodException from label03 to label04 with label07;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.IllegalAccessException from label09 to label10 with label14;
        catch java.lang.IllegalAccessException from label11 to label12 with label14;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label13;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label13;
    }
}
