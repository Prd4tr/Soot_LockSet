public class androidx.constraintlayout.motion.utils.Oscillator extends java.lang.Object
{
    public static final int BOUNCE;
    public static final int COS_WAVE;
    public static final int REVERSE_SAW_WAVE;
    public static final int SAW_WAVE;
    public static final int SIN_WAVE;
    public static final int SQUARE_WAVE;
    public static java.lang.String TAG;
    public static final int TRIANGLE_WAVE;
    double PI2;
    double[] mArea;
    private boolean mNormalized;
    float[] mPeriod;
    double[] mPosition;
    int mType;

    static void <clinit>()
    {
        <androidx.constraintlayout.motion.utils.Oscillator: int TRIANGLE_WAVE> = 2;

        <androidx.constraintlayout.motion.utils.Oscillator: int SQUARE_WAVE> = 1;

        <androidx.constraintlayout.motion.utils.Oscillator: int SIN_WAVE> = 0;

        <androidx.constraintlayout.motion.utils.Oscillator: int SAW_WAVE> = 3;

        <androidx.constraintlayout.motion.utils.Oscillator: int REVERSE_SAW_WAVE> = 4;

        <androidx.constraintlayout.motion.utils.Oscillator: int COS_WAVE> = 5;

        <androidx.constraintlayout.motion.utils.Oscillator: int BOUNCE> = 6;

        <androidx.constraintlayout.motion.utils.Oscillator: java.lang.String TAG> = "Oscillator";

        return;
    }

    public void <init>()
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        float[] $u1;
        double[] $u1#2;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u1 = newarray (float)[0];

        this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod> = $u1;

        $u1#2 = newarray (double)[0];

        this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition> = $u1#2;

        this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2> = 6.283185307179586;

        this.<androidx.constraintlayout.motion.utils.Oscillator: boolean mNormalized> = 0;

        return;
    }

    public void addPoint(double, float)
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        double $u6;
        float $u8;
        int $u3, len#2, len#3;
        float[] len;
        double[] j;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u6 := @parameter0: double;

        $u8 := @parameter1: float;

        len = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        len#2 = lengthof len;

        len#3 = len#2 + 1;

        j = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u3 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(j, $u6);

        len#2 = $u3;

        if $u3 >= 0 goto label1;

        len#2 = neg $u3;

        len#2 = len#2 + -1;

     label1:
        j = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        j = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(j, len#3);

        this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition> = j;

        len = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        len = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(len, len#3);

        this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod> = len;

        j = newarray (double)[len#3];

        this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mArea> = j;

        j = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u3 = len#2 + 1;

        len#3 = len#3 - len#2;

        len#3 = len#3 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(j, len#2, j, $u3, len#3);

        j = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        j[len#2] = $u6;

        len = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        len[len#2] = $u8;

        this.<androidx.constraintlayout.motion.utils.Oscillator: boolean mNormalized> = 0;

        return;
    }

    double getDP(double)
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        double $u19, m#17, $u12, $u14;
        double[] $u11;
        int $u-1, $u10;
        byte time;
        float[] $u8;
        float m, $u10#15;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u19 := @parameter0: double;

        time = $u19 cmpg 0.0;

        if time > 0 goto label1;

        $u19 = 1.0E-5;

        goto label2;

     label1:
        time = $u19 cmpl 1.0;

        if time < 0 goto label2;

        $u19 = 0.999999;

        goto label2;

     label2:
        $u11 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u-1 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($u11, $u19);

        if $u-1 <= 0 goto label3;

        return 0.0;

     label3:
        if $u-1 == 0 goto label4;

        $u-1 = neg $u-1;

        $u-1 = $u-1 + -1;

        $u8 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        m = $u8[$u-1];

        $u10 = $u-1 + -1;

        $u10#15 = $u8[$u10];

        m = m - $u10#15;

        m#17 = (double) m;

        $u11 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u12 = $u11[$u-1];

        $u10 = $u-1 + -1;

        $u14 = $u11[$u10];

        $u12 = $u12 - $u14;

        staticinvoke <java.lang.Double: boolean isNaN(double)>(m#17);

        m#17 = m#17 / $u12;

        $u19 = m#17 * $u19;

        $u10 = $u-1 + -1;

        m = $u8[$u10];

        $u12 = (double) m;

        $u-1 = $u-1 + -1;

        $u14 = $u11[$u-1];

        m#17 = $u14 * m#17;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u12);

        m#17 = $u12 - m#17;

        $u19 = $u19 + m#17;

        return $u19;

     label4:
        return 0.0;
    }

    double getP(double)
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        double $u17, $u20, time, $u12, $u15;
        int $u-1, $u10;
        byte index;
        double[] index#8, $u12#28;
        float[] $u8;
        float m, $u10#19;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u20 := @parameter0: double;

        index = $u20 cmpg 0.0;

        if index >= 0 goto label1;

        time = 0.0;

        goto label3;

     label1:
        index = $u20 cmpl 1.0;

        if index <= 0 goto label2;

        time = 1.0;

        goto label3;

     label2:
        time = $u20;

     label3:
        index#8 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u-1 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(index#8, time);

        if $u-1 <= 0 goto label4;

        return 1.0;

     label4:
        if $u-1 == 0 goto label5;

        $u-1 = neg $u-1;

        $u-1 = $u-1 + -1;

        $u8 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        m = $u8[$u-1];

        $u10 = $u-1 + -1;

        $u10#19 = $u8[$u10];

        m = m - $u10#19;

        $u20 = (double) m;

        index#8 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u12 = index#8[$u-1];

        $u10 = $u-1 + -1;

        $u17 = index#8[$u10];

        $u12 = $u12 - $u17;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u20);

        $u20 = $u20 / $u12;

        $u12#28 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mArea>;

        $u10 = $u-1 + -1;

        $u12 = $u12#28[$u10];

        $u10 = $u-1 + -1;

        m = $u8[$u10];

        $u17 = (double) m;

        $u10 = $u-1 + -1;

        $u15 = index#8[$u10];

        $u15 = $u15 * $u20;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u17);

        $u17 = $u17 - $u15;

        $u10 = $u-1 + -1;

        $u15 = index#8[$u10];

        $u15 = time - $u15;

        $u17 = $u17 * $u15;

        $u12 = $u12 + $u17;

        time = time * time;

        $u10 = $u-1 + -1;

        $u15 = index#8[$u10];

        $u-1 = $u-1 + -1;

        $u17 = index#8[$u-1];

        $u17 = $u15 * $u17;

        time = time - $u17;

        $u20 = time * $u20;

        $u20 = $u20 / 2.0;

        $u20 = $u12 + $u20;

        return $u20;

     label5:
        return 0.0;
    }

    public double getSlope(double)
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        double $u12, $u0#3, $u-1;
        int $u0;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u12 := @parameter0: double;

        $u0 = this.<androidx.constraintlayout.motion.utils.Oscillator: int mType>;

        lookupswitch($u0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $u0#3 = this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getDP(double)>($u12);

        $u0#3 = $u0#3 * $u-1;

        $u-1 = this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2>;

        $u12 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u12);

        $u12 = $u-1 * $u12;

        $u12 = staticinvoke <java.lang.Math: double cos(double)>($u12);

        $u12 = $u0#3 * $u12;

        return $u12;

     label2:
        $u0#3 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getDP(double)>($u12);

        $u0#3 = $u0#3 * 4.0;

        $u12 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u12);

        $u12 = $u12 * 4.0;

        $u12 = $u12 + 2.0;

        $u12 = $u12 % 4.0;

        $u12 = $u12 - 2.0;

        $u12 = $u0#3 * $u12;

        return $u12;

     label3:
        $u0#3 = this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2>;

        $u0#3 = neg $u0#3;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getDP(double)>($u12);

        $u0#3 = $u0#3 * $u-1;

        $u-1 = this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2>;

        $u12 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u12);

        $u12 = $u-1 * $u12;

        $u12 = staticinvoke <java.lang.Math: double sin(double)>($u12);

        $u12 = $u0#3 * $u12;

        return $u12;

     label4:
        $u12 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getDP(double)>($u12);

        $u12 = neg $u12;

        $u12 = $u12 * 2.0;

        return $u12;

     label5:
        $u12 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getDP(double)>($u12);

        $u12 = $u12 * 2.0;

        return $u12;

     label6:
        $u0#3 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getDP(double)>($u12);

        $u0#3 = $u0#3 * 4.0;

        $u12 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u12);

        $u12 = $u12 * 4.0;

        $u12 = $u12 + 3.0;

        $u12 = $u12 % 4.0;

        $u12 = $u12 - 2.0;

        $u12 = staticinvoke <java.lang.Math: double signum(double)>($u12);

        $u12 = $u0#3 * $u12;

        return $u12;

     label7:
        return 0.0;
    }

    public double getValue(double)
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        double $u10, x#3;
        int x;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u10 := @parameter0: double;

        x = this.<androidx.constraintlayout.motion.utils.Oscillator: int mType>;

        lookupswitch(x)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        x#3 = this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2>;

        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = x#3 * $u10;

        $u10 = staticinvoke <java.lang.Math: double sin(double)>($u10);

        return $u10;

     label2:
        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = $u10 * 4.0;

        $u10 = $u10 % 4.0;

        $u10 = $u10 - 2.0;

        $u10 = staticinvoke <java.lang.Math: double abs(double)>($u10);

        $u10 = 1.0 - $u10;

        $u10 = $u10 * $u10;

        $u10 = 1.0 - $u10;

        return $u10;

     label3:
        x#3 = this.<androidx.constraintlayout.motion.utils.Oscillator: double PI2>;

        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = x#3 * $u10;

        $u10 = staticinvoke <java.lang.Math: double cos(double)>($u10);

        return $u10;

     label4:
        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = $u10 * 2.0;

        $u10 = $u10 + 1.0;

        $u10 = $u10 % 2.0;

        $u10 = 1.0 - $u10;

        return $u10;

     label5:
        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = $u10 * 2.0;

        $u10 = $u10 + 1.0;

        $u10 = $u10 % 2.0;

        $u10 = $u10 - 1.0;

        return $u10;

     label6:
        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = $u10 * 4.0;

        $u10 = $u10 + 1.0;

        $u10 = $u10 % 4.0;

        $u10 = $u10 - 2.0;

        $u10 = staticinvoke <java.lang.Math: double abs(double)>($u10);

        $u10 = 1.0 - $u10;

        return $u10;

     label7:
        $u10 = virtualinvoke this.<androidx.constraintlayout.motion.utils.Oscillator: double getP(double)>($u10);

        $u10 = $u10 % 1.0;

        $u10 = 0.5 - $u10;

        $u10 = staticinvoke <java.lang.Math: double signum(double)>($u10);

        return $u10;
    }

    public void normalize()
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        double totalArea, totalCount, $u5#7, $u9;
        int i, h;
        float[] $u5;
        float $u5#6, $u5#14;
        double[] $u5#17;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        totalArea = 0.0;

        totalCount = 0.0;

        i = 0;

     label1:
        $u5 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        h = lengthof $u5;

        if i >= h goto label2;

        $u5#6 = $u5[i];

        $u5#7 = (double) $u5#6;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u5#7);

        totalCount = totalCount + $u5#7;

        i = i + 1;

        goto label1;

     label2:
        i = 1;

     label3:
        $u5 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        h = lengthof $u5;

        if i >= h goto label4;

        h = i + -1;

        $u5#6 = $u5[h];

        $u5#14 = $u5[i];

        $u5#6 = $u5#6 + $u5#14;

        $u5#6 = $u5#6 / 2.0F;

        $u5#17 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u5#7 = $u5#17[i];

        h = i + -1;

        $u9 = $u5#17[h];

        $u5#7 = $u5#7 - $u9;

        $u9 = (double) $u5#6;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u9);

        $u5#7 = $u9 * $u5#7;

        totalArea = totalArea + $u5#7;

        i = i + 1;

        goto label3;

     label4:
        i = 0;

     label5:
        $u5 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        h = lengthof $u5;

        if i >= h goto label6;

        $u5#6 = $u5[i];

        $u5#7 = (double) $u5#6;

        $u9 = totalCount / totalArea;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u5#7);

        $u5#7 = $u5#7 * $u9;

        $u5#6 = (float) $u5#7;

        $u5[i] = $u5#6;

        i = i + 1;

        goto label5;

     label6:
        $u5#17 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mArea>;

        totalArea = (double) 0L;

        $u5#17[0] = totalArea;

        i = 1;

     label7:
        $u5 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        h = lengthof $u5;

        if i >= h goto label8;

        h = i + -1;

        $u5#6 = $u5[h];

        $u5#14 = $u5[i];

        $u5#6 = $u5#6 + $u5#14;

        $u5#6 = $u5#6 / 2.0F;

        $u5#17 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        totalArea = $u5#17[i];

        h = i + -1;

        totalCount = $u5#17[h];

        totalCount = totalArea - totalCount;

        $u5#17 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mArea>;

        h = i + -1;

        totalArea = $u5#17[h];

        $u5#7 = (double) $u5#6;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u5#7);

        totalCount = $u5#7 * totalCount;

        totalArea = totalArea + totalCount;

        $u5#17[i] = totalArea;

        i = i + 1;

        goto label7;

     label8:
        this.<androidx.constraintlayout.motion.utils.Oscillator: boolean mNormalized> = 1;

        return;
    }

    public void setType(int)
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        int $u1;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u1 := @parameter0: int;

        this.<androidx.constraintlayout.motion.utils.Oscillator: int mType> = $u1;

        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.motion.utils.Oscillator this;
        java.lang.StringBuilder $u0;
        double[] $u1;
        java.lang.String $u-1;
        float[] $u1#7;

        this := @this: androidx.constraintlayout.motion.utils.Oscillator;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pos =");

        $u1 = this.<androidx.constraintlayout.motion.utils.Oscillator: double[] mPosition>;

        $u-1 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>($u1);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" period=");

        $u1#7 = this.<androidx.constraintlayout.motion.utils.Oscillator: float[] mPeriod>;

        $u-1 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($u1#7);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1;
    }
}
