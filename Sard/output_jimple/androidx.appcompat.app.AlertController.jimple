class androidx.appcompat.app.AlertController extends java.lang.Object
{
    android.widget.ListAdapter mAdapter;
    private int mAlertDialogLayout;
    private final android.view.View$OnClickListener mButtonHandler;
    private final int mButtonIconDimen;
    android.widget.Button mButtonNegative;
    private android.graphics.drawable.Drawable mButtonNegativeIcon;
    android.os.Message mButtonNegativeMessage;
    private java.lang.CharSequence mButtonNegativeText;
    android.widget.Button mButtonNeutral;
    private android.graphics.drawable.Drawable mButtonNeutralIcon;
    android.os.Message mButtonNeutralMessage;
    private java.lang.CharSequence mButtonNeutralText;
    private int mButtonPanelLayoutHint;
    private int mButtonPanelSideLayout;
    android.widget.Button mButtonPositive;
    private android.graphics.drawable.Drawable mButtonPositiveIcon;
    android.os.Message mButtonPositiveMessage;
    private java.lang.CharSequence mButtonPositiveText;
    int mCheckedItem;
    private final android.content.Context mContext;
    private android.view.View mCustomTitleView;
    final androidx.appcompat.app.AppCompatDialog mDialog;
    android.os.Handler mHandler;
    private android.graphics.drawable.Drawable mIcon;
    private int mIconId;
    private android.widget.ImageView mIconView;
    int mListItemLayout;
    int mListLayout;
    android.widget.ListView mListView;
    private java.lang.CharSequence mMessage;
    private android.widget.TextView mMessageView;
    int mMultiChoiceItemLayout;
    androidx.core.widget.NestedScrollView mScrollView;
    private boolean mShowTitle;
    int mSingleChoiceItemLayout;
    private java.lang.CharSequence mTitle;
    private android.widget.TextView mTitleView;
    private android.view.View mView;
    private int mViewLayoutResId;
    private int mViewSpacingBottom;
    private int mViewSpacingLeft;
    private int mViewSpacingRight;
    private boolean mViewSpacingSpecified;
    private int mViewSpacingTop;
    private final android.view.Window mWindow;

    public void <init>(android.content.Context, androidx.appcompat.app.AppCompatDialog, android.view.Window)
    {
        androidx.appcompat.app.AlertController this;
        android.content.Context $u5;
        androidx.appcompat.app.AppCompatDialog $u6;
        android.view.Window $u7;
        androidx.appcompat.app.AlertController$1 a;
        androidx.appcompat.app.AlertController$ButtonHandler a#4;
        int[] a#5;
        int $u2;
        android.content.res.TypedArray $u-1;
        boolean $u-1#30;

        this := @this: androidx.appcompat.app.AlertController;

        $u5 := @parameter0: android.content.Context;

        $u6 := @parameter1: androidx.appcompat.app.AppCompatDialog;

        $u7 := @parameter2: android.view.Window;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified> = 0;

        this.<androidx.appcompat.app.AlertController: int mIconId> = 0;

        this.<androidx.appcompat.app.AlertController: int mCheckedItem> = -1;

        this.<androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint> = 0;

        a = new androidx.appcompat.app.AlertController$1;

        specialinvoke a.<androidx.appcompat.app.AlertController$1: void <init>(androidx.appcompat.app.AlertController)>(this);

        this.<androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler> = a;

        this.<androidx.appcompat.app.AlertController: android.content.Context mContext> = $u5;

        this.<androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog> = $u6;

        this.<androidx.appcompat.app.AlertController: android.view.Window mWindow> = $u7;

        a#4 = new androidx.appcompat.app.AlertController$ButtonHandler;

        specialinvoke a#4.<androidx.appcompat.app.AlertController$ButtonHandler: void <init>(android.content.DialogInterface)>($u6);

        this.<androidx.appcompat.app.AlertController: android.os.Handler mHandler> = a#4;

        a#5 = <androidx.appcompat.R$styleable: int[] AlertDialog>;

        $u2 = <androidx.appcompat.R$attr: int alertDialogStyle>;

        $u-1 = virtualinvoke $u5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, a#5, $u2, 0);

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_android_layout>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mAlertDialogLayout> = $u2;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mButtonPanelSideLayout> = $u2;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_listLayout>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mListLayout> = $u2;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mMultiChoiceItemLayout> = $u2;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mSingleChoiceItemLayout> = $u2;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_listItemLayout>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mListItemLayout> = $u2;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_showTitle>;

        $u-1#30 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u2, 1);

        this.<androidx.appcompat.app.AlertController: boolean mShowTitle> = $u-1#30;

        $u2 = <androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen>;

        $u2 = virtualinvoke $u-1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u2, 0);

        this.<androidx.appcompat.app.AlertController: int mButtonIconDimen> = $u2;

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke $u6.<androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)>(1);

        return;
    }

    static boolean canTextInput(android.view.View)
    {
        android.view.View $u5;
        boolean $u-1;
        android.view.ViewGroup vg;
        int $u-1#7;

        $u5 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u5.<android.view.View: boolean onCheckIsTextEditor()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        $u-1 = $u5 instanceof android.view.ViewGroup;

        if $u-1 != 0 goto label2;

        return 0;

     label2:
        vg = (android.view.ViewGroup) $u5;

        $u-1#7 = virtualinvoke vg.<android.view.ViewGroup: int getChildCount()>();

     label3:
        if $u-1#7 <= 0 goto label4;

        $u-1#7 = $u-1#7 + -1;

        $u5 = virtualinvoke vg.<android.view.ViewGroup: android.view.View getChildAt(int)>($u-1#7);

        $u-1 = staticinvoke <androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)>($u5);

        if $u-1 == 0 goto label3;

        return 1;

     label4:
        return 0;
    }

    private void centerButton(android.widget.Button)
    {
        androidx.appcompat.app.AlertController this;
        android.widget.Button $u3;
        android.view.ViewGroup$LayoutParams $u-1;
        android.widget.LinearLayout$LayoutParams params;

        this := @this: androidx.appcompat.app.AlertController;

        $u3 := @parameter0: android.widget.Button;

        $u-1 = virtualinvoke $u3.<android.widget.Button: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        params = (android.widget.LinearLayout$LayoutParams) $u-1;

        params.<android.widget.LinearLayout$LayoutParams: int gravity> = 1;

        params.<android.widget.LinearLayout$LayoutParams: float weight> = 0.5F;

        virtualinvoke $u3.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(params);

        return;
    }

    static void manageScrollIndicators(android.view.View, android.view.View, android.view.View)
    {
        android.view.View $u3, $u4, $u5;
        byte $u0, $u2;
        boolean $u-1;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: android.view.View;

        $u5 := @parameter2: android.view.View;

        $u0 = 0;

        if $u4 == null goto label3;

        $u-1 = virtualinvoke $u3.<android.view.View: boolean canScrollVertically(int)>(-1);

        if $u-1 == 0 goto label1;

        $u2 = 0;

        goto label2;

     label1:
        $u2 = 4;

     label2:
        virtualinvoke $u4.<android.view.View: void setVisibility(int)>($u2);

     label3:
        if $u5 == null goto label6;

        $u-1 = virtualinvoke $u3.<android.view.View: boolean canScrollVertically(int)>(1);

        if $u-1 == 0 goto label4;

        goto label5;

     label4:
        $u0 = 4;

     label5:
        virtualinvoke $u5.<android.view.View: void setVisibility(int)>($u0);

     label6:
        return;
    }

    private android.view.ViewGroup resolvePanel(android.view.View, android.view.View)
    {
        androidx.appcompat.app.AlertController this;
        android.view.View $u3, $u4;
        boolean parent;
        android.view.ViewStub parent#5;
        android.view.ViewGroup parent#8;
        android.view.ViewParent $u-1;

        this := @this: androidx.appcompat.app.AlertController;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: android.view.View;

        if $u3 != null goto label2;

        parent = $u4 instanceof android.view.ViewStub;

        if parent == 0 goto label1;

        parent#5 = (android.view.ViewStub) $u4;

        $u4 = virtualinvoke parent#5.<android.view.ViewStub: android.view.View inflate()>();

     label1:
        parent#8 = (android.view.ViewGroup) $u4;

        return parent#8;

     label2:
        if $u4 == null goto label3;

        $u-1 = virtualinvoke $u4.<android.view.View: android.view.ViewParent getParent()>();

        parent = $u-1 instanceof android.view.ViewGroup;

        if parent == 0 goto label3;

        parent#8 = (android.view.ViewGroup) $u-1;

        virtualinvoke parent#8.<android.view.ViewGroup: void removeView(android.view.View)>($u4);

     label3:
        parent = $u3 instanceof android.view.ViewStub;

        if parent == 0 goto label4;

        parent#5 = (android.view.ViewStub) $u3;

        $u3 = virtualinvoke parent#5.<android.view.ViewStub: android.view.View inflate()>();

     label4:
        parent#8 = (android.view.ViewGroup) $u3;

        return parent#8;
    }

    private int selectContentView()
    {
        androidx.appcompat.app.AlertController this;
        int $u1, $u0;

        this := @this: androidx.appcompat.app.AlertController;

        $u0 = this.<androidx.appcompat.app.AlertController: int mButtonPanelSideLayout>;

        if $u0 != 0 goto label1;

        $u1 = this.<androidx.appcompat.app.AlertController: int mAlertDialogLayout>;

        return $u1;

     label1:
        $u1 = this.<androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint>;

        if $u1 != 1 goto label2;

        return $u0;

     label2:
        $u1 = this.<androidx.appcompat.app.AlertController: int mAlertDialogLayout>;

        return $u1;
    }

    private void setScrollIndicators(android.view.ViewGroup, android.view.View, int, int)
    {
        androidx.appcompat.app.AlertController this;
        android.view.ViewGroup $u7;
        android.view.View $u8, $u-1, indicatorUp#4, $u-1#7, indicatorDown#8;
        int $u9, $u10, indicatorDown;
        android.view.Window indicatorUp;
        java.lang.CharSequence $u4;
        androidx.core.widget.NestedScrollView $u4#16;
        androidx.appcompat.app.AlertController$2 $u5;
        androidx.appcompat.app.AlertController$3 $u5#19;
        android.widget.ListView $u4#20;
        androidx.appcompat.app.AlertController$4 $u5#21;
        androidx.appcompat.app.AlertController$5 $u5#23;

        this := @this: androidx.appcompat.app.AlertController;

        $u7 := @parameter0: android.view.ViewGroup;

        $u8 := @parameter1: android.view.View;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int;

        indicatorUp = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        indicatorDown = <androidx.appcompat.R$id: int scrollIndicatorUp>;

        $u-1 = virtualinvoke indicatorUp.<android.view.Window: android.view.View findViewById(int)>(indicatorDown);

        indicatorUp#4 = $u-1;

        indicatorUp = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        indicatorDown = <androidx.appcompat.R$id: int scrollIndicatorDown>;

        $u-1#7 = virtualinvoke indicatorUp.<android.view.Window: android.view.View findViewById(int)>(indicatorDown);

        indicatorDown#8 = $u-1#7;

        indicatorDown = <android.os.Build$VERSION: int SDK_INT>;

        if indicatorDown < 23 goto label2;

        staticinvoke <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>($u8, $u9, $u10);

        if $u-1 == null goto label1;

        virtualinvoke $u7.<android.view.ViewGroup: void removeView(android.view.View)>($u-1);

     label1:
        if $u-1#7 == null goto label9;

        virtualinvoke $u7.<android.view.ViewGroup: void removeView(android.view.View)>($u-1#7);

        return;

     label2:
        if $u-1 == null goto label3;

        $u10 = $u9 & 1;

        if $u10 != 0 goto label3;

        virtualinvoke $u7.<android.view.ViewGroup: void removeView(android.view.View)>($u-1);

        indicatorUp#4 = null;

     label3:
        if $u-1#7 == null goto label4;

        $u9 = $u9 & 2;

        if $u9 != 0 goto label4;

        virtualinvoke $u7.<android.view.ViewGroup: void removeView(android.view.View)>($u-1#7);

        indicatorDown#8 = null;

     label4:
        if indicatorUp#4 != null goto label5;

        if indicatorDown#8 == null goto label9;

     label5:
        $u8 = indicatorDown#8;

        $u4 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage>;

        if $u4 == null goto label6;

        $u4#16 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        $u5 = new androidx.appcompat.app.AlertController$2;

        specialinvoke $u5.<androidx.appcompat.app.AlertController$2: void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View)>(this, indicatorUp#4, indicatorDown#8);

        virtualinvoke $u4#16.<androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)>($u5);

        $u4#16 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        $u5#19 = new androidx.appcompat.app.AlertController$3;

        specialinvoke $u5#19.<androidx.appcompat.app.AlertController$3: void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View)>(this, indicatorUp#4, indicatorDown#8);

        virtualinvoke $u4#16.<androidx.core.widget.NestedScrollView: boolean post(java.lang.Runnable)>($u5#19);

        return;

     label6:
        $u4#20 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        if $u4#20 == null goto label7;

        $u5#21 = new androidx.appcompat.app.AlertController$4;

        specialinvoke $u5#21.<androidx.appcompat.app.AlertController$4: void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View)>(this, indicatorUp#4, indicatorDown#8);

        virtualinvoke $u4#20.<android.widget.ListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>($u5#21);

        $u4#20 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        $u5#23 = new androidx.appcompat.app.AlertController$5;

        specialinvoke $u5#23.<androidx.appcompat.app.AlertController$5: void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View)>(this, indicatorUp#4, indicatorDown#8);

        virtualinvoke $u4#20.<android.widget.ListView: boolean post(java.lang.Runnable)>($u5#23);

        return;

     label7:
        if indicatorUp#4 == null goto label8;

        virtualinvoke $u7.<android.view.ViewGroup: void removeView(android.view.View)>(indicatorUp#4);

     label8:
        if $u8 == null goto label9;

        virtualinvoke $u7.<android.view.ViewGroup: void removeView(android.view.View)>($u8);

     label9:
        return;
    }

    private void setupButtons(android.view.ViewGroup)
    {
        androidx.appcompat.app.AlertController this;
        android.view.ViewGroup $u10;
        int whichButtons, $u8;
        android.view.View $u-1;
        android.widget.Button hasButtons;
        android.view.View$OnClickListener $u5;
        java.lang.CharSequence hasButtons#7;
        boolean $u-1#8, $u7;
        android.graphics.drawable.Drawable hasButtons#12;
        android.content.Context hasButtons#55;

        this := @this: androidx.appcompat.app.AlertController;

        $u10 := @parameter0: android.view.ViewGroup;

        whichButtons = 0;

        $u-1 = virtualinvoke $u10.<android.view.ViewGroup: android.view.View findViewById(int)>(16908313);

        hasButtons = (android.widget.Button) $u-1;

        this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive> = hasButtons;

        $u5 = this.<androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler>;

        virtualinvoke hasButtons.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($u5);

        hasButtons#7 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText>;

        $u-1#8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(hasButtons#7);

        $u7 = 0;

        if $u-1#8 == 0 goto label01;

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon>;

        if hasButtons#12 != null goto label01;

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive>;

        virtualinvoke hasButtons.<android.widget.Button: void setVisibility(int)>(8);

        goto label03;

     label01:
        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive>;

        hasButtons#7 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText>;

        virtualinvoke hasButtons.<android.widget.Button: void setText(java.lang.CharSequence)>(hasButtons#7);

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon>;

        if hasButtons#12 == null goto label02;

        whichButtons = this.<androidx.appcompat.app.AlertController: int mButtonIconDimen>;

        virtualinvoke hasButtons#12.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, whichButtons, whichButtons);

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive>;

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon>;

        virtualinvoke hasButtons.<android.widget.Button: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(hasButtons#12, null, null, null);

     label02:
        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive>;

        virtualinvoke hasButtons.<android.widget.Button: void setVisibility(int)>(0);

        whichButtons = 1;

     label03:
        $u-1 = virtualinvoke $u10.<android.view.ViewGroup: android.view.View findViewById(int)>(16908314);

        hasButtons = (android.widget.Button) $u-1;

        this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative> = hasButtons;

        $u5 = this.<androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler>;

        virtualinvoke hasButtons.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($u5);

        hasButtons#7 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText>;

        $u-1#8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(hasButtons#7);

        if $u-1#8 == 0 goto label04;

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon>;

        if hasButtons#12 != null goto label04;

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative>;

        virtualinvoke hasButtons.<android.widget.Button: void setVisibility(int)>(8);

        goto label06;

     label04:
        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative>;

        hasButtons#7 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText>;

        virtualinvoke hasButtons.<android.widget.Button: void setText(java.lang.CharSequence)>(hasButtons#7);

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon>;

        if hasButtons#12 == null goto label05;

        $u8 = this.<androidx.appcompat.app.AlertController: int mButtonIconDimen>;

        virtualinvoke hasButtons#12.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $u8, $u8);

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative>;

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon>;

        virtualinvoke hasButtons.<android.widget.Button: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(hasButtons#12, null, null, null);

     label05:
        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative>;

        virtualinvoke hasButtons.<android.widget.Button: void setVisibility(int)>(0);

        whichButtons = whichButtons | 2;

     label06:
        $u-1 = virtualinvoke $u10.<android.view.ViewGroup: android.view.View findViewById(int)>(16908315);

        hasButtons = (android.widget.Button) $u-1;

        this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral> = hasButtons;

        $u5 = this.<androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler>;

        virtualinvoke hasButtons.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($u5);

        hasButtons#7 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText>;

        $u-1#8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(hasButtons#7);

        if $u-1#8 == 0 goto label07;

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon>;

        if hasButtons#12 != null goto label07;

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral>;

        virtualinvoke hasButtons.<android.widget.Button: void setVisibility(int)>(8);

        goto label09;

     label07:
        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral>;

        hasButtons#7 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText>;

        virtualinvoke hasButtons.<android.widget.Button: void setText(java.lang.CharSequence)>(hasButtons#7);

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon>;

        if hasButtons#12 == null goto label08;

        $u8 = this.<androidx.appcompat.app.AlertController: int mButtonIconDimen>;

        virtualinvoke hasButtons#12.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $u8, $u8);

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral>;

        hasButtons#12 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon>;

        virtualinvoke hasButtons.<android.widget.Button: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(hasButtons#12, null, null, null);

     label08:
        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral>;

        virtualinvoke hasButtons.<android.widget.Button: void setVisibility(int)>(0);

        whichButtons = whichButtons | 4;

     label09:
        hasButtons#55 = this.<androidx.appcompat.app.AlertController: android.content.Context mContext>;

        $u-1#8 = staticinvoke <androidx.appcompat.app.AlertController: boolean shouldCenterSingleButton(android.content.Context)>(hasButtons#55);

        if $u-1#8 == 0 goto label12;

        if whichButtons != 1 goto label10;

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive>;

        specialinvoke this.<androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)>(hasButtons);

        goto label12;

     label10:
        if whichButtons != 2 goto label11;

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative>;

        specialinvoke this.<androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)>(hasButtons);

        goto label12;

     label11:
        if whichButtons != 4 goto label12;

        hasButtons = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral>;

        specialinvoke this.<androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)>(hasButtons);

     label12:
        if whichButtons == 0 goto label13;

        $u7 = 1;

     label13:
        if $u7 != 0 goto label14;

        virtualinvoke $u10.<android.view.ViewGroup: void setVisibility(int)>(8);

     label14:
        return;
    }

    private void setupContent(android.view.ViewGroup)
    {
        androidx.appcompat.app.AlertController this;
        android.view.ViewGroup $u6;
        android.view.ViewGroup$LayoutParams $u3;
        android.view.Window scrollParent;
        int childIndex;
        android.view.View $u-1;
        androidx.core.widget.NestedScrollView scrollParent#5;
        android.widget.TextView scrollParent#11;
        java.lang.CharSequence childIndex#12;
        android.widget.ListView scrollParent#16;
        android.view.ViewParent $u-1#18;

        this := @this: androidx.appcompat.app.AlertController;

        $u6 := @parameter0: android.view.ViewGroup;

        scrollParent = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        childIndex = <androidx.appcompat.R$id: int scrollView>;

        $u-1 = virtualinvoke scrollParent.<android.view.Window: android.view.View findViewById(int)>(childIndex);

        scrollParent#5 = (androidx.core.widget.NestedScrollView) $u-1;

        this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView> = scrollParent#5;

        virtualinvoke scrollParent#5.<androidx.core.widget.NestedScrollView: void setFocusable(boolean)>(0);

        scrollParent#5 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        virtualinvoke scrollParent#5.<androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>(0);

        $u-1 = virtualinvoke $u6.<android.view.ViewGroup: android.view.View findViewById(int)>(16908299);

        scrollParent#11 = (android.widget.TextView) $u-1;

        this.<androidx.appcompat.app.AlertController: android.widget.TextView mMessageView> = scrollParent#11;

        if scrollParent#11 != null goto label1;

        return;

     label1:
        childIndex#12 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage>;

        if childIndex#12 == null goto label2;

        virtualinvoke scrollParent#11.<android.widget.TextView: void setText(java.lang.CharSequence)>(childIndex#12);

        return;

     label2:
        virtualinvoke scrollParent#11.<android.widget.TextView: void setVisibility(int)>(8);

        scrollParent#5 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        scrollParent#11 = this.<androidx.appcompat.app.AlertController: android.widget.TextView mMessageView>;

        virtualinvoke scrollParent#5.<androidx.core.widget.NestedScrollView: void removeView(android.view.View)>(scrollParent#11);

        scrollParent#16 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        if scrollParent#16 == null goto label3;

        scrollParent#5 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        $u-1#18 = virtualinvoke scrollParent#5.<androidx.core.widget.NestedScrollView: android.view.ViewParent getParent()>();

        $u6 = (android.view.ViewGroup) $u-1#18;

        scrollParent#5 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        childIndex = virtualinvoke $u6.<android.view.ViewGroup: int indexOfChild(android.view.View)>(scrollParent#5);

        virtualinvoke $u6.<android.view.ViewGroup: void removeViewAt(int)>(childIndex);

        scrollParent#16 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        $u3 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $u3.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $u6.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(scrollParent#16, childIndex, $u3);

        return;

     label3:
        virtualinvoke $u6.<android.view.ViewGroup: void setVisibility(int)>(8);

        return;
    }

    private void setupCustomContent(android.view.ViewGroup)
    {
        androidx.appcompat.app.AlertController this;
        android.view.ViewGroup $u8;
        int $u5, $u6, $u3#22, $u4;
        android.view.View customView, $u-1#16;
        boolean hasCustomView, $u-1#10;
        android.content.Context customView#5;
        android.view.LayoutInflater $u-1;
        android.view.Window custom;
        android.widget.FrameLayout custom#18;
        android.view.ViewGroup$LayoutParams $u3;
        android.widget.ListView $u3#24;
        androidx.appcompat.widget.LinearLayoutCompat$LayoutParams $u3#27;

        this := @this: androidx.appcompat.app.AlertController;

        $u8 := @parameter0: android.view.ViewGroup;

        customView = this.<androidx.appcompat.app.AlertController: android.view.View mView>;

        hasCustomView = 0;

        if customView == null goto label1;

        customView = this.<androidx.appcompat.app.AlertController: android.view.View mView>;

        goto label3;

     label1:
        $u5 = this.<androidx.appcompat.app.AlertController: int mViewLayoutResId>;

        if $u5 == 0 goto label2;

        customView#5 = this.<androidx.appcompat.app.AlertController: android.content.Context mContext>;

        $u-1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(customView#5);

        $u5 = this.<androidx.appcompat.app.AlertController: int mViewLayoutResId>;

        customView = virtualinvoke $u-1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($u5, $u8, 0);

        goto label3;

     label2:
        customView = null;

     label3:
        if customView == null goto label4;

        hasCustomView = 1;

     label4:
        if hasCustomView == 0 goto label5;

        $u-1#10 = staticinvoke <androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)>(customView);

        if $u-1#10 != 0 goto label6;

     label5:
        custom = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        virtualinvoke custom.<android.view.Window: void setFlags(int,int)>(131072, 131072);

     label6:
        if hasCustomView == 0 goto label9;

        custom = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        $u5 = <androidx.appcompat.R$id: int custom>;

        $u-1#16 = virtualinvoke custom.<android.view.Window: android.view.View findViewById(int)>($u5);

        custom#18 = (android.widget.FrameLayout) $u-1#16;

        $u3 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $u3.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke custom#18.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(customView, $u3);

        hasCustomView = this.<androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified>;

        if hasCustomView == 0 goto label7;

        $u3#22 = this.<androidx.appcompat.app.AlertController: int mViewSpacingLeft>;

        $u4 = this.<androidx.appcompat.app.AlertController: int mViewSpacingTop>;

        $u5 = this.<androidx.appcompat.app.AlertController: int mViewSpacingRight>;

        $u6 = this.<androidx.appcompat.app.AlertController: int mViewSpacingBottom>;

        virtualinvoke custom#18.<android.widget.FrameLayout: void setPadding(int,int,int,int)>($u3#22, $u4, $u5, $u6);

     label7:
        $u3#24 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        if $u3#24 == null goto label8;

        $u3 = virtualinvoke $u8.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u3#27 = (androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) $u3;

        $u3#27.<androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: float weight> = 0.0F;

     label8:
        return;

     label9:
        virtualinvoke $u8.<android.view.ViewGroup: void setVisibility(int)>(8);

        return;
    }

    private void setupTitle(android.view.ViewGroup)
    {
        androidx.appcompat.app.AlertController this;
        android.view.ViewGroup $u8;
        android.view.View lp;
        android.view.ViewGroup$LayoutParams lp#3;
        android.view.Window titleTemplate;
        int $u3, $u-1#37, $u-1#40, $u-1#43;
        android.widget.ImageView lp#16;
        java.lang.CharSequence lp#17;
        boolean $u-1;
        android.widget.TextView titleTemplate#26;
        android.graphics.drawable.Drawable titleTemplate#30;

        this := @this: androidx.appcompat.app.AlertController;

        $u8 := @parameter0: android.view.ViewGroup;

        lp = this.<androidx.appcompat.app.AlertController: android.view.View mCustomTitleView>;

        if lp == null goto label1;

        lp#3 = new android.view.ViewGroup$LayoutParams;

        specialinvoke lp#3.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -2);

        lp = this.<androidx.appcompat.app.AlertController: android.view.View mCustomTitleView>;

        virtualinvoke $u8.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(lp, 0, lp#3);

        titleTemplate = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        $u3 = <androidx.appcompat.R$id: int title_template>;

        lp = virtualinvoke titleTemplate.<android.view.Window: android.view.View findViewById(int)>($u3);

        virtualinvoke lp.<android.view.View: void setVisibility(int)>(8);

        return;

     label1:
        titleTemplate = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        lp = virtualinvoke titleTemplate.<android.view.Window: android.view.View findViewById(int)>(16908294);

        lp#16 = (android.widget.ImageView) lp;

        this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView> = lp#16;

        lp#17 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle>;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(lp#17);

        $u-1 = $u-1 ^ 1;

        if $u-1 == 0 goto label4;

        $u-1 = this.<androidx.appcompat.app.AlertController: boolean mShowTitle>;

        if $u-1 == 0 goto label4;

        titleTemplate = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        $u3 = <androidx.appcompat.R$id: int alertTitle>;

        lp = virtualinvoke titleTemplate.<android.view.Window: android.view.View findViewById(int)>($u3);

        titleTemplate#26 = (android.widget.TextView) lp;

        this.<androidx.appcompat.app.AlertController: android.widget.TextView mTitleView> = titleTemplate#26;

        lp#17 = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle>;

        virtualinvoke titleTemplate#26.<android.widget.TextView: void setText(java.lang.CharSequence)>(lp#17);

        $u3 = this.<androidx.appcompat.app.AlertController: int mIconId>;

        if $u3 == 0 goto label2;

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        virtualinvoke lp#16.<android.widget.ImageView: void setImageResource(int)>($u3);

        return;

     label2:
        titleTemplate#30 = this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon>;

        if titleTemplate#30 == null goto label3;

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        virtualinvoke lp#16.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(titleTemplate#30);

        return;

     label3:
        titleTemplate#26 = this.<androidx.appcompat.app.AlertController: android.widget.TextView mTitleView>;

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        $u3 = virtualinvoke lp#16.<android.widget.ImageView: int getPaddingLeft()>();

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        $u-1#37 = virtualinvoke lp#16.<android.widget.ImageView: int getPaddingTop()>();

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        $u-1#40 = virtualinvoke lp#16.<android.widget.ImageView: int getPaddingRight()>();

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        $u-1#43 = virtualinvoke lp#16.<android.widget.ImageView: int getPaddingBottom()>();

        virtualinvoke titleTemplate#26.<android.widget.TextView: void setPadding(int,int,int,int)>($u3, $u-1#37, $u-1#40, $u-1#43);

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        virtualinvoke lp#16.<android.widget.ImageView: void setVisibility(int)>(8);

        return;

     label4:
        titleTemplate = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        $u3 = <androidx.appcompat.R$id: int title_template>;

        lp = virtualinvoke titleTemplate.<android.view.Window: android.view.View findViewById(int)>($u3);

        virtualinvoke lp.<android.view.View: void setVisibility(int)>(8);

        lp#16 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        virtualinvoke lp#16.<android.widget.ImageView: void setVisibility(int)>(8);

        virtualinvoke $u8.<android.view.ViewGroup: void setVisibility(int)>(8);

        return;
    }

    private void setupView()
    {
        androidx.appcompat.app.AlertController this;
        android.view.Window parentPanel;
        int defaultTopPanel;
        android.view.View $u-1, $u-1#6, $u-1#9, $u-1#12, $u-1#22, $u-1#25;
        android.view.ViewGroup customPanel, $u-1#27, $u-1#28, $u-1#29;
        boolean hasCustomPanel, hasTopPanel, hasButtonPanel, spacer#64;
        androidx.core.widget.NestedScrollView parentPanel#48;
        java.lang.CharSequence spacer;
        android.widget.ListView spacer#52;
        androidx.appcompat.app.AlertController$RecycleListView parentPanel#65;
        byte spacer#67, defaultTopPanel1;
        android.widget.ListAdapter defaultTopPanel#75;

        this := @this: androidx.appcompat.app.AlertController;

        parentPanel = this.<androidx.appcompat.app.AlertController: android.view.Window mWindow>;

        defaultTopPanel = <androidx.appcompat.R$id: int parentPanel>;

        $u-1 = virtualinvoke parentPanel.<android.view.Window: android.view.View findViewById(int)>(defaultTopPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int topPanel>;

        $u-1#6 = virtualinvoke $u-1.<android.view.View: android.view.View findViewById(int)>(defaultTopPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int contentPanel>;

        $u-1#9 = virtualinvoke $u-1.<android.view.View: android.view.View findViewById(int)>(defaultTopPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int buttonPanel>;

        $u-1#12 = virtualinvoke $u-1.<android.view.View: android.view.View findViewById(int)>(defaultTopPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int customPanel>;

        $u-1 = virtualinvoke $u-1.<android.view.View: android.view.View findViewById(int)>(defaultTopPanel);

        customPanel = (android.view.ViewGroup) $u-1;

        specialinvoke this.<androidx.appcompat.app.AlertController: void setupCustomContent(android.view.ViewGroup)>(customPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int topPanel>;

        $u-1 = virtualinvoke customPanel.<android.view.ViewGroup: android.view.View findViewById(int)>(defaultTopPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int contentPanel>;

        $u-1#22 = virtualinvoke customPanel.<android.view.ViewGroup: android.view.View findViewById(int)>(defaultTopPanel);

        defaultTopPanel = <androidx.appcompat.R$id: int buttonPanel>;

        $u-1#25 = virtualinvoke customPanel.<android.view.ViewGroup: android.view.View findViewById(int)>(defaultTopPanel);

        $u-1#27 = specialinvoke this.<androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)>($u-1, $u-1#6);

        $u-1#28 = specialinvoke this.<androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)>($u-1#22, $u-1#9);

        $u-1#29 = specialinvoke this.<androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)>($u-1#25, $u-1#12);

        specialinvoke this.<androidx.appcompat.app.AlertController: void setupContent(android.view.ViewGroup)>($u-1#28);

        specialinvoke this.<androidx.appcompat.app.AlertController: void setupButtons(android.view.ViewGroup)>($u-1#29);

        specialinvoke this.<androidx.appcompat.app.AlertController: void setupTitle(android.view.ViewGroup)>($u-1#27);

        if customPanel == null goto label01;

        defaultTopPanel = virtualinvoke customPanel.<android.view.ViewGroup: int getVisibility()>();

        if defaultTopPanel == 8 goto label01;

        hasCustomPanel = 1;

        goto label02;

     label01:
        hasCustomPanel = 0;

     label02:
        if $u-1#27 == null goto label03;

        defaultTopPanel = virtualinvoke $u-1#27.<android.view.ViewGroup: int getVisibility()>();

        if defaultTopPanel == 8 goto label03;

        hasTopPanel = 1;

        goto label04;

     label03:
        hasTopPanel = 0;

     label04:
        if $u-1#29 == null goto label05;

        defaultTopPanel = virtualinvoke $u-1#29.<android.view.ViewGroup: int getVisibility()>();

        if defaultTopPanel == 8 goto label05;

        hasButtonPanel = 1;

        goto label06;

     label05:
        hasButtonPanel = 0;

     label06:
        if hasButtonPanel != 0 goto label09;

        if $u-1#28 == null goto label08;

        defaultTopPanel = <androidx.appcompat.R$id: int textSpacerNoButtons>;

        $u-1#6 = virtualinvoke $u-1#28.<android.view.ViewGroup: android.view.View findViewById(int)>(defaultTopPanel);

        if $u-1#6 == null goto label07;

        virtualinvoke $u-1#6.<android.view.View: void setVisibility(int)>(0);

        goto label09;

     label07:
        goto label09;

     label08:
        goto label09;

     label09:
        if hasTopPanel == 0 goto label14;

        parentPanel#48 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        if parentPanel#48 == null goto label10;

        virtualinvoke parentPanel#48.<androidx.core.widget.NestedScrollView: void setClipToPadding(boolean)>(1);

     label10:
        $u-1#6 = null;

        spacer = this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage>;

        if spacer != null goto label11;

        spacer#52 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        if spacer#52 == null goto label12;

     label11:
        defaultTopPanel = <androidx.appcompat.R$id: int titleDividerNoCustom>;

        $u-1#6 = virtualinvoke $u-1#27.<android.view.ViewGroup: android.view.View findViewById(int)>(defaultTopPanel);

     label12:
        if $u-1#6 == null goto label13;

        virtualinvoke $u-1#6.<android.view.View: void setVisibility(int)>(0);

     label13:
        goto label16;

     label14:
        if $u-1#28 == null goto label16;

        defaultTopPanel = <androidx.appcompat.R$id: int textSpacerNoTitle>;

        $u-1#6 = virtualinvoke $u-1#28.<android.view.ViewGroup: android.view.View findViewById(int)>(defaultTopPanel);

        if $u-1#6 == null goto label15;

        virtualinvoke $u-1#6.<android.view.View: void setVisibility(int)>(0);

        goto label16;

     label15:
        goto label16;

     label16:
        spacer#52 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        spacer#64 = spacer#52 instanceof androidx.appcompat.app.AlertController$RecycleListView;

        if spacer#64 == 0 goto label17;

        parentPanel#65 = (androidx.appcompat.app.AlertController$RecycleListView) spacer#52;

        virtualinvoke parentPanel#65.<androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)>(hasTopPanel, hasButtonPanel);

     label17:
        if hasCustomPanel != 0 goto label25;

        customPanel = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        if customPanel == null goto label18;

        goto label19;

     label18:
        customPanel = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

     label19:
        if customPanel == null goto label24;

        if hasTopPanel == 0 goto label20;

        spacer#67 = 1;

        goto label21;

     label20:
        spacer#67 = 0;

     label21:
        if hasButtonPanel == 0 goto label22;

        defaultTopPanel1 = 2;

        goto label23;

     label22:
        defaultTopPanel1 = 0;

     label23:
        defaultTopPanel = spacer#67 | defaultTopPanel1;

        specialinvoke this.<androidx.appcompat.app.AlertController: void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)>($u-1#28, customPanel, defaultTopPanel, 3);

        goto label25;

     label24:
        goto label25;

     label25:
        spacer#52 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        if spacer#52 == null goto label26;

        defaultTopPanel#75 = this.<androidx.appcompat.app.AlertController: android.widget.ListAdapter mAdapter>;

        if defaultTopPanel#75 == null goto label26;

        virtualinvoke spacer#52.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>(defaultTopPanel#75);

        defaultTopPanel = this.<androidx.appcompat.app.AlertController: int mCheckedItem>;

        if defaultTopPanel <= -1 goto label26;

        virtualinvoke spacer#52.<android.widget.ListView: void setItemChecked(int,boolean)>(defaultTopPanel, 1);

        virtualinvoke spacer#52.<android.widget.ListView: void setSelection(int)>(defaultTopPanel);

     label26:
        return;
    }

    private static boolean shouldCenterSingleButton(android.content.Context)
    {
        android.content.Context $u4;
        android.util.TypedValue outValue;
        int $u2;
        android.content.res.Resources$Theme $u-1;

        $u4 := @parameter0: android.content.Context;

        outValue = new android.util.TypedValue;

        specialinvoke outValue.<android.util.TypedValue: void <init>()>();

        $u-1 = virtualinvoke $u4.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u2 = <androidx.appcompat.R$attr: int alertDialogCenterButtons>;

        virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($u2, outValue, 1);

        $u2 = outValue.<android.util.TypedValue: int data>;

        if $u2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.widget.Button getButton(int)
    {
        androidx.appcompat.app.AlertController this;
        int $u2;
        android.widget.Button ret0;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: int;

        if $u2 == -3 goto label3;

        if $u2 == -2 goto label2;

        if $u2 == -1 goto label1;

        return null;

     label1:
        ret0 = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive>;

        return ret0;

     label2:
        ret0 = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative>;

        return ret0;

     label3:
        ret0 = this.<androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral>;

        return ret0;
    }

    public int getIconAttributeResId(int)
    {
        androidx.appcompat.app.AlertController this;
        int $u4;
        android.util.TypedValue out;
        android.content.res.Resources$Theme $u-1;
        android.content.Context $u1;

        this := @this: androidx.appcompat.app.AlertController;

        $u4 := @parameter0: int;

        out = new android.util.TypedValue;

        specialinvoke out.<android.util.TypedValue: void <init>()>();

        $u1 = this.<androidx.appcompat.app.AlertController: android.content.Context mContext>;

        $u-1 = virtualinvoke $u1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($u4, out, 1);

        $u4 = out.<android.util.TypedValue: int resourceId>;

        return $u4;
    }

    public android.widget.ListView getListView()
    {
        androidx.appcompat.app.AlertController this;
        android.widget.ListView ret0;

        this := @this: androidx.appcompat.app.AlertController;

        ret0 = this.<androidx.appcompat.app.AlertController: android.widget.ListView mListView>;

        return ret0;
    }

    public void installContent()
    {
        androidx.appcompat.app.AlertController this;
        androidx.appcompat.app.AppCompatDialog $u1;
        int $u-1;

        this := @this: androidx.appcompat.app.AlertController;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AlertController: int selectContentView()>();

        $u1 = this.<androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog>;

        virtualinvoke $u1.<androidx.appcompat.app.AppCompatDialog: void setContentView(int)>($u-1);

        specialinvoke this.<androidx.appcompat.app.AlertController: void setupView()>();

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AlertController this;
        int $u2;
        android.view.KeyEvent $u3;
        boolean $u-1;
        androidx.core.widget.NestedScrollView $u0;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: int;

        $u3 := @parameter1: android.view.KeyEvent;

        $u0 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($u3);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AlertController this;
        int $u2;
        android.view.KeyEvent $u3;
        boolean $u-1;
        androidx.core.widget.NestedScrollView $u0;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: int;

        $u3 := @parameter1: android.view.KeyEvent;

        $u0 = this.<androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($u3);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setButton(int, java.lang.CharSequence, android.content.DialogInterface$OnClickListener, android.os.Message, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.AlertController this;
        int $u3;
        java.lang.CharSequence $u4;
        android.content.DialogInterface$OnClickListener $u5;
        android.graphics.drawable.Drawable $u7;
        android.os.Message $u-1;
        android.os.Handler $u0;
        java.lang.IllegalArgumentException $u0#6;

        this := @this: androidx.appcompat.app.AlertController;

        $u3 := @parameter0: int;

        $u4 := @parameter1: java.lang.CharSequence;

        $u5 := @parameter2: android.content.DialogInterface$OnClickListener;

        $u-1 := @parameter3: android.os.Message;

        $u7 := @parameter4: android.graphics.drawable.Drawable;

        if $u-1 != null goto label1;

        if $u5 == null goto label1;

        $u0 = this.<androidx.appcompat.app.AlertController: android.os.Handler mHandler>;

        $u-1 = virtualinvoke $u0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($u3, $u5);

     label1:
        if $u3 == -3 goto label4;

        if $u3 == -2 goto label3;

        if $u3 != -1 goto label2;

        this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText> = $u4;

        this.<androidx.appcompat.app.AlertController: android.os.Message mButtonPositiveMessage> = $u-1;

        this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon> = $u7;

        return;

     label2:
        $u0#6 = new java.lang.IllegalArgumentException;

        specialinvoke $u0#6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Button does not exist");

        throw $u0#6;

     label3:
        this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText> = $u4;

        this.<androidx.appcompat.app.AlertController: android.os.Message mButtonNegativeMessage> = $u-1;

        this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon> = $u7;

        return;

     label4:
        this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText> = $u4;

        this.<androidx.appcompat.app.AlertController: android.os.Message mButtonNeutralMessage> = $u-1;

        this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon> = $u7;

        return;
    }

    public void setButtonPanelLayoutHint(int)
    {
        androidx.appcompat.app.AlertController this;
        int $u1;

        this := @this: androidx.appcompat.app.AlertController;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint> = $u1;

        return;
    }

    public void setCustomTitle(android.view.View)
    {
        androidx.appcompat.app.AlertController this;
        android.view.View $u1;

        this := @this: androidx.appcompat.app.AlertController;

        $u1 := @parameter0: android.view.View;

        this.<androidx.appcompat.app.AlertController: android.view.View mCustomTitleView> = $u1;

        return;
    }

    public void setIcon(int)
    {
        androidx.appcompat.app.AlertController this;
        int $u3;
        android.widget.ImageView $u0;

        this := @this: androidx.appcompat.app.AlertController;

        $u3 := @parameter0: int;

        this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon> = null;

        this.<androidx.appcompat.app.AlertController: int mIconId> = $u3;

        $u0 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        if $u0 == null goto label2;

        if $u3 == 0 goto label1;

        virtualinvoke $u0.<android.widget.ImageView: void setVisibility(int)>(0);

        $u0 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        $u3 = this.<androidx.appcompat.app.AlertController: int mIconId>;

        virtualinvoke $u0.<android.widget.ImageView: void setImageResource(int)>($u3);

        return;

     label1:
        virtualinvoke $u0.<android.widget.ImageView: void setVisibility(int)>(8);

     label2:
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.AlertController this;
        android.graphics.drawable.Drawable $u3;
        android.widget.ImageView $u1;

        this := @this: androidx.appcompat.app.AlertController;

        $u3 := @parameter0: android.graphics.drawable.Drawable;

        this.<androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon> = $u3;

        this.<androidx.appcompat.app.AlertController: int mIconId> = 0;

        $u1 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        if $u1 == null goto label2;

        if $u3 == null goto label1;

        virtualinvoke $u1.<android.widget.ImageView: void setVisibility(int)>(0);

        $u1 = this.<androidx.appcompat.app.AlertController: android.widget.ImageView mIconView>;

        virtualinvoke $u1.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($u3);

        return;

     label1:
        virtualinvoke $u1.<android.widget.ImageView: void setVisibility(int)>(8);

     label2:
        return;
    }

    public void setMessage(java.lang.CharSequence)
    {
        androidx.appcompat.app.AlertController this;
        java.lang.CharSequence $u2;
        android.widget.TextView $u0;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: java.lang.CharSequence;

        this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage> = $u2;

        $u0 = this.<androidx.appcompat.app.AlertController: android.widget.TextView mMessageView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.TextView: void setText(java.lang.CharSequence)>($u2);

     label1:
        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.AlertController this;
        java.lang.CharSequence $u2;
        android.widget.TextView $u0;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: java.lang.CharSequence;

        this.<androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle> = $u2;

        $u0 = this.<androidx.appcompat.app.AlertController: android.widget.TextView mTitleView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.TextView: void setText(java.lang.CharSequence)>($u2);

     label1:
        return;
    }

    public void setView(int)
    {
        androidx.appcompat.app.AlertController this;
        int $u2;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: int;

        this.<androidx.appcompat.app.AlertController: android.view.View mView> = null;

        this.<androidx.appcompat.app.AlertController: int mViewLayoutResId> = $u2;

        this.<androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified> = 0;

        return;
    }

    public void setView(android.view.View)
    {
        androidx.appcompat.app.AlertController this;
        android.view.View $u2;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: android.view.View;

        this.<androidx.appcompat.app.AlertController: android.view.View mView> = $u2;

        this.<androidx.appcompat.app.AlertController: int mViewLayoutResId> = 0;

        this.<androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified> = 0;

        return;
    }

    public void setView(android.view.View, int, int, int, int)
    {
        androidx.appcompat.app.AlertController this;
        android.view.View $u2;
        int $u3, $u4, $u5, $u6;

        this := @this: androidx.appcompat.app.AlertController;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        this.<androidx.appcompat.app.AlertController: android.view.View mView> = $u2;

        this.<androidx.appcompat.app.AlertController: int mViewLayoutResId> = 0;

        this.<androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified> = 1;

        this.<androidx.appcompat.app.AlertController: int mViewSpacingLeft> = $u3;

        this.<androidx.appcompat.app.AlertController: int mViewSpacingTop> = $u4;

        this.<androidx.appcompat.app.AlertController: int mViewSpacingRight> = $u5;

        this.<androidx.appcompat.app.AlertController: int mViewSpacingBottom> = $u6;

        return;
    }
}
