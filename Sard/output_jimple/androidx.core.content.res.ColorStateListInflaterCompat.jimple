public final class androidx.core.content.res.ColorStateListInflaterCompat extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.content.res.ColorStateListInflaterCompat this;

        this := @this: androidx.core.content.res.ColorStateListInflaterCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $u4;
        org.xmlpull.v1.XmlPullParser $u5;
        android.content.res.Resources$Theme $u6;
        android.util.AttributeSet $u-1;
        int $u-1#2;
        android.content.res.ColorStateList $u-1#6;
        org.xmlpull.v1.XmlPullParserException $u1;

        $u4 := @parameter0: android.content.res.Resources;

        $u5 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u6 := @parameter2: android.content.res.Resources$Theme;

        $u-1 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($u5);

     label1:
        $u-1#2 = interfaceinvoke $u5.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $u-1#2 == 2 goto label2;

        if $u-1#2 == 1 goto label2;

        goto label1;

     label2:
        if $u-1#2 != 2 goto label3;

        $u-1#6 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u4, $u5, $u-1, $u6);

        return $u-1#6;

     label3:
        $u1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $u1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        goto label4;

     label4:
        throw $u1;
    }

    public static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $u4;
        org.xmlpull.v1.XmlPullParser $u5;
        android.util.AttributeSet $u6;
        android.content.res.Resources$Theme $u7;
        java.lang.String $u-1, $u-1#9;
        boolean $u-1#3;
        android.content.res.ColorStateList $u-1#5;
        org.xmlpull.v1.XmlPullParserException $u1;
        java.lang.StringBuilder $u2;

        $u4 := @parameter0: android.content.res.Resources;

        $u5 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u6 := @parameter2: android.util.AttributeSet;

        $u7 := @parameter3: android.content.res.Resources$Theme;

        $u-1 = interfaceinvoke $u5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#3 = virtualinvoke $u-1.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $u-1#3 == 0 goto label1;

        $u-1#5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u4, $u5, $u6, $u7);

        return $u-1#5;

     label1:
        $u1 = new org.xmlpull.v1.XmlPullParserException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $u-1#9 = interfaceinvoke $u5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#9);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid color state list tag ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1);

        throw $u1;
    }

    public static android.content.res.ColorStateList inflate(android.content.res.Resources, int, android.content.res.Resources$Theme)
    {
        android.content.res.Resources $u3;
        int $u4;
        android.content.res.Resources$Theme $u5;
        android.content.res.XmlResourceParser $u-1;
        android.content.res.ColorStateList $u-1#3;
        java.lang.Exception parser;

        $u3 := @parameter0: android.content.res.Resources;

        $u4 := @parameter1: int;

        $u5 := @parameter2: android.content.res.Resources$Theme;

     label1:
        $u-1 = virtualinvoke $u3.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($u4);

        $u-1#3 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($u3, $u-1, $u5);

     label2:
        return $u-1#3;

     label3:
        parser := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CSLCompat", "Failed to inflate ColorStateList.", parser);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static android.content.res.ColorStateList inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $u21;
        org.xmlpull.v1.XmlPullParser $u22;
        android.util.AttributeSet $u23;
        android.content.res.Resources$Theme $u24;
        int $u-1, innerDepth, $u-1#10, $u-1#12, $u-1#48, i, $u-1#52, a#57;
        int[][] stateSpecList, stateSpec;
        int[] colorList, a;
        java.lang.String $u-1#19;
        boolean $u-1#22;
        android.content.res.TypedArray $u-1#30;
        float alphaMod;
        java.lang.Object[] $u-1#69;
        android.content.res.ColorStateList a#80;

        $u21 := @parameter0: android.content.res.Resources;

        $u22 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u23 := @parameter2: android.util.AttributeSet;

        $u24 := @parameter3: android.content.res.Resources$Theme;

        $u-1 = interfaceinvoke $u22.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        innerDepth = $u-1 + 1;

        stateSpecList = newarray (int[])[20];

        $u-1 = lengthof stateSpecList;

        colorList = newarray (int)[$u-1];

        $u-1 = 0;

     label01:
        $u-1#10 = interfaceinvoke $u22.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $u-1#10 == 1 goto label13;

        $u-1#12 = interfaceinvoke $u22.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $u-1#12 >= innerDepth goto label03;

        if $u-1#10 == 3 goto label02;

        goto label03;

     label02:
        goto label13;

     label03:
        if $u-1#10 != 2 goto label12;

        if $u-1#12 > innerDepth goto label12;

        $u-1#19 = interfaceinvoke $u22.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#22 = virtualinvoke $u-1#19.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $u-1#22 != 0 goto label04;

        goto label12;

     label04:
        a = <androidx.core.R$styleable: int[] ColorStateListItem>;

        $u-1#30 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u21, $u24, $u23, a);

        $u-1#10 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        $u-1#10 = virtualinvoke $u-1#30.<android.content.res.TypedArray: int getColor(int,int)>($u-1#10, -65281);

        alphaMod = 1.0F;

        $u-1#12 = <androidx.core.R$styleable: int ColorStateListItem_android_alpha>;

        $u-1#22 = virtualinvoke $u-1#30.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#12);

        if $u-1#22 == 0 goto label05;

        $u-1#12 = <androidx.core.R$styleable: int ColorStateListItem_android_alpha>;

        alphaMod = virtualinvoke $u-1#30.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#12, 1.0F);

        goto label06;

     label05:
        $u-1#12 = <androidx.core.R$styleable: int ColorStateListItem_alpha>;

        $u-1#22 = virtualinvoke $u-1#30.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#12);

        if $u-1#22 == 0 goto label06;

        $u-1#12 = <androidx.core.R$styleable: int ColorStateListItem_alpha>;

        alphaMod = virtualinvoke $u-1#30.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#12, 1.0F);

     label06:
        virtualinvoke $u-1#30.<android.content.res.TypedArray: void recycle()>();

        $u-1#12 = 0;

        $u-1#48 = interfaceinvoke $u23.<android.util.AttributeSet: int getAttributeCount()>();

        a = newarray (int)[$u-1#48];

        i = 0;

     label07:
        if i >= $u-1#48 goto label11;

        $u-1#52 = interfaceinvoke $u23.<android.util.AttributeSet: int getAttributeNameResource(int)>(i);

        if $u-1#52 == 16843173 goto label10;

        if $u-1#52 == 16843551 goto label10;

        a#57 = <androidx.core.R$attr: int alpha>;

        if $u-1#52 == a#57 goto label10;

        a#57 = $u-1#12 + 1;

        $u-1#22 = interfaceinvoke $u23.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i, 0);

        if $u-1#22 == 0 goto label08;

        goto label09;

     label08:
        $u-1#52 = neg $u-1#52;

     label09:
        a[$u-1#12] = $u-1#52;

        $u-1#12 = a#57;

     label10:
        i = i + 1;

        goto label07;

     label11:
        a = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(a, $u-1#12);

        $u-1#10 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)>($u-1#10, alphaMod);

        colorList = staticinvoke <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)>(colorList, $u-1, $u-1#10);

        $u-1#69 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(stateSpecList, $u-1, a);

        stateSpecList = (int[][]) $u-1#69;

        $u-1 = $u-1 + 1;

        goto label01;

     label12:
        goto label01;

     label13:
        a = newarray (int)[$u-1];

        stateSpec = newarray (int[])[$u-1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(colorList, 0, a, 0, $u-1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(stateSpecList, 0, stateSpec, 0, $u-1);

        a#80 = new android.content.res.ColorStateList;

        specialinvoke a#80.<android.content.res.ColorStateList: void <init>(int[][],int[])>(stateSpec, a);

        return a#80;
    }

    private static int modulateColorAlpha(int, float)
    {
        int $u3, $u2;
        float $u4, alpha;

        $u3 := @parameter0: int;

        $u4 := @parameter1: float;

        $u2 = staticinvoke <android.graphics.Color: int alpha(int)>($u3);

        alpha = (float) $u2;

        $u4 = alpha * $u4;

        $u2 = staticinvoke <java.lang.Math: int round(float)>($u4);

        $u3 = 16777215 & $u3;

        $u2 = $u2 << 24;

        $u3 = $u3 | $u2;

        return $u3;
    }

    private static android.content.res.TypedArray obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[])
    {
        android.content.res.Resources $u1;
        android.content.res.Resources$Theme $u2;
        android.util.AttributeSet $u3;
        int[] $u4;
        android.content.res.TypedArray $u-1;

        $u1 := @parameter0: android.content.res.Resources;

        $u2 := @parameter1: android.content.res.Resources$Theme;

        $u3 := @parameter2: android.util.AttributeSet;

        $u4 := @parameter3: int[];

        if $u2 != null goto label1;

        $u-1 = virtualinvoke $u1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($u3, $u4);

        return $u-1;

     label1:
        $u-1 = virtualinvoke $u2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($u3, $u4, 0, 0);

        return $u-1;
    }
}
