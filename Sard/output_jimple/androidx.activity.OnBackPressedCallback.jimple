public abstract class androidx.activity.OnBackPressedCallback extends java.lang.Object
{
    private java.util.concurrent.CopyOnWriteArrayList mCancellables;
    private boolean mEnabled;

    public void <init>(boolean)
    {
        androidx.activity.OnBackPressedCallback this;
        boolean $u2;
        java.util.concurrent.CopyOnWriteArrayList $u0;

        this := @this: androidx.activity.OnBackPressedCallback;

        $u2 := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $u0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        this.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables> = $u0;

        this.<androidx.activity.OnBackPressedCallback: boolean mEnabled> = $u2;

        return;
    }

    void addCancellable(androidx.activity.Cancellable)
    {
        androidx.activity.OnBackPressedCallback this;
        androidx.activity.Cancellable $u2;
        java.util.concurrent.CopyOnWriteArrayList $u0;

        this := @this: androidx.activity.OnBackPressedCallback;

        $u2 := @parameter0: androidx.activity.Cancellable;

        $u0 = this.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>;

        virtualinvoke $u0.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($u2);

        return;
    }

    public abstract void handleOnBackPressed();

    public final boolean isEnabled()
    {
        androidx.activity.OnBackPressedCallback this;
        boolean ret0;

        this := @this: androidx.activity.OnBackPressedCallback;

        ret0 = this.<androidx.activity.OnBackPressedCallback: boolean mEnabled>;

        return ret0;
    }

    public final void remove()
    {
        androidx.activity.OnBackPressedCallback this;
        java.util.concurrent.CopyOnWriteArrayList $u0;
        java.util.Iterator $u-1;
        boolean $u-1#4;
        java.lang.Object $u-1#6;
        androidx.activity.Cancellable cancellable;

        this := @this: androidx.activity.OnBackPressedCallback;

        $u0 = this.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>;

        $u-1 = virtualinvoke $u0.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $u-1#4 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u-1#4 == 0 goto label2;

        $u-1#6 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        cancellable = (androidx.activity.Cancellable) $u-1#6;

        interfaceinvoke cancellable.<androidx.activity.Cancellable: void cancel()>();

        goto label1;

     label2:
        return;
    }

    void removeCancellable(androidx.activity.Cancellable)
    {
        androidx.activity.OnBackPressedCallback this;
        androidx.activity.Cancellable $u2;
        java.util.concurrent.CopyOnWriteArrayList $u0;

        this := @this: androidx.activity.OnBackPressedCallback;

        $u2 := @parameter0: androidx.activity.Cancellable;

        $u0 = this.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>;

        virtualinvoke $u0.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($u2);

        return;
    }

    public final void setEnabled(boolean)
    {
        androidx.activity.OnBackPressedCallback this;
        boolean $u1;

        this := @this: androidx.activity.OnBackPressedCallback;

        $u1 := @parameter0: boolean;

        this.<androidx.activity.OnBackPressedCallback: boolean mEnabled> = $u1;

        return;
    }
}
