class androidx.versionedparcelable.VersionedParcelStream extends androidx.versionedparcelable.VersionedParcel
{
    private static final int TYPE_BOOLEAN;
    private static final int TYPE_BOOLEAN_ARRAY;
    private static final int TYPE_DOUBLE;
    private static final int TYPE_DOUBLE_ARRAY;
    private static final int TYPE_FLOAT;
    private static final int TYPE_FLOAT_ARRAY;
    private static final int TYPE_INT;
    private static final int TYPE_INT_ARRAY;
    private static final int TYPE_LONG;
    private static final int TYPE_LONG_ARRAY;
    private static final int TYPE_NULL;
    private static final int TYPE_STRING;
    private static final int TYPE_STRING_ARRAY;
    private static final int TYPE_SUB_BUNDLE;
    private static final int TYPE_SUB_PERSISTABLE_BUNDLE;
    private static final java.nio.charset.Charset UTF_16;
    int mCount;
    private java.io.DataInputStream mCurrentInput;
    private java.io.DataOutputStream mCurrentOutput;
    private androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer;
    private int mFieldId;
    int mFieldSize;
    private boolean mIgnoreParcelables;
    private final java.io.DataInputStream mMasterInput;
    private final java.io.DataOutputStream mMasterOutput;

    static void <clinit>()
    {
        java.nio.charset.Charset $u-1;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_PERSISTABLE_BUNDLE> = 2;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_BUNDLE> = 1;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING_ARRAY> = 4;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING> = 3;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_NULL> = 0;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG_ARRAY> = 12;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG> = 11;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT_ARRAY> = 10;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT> = 9;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT_ARRAY> = 14;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT> = 13;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE_ARRAY> = 8;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE> = 7;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN_ARRAY> = 6;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN> = 5;

        $u-1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        <androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16> = $u-1;

        return;
    }

    public void <init>(java.io.InputStream, java.io.OutputStream)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.io.InputStream $u7;
        java.io.OutputStream $u8;
        androidx.collection.ArrayMap $u3, $u4, $u5;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u7 := @parameter0: java.io.InputStream;

        $u8 := @parameter1: java.io.OutputStream;

        $u3 = new androidx.collection.ArrayMap;

        specialinvoke $u3.<androidx.collection.ArrayMap: void <init>()>();

        $u4 = new androidx.collection.ArrayMap;

        specialinvoke $u4.<androidx.collection.ArrayMap: void <init>()>();

        $u5 = new androidx.collection.ArrayMap;

        specialinvoke $u5.<androidx.collection.ArrayMap: void <init>()>();

        specialinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)>($u7, $u8, $u3, $u4, $u5);

        return;
    }

    private void <init>(java.io.InputStream, java.io.OutputStream, androidx.collection.ArrayMap, androidx.collection.ArrayMap, androidx.collection.ArrayMap)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.io.InputStream $u4;
        java.io.OutputStream $u5;
        androidx.collection.ArrayMap readCache, writeCache, parcelizerCache;
        androidx.versionedparcelable.VersionedParcelStream$1 $u2;
        java.io.DataOutputStream $u0;
        java.io.DataInputStream $u1;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u4 := @parameter0: java.io.InputStream;

        $u5 := @parameter1: java.io.OutputStream;

        readCache := @parameter2: androidx.collection.ArrayMap;

        writeCache := @parameter3: androidx.collection.ArrayMap;

        parcelizerCache := @parameter4: androidx.collection.ArrayMap;

        specialinvoke this.<androidx.versionedparcelable.VersionedParcel: void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)>(readCache, writeCache, parcelizerCache);

        this.<androidx.versionedparcelable.VersionedParcelStream: int mCount> = 0;

        this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldId> = -1;

        this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldSize> = -1;

        $u0 = null;

        if $u4 == null goto label1;

        $u1 = new java.io.DataInputStream;

        $u2 = new androidx.versionedparcelable.VersionedParcelStream$1;

        specialinvoke $u2.<androidx.versionedparcelable.VersionedParcelStream$1: void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream)>(this, $u4);

        specialinvoke $u1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($u2);

        goto label2;

     label1:
        $u1 = null;

     label2:
        this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput> = $u1;

        if $u5 == null goto label3;

        $u0 = new java.io.DataOutputStream;

        specialinvoke $u0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($u5);

     label3:
        this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput> = $u0;

        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

        this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput> = $u1;

        this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput> = $u0;

        return;
    }

    private void readObject(int, java.lang.String, android.os.Bundle)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        int $u4;
        java.lang.String $u5, $u-1#30;
        android.os.Bundle $u6, $u-1#32;
        java.lang.RuntimeException $u0;
        java.lang.StringBuilder $u1;
        float[] $u-1;
        float $u-1#7;
        long[] $u-1#9;
        long $u-1#11;
        int[] $u-1#13;
        double[] $u-1#17;
        double $u-1#19;
        boolean[] $u-1#21;
        boolean $u-1#23;
        java.lang.String[] $u0#26;
        java.lang.Object[] $u-1#27;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u4 := @parameter0: int;

        $u5 := @parameter1: java.lang.String;

        $u6 := @parameter2: android.os.Bundle;

        lookupswitch($u4)
        {
            case 0: goto label16;
            case 1: goto label15;
            case 2: goto label14;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label10;
            case 7: goto label09;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label06;
            case 11: goto label05;
            case 12: goto label04;
            case 13: goto label03;
            case 14: goto label02;
            default: goto label01;
        };

     label01:
        $u0 = new java.lang.RuntimeException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u4);

        $u5 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0.<java.lang.RuntimeException: void <init>(java.lang.String)>($u5);

        throw $u0;

     label02:
        $u-1 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: float[] readFloatArray()>();

        virtualinvoke $u6.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>($u5, $u-1);

        return;

     label03:
        $u-1#7 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: float readFloat()>();

        virtualinvoke $u6.<android.os.Bundle: void putFloat(java.lang.String,float)>($u5, $u-1#7);

        return;

     label04:
        $u-1#9 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: long[] readLongArray()>();

        virtualinvoke $u6.<android.os.Bundle: void putLongArray(java.lang.String,long[])>($u5, $u-1#9);

        return;

     label05:
        $u-1#11 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: long readLong()>();

        virtualinvoke $u6.<android.os.Bundle: void putLong(java.lang.String,long)>($u5, $u-1#11);

        return;

     label06:
        $u-1#13 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: int[] readIntArray()>();

        virtualinvoke $u6.<android.os.Bundle: void putIntArray(java.lang.String,int[])>($u5, $u-1#13);

        return;

     label07:
        $u4 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: int readInt()>();

        virtualinvoke $u6.<android.os.Bundle: void putInt(java.lang.String,int)>($u5, $u4);

        return;

     label08:
        $u-1#17 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: double[] readDoubleArray()>();

        virtualinvoke $u6.<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>($u5, $u-1#17);

        return;

     label09:
        $u-1#19 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: double readDouble()>();

        virtualinvoke $u6.<android.os.Bundle: void putDouble(java.lang.String,double)>($u5, $u-1#19);

        return;

     label10:
        $u-1#21 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: boolean[] readBooleanArray()>();

        virtualinvoke $u6.<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>($u5, $u-1#21);

        return;

     label11:
        $u-1#23 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: boolean readBoolean()>();

        virtualinvoke $u6.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($u5, $u-1#23);

        return;

     label12:
        $u0#26 = newarray (java.lang.String)[0];

        $u-1#27 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: java.lang.Object[] readArray(java.lang.Object[])>($u0#26);

        $u0#26 = (java.lang.String[]) $u-1#27;

        virtualinvoke $u6.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>($u5, $u0#26);

        return;

     label13:
        $u-1#30 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: java.lang.String readString()>();

        virtualinvoke $u6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($u5, $u-1#30);

        return;

     label14:
        $u-1#32 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: android.os.Bundle readBundle()>();

        virtualinvoke $u6.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($u5, $u-1#32);

        return;

     label15:
        $u-1#32 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: android.os.Bundle readBundle()>();

        virtualinvoke $u6.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($u5, $u-1#32);

        return;

     label16:
        virtualinvoke $u6.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($u5, null);

        return;
    }

    private void writeObject(java.lang.Object)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.lang.Object $u4;
        boolean $u0;
        android.os.Bundle $u0#5;
        java.lang.String $u0#9;
        java.lang.String[] $u0#13;
        java.lang.Boolean $u0#18;
        boolean[] $u0#24;
        java.lang.Double $u0#29;
        double $u-1;
        double[] $u0#35;
        java.lang.Integer $u0#40;
        int $u-1#41;
        int[] $u0#46;
        java.lang.Long $u0#51;
        long $u-1#52;
        long[] $u0#57;
        java.lang.Float $u0#62;
        float $u-1#63;
        float[] $u0#68;
        java.lang.IllegalArgumentException $u0#70;
        java.lang.StringBuilder $u1;
        java.lang.Class $u-1#73;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u4 := @parameter0: java.lang.Object;

        if $u4 != null goto label01;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(0);

        return;

     label01:
        $u0 = $u4 instanceof android.os.Bundle;

        if $u0 == 0 goto label02;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(1);

        $u0#5 = (android.os.Bundle) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeBundle(android.os.Bundle)>($u0#5);

        return;

     label02:
        $u0 = $u4 instanceof java.lang.String;

        if $u0 == 0 goto label03;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(3);

        $u0#9 = (java.lang.String) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeString(java.lang.String)>($u0#9);

        return;

     label03:
        $u0 = $u4 instanceof java.lang.String[];

        if $u0 == 0 goto label04;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(4);

        $u0#13 = (java.lang.String[]) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeArray(java.lang.Object[])>($u0#13);

        return;

     label04:
        $u0 = $u4 instanceof java.lang.Boolean;

        if $u0 == 0 goto label05;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(5);

        $u0#18 = (java.lang.Boolean) $u4;

        $u0 = virtualinvoke $u0#18.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeBoolean(boolean)>($u0);

        return;

     label05:
        $u0 = $u4 instanceof boolean[];

        if $u0 == 0 goto label06;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(6);

        $u0#24 = (boolean[]) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeBooleanArray(boolean[])>($u0#24);

        return;

     label06:
        $u0 = $u4 instanceof java.lang.Double;

        if $u0 == 0 goto label07;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(7);

        $u0#29 = (java.lang.Double) $u4;

        $u-1 = virtualinvoke $u0#29.<java.lang.Double: double doubleValue()>();

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeDouble(double)>($u-1);

        return;

     label07:
        $u0 = $u4 instanceof double[];

        if $u0 == 0 goto label08;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(8);

        $u0#35 = (double[]) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeDoubleArray(double[])>($u0#35);

        return;

     label08:
        $u0 = $u4 instanceof java.lang.Integer;

        if $u0 == 0 goto label09;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(9);

        $u0#40 = (java.lang.Integer) $u4;

        $u-1#41 = virtualinvoke $u0#40.<java.lang.Integer: int intValue()>();

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>($u-1#41);

        return;

     label09:
        $u0 = $u4 instanceof int[];

        if $u0 == 0 goto label10;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(10);

        $u0#46 = (int[]) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeIntArray(int[])>($u0#46);

        return;

     label10:
        $u0 = $u4 instanceof java.lang.Long;

        if $u0 == 0 goto label11;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(11);

        $u0#51 = (java.lang.Long) $u4;

        $u-1#52 = virtualinvoke $u0#51.<java.lang.Long: long longValue()>();

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeLong(long)>($u-1#52);

        return;

     label11:
        $u0 = $u4 instanceof long[];

        if $u0 == 0 goto label12;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(12);

        $u0#57 = (long[]) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeLongArray(long[])>($u0#57);

        return;

     label12:
        $u0 = $u4 instanceof java.lang.Float;

        if $u0 == 0 goto label13;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(13);

        $u0#62 = (java.lang.Float) $u4;

        $u-1#63 = virtualinvoke $u0#62.<java.lang.Float: float floatValue()>();

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeFloat(float)>($u-1#63);

        return;

     label13:
        $u0 = $u4 instanceof float[];

        if $u0 == 0 goto label14;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(14);

        $u0#68 = (float[]) $u4;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeFloatArray(float[])>($u0#68);

        return;

     label14:
        $u0#70 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type ");

        $u-1#73 = virtualinvoke $u4.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#73);

        $u0#9 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u0#9);

        throw $u0#70;
    }

    public void closeField()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        int $u-1;
        androidx.versionedparcelable.VersionedParcelStream$FieldBuffer e;
        java.io.ByteArrayOutputStream e#2;
        java.io.IOException e#6;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer>;

        if e == null goto label6;

        e#2 = e.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.ByteArrayOutputStream mOutput>;

     label1:
        $u-1 = virtualinvoke e#2.<java.io.ByteArrayOutputStream: int size()>();

     label2:
        if $u-1 == 0 goto label4;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer>;

     label3:
        virtualinvoke e.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: void flushField()>();

     label4:
        this.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer> = null;

        return;

     label5:
        e#6 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#6);

        throw $u1;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    protected androidx.versionedparcelable.VersionedParcel createSubParcel()
    {
        androidx.versionedparcelable.VersionedParcelStream this, $u6;
        java.io.DataInputStream $u1;
        java.io.DataOutputStream $u2;
        androidx.collection.ArrayMap $u3, $u4, $u5;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u6 = new androidx.versionedparcelable.VersionedParcelStream;

        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

        $u2 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

        $u3 = this.<androidx.versionedparcelable.VersionedParcelStream: androidx.collection.ArrayMap mReadCache>;

        $u4 = this.<androidx.versionedparcelable.VersionedParcelStream: androidx.collection.ArrayMap mWriteCache>;

        $u5 = this.<androidx.versionedparcelable.VersionedParcelStream: androidx.collection.ArrayMap mParcelizerCache>;

        specialinvoke $u6.<androidx.versionedparcelable.VersionedParcelStream: void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)>($u1, $u2, $u3, $u4, $u5);

        return $u6;
    }

    public boolean isStream()
    {
        androidx.versionedparcelable.VersionedParcelStream this;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        return 1;
    }

    public boolean readBoolean()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        boolean $u-1;
        java.io.DataInputStream e;
        java.io.IOException e#3;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke e.<java.io.DataInputStream: boolean readBoolean()>();

     label2:
        return $u-1;

     label3:
        e#3 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#3);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.os.Bundle readBundle()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        int $u-1, i, $u-1#6;
        android.os.Bundle b;
        java.lang.String $u-1#5;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u-1 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: int readInt()>();

        if $u-1 >= 0 goto label1;

        return null;

     label1:
        b = new android.os.Bundle;

        specialinvoke b.<android.os.Bundle: void <init>()>();

        i = 0;

     label2:
        if i >= $u-1 goto label3;

        $u-1#5 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: java.lang.String readString()>();

        $u-1#6 = virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: int readInt()>();

        specialinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void readObject(int,java.lang.String,android.os.Bundle)>($u-1#6, $u-1#5, b);

        i = i + 1;

        goto label2;

     label3:
        return b;
    }

    public byte[] readByteArray()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.io.DataInputStream $u2;
        int $u-1;
        byte[] bytes;
        java.io.IOException len;
        androidx.versionedparcelable.VersionedParcel$ParcelException bytes#6;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u2 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke $u2.<java.io.DataInputStream: int readInt()>();

     label2:
        if $u-1 <= 0 goto label5;

        bytes = newarray (byte)[$u-1];

        $u2 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label3:
        virtualinvoke $u2.<java.io.DataInputStream: void readFully(byte[])>(bytes);

     label4:
        return bytes;

     label5:
        return null;

     label6:
        len := @caughtexception;

        bytes#6 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke bytes#6.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(len);

        throw bytes#6;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    protected java.lang.CharSequence readCharSequence()
    {
        androidx.versionedparcelable.VersionedParcelStream this;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        return null;
    }

    public double readDouble()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        double $u-1;
        java.io.DataInputStream e;
        java.io.IOException e#3;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke e.<java.io.DataInputStream: double readDouble()>();

     label2:
        return $u-1;

     label3:
        e#3 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#3);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean readField(int)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        int $u6, fieldInfo, id;
        java.lang.String $u-1, $u-1#7;
        java.io.DataInputStream fieldInfo#13;
        long id#17;
        java.io.IOException fieldInfo#29;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u6 := @parameter0: int;

     label01:
        fieldInfo = this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldId>;

        if fieldInfo != $u6 goto label02;

        return 1;

     label02:
        fieldInfo = this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldId>;

     label03:
        $u-1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(fieldInfo);

        $u-1#7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($u6);

        fieldInfo = virtualinvoke $u-1.<java.lang.String: int compareTo(java.lang.String)>($u-1#7);

     label04:
        if fieldInfo <= 0 goto label05;

        return 0;

     label05:
        fieldInfo = this.<androidx.versionedparcelable.VersionedParcelStream: int mCount>;

        id = this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldSize>;

        if fieldInfo >= id goto label07;

        fieldInfo#13 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

        fieldInfo = this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldSize>;

        id = this.<androidx.versionedparcelable.VersionedParcelStream: int mCount>;

        fieldInfo = fieldInfo - id;

        id#17 = (long) fieldInfo;

     label06:
        virtualinvoke fieldInfo#13.<java.io.DataInputStream: long skip(long)>(id#17);

     label07:
        this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldSize> = -1;

        fieldInfo#13 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

     label08:
        id = virtualinvoke fieldInfo#13.<java.io.DataInputStream: int readInt()>();

     label09:
        this.<androidx.versionedparcelable.VersionedParcelStream: int mCount> = 0;

        fieldInfo = id & 65535;

        if fieldInfo != 65535 goto label11;

        fieldInfo#13 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

     label10:
        fieldInfo = virtualinvoke fieldInfo#13.<java.io.DataInputStream: int readInt()>();

     label11:
        id = id >> 16;

        id = 65535 & id;

        this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldId> = id;

        this.<androidx.versionedparcelable.VersionedParcelStream: int mFieldSize> = fieldInfo;

        goto label01;

     label12:
        fieldInfo#29 := @caughtexception;

        return 0;

        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public float readFloat()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        float $u-1;
        java.io.DataInputStream e;
        java.io.IOException e#3;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke e.<java.io.DataInputStream: float readFloat()>();

     label2:
        return $u-1;

     label3:
        e#3 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#3);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int readInt()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        int $u-1;
        java.io.DataInputStream e;
        java.io.IOException e#3;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke e.<java.io.DataInputStream: int readInt()>();

     label2:
        return $u-1;

     label3:
        e#3 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#3);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long readLong()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        long $u-1;
        java.io.DataInputStream e;
        java.io.IOException e#3;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke e.<java.io.DataInputStream: long readLong()>();

     label2:
        return $u-1;

     label3:
        e#3 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#3);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.os.Parcelable readParcelable()
    {
        androidx.versionedparcelable.VersionedParcelStream this;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        return null;
    }

    public java.lang.String readString()
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.nio.charset.Charset $u3;
        int $u-1;
        java.io.DataInputStream len;
        byte[] bytes;
        java.lang.String $u2;
        java.io.IOException len#7;
        androidx.versionedparcelable.VersionedParcel$ParcelException bytes#8;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        len = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $u-1 = virtualinvoke len.<java.io.DataInputStream: int readInt()>();

     label2:
        if $u-1 <= 0 goto label7;

        bytes = newarray (byte)[$u-1];

        len = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label3:
        virtualinvoke len.<java.io.DataInputStream: void readFully(byte[])>(bytes);

     label4:
        $u2 = new java.lang.String;

        $u3 = <androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16>;

     label5:
        specialinvoke $u2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(bytes, $u3);

     label6:
        return $u2;

     label7:
        return null;

     label8:
        len#7 := @caughtexception;

        bytes#8 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke bytes#8.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(len#7);

        throw bytes#8;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
    }

    public android.os.IBinder readStrongBinder()
    {
        androidx.versionedparcelable.VersionedParcelStream this;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        return null;
    }

    public void setOutputField(int)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        int $u3;
        java.io.DataOutputStream $u1;
        androidx.versionedparcelable.VersionedParcelStream$FieldBuffer $u0;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: int;

        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void closeField()>();

        $u0 = new androidx.versionedparcelable.VersionedParcelStream$FieldBuffer;

        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput>;

        specialinvoke $u0.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: void <init>(int,java.io.DataOutputStream)>($u3, $u1);

        this.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer> = $u0;

        $u1 = $u0.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.DataOutputStream mDataStream>;

        this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput> = $u1;

        return;
    }

    public void setSerializationFlags(boolean, boolean)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        boolean $u3, $u4;
        java.lang.RuntimeException $u0;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: boolean;

        $u4 := @parameter1: boolean;

        if $u3 == 0 goto label1;

        this.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables> = $u4;

        return;

     label1:
        $u0 = new java.lang.RuntimeException;

        specialinvoke $u0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Serialization of this object is not allowed");

        throw $u0;
    }

    public void writeBoolean(boolean)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        boolean $u3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        java.io.DataOutputStream e;
        java.io.IOException e#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: boolean;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeBoolean(boolean)>($u3);

     label2:
        return;

     label3:
        e#2 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#2);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeBundle(android.os.Bundle)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        android.os.Bundle $u5;
        java.util.Set $u-1;
        java.io.DataOutputStream $u1;
        int $u-1#4;
        java.util.Iterator $u-1#6;
        boolean $u-1#8;
        java.lang.Object $u-1#10;
        java.lang.String key;
        java.io.IOException keys;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1#17;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u5 := @parameter0: android.os.Bundle;

        if $u5 == null goto label11;

     label01:
        $u-1 = virtualinvoke $u5.<android.os.Bundle: java.util.Set keySet()>();

     label02:
        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label03:
        $u-1#4 = interfaceinvoke $u-1.<java.util.Set: int size()>();

        virtualinvoke $u1.<java.io.DataOutputStream: void writeInt(int)>($u-1#4);

        $u-1#6 = interfaceinvoke $u-1.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $u-1#8 = interfaceinvoke $u-1#6.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $u-1#8 == 0 goto label10;

     label06:
        $u-1#10 = interfaceinvoke $u-1#6.<java.util.Iterator: java.lang.Object next()>();

     label07:
        key = (java.lang.String) $u-1#10;

     label08:
        virtualinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeString(java.lang.String)>(key);

        $u-1#10 = virtualinvoke $u5.<android.os.Bundle: java.lang.Object get(java.lang.String)>(key);

        specialinvoke this.<androidx.versionedparcelable.VersionedParcelStream: void writeObject(java.lang.Object)>($u-1#10);

     label09:
        goto label04;

     label10:
        goto label13;

     label11:
        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label12:
        virtualinvoke $u1.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label13:
        return;

     label14:
        keys := @caughtexception;

        $u1#17 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1#17.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(keys);

        goto label15;

     label15:
        throw $u1#17;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public void writeByteArray(byte[])
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        byte[] $u3;
        java.io.DataOutputStream e;
        int $u1;
        java.io.IOException e#6;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1#7;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: byte[];

        if $u3 == null goto label5;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

        $u1 = lengthof $u3;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeInt(int)>($u1);

     label2:
        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label3:
        virtualinvoke e.<java.io.DataOutputStream: void write(byte[])>($u3);

     label4:
        goto label7;

     label5:
        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label6:
        virtualinvoke e.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label7:
        return;

     label8:
        e#6 := @caughtexception;

        $u1#7 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1#7.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#6);

        throw $u1#7;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public void writeByteArray(byte[], int, int)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        byte[] $u3;
        int $u4, $u5;
        java.io.DataOutputStream e;
        java.io.IOException e#5;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: byte[];

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        if $u3 == null goto label5;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeInt(int)>($u5);

     label2:
        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label3:
        virtualinvoke e.<java.io.DataOutputStream: void write(byte[],int,int)>($u3, $u4, $u5);

     label4:
        goto label7;

     label5:
        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label6:
        virtualinvoke e.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label7:
        return;

     label8:
        e#5 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#5);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    protected void writeCharSequence(java.lang.CharSequence)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.lang.CharSequence $u3;
        boolean $u0;
        java.lang.RuntimeException $u0#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: java.lang.CharSequence;

        $u0 = this.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $u0 == 0 goto label1;

        return;

     label1:
        $u0#2 = new java.lang.RuntimeException;

        specialinvoke $u0#2.<java.lang.RuntimeException: void <init>(java.lang.String)>("CharSequence cannot be written to an OutputStream");

        throw $u0#2;
    }

    public void writeDouble(double)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        double $u3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        java.io.DataOutputStream e;
        java.io.IOException e#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: double;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeDouble(double)>($u3);

     label2:
        return;

     label3:
        e#2 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#2);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeFloat(float)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        float $u3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        java.io.DataOutputStream e;
        java.io.IOException e#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: float;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeFloat(float)>($u3);

     label2:
        return;

     label3:
        e#2 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#2);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeInt(int)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        int $u3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        java.io.DataOutputStream e;
        java.io.IOException e#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: int;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeInt(int)>($u3);

     label2:
        return;

     label3:
        e#2 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#2);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeLong(long)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        long $u3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1;
        java.io.DataOutputStream e;
        java.io.IOException e#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: long;

        e = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke e.<java.io.DataOutputStream: void writeLong(long)>($u3);

     label2:
        return;

     label3:
        e#2 := @caughtexception;

        $u1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(e#2);

        throw $u1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeParcelable(android.os.Parcelable)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        android.os.Parcelable $u3;
        boolean $u0;
        java.lang.RuntimeException $u0#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: android.os.Parcelable;

        $u0 = this.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $u0 == 0 goto label1;

        return;

     label1:
        $u0#2 = new java.lang.RuntimeException;

        specialinvoke $u0#2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Parcelables cannot be written to an OutputStream");

        throw $u0#2;
    }

    public void writeString(java.lang.String)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        java.lang.String $u4;
        int $u2;
        byte[] $u-1;
        java.nio.charset.Charset bytes;
        java.io.DataOutputStream $u1;
        java.io.IOException bytes#7;
        androidx.versionedparcelable.VersionedParcel$ParcelException $u1#8;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u4 := @parameter0: java.lang.String;

        if $u4 == null goto label07;

        bytes = <androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16>;

     label01:
        $u-1 = virtualinvoke $u4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(bytes);

     label02:
        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

        $u2 = lengthof $u-1;

     label03:
        virtualinvoke $u1.<java.io.DataOutputStream: void writeInt(int)>($u2);

     label04:
        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label05:
        virtualinvoke $u1.<java.io.DataOutputStream: void write(byte[])>($u-1);

     label06:
        goto label09;

     label07:
        $u1 = this.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label08:
        virtualinvoke $u1.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label09:
        return;

     label10:
        bytes#7 := @caughtexception;

        $u1#8 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $u1#8.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>(bytes#7);

        throw $u1#8;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public void writeStrongBinder(android.os.IBinder)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        android.os.IBinder $u3;
        boolean $u0;
        java.lang.RuntimeException $u0#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: android.os.IBinder;

        $u0 = this.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $u0 == 0 goto label1;

        return;

     label1:
        $u0#2 = new java.lang.RuntimeException;

        specialinvoke $u0#2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Binders cannot be written to an OutputStream");

        throw $u0#2;
    }

    public void writeStrongInterface(android.os.IInterface)
    {
        androidx.versionedparcelable.VersionedParcelStream this;
        android.os.IInterface $u3;
        boolean $u0;
        java.lang.RuntimeException $u0#2;

        this := @this: androidx.versionedparcelable.VersionedParcelStream;

        $u3 := @parameter0: android.os.IInterface;

        $u0 = this.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $u0 == 0 goto label1;

        return;

     label1:
        $u0#2 = new java.lang.RuntimeException;

        specialinvoke $u0#2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Binders cannot be written to an OutputStream");

        throw $u0#2;
    }
}
