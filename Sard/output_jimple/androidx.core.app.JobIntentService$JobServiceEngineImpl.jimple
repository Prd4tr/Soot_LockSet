final class androidx.core.app.JobIntentService$JobServiceEngineImpl extends android.app.job.JobServiceEngine implements androidx.core.app.JobIntentService$CompatJobEngine
{
    static final boolean DEBUG;
    static final java.lang.String TAG;
    final java.lang.Object mLock;
    android.app.job.JobParameters mParams;
    final androidx.core.app.JobIntentService mService;

    void <init>(androidx.core.app.JobIntentService)
    {
        androidx.core.app.JobIntentService$JobServiceEngineImpl this;
        androidx.core.app.JobIntentService $u2;
        java.lang.Object $u0;

        this := @this: androidx.core.app.JobIntentService$JobServiceEngineImpl;

        $u2 := @parameter0: androidx.core.app.JobIntentService;

        specialinvoke this.<android.app.job.JobServiceEngine: void <init>(android.app.Service)>($u2);

        $u0 = new java.lang.Object;

        specialinvoke $u0.<java.lang.Object: void <init>()>();

        this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock> = $u0;

        this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService mService> = $u2;

        return;
    }

    public android.os.IBinder compatGetBinder()
    {
        androidx.core.app.JobIntentService$JobServiceEngineImpl this;
        android.os.IBinder $u-1;

        this := @this: androidx.core.app.JobIntentService$JobServiceEngineImpl;

        $u-1 = virtualinvoke this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder getBinder()>();

        return $u-1;
    }

    public androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
    {
        androidx.core.app.JobIntentService$JobServiceEngineImpl this;
        java.lang.Object $u0;
        android.app.job.JobParameters work;
        android.app.job.JobWorkItem $u-1;
        android.content.Intent $u-1#7;
        androidx.core.app.JobIntentService $u2;
        java.lang.ClassLoader $u-1#10;
        androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem $u0#12;
        java.lang.Throwable work#13;

        this := @this: androidx.core.app.JobIntentService$JobServiceEngineImpl;

        $u0 = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock>;

        entermonitor $u0;

     label1:
        work = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams>;

        if work != null goto label3;

        exitmonitor $u0;

     label2:
        return null;

     label3:
        work = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams>;

        $u-1 = virtualinvoke work.<android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>();

        exitmonitor $u0;

     label4:
        if $u-1 == null goto label5;

        $u-1#7 = virtualinvoke $u-1.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        $u2 = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService mService>;

        $u-1#10 = virtualinvoke $u2.<androidx.core.app.JobIntentService: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $u-1#7.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($u-1#10);

        $u0#12 = new androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem;

        specialinvoke $u0#12.<androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem)>(this, $u-1);

        return $u0#12;

     label5:
        return null;

     label6:
        work#13 := @caughtexception;

     label7:
        exitmonitor $u0;

     label8:
        throw work#13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        androidx.core.app.JobIntentService$JobServiceEngineImpl this;
        android.app.job.JobParameters $u3;
        androidx.core.app.JobIntentService $u0;

        this := @this: androidx.core.app.JobIntentService$JobServiceEngineImpl;

        $u3 := @parameter0: android.app.job.JobParameters;

        this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams> = $u3;

        $u0 = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService mService>;

        virtualinvoke $u0.<androidx.core.app.JobIntentService: void ensureProcessorRunningLocked(boolean)>(0);

        return 1;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        androidx.core.app.JobIntentService$JobServiceEngineImpl this;
        android.app.job.JobParameters $u4;
        java.lang.Object $u1;
        boolean $u-1;
        androidx.core.app.JobIntentService result;
        java.lang.Throwable $u2;

        this := @this: androidx.core.app.JobIntentService$JobServiceEngineImpl;

        $u4 := @parameter0: android.app.job.JobParameters;

        result = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService mService>;

        $u-1 = virtualinvoke result.<androidx.core.app.JobIntentService: boolean doStopCurrentWork()>();

        $u1 = this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock>;

        entermonitor $u1;

     label1:
        this.<androidx.core.app.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams> = null;

        exitmonitor $u1;

     label2:
        return $u-1;

     label3:
        $u2 := @caughtexception;

        exitmonitor $u1;

     label4:
        throw $u2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.String TAG> = "JobServiceEngineImpl";

        <androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean DEBUG> = 0;

        return;
    }
}
