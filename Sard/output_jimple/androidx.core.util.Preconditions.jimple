public final class androidx.core.util.Preconditions extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.util.Preconditions this;

        this := @this: androidx.core.util.Preconditions;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkArgument(boolean)
    {
        boolean $u1;
        java.lang.IllegalArgumentException $u0;

        $u1 := @parameter0: boolean;

        if $u1 == 0 goto label1;

        return;

     label1:
        $u0 = new java.lang.IllegalArgumentException;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $u0;
    }

    public static void checkArgument(boolean, java.lang.Object)
    {
        boolean $u2;
        java.lang.Object $u3;
        java.lang.IllegalArgumentException $u0;
        java.lang.String $u-1;

        $u2 := @parameter0: boolean;

        $u3 := @parameter1: java.lang.Object;

        if $u2 == 0 goto label1;

        return;

     label1:
        $u0 = new java.lang.IllegalArgumentException;

        $u-1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($u3);

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1);

        throw $u0;
    }

    public static int checkArgumentInRange(int, int, int, java.lang.String)
    {
        int $u6, $u7, $u8;
        java.lang.String $u9;
        java.lang.IllegalArgumentException $u4;
        java.util.Locale $u5;
        java.lang.Object[] $u3;
        java.lang.Integer $u-1;

        $u6 := @parameter0: int;

        $u7 := @parameter1: int;

        $u8 := @parameter2: int;

        $u9 := @parameter3: java.lang.String;

        if $u6 < $u7 goto label2;

        if $u6 > $u8 goto label1;

        return $u6;

     label1:
        $u4 = new java.lang.IllegalArgumentException;

        $u5 = <java.util.Locale: java.util.Locale US>;

        $u3 = newarray (java.lang.Object)[3];

        $u3[0] = $u9;

        $u-1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u7);

        $u3[1] = $u-1;

        $u-1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u8);

        $u3[2] = $u-1;

        $u9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($u5, "%s is out of range of [%d, %d] (too high)", $u3);

        specialinvoke $u4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u9);

        throw $u4;

     label2:
        $u4 = new java.lang.IllegalArgumentException;

        $u5 = <java.util.Locale: java.util.Locale US>;

        $u3 = newarray (java.lang.Object)[3];

        $u3[0] = $u9;

        $u-1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u7);

        $u3[1] = $u-1;

        $u-1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u8);

        $u3[2] = $u-1;

        $u9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($u5, "%s is out of range of [%d, %d] (too low)", $u3);

        specialinvoke $u4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u9);

        throw $u4;
    }

    public static int checkArgumentNonnegative(int)
    {
        int $u1;
        java.lang.IllegalArgumentException $u0;

        $u1 := @parameter0: int;

        if $u1 < 0 goto label1;

        return $u1;

     label1:
        $u0 = new java.lang.IllegalArgumentException;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $u0;
    }

    public static int checkArgumentNonnegative(int, java.lang.String)
    {
        int $u1;
        java.lang.String $u2;
        java.lang.IllegalArgumentException $u0;

        $u1 := @parameter0: int;

        $u2 := @parameter1: java.lang.String;

        if $u1 < 0 goto label1;

        return $u1;

     label1:
        $u0 = new java.lang.IllegalArgumentException;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u2);

        throw $u0;
    }

    public static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object reference;
        java.lang.NullPointerException ex0;

        reference := @parameter0: java.lang.Object;

        if reference == null goto label1;

        return reference;

     label1:
        ex0 = new java.lang.NullPointerException;

        specialinvoke ex0.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw ex0;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object reference, $u3;
        java.lang.NullPointerException $u0;
        java.lang.String $u-1;

        reference := @parameter0: java.lang.Object;

        $u3 := @parameter1: java.lang.Object;

        if reference == null goto label1;

        return reference;

     label1:
        $u0 = new java.lang.NullPointerException;

        $u-1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($u3);

        specialinvoke $u0.<java.lang.NullPointerException: void <init>(java.lang.String)>($u-1);

        throw $u0;
    }

    public static void checkState(boolean)
    {
        boolean $u1;

        $u1 := @parameter0: boolean;

        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($u1, null);

        return;
    }

    public static void checkState(boolean, java.lang.String)
    {
        boolean $u1;
        java.lang.String $u2;
        java.lang.IllegalStateException $u0;

        $u1 := @parameter0: boolean;

        $u2 := @parameter1: java.lang.String;

        if $u1 == 0 goto label1;

        return;

     label1:
        $u0 = new java.lang.IllegalStateException;

        specialinvoke $u0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u2);

        throw $u0;
    }
}
