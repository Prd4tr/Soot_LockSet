public class androidx.viewpager.widget.ViewPager extends android.view.ViewGroup
{
    private static final int CLOSE_ENOUGH;
    private static final java.util.Comparator COMPARATOR;
    private static final boolean DEBUG;
    private static final int DEFAULT_GUTTER_SIZE;
    private static final int DEFAULT_OFFSCREEN_PAGES;
    private static final int DRAW_ORDER_DEFAULT;
    private static final int DRAW_ORDER_FORWARD;
    private static final int DRAW_ORDER_REVERSE;
    private static final int INVALID_POINTER;
    static final int[] LAYOUT_ATTRS;
    private static final int MAX_SETTLE_DURATION;
    private static final int MIN_DISTANCE_FOR_FLING;
    private static final int MIN_FLING_VELOCITY;
    public static final int SCROLL_STATE_DRAGGING;
    public static final int SCROLL_STATE_IDLE;
    public static final int SCROLL_STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final boolean USE_CACHE;
    private static final android.view.animation.Interpolator sInterpolator;
    private static final androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator;
    private int mActivePointerId;
    androidx.viewpager.widget.PagerAdapter mAdapter;
    private java.util.List mAdapterChangeListeners;
    private int mBottomPageBounds;
    private boolean mCalledSuper;
    private int mChildHeightMeasureSpec;
    private int mChildWidthMeasureSpec;
    private int mCloseEnough;
    int mCurItem;
    private int mDecorChildCount;
    private int mDefaultGutterSize;
    private int mDrawingOrder;
    private java.util.ArrayList mDrawingOrderedChildren;
    private final java.lang.Runnable mEndScrollRunnable;
    private int mExpectedAdapterCount;
    private long mFakeDragBeginTime;
    private boolean mFakeDragging;
    private boolean mFirstLayout;
    private float mFirstOffset;
    private int mFlingDistance;
    private int mGutterSize;
    private boolean mInLayout;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener;
    private boolean mIsBeingDragged;
    private boolean mIsScrollStarted;
    private boolean mIsUnableToDrag;
    private final java.util.ArrayList mItems;
    private float mLastMotionX;
    private float mLastMotionY;
    private float mLastOffset;
    private android.widget.EdgeEffect mLeftEdge;
    private android.graphics.drawable.Drawable mMarginDrawable;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private boolean mNeedCalculatePageOffsets;
    private androidx.viewpager.widget.ViewPager$PagerObserver mObserver;
    private int mOffscreenPageLimit;
    private androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener;
    private java.util.List mOnPageChangeListeners;
    private int mPageMargin;
    private androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer;
    private int mPageTransformerLayerType;
    private boolean mPopulatePending;
    private android.os.Parcelable mRestoredAdapterState;
    private java.lang.ClassLoader mRestoredClassLoader;
    private int mRestoredCurItem;
    private android.widget.EdgeEffect mRightEdge;
    private int mScrollState;
    private android.widget.Scroller mScroller;
    private boolean mScrollingCacheEnabled;
    private final androidx.viewpager.widget.ViewPager$ItemInfo mTempItem;
    private final android.graphics.Rect mTempRect;
    private int mTopPageBounds;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int[] $u0;
        androidx.viewpager.widget.ViewPager$1 $u0#3;
        androidx.viewpager.widget.ViewPager$2 $u0#4;
        androidx.viewpager.widget.ViewPager$ViewPositionComparator $u0#5;

        <androidx.viewpager.widget.ViewPager: boolean USE_CACHE> = 0;

        <androidx.viewpager.widget.ViewPager: java.lang.String TAG> = "ViewPager";

        <androidx.viewpager.widget.ViewPager: int SCROLL_STATE_SETTLING> = 2;

        <androidx.viewpager.widget.ViewPager: int SCROLL_STATE_IDLE> = 0;

        <androidx.viewpager.widget.ViewPager: int SCROLL_STATE_DRAGGING> = 1;

        <androidx.viewpager.widget.ViewPager: int MIN_FLING_VELOCITY> = 400;

        <androidx.viewpager.widget.ViewPager: int MIN_DISTANCE_FOR_FLING> = 25;

        <androidx.viewpager.widget.ViewPager: int MAX_SETTLE_DURATION> = 600;

        <androidx.viewpager.widget.ViewPager: int INVALID_POINTER> = -1;

        <androidx.viewpager.widget.ViewPager: int DRAW_ORDER_REVERSE> = 2;

        <androidx.viewpager.widget.ViewPager: int DRAW_ORDER_FORWARD> = 1;

        <androidx.viewpager.widget.ViewPager: int DRAW_ORDER_DEFAULT> = 0;

        <androidx.viewpager.widget.ViewPager: int DEFAULT_OFFSCREEN_PAGES> = 1;

        <androidx.viewpager.widget.ViewPager: int DEFAULT_GUTTER_SIZE> = 16;

        <androidx.viewpager.widget.ViewPager: boolean DEBUG> = 0;

        <androidx.viewpager.widget.ViewPager: int CLOSE_ENOUGH> = 2;

        $u0 = newarray (int)[1];

        $u0[0] = 16842931;

        <androidx.viewpager.widget.ViewPager: int[] LAYOUT_ATTRS> = $u0;

        $u0#3 = new androidx.viewpager.widget.ViewPager$1;

        specialinvoke $u0#3.<androidx.viewpager.widget.ViewPager$1: void <init>()>();

        <androidx.viewpager.widget.ViewPager: java.util.Comparator COMPARATOR> = $u0#3;

        $u0#4 = new androidx.viewpager.widget.ViewPager$2;

        specialinvoke $u0#4.<androidx.viewpager.widget.ViewPager$2: void <init>()>();

        <androidx.viewpager.widget.ViewPager: android.view.animation.Interpolator sInterpolator> = $u0#4;

        $u0#5 = new androidx.viewpager.widget.ViewPager$ViewPositionComparator;

        specialinvoke $u0#5.<androidx.viewpager.widget.ViewPager$ViewPositionComparator: void <init>()>();

        <androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator> = $u0#5;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.viewpager.widget.ViewPager this;
        android.content.Context $u3;
        java.util.ArrayList $u0;
        androidx.viewpager.widget.ViewPager$ItemInfo $u0#2;
        android.graphics.Rect $u0#3;
        androidx.viewpager.widget.ViewPager$3 $u1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: android.content.Context;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context)>($u3);

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems> = $u0;

        $u0#2 = new androidx.viewpager.widget.ViewPager$ItemInfo;

        specialinvoke $u0#2.<androidx.viewpager.widget.ViewPager$ItemInfo: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem> = $u0#2;

        $u0#3 = new android.graphics.Rect;

        specialinvoke $u0#3.<android.graphics.Rect: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect> = $u0#3;

        this.<androidx.viewpager.widget.ViewPager: int mRestoredCurItem> = -1;

        this.<androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        this.<androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        this.<androidx.viewpager.widget.ViewPager: float mFirstOffset> = -3.4028235E38F;

        this.<androidx.viewpager.widget.ViewPager: float mLastOffset> = 3.4028235E38F;

        this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit> = 1;

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = -1;

        this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout> = 1;

        this.<androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        $u1 = new androidx.viewpager.widget.ViewPager$3;

        specialinvoke $u1.<androidx.viewpager.widget.ViewPager$3: void <init>(androidx.viewpager.widget.ViewPager)>(this);

        this.<androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable> = $u1;

        this.<androidx.viewpager.widget.ViewPager: int mScrollState> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void initViewPager()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.viewpager.widget.ViewPager this;
        android.content.Context $u3;
        android.util.AttributeSet $u4;
        java.util.ArrayList $u0;
        androidx.viewpager.widget.ViewPager$ItemInfo $u0#2;
        android.graphics.Rect $u0#3;
        androidx.viewpager.widget.ViewPager$3 $u1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($u3, $u4);

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems> = $u0;

        $u0#2 = new androidx.viewpager.widget.ViewPager$ItemInfo;

        specialinvoke $u0#2.<androidx.viewpager.widget.ViewPager$ItemInfo: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem> = $u0#2;

        $u0#3 = new android.graphics.Rect;

        specialinvoke $u0#3.<android.graphics.Rect: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect> = $u0#3;

        this.<androidx.viewpager.widget.ViewPager: int mRestoredCurItem> = -1;

        this.<androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        this.<androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        this.<androidx.viewpager.widget.ViewPager: float mFirstOffset> = -3.4028235E38F;

        this.<androidx.viewpager.widget.ViewPager: float mLastOffset> = 3.4028235E38F;

        this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit> = 1;

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = -1;

        this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout> = 1;

        this.<androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        $u1 = new androidx.viewpager.widget.ViewPager$3;

        specialinvoke $u1.<androidx.viewpager.widget.ViewPager$3: void <init>(androidx.viewpager.widget.ViewPager)>(this);

        this.<androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable> = $u1;

        this.<androidx.viewpager.widget.ViewPager: int mScrollState> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void initViewPager()>();

        return;
    }

    private void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo, int, androidx.viewpager.widget.ViewPager$ItemInfo)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$ItemInfo $u12, $u14;
        int $u13, $u-1, $u-1#4, marginOffset, $u8, pos#78;
        androidx.viewpager.widget.PagerAdapter N;
        float marginOffset#6, oldCurPosition, pos, pos#81;
        java.util.ArrayList $u8#19;
        java.lang.Object $u-1#23;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u12 := @parameter0: androidx.viewpager.widget.ViewPager$ItemInfo;

        $u13 := @parameter1: int;

        $u14 := @parameter2: androidx.viewpager.widget.ViewPager$ItemInfo;

        N = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1 = virtualinvoke N.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        $u-1#4 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        if $u-1#4 <= 0 goto label01;

        marginOffset = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        marginOffset#6 = (float) marginOffset;

        oldCurPosition = (float) $u-1#4;

        marginOffset#6 = marginOffset#6 / oldCurPosition;

        goto label02;

     label01:
        marginOffset#6 = 0.0F;

     label02:
        if $u14 == null goto label12;

        marginOffset = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u-1#4 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset >= $u-1#4 goto label07;

        $u-1#4 = 0;

        oldCurPosition = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        pos = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        oldCurPosition = oldCurPosition + pos;

        oldCurPosition = oldCurPosition + marginOffset#6;

        marginOffset = marginOffset + 1;

     label03:
        $u8 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset > $u8 goto label12;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u8 = virtualinvoke $u8#19.<java.util.ArrayList: int size()>();

        if $u-1#4 >= $u8 goto label12;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#23 = virtualinvoke $u8#19.<java.util.ArrayList: java.lang.Object get(int)>($u-1#4);

        $u14 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#23;

     label04:
        $u8 = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset <= $u8 goto label05;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u8 = virtualinvoke $u8#19.<java.util.ArrayList: int size()>();

        $u8 = $u8 + -1;

        if $u-1#4 >= $u8 goto label05;

        $u-1#4 = $u-1#4 + 1;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#23 = virtualinvoke $u8#19.<java.util.ArrayList: java.lang.Object get(int)>($u-1#4);

        $u14 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#23;

        goto label04;

     label05:
        $u8 = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset >= $u8 goto label06;

        N = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        pos = virtualinvoke N.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>(marginOffset);

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition + pos;

        marginOffset = marginOffset + 1;

        goto label05;

     label06:
        $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset> = oldCurPosition;

        pos = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition + pos;

        marginOffset = marginOffset + 1;

        goto label03;

     label07:
        $u-1#4 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset <= $u-1#4 goto label12;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#4 = virtualinvoke $u8#19.<java.util.ArrayList: int size()>();

        $u-1#4 = $u-1#4 + -1;

        oldCurPosition = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        marginOffset = marginOffset + -1;

     label08:
        $u8 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset < $u8 goto label12;

        if $u-1#4 < 0 goto label12;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#23 = virtualinvoke $u8#19.<java.util.ArrayList: java.lang.Object get(int)>($u-1#4);

        $u14 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#23;

     label09:
        $u8 = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset >= $u8 goto label10;

        if $u-1#4 <= 0 goto label10;

        $u-1#4 = $u-1#4 + -1;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#23 = virtualinvoke $u8#19.<java.util.ArrayList: java.lang.Object get(int)>($u-1#4);

        $u14 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#23;

        goto label09;

     label10:
        $u8 = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset <= $u8 goto label11;

        N = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        pos = virtualinvoke N.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>(marginOffset);

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition - pos;

        marginOffset = marginOffset + -1;

        goto label10;

     label11:
        pos = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition - pos;

        $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset> = oldCurPosition;

        marginOffset = marginOffset + -1;

        goto label08;

     label12:
        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#4 = virtualinvoke $u8#19.<java.util.ArrayList: int size()>();

        oldCurPosition = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        marginOffset = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        marginOffset = marginOffset + -1;

        $u8 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u8 != 0 goto label13;

        pos = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        goto label14;

     label13:
        pos = -3.4028235E38F;

     label14:
        this.<androidx.viewpager.widget.ViewPager: float mFirstOffset> = pos;

        $u8 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        pos#78 = $u-1 + -1;

        if $u8 != pos#78 goto label15;

        pos = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        pos#81 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = pos + pos#81;

        pos = pos - 1.0F;

        goto label16;

     label15:
        pos = 3.4028235E38F;

     label16:
        this.<androidx.viewpager.widget.ViewPager: float mLastOffset> = pos;

        $u8 = $u13 + -1;

     label17:
        if $u8 < 0 goto label21;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#23 = virtualinvoke $u8#19.<java.util.ArrayList: java.lang.Object get(int)>($u8);

        $u14 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#23;

     label18:
        pos#78 = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset <= pos#78 goto label19;

        N = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        pos = virtualinvoke N.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>(marginOffset);

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition - pos;

        marginOffset = marginOffset + -1;

        goto label18;

     label19:
        pos = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition - pos;

        $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset> = oldCurPosition;

        pos#78 = $u14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if pos#78 != 0 goto label20;

        this.<androidx.viewpager.widget.ViewPager: float mFirstOffset> = oldCurPosition;

     label20:
        $u8 = $u8 + -1;

        marginOffset = marginOffset + -1;

        goto label17;

     label21:
        oldCurPosition = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        pos = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        oldCurPosition = oldCurPosition + pos;

        oldCurPosition = oldCurPosition + marginOffset#6;

        marginOffset = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        marginOffset = marginOffset + 1;

        $u13 = $u13 + 1;

     label22:
        if $u13 >= $u-1#4 goto label26;

        $u8#19 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#23 = virtualinvoke $u8#19.<java.util.ArrayList: java.lang.Object get(int)>($u13);

        $u12 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#23;

     label23:
        $u8 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if marginOffset >= $u8 goto label24;

        N = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        pos = virtualinvoke N.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>(marginOffset);

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition + pos;

        marginOffset = marginOffset + 1;

        goto label23;

     label24:
        $u8 = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        pos#78 = $u-1 + -1;

        if $u8 != pos#78 goto label25;

        pos = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = pos + oldCurPosition;

        pos = pos - 1.0F;

        this.<androidx.viewpager.widget.ViewPager: float mLastOffset> = pos;

     label25:
        $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset> = oldCurPosition;

        pos = $u12.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = pos + marginOffset#6;

        oldCurPosition = oldCurPosition + pos;

        $u13 = $u13 + 1;

        marginOffset = marginOffset + 1;

        goto label22;

     label26:
        this.<androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        return;
    }

    private void completeScroll(boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u8, needPopulate#4, $u-1;
        int needPopulate, $u-1#12, $u-1#15, $u-1#18;
        android.widget.Scroller oldX;
        java.util.ArrayList oldX#21;
        java.lang.Object $u-1#25;
        androidx.viewpager.widget.ViewPager$ItemInfo oldX#27;
        java.lang.Runnable wasScrolling;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u8 := @parameter0: boolean;

        needPopulate = this.<androidx.viewpager.widget.ViewPager: int mScrollState>;

        if needPopulate != 2 goto label1;

        needPopulate#4 = 1;

        goto label2;

     label1:
        needPopulate#4 = 0;

     label2:
        if needPopulate#4 == 0 goto label4;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        oldX = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1 = virtualinvoke oldX.<android.widget.Scroller: boolean isFinished()>();

        $u-1 = 1 ^ $u-1;

        if $u-1 == 0 goto label4;

        oldX = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke oldX.<android.widget.Scroller: void abortAnimation()>();

        needPopulate = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u-1#12 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        oldX = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1#15 = virtualinvoke oldX.<android.widget.Scroller: int getCurrX()>();

        oldX = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1#18 = virtualinvoke oldX.<android.widget.Scroller: int getCurrY()>();

        if needPopulate != $u-1#15 goto label3;

        if $u-1#12 == $u-1#18 goto label4;

     label3:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>($u-1#15, $u-1#18);

        if $u-1#15 == needPopulate goto label4;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)>($u-1#15);

     label4:
        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 0;

        needPopulate = 0;

     label5:
        oldX#21 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#12 = virtualinvoke oldX#21.<java.util.ArrayList: int size()>();

        if needPopulate >= $u-1#12 goto label7;

        oldX#21 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#25 = virtualinvoke oldX#21.<java.util.ArrayList: java.lang.Object get(int)>(needPopulate);

        oldX#27 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#25;

        $u-1 = oldX#27.<androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling>;

        if $u-1 == 0 goto label6;

        needPopulate#4 = 1;

        oldX#27.<androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling> = 0;

     label6:
        needPopulate = needPopulate + 1;

        goto label5;

     label7:
        if needPopulate#4 == 0 goto label9;

        if $u8 == 0 goto label8;

        wasScrolling = this.<androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(this, wasScrolling);

        return;

     label8:
        wasScrolling = this.<androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        interfaceinvoke wasScrolling.<java.lang.Runnable: void run()>();

     label9:
        return;
    }

    private int determineTargetPage(int, float, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u6, $u8, $u9, firstItem;
        float $u7, targetPage;
        java.util.ArrayList firstItem#13;
        java.lang.Object $u-1;
        androidx.viewpager.widget.ViewPager$ItemInfo firstItem#20, lastItem;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u6 := @parameter0: int;

        $u7 := @parameter1: float;

        $u8 := @parameter2: int;

        $u9 := @parameter3: int;

        $u9 = staticinvoke <java.lang.Math: int abs(int)>($u9);

        firstItem = this.<androidx.viewpager.widget.ViewPager: int mFlingDistance>;

        if $u9 <= firstItem goto label3;

        $u9 = staticinvoke <java.lang.Math: int abs(int)>($u8);

        firstItem = this.<androidx.viewpager.widget.ViewPager: int mMinimumVelocity>;

        if $u9 <= firstItem goto label3;

        if $u8 <= 0 goto label1;

        goto label2;

     label1:
        $u6 = $u6 + 1;

     label2:
        goto label6;

     label3:
        $u8 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u6 < $u8 goto label4;

        targetPage = 0.4F;

        goto label5;

     label4:
        targetPage = 0.6F;

     label5:
        $u7 = $u7 + targetPage;

        $u8 = (int) $u7;

        $u6 = $u8 + $u6;

     label6:
        firstItem#13 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u8 = virtualinvoke firstItem#13.<java.util.ArrayList: int size()>();

        if $u8 <= 0 goto label7;

        firstItem#13 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1 = virtualinvoke firstItem#13.<java.util.ArrayList: java.lang.Object get(int)>(0);

        firstItem#20 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1;

        firstItem#13 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u8 = virtualinvoke firstItem#13.<java.util.ArrayList: int size()>();

        $u8 = $u8 + -1;

        $u-1 = virtualinvoke firstItem#13.<java.util.ArrayList: java.lang.Object get(int)>($u8);

        lastItem = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1;

        $u8 = firstItem#20.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u9 = lastItem.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u6 = staticinvoke <java.lang.Math: int min(int,int)>($u6, $u9);

        $u6 = staticinvoke <java.lang.Math: int max(int,int)>($u8, $u6);

     label7:
        return $u6;
    }

    private void dispatchOnPageScrolled(int, float, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u4, $u6, i, $u-1;
        float $u5;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener z;
        java.util.List z#2;
        java.lang.Object $u-1#7;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: int;

        $u5 := @parameter1: float;

        $u6 := @parameter2: int;

        z = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if z == null goto label1;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($u4, $u5, $u6);

     label1:
        z#2 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        if z#2 == null goto label4;

        i = 0;

        $u-1 = interfaceinvoke z#2.<java.util.List: int size()>();

     label2:
        if i >= $u-1 goto label4;

        z#2 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        $u-1#7 = interfaceinvoke z#2.<java.util.List: java.lang.Object get(int)>(i);

        z = (androidx.viewpager.widget.ViewPager$OnPageChangeListener) $u-1#7;

        if z == null goto label3;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($u4, $u5, $u6);

     label3:
        i = i + 1;

        goto label2;

     label4:
        z = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if z == null goto label5;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($u4, $u5, $u6);

     label5:
        return;
    }

    private void dispatchOnPageSelected(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u4, i, $u-1;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener z;
        java.util.List z#2;
        java.lang.Object $u-1#7;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: int;

        z = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if z == null goto label1;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>($u4);

     label1:
        z#2 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        if z#2 == null goto label4;

        i = 0;

        $u-1 = interfaceinvoke z#2.<java.util.List: int size()>();

     label2:
        if i >= $u-1 goto label4;

        z#2 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        $u-1#7 = interfaceinvoke z#2.<java.util.List: java.lang.Object get(int)>(i);

        z = (androidx.viewpager.widget.ViewPager$OnPageChangeListener) $u-1#7;

        if z == null goto label3;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>($u4);

     label3:
        i = i + 1;

        goto label2;

     label4:
        z = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if z == null goto label5;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>($u4);

     label5:
        return;
    }

    private void dispatchOnScrollStateChanged(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u4, i, $u-1;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener z;
        java.util.List z#2;
        java.lang.Object $u-1#7;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: int;

        z = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if z == null goto label1;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($u4);

     label1:
        z#2 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        if z#2 == null goto label4;

        i = 0;

        $u-1 = interfaceinvoke z#2.<java.util.List: int size()>();

     label2:
        if i >= $u-1 goto label4;

        z#2 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        $u-1#7 = interfaceinvoke z#2.<java.util.List: java.lang.Object get(int)>(i);

        z = (androidx.viewpager.widget.ViewPager$OnPageChangeListener) $u-1#7;

        if z == null goto label3;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($u4);

     label3:
        i = i + 1;

        goto label2;

     label4:
        z = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if z == null goto label5;

        interfaceinvoke z.<androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($u4);

     label5:
        return;
    }

    private void enableLayers(boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u6;
        int $u-1, i, layerType;
        android.view.View $u-1#4;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u6 := @parameter0: boolean;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label4;

        if $u6 == 0 goto label2;

        layerType = this.<androidx.viewpager.widget.ViewPager: int mPageTransformerLayerType>;

        goto label3;

     label2:
        layerType = 0;

     label3:
        $u-1#4 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        virtualinvoke $u-1#4.<android.view.View: void setLayerType(int,android.graphics.Paint)>(layerType, null);

        i = i + 1;

        goto label1;

     label4:
        return;
    }

    private void endDrag()
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.VelocityTracker $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged> = 0;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag> = 0;

        $u0 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.view.VelocityTracker: void recycle()>();

        this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect, android.view.View)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.View $u6;
        android.graphics.Rect $u5;
        int $u-1, $u-1#18;
        android.view.ViewParent $u-1#12;
        boolean group;
        android.view.ViewGroup group#16;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u5 := @parameter0: android.graphics.Rect;

        $u6 := @parameter1: android.view.View;

        if $u5 != null goto label1;

        $u5 = new android.graphics.Rect;

        specialinvoke $u5.<android.graphics.Rect: void <init>()>();

     label1:
        if $u6 != null goto label2;

        virtualinvoke $u5.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return $u5;

     label2:
        $u-1 = virtualinvoke $u6.<android.view.View: int getLeft()>();

        $u5.<android.graphics.Rect: int left> = $u-1;

        $u-1 = virtualinvoke $u6.<android.view.View: int getRight()>();

        $u5.<android.graphics.Rect: int right> = $u-1;

        $u-1 = virtualinvoke $u6.<android.view.View: int getTop()>();

        $u5.<android.graphics.Rect: int top> = $u-1;

        $u-1 = virtualinvoke $u6.<android.view.View: int getBottom()>();

        $u5.<android.graphics.Rect: int bottom> = $u-1;

        $u-1#12 = virtualinvoke $u6.<android.view.View: android.view.ViewParent getParent()>();

     label3:
        group = $u-1#12 instanceof android.view.ViewGroup;

        if group == 0 goto label4;

        if $u-1#12 == this goto label4;

        group#16 = (android.view.ViewGroup) $u-1#12;

        $u-1 = $u5.<android.graphics.Rect: int left>;

        $u-1#18 = virtualinvoke group#16.<android.view.ViewGroup: int getLeft()>();

        $u-1 = $u-1 + $u-1#18;

        $u5.<android.graphics.Rect: int left> = $u-1;

        $u-1 = $u5.<android.graphics.Rect: int right>;

        $u-1#18 = virtualinvoke group#16.<android.view.ViewGroup: int getRight()>();

        $u-1 = $u-1 + $u-1#18;

        $u5.<android.graphics.Rect: int right> = $u-1;

        $u-1 = $u5.<android.graphics.Rect: int top>;

        $u-1#18 = virtualinvoke group#16.<android.view.ViewGroup: int getTop()>();

        $u-1 = $u-1 + $u-1#18;

        $u5.<android.graphics.Rect: int top> = $u-1;

        $u-1 = $u5.<android.graphics.Rect: int bottom>;

        $u-1#18 = virtualinvoke group#16.<android.view.ViewGroup: int getBottom()>();

        $u-1 = $u-1 + $u-1#18;

        $u5.<android.graphics.Rect: int bottom> = $u-1;

        $u-1#12 = virtualinvoke group#16.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        goto label3;

     label4:
        return $u5;
    }

    private int getClientWidth()
    {
        androidx.viewpager.widget.ViewPager this;
        int $u-1, $u-1#3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getMeasuredWidth()>();

        $u-1#3 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u-1 = $u-1 - $u-1#3;

        $u-1#3 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u-1 = $u-1 - $u-1#3;

        return $u-1;
    }

    private androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()
    {
        androidx.viewpager.widget.ViewPager this;
        int $u-1, $u-1#3, $u-1#18, leftBound;
        float marginOffset, scrollOffset, lastPos, lastWidth;
        boolean first;
        androidx.viewpager.widget.ViewPager$ItemInfo lastItem, ii#23;
        java.util.ArrayList ii;
        java.lang.Object $u-1#21;
        androidx.viewpager.widget.PagerAdapter offset;
        byte $u13;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        marginOffset = 0.0F;

        if $u-1 <= 0 goto label01;

        $u-1#3 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        scrollOffset = (float) $u-1#3;

        lastPos = (float) $u-1;

        scrollOffset = scrollOffset / lastPos;

        goto label02;

     label01:
        scrollOffset = 0.0F;

     label02:
        if $u-1 <= 0 goto label03;

        $u-1#3 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        marginOffset = (float) $u-1#3;

        lastPos = (float) $u-1;

        marginOffset = marginOffset / lastPos;

     label03:
        $u-1#3 = -1;

        lastPos = 0.0F;

        lastWidth = 0.0F;

        first = 1;

        lastItem = null;

        $u-1 = 0;

     label04:
        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#18 = virtualinvoke ii.<java.util.ArrayList: int size()>();

        if $u-1 >= $u-1#18 goto label10;

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#21 = virtualinvoke ii.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        ii#23 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#21;

        if first != 0 goto label05;

        $u-1#18 = ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        leftBound = $u-1#3 + 1;

        if $u-1#18 == leftBound goto label05;

        ii#23 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem>;

        lastPos = lastPos + lastWidth;

        lastPos = lastPos + marginOffset;

        ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset> = lastPos;

        $u-1#3 = $u-1#3 + 1;

        ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: int position> = $u-1#3;

        offset = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#3 = ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        lastPos = virtualinvoke offset.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>($u-1#3);

        ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor> = lastPos;

        $u-1 = $u-1 + -1;

     label05:
        lastPos = ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        lastWidth = ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        lastWidth = lastWidth + lastPos;

        lastWidth = lastWidth + marginOffset;

        if first != 0 goto label07;

        $u13 = scrollOffset cmpl lastPos;

        if $u13 < 0 goto label06;

        goto label07;

     label06:
        return lastItem;

     label07:
        $u13 = scrollOffset cmpg lastWidth;

        if $u13 < 0 goto label09;

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#3 = virtualinvoke ii.<java.util.ArrayList: int size()>();

        $u-1#3 = $u-1#3 + -1;

        if $u-1 != $u-1#3 goto label08;

        return ii#23;

     label08:
        first = 0;

        $u-1#3 = ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        lastWidth = ii#23.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        lastItem = ii#23;

        $u-1 = $u-1 + 1;

        goto label04;

     label09:
        return ii#23;

     label10:
        return lastItem;
    }

    private static boolean isDecorView(android.view.View)
    {
        android.view.View $u2;
        java.lang.Class $u-1;
        java.lang.'annotation'.Annotation $u-1#3;

        $u2 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u2.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#3 = virtualinvoke $u-1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroidx/viewpager/widget/ViewPager$DecorView;");

        if $u-1#3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isGutterDrag(float, float)
    {
        androidx.viewpager.widget.ViewPager this;
        float $u4, $u5, $u0;
        int $u2, $u-1;
        byte $u0#3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: float;

        $u5 := @parameter1: float;

        $u2 = this.<androidx.viewpager.widget.ViewPager: int mGutterSize>;

        $u0 = (float) $u2;

        $u0#3 = $u4 cmpg $u0;

        if $u0#3 >= 0 goto label1;

        $u0#3 = $u5 cmpl 0.0F;

        if $u0#3 > 0 goto label2;

     label1:
        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getWidth()>();

        $u2 = this.<androidx.viewpager.widget.ViewPager: int mGutterSize>;

        $u2 = $u-1 - $u2;

        $u0 = (float) $u2;

        $u0#3 = $u4 cmpl $u0;

        if $u0#3 <= 0 goto label3;

        $u0#3 = $u5 cmpg 0.0F;

        if $u0#3 >= 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.MotionEvent $u5;
        int $u-1, $u-1#2, newPointerIndex;
        byte newPointerIndex#4;
        float $u-1#5;
        android.view.VelocityTracker $u3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u5 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: int getActionIndex()>();

        $u-1#2 = virtualinvoke $u5.<android.view.MotionEvent: int getPointerId(int)>($u-1);

        newPointerIndex = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        if $u-1#2 != newPointerIndex goto label3;

        if $u-1 != 0 goto label1;

        newPointerIndex#4 = 1;

        goto label2;

     label1:
        newPointerIndex#4 = 0;

     label2:
        $u-1#5 = virtualinvoke $u5.<android.view.MotionEvent: float getX(int)>(newPointerIndex#4);

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1#5;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: int getPointerId(int)>(newPointerIndex#4);

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = $u-1;

        $u3 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $u3 == null goto label3;

        virtualinvoke $u3.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    private boolean pageScrolled(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u10, widthWithMargin, $u-1#12, marginOffset;
        java.util.ArrayList ii;
        boolean ii#6;
        java.lang.IllegalStateException ii#9;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1;
        float marginOffset#14, currentPage, offsetPixels;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u10 := @parameter0: int;

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        widthWithMargin = virtualinvoke ii.<java.util.ArrayList: int size()>();

        if widthWithMargin != 0 goto label3;

        ii#6 = this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout>;

        if ii#6 == 0 goto label1;

        return 0;

     label1:
        this.<androidx.viewpager.widget.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)>(0, 0.0F, 0);

        ii#6 = this.<androidx.viewpager.widget.ViewPager: boolean mCalledSuper>;

        if ii#6 == 0 goto label2;

        return 0;

     label2:
        ii#9 = new java.lang.IllegalStateException;

        specialinvoke ii#9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw ii#9;

     label3:
        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        $u-1#12 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        marginOffset = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        widthWithMargin = $u-1#12 + marginOffset;

        marginOffset#14 = (float) marginOffset;

        currentPage = (float) $u-1#12;

        marginOffset#14 = marginOffset#14 / currentPage;

        marginOffset = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        currentPage = (float) $u10;

        offsetPixels = (float) $u-1#12;

        currentPage = currentPage / offsetPixels;

        offsetPixels = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        currentPage = currentPage - offsetPixels;

        offsetPixels = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        marginOffset#14 = offsetPixels + marginOffset#14;

        marginOffset#14 = currentPage / marginOffset#14;

        currentPage = (float) widthWithMargin;

        currentPage = currentPage * marginOffset#14;

        $u10 = (int) currentPage;

        this.<androidx.viewpager.widget.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)>(marginOffset, marginOffset#14, $u10);

        ii#6 = this.<androidx.viewpager.widget.ViewPager: boolean mCalledSuper>;

        if ii#6 == 0 goto label4;

        return 1;

     label4:
        ii#9 = new java.lang.IllegalStateException;

        specialinvoke ii#9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw ii#9;
    }

    private boolean performDrag(float)
    {
        androidx.viewpager.widget.ViewPager this;
        float $u17, deltaX, rightBound, leftAbsolute;
        boolean needsInvalidate, leftAbsolute#16, rightAbsolute;
        int $u-1, $u-1#24, $u-1#35;
        java.util.ArrayList firstItem;
        java.lang.Object $u-1#20;
        androidx.viewpager.widget.ViewPager$ItemInfo firstItem#22, lastItem;
        androidx.viewpager.widget.PagerAdapter $u14;
        byte over1;
        android.widget.EdgeEffect $u14#42;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u17 := @parameter0: float;

        needsInvalidate = 0;

        deltaX = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        deltaX = deltaX - $u17;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u17;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u17 = (float) $u-1;

        $u17 = $u17 + deltaX;

        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        deltaX = (float) $u-1;

        rightBound = this.<androidx.viewpager.widget.ViewPager: float mFirstOffset>;

        deltaX = deltaX * rightBound;

        rightBound = (float) $u-1;

        leftAbsolute = this.<androidx.viewpager.widget.ViewPager: float mLastOffset>;

        rightBound = rightBound * leftAbsolute;

        leftAbsolute#16 = 1;

        rightAbsolute = 1;

        firstItem = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#20 = virtualinvoke firstItem.<java.util.ArrayList: java.lang.Object get(int)>(0);

        firstItem#22 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#20;

        firstItem = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#24 = virtualinvoke firstItem.<java.util.ArrayList: int size()>();

        $u-1#24 = $u-1#24 + -1;

        $u-1#20 = virtualinvoke firstItem.<java.util.ArrayList: java.lang.Object get(int)>($u-1#24);

        lastItem = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#20;

        $u-1#24 = firstItem#22.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u-1#24 == 0 goto label1;

        leftAbsolute#16 = 0;

        deltaX = firstItem#22.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        leftAbsolute = (float) $u-1;

        deltaX = deltaX * leftAbsolute;

     label1:
        $u-1#24 = lastItem.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u14 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#35 = virtualinvoke $u14.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        $u-1#35 = $u-1#35 + -1;

        if $u-1#24 == $u-1#35 goto label2;

        rightAbsolute = 0;

        rightBound = lastItem.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        leftAbsolute = (float) $u-1;

        rightBound = rightBound * leftAbsolute;

     label2:
        over1 = $u17 cmpg deltaX;

        if over1 >= 0 goto label4;

        if leftAbsolute#16 == 0 goto label3;

        $u17 = deltaX - $u17;

        $u14#42 = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        $u17 = staticinvoke <java.lang.Math: float abs(float)>($u17);

        rightBound = (float) $u-1;

        $u17 = $u17 / rightBound;

        virtualinvoke $u14#42.<android.widget.EdgeEffect: void onPull(float)>($u17);

        needsInvalidate = 1;

     label3:
        $u17 = deltaX;

        goto label6;

     label4:
        over1 = $u17 cmpl rightBound;

        if over1 <= 0 goto label6;

        if rightAbsolute == 0 goto label5;

        $u17 = $u17 - rightBound;

        $u14#42 = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $u17 = staticinvoke <java.lang.Math: float abs(float)>($u17);

        deltaX = (float) $u-1;

        $u17 = $u17 / deltaX;

        virtualinvoke $u14#42.<android.widget.EdgeEffect: void onPull(float)>($u17);

        needsInvalidate = 1;

     label5:
        $u17 = rightBound;

     label6:
        deltaX = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        $u-1 = (int) $u17;

        rightBound = (float) $u-1;

        rightBound = $u17 - rightBound;

        deltaX = deltaX + rightBound;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = deltaX;

        $u-1 = (int) $u17;

        $u-1#24 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>($u-1, $u-1#24);

        $u-1 = (int) $u17;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)>($u-1);

        return needsInvalidate;
    }

    private void recomputeScrollPosition(int, int, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u7, $u8, $u9, $u10, $u-1#13;
        java.util.ArrayList widthWithMargin;
        boolean $u-1;
        android.widget.Scroller widthWithMargin#4;
        float pageOffset, newOffsetPixels;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#37;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u7 := @parameter0: int;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int;

        if $u8 <= 0 goto label2;

        widthWithMargin = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1 = virtualinvoke widthWithMargin.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1 != 0 goto label2;

        widthWithMargin#4 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1 = virtualinvoke widthWithMargin#4.<android.widget.Scroller: boolean isFinished()>();

        if $u-1 != 0 goto label1;

        widthWithMargin#4 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u7 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getCurrentItem()>();

        $u8 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        $u7 = $u7 * $u8;

        virtualinvoke widthWithMargin#4.<android.widget.Scroller: void setFinalX(int)>($u7);

        return;

     label1:
        $u-1#13 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u7 = $u7 - $u-1#13;

        $u-1#13 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u7 = $u7 - $u-1#13;

        $u7 = $u7 + $u9;

        $u9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u8 = $u8 - $u9;

        $u9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u8 = $u8 - $u9;

        $u8 = $u8 + $u10;

        $u9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        pageOffset = (float) $u9;

        newOffsetPixels = (float) $u8;

        pageOffset = pageOffset / newOffsetPixels;

        newOffsetPixels = (float) $u7;

        pageOffset = newOffsetPixels * pageOffset;

        $u7 = (int) pageOffset;

        $u8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>($u7, $u8);

        return;

     label2:
        $u8 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u-1#37 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)>($u8);

        if $u-1#37 == null goto label3;

        pageOffset = $u-1#37.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        newOffsetPixels = this.<androidx.viewpager.widget.ViewPager: float mLastOffset>;

        pageOffset = staticinvoke <java.lang.Math: float min(float,float)>(pageOffset, newOffsetPixels);

        goto label4;

     label3:
        pageOffset = 0.0F;

     label4:
        $u8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u7 = $u7 - $u8;

        $u8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u7 = $u7 - $u8;

        newOffsetPixels = (float) $u7;

        pageOffset = newOffsetPixels * pageOffset;

        $u7 = (int) pageOffset;

        $u8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        if $u7 == $u8 goto label5;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>(0);

        $u8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>($u7, $u8);

     label5:
        return;
    }

    private void removeNonDecorViews()
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u3;
        int i, $u-1;
        android.view.View $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1#6;
        androidx.viewpager.widget.ViewPager$LayoutParams lp;

        this := @this: androidx.viewpager.widget.ViewPager;

        i = 0;

     label1:
        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        if i >= $u-1 goto label3;

        $u-1#4 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u-1#6 = virtualinvoke $u-1#4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#6;

        $u3 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $u3 != 0 goto label2;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void removeViewAt(int)>(i);

        i = i + -1;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    private void requestParentDisallowInterceptTouchEvent(boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u2;
        android.view.ViewParent $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: boolean;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.ViewParent getParent()>();

        if $u-1 == null goto label1;

        interfaceinvoke $u-1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>($u2);

     label1:
        return;
    }

    private boolean resetTouch()
    {
        androidx.viewpager.widget.ViewPager this;
        android.widget.EdgeEffect needsInvalidate;
        boolean $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = -1;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void endDrag()>();

        needsInvalidate = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke needsInvalidate.<android.widget.EdgeEffect: void onRelease()>();

        needsInvalidate = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        virtualinvoke needsInvalidate.<android.widget.EdgeEffect: void onRelease()>();

        needsInvalidate = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        $u-1 = virtualinvoke needsInvalidate.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1 != 0 goto label2;

        needsInvalidate = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $u-1 = virtualinvoke needsInvalidate.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private void scrollToItem(int, boolean, int, boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u8, $u10, destX;
        boolean $u9, $u11;
        float $u6, $u3, $u4, $u5;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u8 := @parameter0: int;

        $u9 := @parameter1: boolean;

        $u10 := @parameter2: int;

        $u11 := @parameter3: boolean;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)>($u8);

        destX = 0;

        if $u-1 == null goto label1;

        destX = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        $u3 = (float) destX;

        $u4 = this.<androidx.viewpager.widget.ViewPager: float mFirstOffset>;

        $u5 = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        $u6 = this.<androidx.viewpager.widget.ViewPager: float mLastOffset>;

        $u6 = staticinvoke <java.lang.Math: float min(float,float)>($u5, $u6);

        $u4 = staticinvoke <java.lang.Math: float max(float,float)>($u4, $u6);

        $u3 = $u3 * $u4;

        destX = (int) $u3;

     label1:
        if $u9 == 0 goto label2;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)>(destX, 0, $u10);

        if $u11 == 0 goto label4;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)>($u8);

        return;

     label2:
        if $u11 == 0 goto label3;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)>($u8);

     label3:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>(0);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>(destX, 0);

        specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)>(destX);

     label4:
        return;
    }

    private void setScrollingCacheEnabled(boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u2, $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mScrollingCacheEnabled>;

        if $u0 == $u2 goto label1;

        this.<androidx.viewpager.widget.ViewPager: boolean mScrollingCacheEnabled> = $u2;

     label1:
        return;
    }

    private void sortChildDrawingOrder()
    {
        androidx.viewpager.widget.ViewPager this;
        java.util.ArrayList $u3;
        int childCount, i;
        android.view.View $u-1;
        androidx.viewpager.widget.ViewPager$ViewPositionComparator child;

        this := @this: androidx.viewpager.widget.ViewPager;

        childCount = this.<androidx.viewpager.widget.ViewPager: int mDrawingOrder>;

        if childCount == 0 goto label5;

        $u3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        if $u3 != null goto label1;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren> = $u3;

        goto label2;

     label1:
        virtualinvoke $u3.<java.util.ArrayList: void clear()>();

     label2:
        childCount = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        i = 0;

     label3:
        if i >= childCount goto label4;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        virtualinvoke $u3.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1);

        i = i + 1;

        goto label3;

     label4:
        $u3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        child = <androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($u3, child);

     label5:
        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        java.util.ArrayList views;
        int $u9, $u10, $u5, $u6, $u-1, $u-1#2, i;
        android.view.View $u-1#7;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#11;
        boolean $u-1#16;

        this := @this: androidx.viewpager.widget.ViewPager;

        views := @parameter0: java.util.ArrayList;

        $u9 := @parameter1: int;

        $u10 := @parameter2: int;

        $u-1 = virtualinvoke views.<java.util.ArrayList: int size()>();

        $u-1#2 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getDescendantFocusability()>();

        if $u-1#2 == 393216 goto label3;

        i = 0;

     label1:
        $u5 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        if i >= $u5 goto label3;

        $u-1#7 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u5 = virtualinvoke $u-1#7.<android.view.View: int getVisibility()>();

        if $u5 != 0 goto label2;

        $u-1#11 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1#7);

        if $u-1#11 == null goto label2;

        $u5 = $u-1#11.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u6 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u5 != $u6 goto label2;

        virtualinvoke $u-1#7.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(views, $u9, $u10);

     label2:
        i = i + 1;

        goto label1;

     label3:
        if $u-1#2 != 262144 goto label4;

        $u9 = virtualinvoke views.<java.util.ArrayList: int size()>();

        if $u-1 != $u9 goto label7;

     label4:
        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean isFocusable()>();

        if $u-1#16 != 0 goto label5;

        return;

     label5:
        $u9 = $u10 & 1;

        if $u9 != 1 goto label6;

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean isInTouchMode()>();

        if $u-1#16 == 0 goto label6;

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean isFocusableInTouchMode()>();

        if $u-1#16 != 0 goto label6;

        return;

     label6:
        if views == null goto label7;

        virtualinvoke views.<java.util.ArrayList: boolean add(java.lang.Object)>(this);

     label7:
        return;
    }

    androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u3, $u4;
        androidx.viewpager.widget.ViewPager$ItemInfo ii;
        androidx.viewpager.widget.PagerAdapter $u1;
        java.lang.Object $u-1;
        float $u-1#5;
        java.util.ArrayList $u1#7;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        ii = new androidx.viewpager.widget.ViewPager$ItemInfo;

        specialinvoke ii.<androidx.viewpager.widget.ViewPager$ItemInfo: void <init>()>();

        ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position> = $u3;

        $u1 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1 = virtualinvoke $u1.<androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>(this, $u3);

        ii.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object> = $u-1;

        $u1 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#5 = virtualinvoke $u1.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>($u3);

        ii.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor> = $u-1#5;

        if $u4 < 0 goto label2;

        $u1#7 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u3 = virtualinvoke $u1#7.<java.util.ArrayList: int size()>();

        if $u4 < $u3 goto label1;

        goto label2;

     label1:
        $u1#7 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $u1#7.<java.util.ArrayList: void add(int,java.lang.Object)>($u4, ii);

        return ii;

     label2:
        $u1#7 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $u1#7.<java.util.ArrayList: boolean add(java.lang.Object)>(ii);

        return ii;
    }

    public void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$OnAdapterChangeListener $u2;
        java.util.List $u0;
        java.util.ArrayList $u0#2;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: androidx.viewpager.widget.ViewPager$OnAdapterChangeListener;

        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners>;

        if $u0 != null goto label1;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners> = $u0#2;

     label1:
        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners>;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u2);

        return;
    }

    public void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener $u2;
        java.util.List $u0;
        java.util.ArrayList $u0#2;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: androidx.viewpager.widget.ViewPager$OnPageChangeListener;

        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        if $u0 != null goto label1;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>()>();

        this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners> = $u0#2;

     label1:
        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u2);

        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        androidx.viewpager.widget.ViewPager this;
        java.util.ArrayList views;
        int $u3, $u4, i;
        android.view.View $u-1;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#8;

        this := @this: androidx.viewpager.widget.ViewPager;

        views := @parameter0: java.util.ArrayList;

        i = 0;

     label1:
        $u3 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        if i >= $u3 goto label3;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u3 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u3 != 0 goto label2;

        $u-1#8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1);

        if $u-1#8 == null goto label2;

        $u3 = $u-1#8.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u4 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u3 != $u4 goto label2;

        virtualinvoke $u-1.<android.view.View: void addTouchables(java.util.ArrayList)>(views);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.View $u4;
        int $u5;
        android.view.ViewGroup$LayoutParams $u6;
        boolean $u-1, $u-1#8;
        androidx.viewpager.widget.ViewPager$LayoutParams lp;
        java.lang.IllegalStateException $u1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: int;

        $u6 := @parameter2: android.view.ViewGroup$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($u6);

        if $u-1 != 0 goto label1;

        $u6 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($u6);

     label1:
        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u6;

        $u-1 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        $u-1#8 = staticinvoke <androidx.viewpager.widget.ViewPager: boolean isDecorView(android.view.View)>($u4);

        $u-1 = $u-1 | $u-1#8;

        lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor> = $u-1;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: boolean mInLayout>;

        if $u-1 == 0 goto label4;

        if lp == null goto label3;

        $u-1 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $u-1 != 0 goto label2;

        goto label3;

     label2:
        $u1 = new java.lang.IllegalStateException;

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot add pager decor view during layout");

        throw $u1;

     label3:
        lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean needsMeasure> = 1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>($u4, $u5, $u6);

        return;

     label4:
        specialinvoke this.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($u4, $u5, $u6);

        return;
    }

    public boolean arrowScroll(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u6, parent1#39, currLeft;
        android.view.View $u-1, currentFocused;
        boolean isChild, parent1;
        android.view.ViewParent $u-1#4;
        java.lang.StringBuilder parent, parent1#22;
        java.lang.Class $u-1#9;
        java.lang.String $u-1#11;
        android.view.FocusFinder $u-1#30;
        android.graphics.Rect parent1#36;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u6 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View findFocus()>();

        currentFocused = $u-1;

        if $u-1 != this goto label01;

        currentFocused = null;

        goto label07;

     label01:
        if $u-1 == null goto label07;

        isChild = 0;

        $u-1#4 = virtualinvoke $u-1.<android.view.View: android.view.ViewParent getParent()>();

     label02:
        parent1 = $u-1#4 instanceof android.view.ViewGroup;

        if parent1 == 0 goto label04;

        if $u-1#4 != this goto label03;

        isChild = 1;

        goto label04;

     label03:
        $u-1#4 = interfaceinvoke $u-1#4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label02;

     label04:
        if isChild != 0 goto label07;

        parent = new java.lang.StringBuilder;

        specialinvoke parent.<java.lang.StringBuilder: void <init>()>();

        $u-1#9 = virtualinvoke $u-1.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#11 = virtualinvoke $u-1#9.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke parent.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#11);

        $u-1#4 = virtualinvoke $u-1.<android.view.View: android.view.ViewParent getParent()>();

     label05:
        isChild = $u-1#4 instanceof android.view.ViewGroup;

        if isChild == 0 goto label06;

        virtualinvoke parent.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $u-1#9 = virtualinvoke $u-1#4.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#11 = virtualinvoke $u-1#9.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke parent.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#11);

        $u-1#4 = interfaceinvoke $u-1#4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label05;

     label06:
        parent1#22 = new java.lang.StringBuilder;

        specialinvoke parent1#22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke parent1#22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arrowScroll tried to find focus based on non-child current focused view ");

        $u-1#11 = virtualinvoke parent.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke parent1#22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#11);

        $u-1#11 = virtualinvoke parent1#22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ViewPager", $u-1#11);

        currentFocused = null;

     label07:
        isChild = 0;

        $u-1#30 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $u-1 = virtualinvoke $u-1#30.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(this, currentFocused, $u6);

        if $u-1 == null goto label13;

        if $u-1 == currentFocused goto label13;

        if $u6 != 17 goto label10;

        parent1#36 = this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect>;

        parent1#36 = specialinvoke this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>(parent1#36, $u-1);

        parent1#39 = parent1#36.<android.graphics.Rect: int left>;

        parent1#36 = this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect>;

        parent1#36 = specialinvoke this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>(parent1#36, currentFocused);

        currLeft = parent1#36.<android.graphics.Rect: int left>;

        if currentFocused == null goto label08;

        if parent1#39 < currLeft goto label08;

        isChild = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageLeft()>();

        goto label09;

     label08:
        isChild = virtualinvoke $u-1.<android.view.View: boolean requestFocus()>();

     label09:
        goto label17;

     label10:
        if $u6 != 66 goto label09;

        parent1#36 = this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect>;

        parent1#36 = specialinvoke this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>(parent1#36, $u-1);

        parent1#39 = parent1#36.<android.graphics.Rect: int left>;

        parent1#36 = this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect>;

        parent1#36 = specialinvoke this.<androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>(parent1#36, currentFocused);

        currLeft = parent1#36.<android.graphics.Rect: int left>;

        if currentFocused == null goto label11;

        if parent1#39 > currLeft goto label11;

        isChild = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageRight()>();

        goto label12;

     label11:
        isChild = virtualinvoke $u-1.<android.view.View: boolean requestFocus()>();

     label12:
        goto label17;

     label13:
        if $u6 == 17 goto label16;

        if $u6 != 1 goto label14;

        goto label16;

     label14:
        if $u6 == 66 goto label15;

        if $u6 != 2 goto label17;

     label15:
        isChild = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageRight()>();

        goto label17;

     label16:
        isChild = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageLeft()>();

     label17:
        if isChild == 0 goto label18;

        $u6 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>($u6);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void playSoundEffect(int)>($u6);

     label18:
        return isChild;
    }

    public boolean beginFakeDrag()
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u0;
        android.view.VelocityTracker ev;
        long $u-1;
        android.view.MotionEvent $u-1#10;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if $u0 == 0 goto label1;

        return 0;

     label1:
        this.<androidx.viewpager.widget.ViewPager: boolean mFakeDragging> = 1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollState(int)>(1);

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = 0.0F;

        this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX> = 0.0F;

        ev = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if ev != null goto label2;

        ev = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = ev;

        goto label3;

     label2:
        virtualinvoke ev.<android.view.VelocityTracker: void clear()>();

     label3:
        $u-1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u-1#10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($u-1, $u-1, 0, 0.0F, 0.0F, 0);

        ev = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke ev.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u-1#10);

        virtualinvoke $u-1#10.<android.view.MotionEvent: void recycle()>();

        this.<androidx.viewpager.widget.ViewPager: long mFakeDragBeginTime> = $u-1;

        return 1;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.View $u15, $u-1#10;
        boolean $u16, group;
        int $u17, $u18, $u19, $u11, $u12, $u-1, $u-1#7, $u-1#8, $u-1#27;
        android.view.ViewGroup group#4;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u15 := @parameter0: android.view.View;

        $u16 := @parameter1: boolean;

        $u17 := @parameter2: int;

        $u18 := @parameter3: int;

        $u19 := @parameter4: int;

        group = $u15 instanceof android.view.ViewGroup;

        if group == 0 goto label3;

        group#4 = (android.view.ViewGroup) $u15;

        $u-1 = virtualinvoke $u15.<android.view.View: int getScrollX()>();

        $u-1#7 = virtualinvoke $u15.<android.view.View: int getScrollY()>();

        $u-1#8 = virtualinvoke group#4.<android.view.ViewGroup: int getChildCount()>();

        $u-1#8 = $u-1#8 + -1;

     label1:
        if $u-1#8 < 0 goto label3;

        $u-1#10 = virtualinvoke group#4.<android.view.ViewGroup: android.view.View getChildAt(int)>($u-1#8);

        $u11 = $u18 + $u-1;

        $u12 = virtualinvoke $u-1#10.<android.view.View: int getLeft()>();

        if $u11 < $u12 goto label2;

        $u11 = $u18 + $u-1;

        $u12 = virtualinvoke $u-1#10.<android.view.View: int getRight()>();

        if $u11 >= $u12 goto label2;

        $u11 = $u19 + $u-1#7;

        $u12 = virtualinvoke $u-1#10.<android.view.View: int getTop()>();

        if $u11 < $u12 goto label2;

        $u11 = $u19 + $u-1#7;

        $u12 = virtualinvoke $u-1#10.<android.view.View: int getBottom()>();

        if $u11 >= $u12 goto label2;

        $u11 = $u18 + $u-1;

        $u12 = virtualinvoke $u-1#10.<android.view.View: int getLeft()>();

        $u11 = $u11 - $u12;

        $u12 = $u19 + $u-1#7;

        $u-1#27 = virtualinvoke $u-1#10.<android.view.View: int getTop()>();

        $u12 = $u12 - $u-1#27;

        group = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>($u-1#10, 1, $u17, $u11, $u12);

        if group == 0 goto label2;

        return 1;

     label2:
        $u-1#8 = $u-1#8 + -1;

        goto label1;

     label3:
        if $u16 == 0 goto label4;

        $u17 = neg $u17;

        $u16 = virtualinvoke $u15.<android.view.View: boolean canScrollHorizontally(int)>($u17);

        if $u16 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public boolean canScrollHorizontally(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u7, $u-1, $u-1#5;
        androidx.viewpager.widget.PagerAdapter width;
        float $u4, $u5;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u7 := @parameter0: int;

        width = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if width != null goto label1;

        return 0;

     label1:
        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        $u-1#5 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        if $u7 >= 0 goto label2;

        $u4 = (float) $u-1;

        $u5 = this.<androidx.viewpager.widget.ViewPager: float mFirstOffset>;

        $u4 = $u4 * $u5;

        $u7 = (int) $u4;

        if $u-1#5 <= $u7 goto label3;

        return 1;

     label2:
        if $u7 <= 0 goto label3;

        $u4 = (float) $u-1;

        $u5 = this.<androidx.viewpager.widget.ViewPager: float mLastOffset>;

        $u4 = $u4 * $u5;

        $u7 = (int) $u4;

        if $u-1#5 >= $u7 goto label3;

        return 1;

     label3:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.ViewGroup$LayoutParams $u2;
        boolean $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u-1 = $u2 instanceof androidx.viewpager.widget.ViewPager$LayoutParams;

        if $u-1 == 0 goto label1;

        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($u2);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void clearOnPageChangeListeners()
    {
        androidx.viewpager.widget.ViewPager this;
        java.util.List $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        if $u0 == null goto label1;

        interfaceinvoke $u0.<java.util.List: void clear()>();

     label1:
        return;
    }

    public void computeScroll()
    {
        androidx.viewpager.widget.ViewPager this;
        android.widget.Scroller oldY;
        boolean $u-1;
        int $u-1#8, $u-1#10, $u-1#13, $u-1#16;

        this := @this: androidx.viewpager.widget.ViewPager;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted> = 1;

        oldY = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1 = virtualinvoke oldY.<android.widget.Scroller: boolean isFinished()>();

        if $u-1 != 0 goto label3;

        oldY = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1 = virtualinvoke oldY.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $u-1 == 0 goto label3;

        $u-1#8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u-1#10 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        oldY = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1#13 = virtualinvoke oldY.<android.widget.Scroller: int getCurrX()>();

        oldY = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1#16 = virtualinvoke oldY.<android.widget.Scroller: int getCurrY()>();

        if $u-1#8 != $u-1#13 goto label1;

        if $u-1#10 == $u-1#16 goto label2;

     label1:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>($u-1#13, $u-1#16);

        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)>($u-1#13);

        if $u-1 != 0 goto label2;

        oldY = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke oldY.<android.widget.Scroller: void abortAnimation()>();

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>(0, $u-1#16);

     label2:
        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

        return;

     label3:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>(1);

        return;
    }

    void dataSetChanged()
    {
        androidx.viewpager.widget.ViewPager this;
        java.lang.Object $u11;
        androidx.viewpager.widget.PagerAdapter adapterCount;
        int $u-1, $u-1#5, newCurrItem, $u-1#18, $u10, $u10#43;
        java.util.ArrayList needPopulate;
        boolean needPopulate#13, isUpdating;
        androidx.viewpager.widget.ViewPager$ItemInfo ii;
        java.util.Comparator ii#46;
        android.view.View $u-1#50;
        android.view.ViewGroup$LayoutParams $u-1#52;
        androidx.viewpager.widget.ViewPager$LayoutParams lp;

        this := @this: androidx.viewpager.widget.ViewPager;

        adapterCount = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1 = virtualinvoke adapterCount.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        this.<androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount> = $u-1;

        needPopulate = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#5 = virtualinvoke needPopulate.<java.util.ArrayList: int size()>();

        newCurrItem = this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit>;

        newCurrItem = newCurrItem * 2;

        newCurrItem = newCurrItem + 1;

        if $u-1#5 >= newCurrItem goto label01;

        needPopulate = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#5 = virtualinvoke needPopulate.<java.util.ArrayList: int size()>();

        if $u-1#5 >= $u-1 goto label01;

        needPopulate#13 = 1;

        goto label02;

     label01:
        needPopulate#13 = 0;

     label02:
        newCurrItem = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        isUpdating = 0;

        $u-1#5 = 0;

     label03:
        needPopulate = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#18 = virtualinvoke needPopulate.<java.util.ArrayList: int size()>();

        if $u-1#5 >= $u-1#18 goto label09;

        needPopulate = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u11 = virtualinvoke needPopulate.<java.util.ArrayList: java.lang.Object get(int)>($u-1#5);

        ii = (androidx.viewpager.widget.ViewPager$ItemInfo) $u11;

        adapterCount = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u11 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        $u-1#18 = virtualinvoke adapterCount.<androidx.viewpager.widget.PagerAdapter: int getItemPosition(java.lang.Object)>($u11);

        if $u-1#18 != -1 goto label04;

        goto label08;

     label04:
        if $u-1#18 != -2 goto label06;

        needPopulate = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke needPopulate.<java.util.ArrayList: java.lang.Object remove(int)>($u-1#5);

        $u-1#5 = $u-1#5 + -1;

        if isUpdating != 0 goto label05;

        adapterCount = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        virtualinvoke adapterCount.<androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)>(this);

        isUpdating = 1;

     label05:
        adapterCount = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#18 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u11 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke adapterCount.<androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(this, $u-1#18, $u11);

        needPopulate#13 = 1;

        $u-1#18 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u10 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u-1#18 != $u10 goto label08;

        newCurrItem = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u-1#18 = $u-1 + -1;

        newCurrItem = staticinvoke <java.lang.Math: int min(int,int)>(newCurrItem, $u-1#18);

        newCurrItem = staticinvoke <java.lang.Math: int max(int,int)>(0, newCurrItem);

        needPopulate#13 = 1;

        goto label08;

     label06:
        $u10 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u10 == $u-1#18 goto label08;

        $u10 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u10#43 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u10 != $u10#43 goto label07;

        newCurrItem = $u-1#18;

     label07:
        ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position> = $u-1#18;

        needPopulate#13 = 1;

     label08:
        $u-1#5 = $u-1#5 + 1;

        goto label03;

     label09:
        if isUpdating == 0 goto label10;

        adapterCount = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        virtualinvoke adapterCount.<androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(this);

     label10:
        needPopulate = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        ii#46 = <androidx.viewpager.widget.ViewPager: java.util.Comparator COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(needPopulate, ii#46);

        if needPopulate#13 == 0 goto label14;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        $u-1#5 = 0;

     label11:
        if $u-1#5 >= $u-1 goto label13;

        $u-1#50 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>($u-1#5);

        $u-1#52 = virtualinvoke $u-1#50.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#52;

        needPopulate#13 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if needPopulate#13 != 0 goto label12;

        lp.<androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor> = 0.0F;

     label12:
        $u-1#5 = $u-1#5 + 1;

        goto label11;

     label13:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>(newCurrItem, 0, 1);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void requestLayout()>();

     label14:
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.KeyEvent $u2;
        boolean $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: android.view.KeyEvent;

        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($u2);

        if $u-1 != 0 goto label2;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)>($u2);

        if $u-1 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.accessibility.AccessibilityEvent $u7;
        int $u5, $u-1, i, $u4;
        boolean $u-1#4;
        android.view.View $u-1#9;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#12;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u7 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $u-1 = virtualinvoke $u7.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $u-1 != 4096 goto label1;

        $u-1#4 = specialinvoke this.<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($u7);

        return $u-1#4;

     label1:
        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        i = 0;

     label2:
        if i >= $u-1 goto label4;

        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u5 = virtualinvoke $u-1#9.<android.view.View: int getVisibility()>();

        if $u5 != 0 goto label3;

        $u-1#12 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1#9);

        if $u-1#12 == null goto label3;

        $u4 = $u-1#12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u5 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u4 != $u5 goto label3;

        $u-1#4 = virtualinvoke $u-1#9.<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($u7);

        if $u-1#4 == 0 goto label3;

        return 1;

     label3:
        i = i + 1;

        goto label2;

     label4:
        return 0;
    }

    float distanceInfluenceForSnapDuration(float)
    {
        androidx.viewpager.widget.ViewPager this;
        double $u-1;
        float $u3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: float;

        $u3 = $u3 - 0.5F;

        $u3 = $u3 * 0.47123894F;

        $u-1 = (double) $u3;

        $u-1 = staticinvoke <java.lang.Math: double sin(double)>($u-1);

        $u3 = (float) $u-1;

        return $u3;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.viewpager.widget.ViewPager this;
        android.graphics.Canvas $u9;
        boolean needsInvalidate, $u-1#10;
        int $u-1, $u-1#14, $u-1#16, $u5, $u-1#26;
        androidx.viewpager.widget.PagerAdapter height;
        android.widget.EdgeEffect restoreCount;
        float $u5#29, $u6, $u7;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u9 := @parameter0: android.graphics.Canvas;

        specialinvoke this.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($u9);

        needsInvalidate = 0;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getOverScrollMode()>();

        if $u-1 == 0 goto label2;

        if $u-1 != 1 goto label1;

        height = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if height == null goto label1;

        $u-1 = virtualinvoke height.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        if $u-1 <= 1 goto label1;

        goto label2;

     label1:
        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke restoreCount.<android.widget.EdgeEffect: void finish()>();

        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        virtualinvoke restoreCount.<android.widget.EdgeEffect: void finish()>();

        goto label4;

     label2:
        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        $u-1#10 = virtualinvoke restoreCount.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1#10 != 0 goto label3;

        $u-1 = virtualinvoke $u9.<android.graphics.Canvas: int save()>();

        $u-1#14 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getHeight()>();

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingTop()>();

        $u-1#14 = $u-1#14 - $u-1#16;

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingBottom()>();

        $u-1#14 = $u-1#14 - $u-1#16;

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getWidth()>();

        virtualinvoke $u9.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $u5 = neg $u-1#14;

        $u-1#26 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingTop()>();

        $u5 = $u5 + $u-1#26;

        $u5#29 = (float) $u5;

        $u6 = this.<androidx.viewpager.widget.ViewPager: float mFirstOffset>;

        $u7 = (float) $u-1#16;

        $u6 = $u6 * $u7;

        virtualinvoke $u9.<android.graphics.Canvas: void translate(float,float)>($u5#29, $u6);

        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke restoreCount.<android.widget.EdgeEffect: void setSize(int,int)>($u-1#14, $u-1#16);

        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        needsInvalidate = virtualinvoke restoreCount.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($u9);

        virtualinvoke $u9.<android.graphics.Canvas: void restoreToCount(int)>($u-1);

     label3:
        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $u-1#10 = virtualinvoke restoreCount.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1#10 != 0 goto label4;

        $u-1 = virtualinvoke $u9.<android.graphics.Canvas: int save()>();

        $u-1#14 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getWidth()>();

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getHeight()>();

        $u5 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingTop()>();

        $u-1#16 = $u-1#16 - $u5;

        $u5 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingBottom()>();

        $u-1#16 = $u-1#16 - $u5;

        virtualinvoke $u9.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $u5 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingTop()>();

        $u5 = neg $u5;

        $u5#29 = (float) $u5;

        $u6 = this.<androidx.viewpager.widget.ViewPager: float mLastOffset>;

        $u6 = $u6 + 1.0F;

        $u6 = neg $u6;

        $u7 = (float) $u-1#14;

        $u6 = $u6 * $u7;

        virtualinvoke $u9.<android.graphics.Canvas: void translate(float,float)>($u5#29, $u6);

        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        virtualinvoke restoreCount.<android.widget.EdgeEffect: void setSize(int,int)>($u-1#16, $u-1#14);

        restoreCount = this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $u-1#10 = virtualinvoke restoreCount.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($u9);

        needsInvalidate = needsInvalidate | $u-1#10;

        virtualinvoke $u9.<android.graphics.Canvas: void restoreToCount(int)>($u-1);

     label4:
        if needsInvalidate == 0 goto label5;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label5:
        return;
    }

    protected void drawableStateChanged()
    {
        androidx.viewpager.widget.ViewPager this;
        android.graphics.drawable.Drawable d;
        boolean $u-1;
        int[] $u-1#3;

        this := @this: androidx.viewpager.widget.ViewPager;

        specialinvoke this.<android.view.ViewGroup: void drawableStateChanged()>();

        d = this.<androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if d == null goto label1;

        $u-1 = virtualinvoke d.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int[] getDrawableState()>();

        virtualinvoke d.<android.graphics.drawable.Drawable: boolean setState(int[])>($u-1#3);

     label1:
        return;
    }

    public void endFakeDrag()
    {
        androidx.viewpager.widget.ViewPager this;
        int currentPage, $u2, $u-1, $u-1#13;
        boolean velocityTracker;
        androidx.viewpager.widget.PagerAdapter velocityTracker#2;
        android.view.VelocityTracker velocityTracker#3;
        float $u2#6, totalDelta, nextPage;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#14;
        java.lang.IllegalStateException velocityTracker#29;

        this := @this: androidx.viewpager.widget.ViewPager;

        velocityTracker = this.<androidx.viewpager.widget.ViewPager: boolean mFakeDragging>;

        if velocityTracker == 0 goto label2;

        velocityTracker#2 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if velocityTracker#2 == null goto label1;

        velocityTracker#3 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $u2 = this.<androidx.viewpager.widget.ViewPager: int mMaximumVelocity>;

        $u2#6 = (float) $u2;

        virtualinvoke velocityTracker#3.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $u2#6);

        $u2 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        $u2#6 = virtualinvoke velocityTracker#3.<android.view.VelocityTracker: float getXVelocity(int)>($u2);

        $u2 = (int) $u2#6;

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 1;

        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        $u-1#13 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u-1#14 = specialinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        currentPage = $u-1#14.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u2#6 = (float) $u-1#13;

        totalDelta = (float) $u-1;

        $u2#6 = $u2#6 / totalDelta;

        totalDelta = $u-1#14.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        $u2#6 = $u2#6 - totalDelta;

        totalDelta = $u-1#14.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        $u2#6 = $u2#6 / totalDelta;

        totalDelta = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        nextPage = this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX>;

        totalDelta = totalDelta - nextPage;

        $u-1 = (int) totalDelta;

        currentPage = specialinvoke this.<androidx.viewpager.widget.ViewPager: int determineTargetPage(int,float,int,int)>(currentPage, $u2#6, $u2, $u-1);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>(currentPage, 1, 1, $u2);

     label1:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void endDrag()>();

        this.<androidx.viewpager.widget.ViewPager: boolean mFakeDragging> = 0;

        return;

     label2:
        velocityTracker#29 = new java.lang.IllegalStateException;

        specialinvoke velocityTracker#29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fake drag in progress. Call beginFakeDrag first.");

        throw velocityTracker#29;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.KeyEvent $u5;
        int $u-1;
        boolean $u-1#9;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u5 := @parameter0: android.view.KeyEvent;

        $u-1 = virtualinvoke $u5.<android.view.KeyEvent: int getAction()>();

        if $u-1 != 0 goto label7;

        $u-1 = virtualinvoke $u5.<android.view.KeyEvent: int getKeyCode()>();

        if $u-1 == 21 goto label5;

        if $u-1 == 22 goto label3;

        if $u-1 == 61 goto label1;

        return 0;

     label1:
        $u-1#9 = virtualinvoke $u5.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $u-1#9 == 0 goto label2;

        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)>(2);

        return $u-1#9;

     label2:
        $u-1#9 = virtualinvoke $u5.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $u-1#9 == 0 goto label7;

        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)>(1);

        return $u-1#9;

     label3:
        $u-1#9 = virtualinvoke $u5.<android.view.KeyEvent: boolean hasModifiers(int)>(2);

        if $u-1#9 == 0 goto label4;

        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageRight()>();

        return $u-1#9;

     label4:
        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)>(66);

        return $u-1#9;

     label5:
        $u-1#9 = virtualinvoke $u5.<android.view.KeyEvent: boolean hasModifiers(int)>(2);

        if $u-1#9 == 0 goto label6;

        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageLeft()>();

        return $u-1#9;

     label6:
        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)>(17);

        return $u-1#9;

     label7:
        return 0;
    }

    public void fakeDragBy(float)
    {
        androidx.viewpager.widget.ViewPager this;
        float $u20, oldScrollX#3, rightBound, firstItem;
        boolean oldScrollX;
        androidx.viewpager.widget.PagerAdapter oldScrollX#2;
        int $u-1, $u-1#22, $u-1#33;
        java.util.ArrayList firstItem#16;
        java.lang.Object $u-1#18;
        androidx.viewpager.widget.ViewPager$ItemInfo firstItem#20, lastItem;
        byte ev;
        long $u-1#49, $u9;
        android.view.MotionEvent $u-1#51;
        android.view.VelocityTracker $u9#53;
        java.lang.IllegalStateException oldScrollX#54;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u20 := @parameter0: float;

        oldScrollX = this.<androidx.viewpager.widget.ViewPager: boolean mFakeDragging>;

        if oldScrollX == 0 goto label6;

        oldScrollX#2 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if oldScrollX#2 != null goto label1;

        return;

     label1:
        oldScrollX#3 = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        oldScrollX#3 = oldScrollX#3 + $u20;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = oldScrollX#3;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        oldScrollX#3 = (float) $u-1;

        $u20 = oldScrollX#3 - $u20;

        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        oldScrollX#3 = (float) $u-1;

        rightBound = this.<androidx.viewpager.widget.ViewPager: float mFirstOffset>;

        oldScrollX#3 = oldScrollX#3 * rightBound;

        rightBound = (float) $u-1;

        firstItem = this.<androidx.viewpager.widget.ViewPager: float mLastOffset>;

        rightBound = rightBound * firstItem;

        firstItem#16 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#18 = virtualinvoke firstItem#16.<java.util.ArrayList: java.lang.Object get(int)>(0);

        firstItem#20 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#18;

        firstItem#16 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#22 = virtualinvoke firstItem#16.<java.util.ArrayList: int size()>();

        $u-1#22 = $u-1#22 + -1;

        $u-1#18 = virtualinvoke firstItem#16.<java.util.ArrayList: java.lang.Object get(int)>($u-1#22);

        lastItem = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#18;

        $u-1#22 = firstItem#20.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u-1#22 == 0 goto label2;

        oldScrollX#3 = firstItem#20.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        firstItem = (float) $u-1;

        oldScrollX#3 = oldScrollX#3 * firstItem;

     label2:
        $u-1#22 = lastItem.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        oldScrollX#2 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#33 = virtualinvoke oldScrollX#2.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        $u-1#33 = $u-1#33 + -1;

        if $u-1#22 == $u-1#33 goto label3;

        rightBound = lastItem.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        firstItem = (float) $u-1;

        rightBound = rightBound * firstItem;

     label3:
        ev = $u20 cmpg oldScrollX#3;

        if ev >= 0 goto label4;

        $u20 = oldScrollX#3;

        goto label5;

     label4:
        ev = $u20 cmpl rightBound;

        if ev <= 0 goto label5;

        $u20 = rightBound;

     label5:
        oldScrollX#3 = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        $u-1 = (int) $u20;

        rightBound = (float) $u-1;

        rightBound = $u20 - rightBound;

        oldScrollX#3 = oldScrollX#3 + rightBound;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = oldScrollX#3;

        $u-1 = (int) $u20;

        $u-1#22 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>($u-1, $u-1#22);

        $u-1 = (int) $u20;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)>($u-1);

        $u-1#49 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u9 = this.<androidx.viewpager.widget.ViewPager: long mFakeDragBeginTime>;

        $u20 = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        $u-1#51 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($u9, $u-1#49, 2, $u20, 0.0F, 0);

        $u9#53 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $u9#53.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u-1#51);

        virtualinvoke $u-1#51.<android.view.MotionEvent: void recycle()>();

        return;

     label6:
        oldScrollX#54 = new java.lang.IllegalStateException;

        specialinvoke oldScrollX#54.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fake drag in progress. Call beginFakeDrag first.");

        throw oldScrollX#54;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$LayoutParams $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = new androidx.viewpager.widget.ViewPager$LayoutParams;

        specialinvoke $u0.<androidx.viewpager.widget.ViewPager$LayoutParams: void <init>()>();

        return $u0;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.viewpager.widget.ViewPager this;
        android.util.AttributeSet $u3;
        androidx.viewpager.widget.ViewPager$LayoutParams $u0;
        android.content.Context $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: android.util.AttributeSet;

        $u0 = new androidx.viewpager.widget.ViewPager$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.viewpager.widget.ViewPager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($u-1, $u3);

        return $u0;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.ViewGroup$LayoutParams $u2;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u2 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        return $u2;
    }

    public androidx.viewpager.widget.PagerAdapter getAdapter()
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.PagerAdapter ret0;

        this := @this: androidx.viewpager.widget.ViewPager;

        ret0 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        return ret0;
    }

    protected int getChildDrawingOrder(int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u3, $u4, index;
        java.util.ArrayList result;
        java.lang.Object $u-1;
        android.view.View result#8;
        android.view.ViewGroup$LayoutParams $u-1#9;
        androidx.viewpager.widget.ViewPager$LayoutParams result#11;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        index = this.<androidx.viewpager.widget.ViewPager: int mDrawingOrder>;

        if index != 2 goto label1;

        $u3 = $u3 + -1;

        $u3 = $u3 - $u4;

        goto label2;

     label1:
        $u3 = $u4;

     label2:
        result = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        $u-1 = virtualinvoke result.<java.util.ArrayList: java.lang.Object get(int)>($u3);

        result#8 = (android.view.View) $u-1;

        $u-1#9 = virtualinvoke result#8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        result#11 = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#9;

        $u3 = result#11.<androidx.viewpager.widget.ViewPager$LayoutParams: int childIndex>;

        return $u3;
    }

    public int getCurrentItem()
    {
        androidx.viewpager.widget.ViewPager this;
        int ret0;

        this := @this: androidx.viewpager.widget.ViewPager;

        ret0 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        return ret0;
    }

    public int getOffscreenPageLimit()
    {
        androidx.viewpager.widget.ViewPager this;
        int ret0;

        this := @this: androidx.viewpager.widget.ViewPager;

        ret0 = this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit>;

        return ret0;
    }

    public int getPageMargin()
    {
        androidx.viewpager.widget.ViewPager this;
        int ret0;

        this := @this: androidx.viewpager.widget.ViewPager;

        ret0 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        return ret0;
    }

    androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.View $u3;
        android.view.ViewParent $u-1;
        boolean $u0;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#7;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: android.view.View;

     label1:
        $u-1 = virtualinvoke $u3.<android.view.View: android.view.ViewParent getParent()>();

        if $u-1 == this goto label4;

        if $u-1 == null goto label3;

        $u0 = $u-1 instanceof android.view.View;

        if $u0 != 0 goto label2;

        goto label3;

     label2:
        $u3 = (android.view.View) $u-1;

        goto label1;

     label3:
        return null;

     label4:
        $u-1#7 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u3);

        return $u-1#7;
    }

    androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.View $u5;
        java.lang.Object $u3;
        int i, $u-1;
        java.util.ArrayList ii;
        androidx.viewpager.widget.ViewPager$ItemInfo ii#8;
        androidx.viewpager.widget.PagerAdapter $u2;
        boolean $u-1#10;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u5 := @parameter0: android.view.View;

        i = 0;

     label1:
        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1 = virtualinvoke ii.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label3;

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u3 = virtualinvoke ii.<java.util.ArrayList: java.lang.Object get(int)>(i);

        ii#8 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u3;

        $u2 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u3 = ii#8.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        $u-1#10 = virtualinvoke $u2.<androidx.viewpager.widget.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>($u5, $u3);

        if $u-1#10 == 0 goto label2;

        return ii#8;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;
    }

    androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u4, $u2, i;
        java.util.ArrayList ii;
        java.lang.Object $u-1;
        androidx.viewpager.widget.ViewPager$ItemInfo ii#8;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: int;

        i = 0;

     label1:
        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u2 = virtualinvoke ii.<java.util.ArrayList: int size()>();

        if i >= $u2 goto label3;

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1 = virtualinvoke ii.<java.util.ArrayList: java.lang.Object get(int)>(i);

        ii#8 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1;

        $u2 = ii#8.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u2 != $u4 goto label2;

        return ii#8;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;
    }

    void initViewPager()
    {
        androidx.viewpager.widget.ViewPager this;
        android.content.Context $u-1;
        android.widget.Scroller configuration;
        android.view.animation.Interpolator density;
        android.view.ViewConfiguration $u-1#7;
        android.content.res.Resources $u-1#9;
        android.util.DisplayMetrics $u-1#11;
        float density#13, $u4;
        int $u-1#14;
        android.widget.EdgeEffect $u4#21;
        androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate $u4#32;
        androidx.viewpager.widget.ViewPager$4 $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setWillNotDraw(boolean)>(0);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setDescendantFocusability(int)>(262144);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setFocusable(boolean)>(1);

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.content.Context getContext()>();

        configuration = new android.widget.Scroller;

        density = <androidx.viewpager.widget.ViewPager: android.view.animation.Interpolator sInterpolator>;

        specialinvoke configuration.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($u-1, density);

        this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller> = configuration;

        $u-1#7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u-1);

        $u-1#9 = virtualinvoke $u-1.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#11 = virtualinvoke $u-1#9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        density#13 = $u-1#11.<android.util.DisplayMetrics: float density>;

        $u-1#14 = virtualinvoke $u-1#7.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        this.<androidx.viewpager.widget.ViewPager: int mTouchSlop> = $u-1#14;

        $u4 = 400.0F * density#13;

        $u-1#14 = (int) $u4;

        this.<androidx.viewpager.widget.ViewPager: int mMinimumVelocity> = $u-1#14;

        $u-1#14 = virtualinvoke $u-1#7.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        this.<androidx.viewpager.widget.ViewPager: int mMaximumVelocity> = $u-1#14;

        $u4#21 = new android.widget.EdgeEffect;

        specialinvoke $u4#21.<android.widget.EdgeEffect: void <init>(android.content.Context)>($u-1);

        this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge> = $u4#21;

        $u4#21 = new android.widget.EdgeEffect;

        specialinvoke $u4#21.<android.widget.EdgeEffect: void <init>(android.content.Context)>($u-1);

        this.<androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge> = $u4#21;

        $u4 = 25.0F * density#13;

        $u-1#14 = (int) $u4;

        this.<androidx.viewpager.widget.ViewPager: int mFlingDistance> = $u-1#14;

        $u4 = 2.0F * density#13;

        $u-1#14 = (int) $u4;

        this.<androidx.viewpager.widget.ViewPager: int mCloseEnough> = $u-1#14;

        density#13 = 16.0F * density#13;

        $u-1#14 = (int) density#13;

        this.<androidx.viewpager.widget.ViewPager: int mDefaultGutterSize> = $u-1#14;

        $u4#32 = new androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate;

        specialinvoke $u4#32.<androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: void <init>(androidx.viewpager.widget.ViewPager)>(this);

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(this, $u4#32);

        $u-1#14 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(this);

        if $u-1#14 != 0 goto label1;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(this, 1);

     label1:
        $u0 = new androidx.viewpager.widget.ViewPager$4;

        specialinvoke $u0.<androidx.viewpager.widget.ViewPager$4: void <init>(androidx.viewpager.widget.ViewPager)>(this);

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(this, $u0);

        return;
    }

    public boolean isFakeDragging()
    {
        androidx.viewpager.widget.ViewPager this;
        boolean ret0;

        this := @this: androidx.viewpager.widget.ViewPager;

        ret0 = this.<androidx.viewpager.widget.ViewPager: boolean mFakeDragging>;

        return ret0;
    }

    protected void onAttachedToWindow()
    {
        androidx.viewpager.widget.ViewPager this;

        this := @this: androidx.viewpager.widget.ViewPager;

        specialinvoke this.<android.view.ViewGroup: void onAttachedToWindow()>();

        this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u-1;
        java.lang.Runnable $u0;
        android.widget.Scroller $u0#2;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = this.<androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean removeCallbacks(java.lang.Runnable)>($u0);

        $u0#2 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        if $u0#2 == null goto label1;

        $u-1 = virtualinvoke $u0#2.<android.widget.Scroller: boolean isFinished()>();

        if $u-1 != 0 goto label1;

        $u0#2 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $u0#2.<android.widget.Scroller: void abortAnimation()>();

     label1:
        specialinvoke this.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        androidx.viewpager.widget.ViewPager this;
        android.graphics.Canvas $u18;
        int firstPos, $u14, scrollX, $u-1, marginOffset, $u-1#22, pos, $u-1#59, $u15, marginOffset#67;
        android.graphics.drawable.Drawable scrollX#2;
        java.util.ArrayList scrollX#3;
        androidx.viewpager.widget.PagerAdapter scrollX#6;
        float marginOffset#11, itemIndex, offset1, $u13, $u13#50;
        java.lang.Object $u-1#17;
        androidx.viewpager.widget.ViewPager$ItemInfo ii, lastPos;
        byte offset1#57;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u18 := @parameter0: android.graphics.Canvas;

        specialinvoke this.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($u18);

        scrollX = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        if scrollX <= 0 goto label8;

        scrollX#2 = this.<androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if scrollX#2 == null goto label8;

        scrollX#3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        scrollX = virtualinvoke scrollX#3.<java.util.ArrayList: int size()>();

        if scrollX <= 0 goto label8;

        scrollX#6 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if scrollX#6 == null goto label8;

        scrollX = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getWidth()>();

        marginOffset = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        marginOffset#11 = (float) marginOffset;

        itemIndex = (float) $u-1;

        marginOffset#11 = marginOffset#11 / itemIndex;

        marginOffset = 0;

        scrollX#3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#17 = virtualinvoke scrollX#3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        ii = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#17;

        itemIndex = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        scrollX#3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#22 = virtualinvoke scrollX#3.<java.util.ArrayList: int size()>();

        firstPos = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        scrollX#3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        pos = $u-1#22 + -1;

        $u-1#17 = virtualinvoke scrollX#3.<java.util.ArrayList: java.lang.Object get(int)>(pos);

        lastPos = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#17;

        pos = lastPos.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

     label1:
        if firstPos >= pos goto label8;

     label2:
        $u14 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if firstPos <= $u14 goto label3;

        if marginOffset >= $u-1#22 goto label3;

        scrollX#3 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        marginOffset = marginOffset + 1;

        $u-1#17 = virtualinvoke scrollX#3.<java.util.ArrayList: java.lang.Object get(int)>(marginOffset);

        ii = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#17;

        goto label2;

     label3:
        $u14 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if firstPos != $u14 goto label4;

        itemIndex = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        offset1 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        itemIndex = itemIndex + offset1;

        offset1 = (float) $u-1;

        offset1 = itemIndex * offset1;

        itemIndex = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        $u13 = ii.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        itemIndex = itemIndex + $u13;

        itemIndex = itemIndex + marginOffset#11;

        goto label5;

     label4:
        scrollX#6 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        offset1 = virtualinvoke scrollX#6.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>(firstPos);

        $u13 = itemIndex + offset1;

        $u13#50 = (float) $u-1;

        offset1 = offset1 + marginOffset#11;

        itemIndex = itemIndex + offset1;

        offset1 = $u13 * $u13#50;

     label5:
        $u14 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        $u13 = (float) $u14;

        $u13 = $u13 + offset1;

        $u13#50 = (float) scrollX;

        offset1#57 = $u13 cmpl $u13#50;

        if offset1#57 <= 0 goto label6;

        scrollX#2 = this.<androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        $u-1#59 = staticinvoke <java.lang.Math: int round(float)>(offset1);

        $u14 = this.<androidx.viewpager.widget.ViewPager: int mTopPageBounds>;

        $u15 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        $u13 = (float) $u15;

        $u13 = $u13 + offset1;

        $u15 = staticinvoke <java.lang.Math: int round(float)>($u13);

        marginOffset#67 = this.<androidx.viewpager.widget.ViewPager: int mBottomPageBounds>;

        virtualinvoke scrollX#2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($u-1#59, $u14, $u15, marginOffset#67);

        scrollX#2 = this.<androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        virtualinvoke scrollX#2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($u18);

        goto label6;

     label6:
        $u14 = scrollX + $u-1;

        $u13 = (float) $u14;

        offset1#57 = offset1 cmpl $u13;

        if offset1#57 <= 0 goto label7;

        return;

     label7:
        firstPos = firstPos + 1;

        goto label1;

     label8:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.MotionEvent $u20;
        int $u3, $u4, $u1;
        float dx, $u-1, $u0#12, $u-1#13, $u-1#14, $u-1#18;
        boolean $u0;
        byte $u0#19;
        android.widget.Scroller $u1#59;
        android.view.VelocityTracker $u0#74;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u20 := @parameter0: android.view.MotionEvent;

        $u3 = virtualinvoke $u20.<android.view.MotionEvent: int getAction()>();

        $u3 = $u3 & 255;

        if $u3 == 3 goto label17;

        if $u3 != 1 goto label01;

        goto label17;

     label01:
        if $u3 == 0 goto label03;

        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if $u0 == 0 goto label02;

        return 1;

     label02:
        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag>;

        if $u0 == 0 goto label03;

        return 0;

     label03:
        if $u3 == 0 goto label13;

        if $u3 == 2 goto label05;

        if $u3 == 6 goto label04;

        goto label15;

     label04:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>($u20);

        goto label15;

     label05:
        $u3 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        if $u3 != -1 goto label06;

        goto label15;

     label06:
        $u3 = virtualinvoke $u20.<android.view.MotionEvent: int findPointerIndex(int)>($u3);

        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getX(int)>($u3);

        $u0#12 = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        dx = $u-1 - $u0#12;

        $u-1#13 = staticinvoke <java.lang.Math: float abs(float)>(dx);

        $u-1#14 = virtualinvoke $u20.<android.view.MotionEvent: float getY(int)>($u3);

        $u0#12 = this.<androidx.viewpager.widget.ViewPager: float mInitialMotionY>;

        $u0#12 = $u-1#14 - $u0#12;

        $u-1#18 = staticinvoke <java.lang.Math: float abs(float)>($u0#12);

        $u0#19 = dx cmpl 0.0F;

        if $u0#19 == 0 goto label07;

        $u0#12 = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        $u0 = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean isGutterDrag(float,float)>($u0#12, dx);

        if $u0 != 0 goto label07;

        $u3 = (int) dx;

        $u4 = (int) $u-1;

        $u1 = (int) $u-1#14;

        $u0#12 = $u-1#14;

        $u0 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>(this, 0, $u3, $u4, $u1);

        if $u0 == 0 goto label08;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionY> = $u-1#14;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag> = 1;

        return 0;

     label07:
        $u0#12 = $u-1#14;

     label08:
        $u3 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        $u-1#14 = (float) $u3;

        $u0#19 = $u-1#13 cmpl $u-1#14;

        if $u0#19 <= 0 goto label11;

        $u-1#13 = 0.5F * $u-1#13;

        $u0#19 = $u-1#13 cmpl $u-1#18;

        if $u0#19 <= 0 goto label11;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollState(int)>(1);

        $u0#19 = dx cmpl 0.0F;

        if $u0#19 <= 0 goto label09;

        dx = this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX>;

        $u3 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        $u-1#13 = (float) $u3;

        dx = dx + $u-1#13;

        goto label10;

     label09:
        dx = this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX>;

        $u3 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        $u-1#13 = (float) $u3;

        dx = dx - $u-1#13;

     label10:
        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = dx;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionY> = $u0#12;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        goto label12;

     label11:
        $u3 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        $u0#12 = (float) $u3;

        $u0#19 = $u-1#18 cmpl $u0#12;

        if $u0#19 <= 0 goto label12;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag> = 1;

     label12:
        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if $u0 == 0 goto label15;

        $u0 = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean performDrag(float)>($u-1);

        if $u0 == 0 goto label15;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

        goto label15;

     label13:
        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getX()>();

        this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX> = $u-1;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1;

        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getY()>();

        this.<androidx.viewpager.widget.ViewPager: float mInitialMotionY> = $u-1;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionY> = $u-1;

        $u3 = virtualinvoke $u20.<android.view.MotionEvent: int getPointerId(int)>(0);

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = $u3;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag> = 0;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted> = 1;

        $u1#59 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $u1#59.<android.widget.Scroller: boolean computeScrollOffset()>();

        $u3 = this.<androidx.viewpager.widget.ViewPager: int mScrollState>;

        if $u3 != 2 goto label14;

        $u1#59 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u3 = virtualinvoke $u1#59.<android.widget.Scroller: int getFinalX()>();

        $u1#59 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u4 = virtualinvoke $u1#59.<android.widget.Scroller: int getCurrX()>();

        $u3 = $u3 - $u4;

        $u3 = staticinvoke <java.lang.Math: int abs(int)>($u3);

        $u4 = this.<androidx.viewpager.widget.ViewPager: int mCloseEnough>;

        if $u3 <= $u4 goto label14;

        $u1#59 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $u1#59.<android.widget.Scroller: void abortAnimation()>();

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

        this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollState(int)>(1);

        goto label15;

     label14:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>(0);

        this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged> = 0;

     label15:
        $u0#74 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $u0#74 != null goto label16;

        $u0#74 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = $u0#74;

     label16:
        $u0#74 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $u0#74.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u20);

        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        return $u0;

     label17:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean resetTouch()>();

        return 0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u24;
        int $u25, $u26, $u27, $u28, $u-1, count, width, paddingLeft, paddingRight, $u-1#12, i, $u-1#18, childLeft, $u-1#37, $u-1#69;
        android.view.View $u-1#16;
        android.view.ViewGroup$LayoutParams $u-1#20;
        androidx.viewpager.widget.ViewPager$LayoutParams lp;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#86;
        float lp#89, count#92;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u24 := @parameter0: boolean;

        $u25 := @parameter1: int;

        $u26 := @parameter2: int;

        $u27 := @parameter3: int;

        $u28 := @parameter4: int;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        count = $u-1;

        width = $u27 - $u25;

        $u25 = $u28 - $u26;

        paddingLeft = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u26 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingTop()>();

        paddingRight = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u28 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingBottom()>();

        $u-1#12 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u27 = 0;

        i = 0;

     label01:
        if i >= $u-1 goto label11;

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u-1#18 = virtualinvoke $u-1#16.<android.view.View: int getVisibility()>();

        if $u-1#18 == 8 goto label10;

        $u-1#20 = virtualinvoke $u-1#16.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#20;

        $u24 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $u24 == 0 goto label10;

        $u-1#18 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int gravity>;

        $u-1#18 = $u-1#18 & 7;

        childLeft = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int gravity>;

        childLeft = childLeft & 112;

        if $u-1#18 == 1 goto label04;

        if $u-1#18 == 3 goto label03;

        if $u-1#18 == 5 goto label02;

        $u-1#18 = paddingLeft;

        goto label05;

     label02:
        $u-1#18 = width - paddingRight;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredWidth()>();

        $u-1#18 = $u-1#18 - $u-1#37;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredWidth()>();

        paddingRight = paddingRight + $u-1#37;

        goto label05;

     label03:
        $u-1#18 = paddingLeft;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredWidth()>();

        paddingLeft = paddingLeft + $u-1#37;

        goto label05;

     label04:
        $u-1#18 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredWidth()>();

        $u-1#18 = width - $u-1#18;

        $u-1#18 = $u-1#18 / 2;

        $u-1#18 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#18, paddingLeft);

     label05:
        if childLeft == 16 goto label08;

        if childLeft == 48 goto label07;

        if childLeft == 80 goto label06;

        childLeft = $u26;

        goto label09;

     label06:
        childLeft = $u25 - $u28;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredHeight()>();

        childLeft = childLeft - $u-1#37;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredHeight()>();

        $u28 = $u28 + $u-1#37;

        goto label09;

     label07:
        childLeft = $u26;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredHeight()>();

        $u26 = $u26 + $u-1#37;

        goto label09;

     label08:
        childLeft = virtualinvoke $u-1#16.<android.view.View: int getMeasuredHeight()>();

        childLeft = $u25 - childLeft;

        childLeft = childLeft / 2;

        childLeft = staticinvoke <java.lang.Math: int max(int,int)>(childLeft, $u26);

     label09:
        $u-1#18 = $u-1#18 + $u-1#12;

        $u-1#37 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredWidth()>();

        $u-1#37 = $u-1#37 + $u-1#18;

        $u-1#69 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredHeight()>();

        $u-1#69 = childLeft + $u-1#69;

        virtualinvoke $u-1#16.<android.view.View: void layout(int,int,int,int)>($u-1#18, childLeft, $u-1#37, $u-1#69);

        $u27 = $u27 + 1;

        goto label10;

     label10:
        i = i + 1;

        goto label01;

     label11:
        $u-1 = width - paddingLeft;

        $u-1 = $u-1 - paddingRight;

        width = 0;

     label12:
        if width >= count goto label19;

        $u-1#16 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(width);

        paddingRight = virtualinvoke $u-1#16.<android.view.View: int getVisibility()>();

        if paddingRight == 8 goto label17;

        $u-1#20 = virtualinvoke $u-1#16.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#20;

        $u24 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $u24 != 0 goto label16;

        $u-1#86 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1#16);

        if $u-1#86 == null goto label15;

        lp#89 = (float) $u-1;

        count#92 = $u-1#86.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        lp#89 = lp#89 * count#92;

        paddingRight = (int) lp#89;

        paddingRight = paddingLeft + paddingRight;

        $u-1#12 = $u26;

        $u24 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean needsMeasure>;

        if $u24 == 0 goto label13;

        lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean needsMeasure> = 0;

        lp#89 = (float) $u-1;

        count#92 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor>;

        lp#89 = lp#89 * count#92;

        i = (int) lp#89;

        $u-1#18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i, 1073741824);

        childLeft = $u25 - $u26;

        i = paddingLeft;

        paddingLeft = childLeft - $u28;

        paddingLeft = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(paddingLeft, 1073741824);

        virtualinvoke $u-1#16.<android.view.View: void measure(int,int)>($u-1#18, paddingLeft);

        goto label14;

     label13:
        i = paddingLeft;

     label14:
        paddingLeft = virtualinvoke $u-1#16.<android.view.View: int getMeasuredWidth()>();

        paddingLeft = paddingLeft + paddingRight;

        $u-1#18 = virtualinvoke $u-1#16.<android.view.View: int getMeasuredHeight()>();

        $u-1#18 = $u-1#18 + $u-1#12;

        virtualinvoke $u-1#16.<android.view.View: void layout(int,int,int,int)>(paddingRight, $u-1#12, paddingLeft, $u-1#18);

        goto label18;

     label15:
        i = paddingLeft;

        goto label18;

     label16:
        i = paddingLeft;

        goto label18;

     label17:
        i = paddingLeft;

     label18:
        width = width + 1;

        paddingLeft = i;

        goto label12;

     label19:
        this.<androidx.viewpager.widget.ViewPager: int mTopPageBounds> = $u26;

        $u25 = $u25 - $u28;

        this.<androidx.viewpager.widget.ViewPager: int mBottomPageBounds> = $u25;

        this.<androidx.viewpager.widget.ViewPager: int mDecorChildCount> = $u27;

        $u24 = this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout>;

        if $u24 == 0 goto label20;

        $u25 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>($u25, 0, 0, 0);

        goto label20;

     label20:
        this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u21, $u22, childWidthSize, i, $u-1#33, hgrav#40, vgrav, heightMode, measuredWidth;
        android.view.View $u-1;
        android.view.ViewGroup$LayoutParams $u-1#35;
        androidx.viewpager.widget.ViewPager$LayoutParams lp;
        boolean hgrav, consumeHorizontal;
        float size, i#101;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u21 := @parameter0: int;

        $u22 := @parameter1: int;

        $u21 = staticinvoke <androidx.viewpager.widget.ViewPager: int getDefaultSize(int,int)>(0, $u21);

        $u22 = staticinvoke <androidx.viewpager.widget.ViewPager: int getDefaultSize(int,int)>(0, $u22);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setMeasuredDimension(int,int)>($u21, $u22);

        $u21 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getMeasuredWidth()>();

        $u22 = $u21 / 10;

        childWidthSize = this.<androidx.viewpager.widget.ViewPager: int mDefaultGutterSize>;

        $u22 = staticinvoke <java.lang.Math: int min(int,int)>($u22, childWidthSize);

        this.<androidx.viewpager.widget.ViewPager: int mGutterSize> = $u22;

        $u22 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u21 = $u21 - $u22;

        $u22 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u21 = $u21 - $u22;

        $u22 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getMeasuredHeight()>();

        childWidthSize = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingTop()>();

        $u22 = $u22 - childWidthSize;

        childWidthSize = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingBottom()>();

        $u22 = $u22 - childWidthSize;

        childWidthSize = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        i = 0;

     label01:
        if i >= childWidthSize goto label18;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u-1#33 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u-1#33 == 8 goto label17;

        $u-1#35 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#35;

        if lp == null goto label16;

        hgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if hgrav == 0 goto label16;

        $u-1#33 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int gravity>;

        hgrav#40 = $u-1#33 & 7;

        $u-1#33 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int gravity>;

        vgrav = $u-1#33 & 112;

        $u-1#33 = -2147483648;

        heightMode = -2147483648;

        if vgrav == 48 goto label03;

        if vgrav != 80 goto label02;

        goto label03;

     label02:
        hgrav = 0;

        goto label04;

     label03:
        hgrav = 1;

     label04:
        if hgrav#40 == 3 goto label06;

        if hgrav#40 != 5 goto label05;

        goto label06;

     label05:
        consumeHorizontal = 0;

        goto label07;

     label06:
        consumeHorizontal = 1;

     label07:
        if hgrav == 0 goto label08;

        $u-1#33 = 1073741824;

        goto label09;

     label08:
        if consumeHorizontal == 0 goto label09;

        heightMode = 1073741824;

     label09:
        hgrav#40 = $u22;

        vgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int width>;

        if vgrav == -2 goto label11;

        $u-1#33 = 1073741824;

        vgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int width>;

        if vgrav == -1 goto label10;

        vgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int width>;

        goto label12;

     label10:
        vgrav = $u21;

        goto label12;

     label11:
        vgrav = $u21;

     label12:
        measuredWidth = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int height>;

        if measuredWidth == -2 goto label14;

        heightMode = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int height>;

        if heightMode == -1 goto label13;

        hgrav#40 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int height>;

        heightMode = 1073741824;

        goto label14;

     label13:
        heightMode = 1073741824;

        goto label14;

     label14:
        $u-1#33 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(vgrav, $u-1#33);

        heightMode = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(hgrav#40, heightMode);

        virtualinvoke $u-1.<android.view.View: void measure(int,int)>($u-1#33, heightMode);

        if hgrav == 0 goto label15;

        $u-1#33 = virtualinvoke $u-1.<android.view.View: int getMeasuredHeight()>();

        $u22 = $u22 - $u-1#33;

        goto label17;

     label15:
        if consumeHorizontal == 0 goto label17;

        $u-1#33 = virtualinvoke $u-1.<android.view.View: int getMeasuredWidth()>();

        $u21 = $u21 - $u-1#33;

        goto label17;

     label16:
        goto label17;

     label17:
        i = i + 1;

        goto label01;

     label18:
        childWidthSize = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u21, 1073741824);

        this.<androidx.viewpager.widget.ViewPager: int mChildWidthMeasureSpec> = childWidthSize;

        $u22 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u22, 1073741824);

        this.<androidx.viewpager.widget.ViewPager: int mChildHeightMeasureSpec> = $u22;

        this.<androidx.viewpager.widget.ViewPager: boolean mInLayout> = 1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

        this.<androidx.viewpager.widget.ViewPager: boolean mInLayout> = 0;

        $u22 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        childWidthSize = 0;

     label19:
        if childWidthSize >= $u22 goto label22;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(childWidthSize);

        i = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if i == 8 goto label21;

        $u-1#35 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#35;

        if lp == null goto label20;

        hgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if hgrav != 0 goto label21;

     label20:
        size = (float) $u21;

        i#101 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor>;

        size = size * i#101;

        i = (int) size;

        i = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i, 1073741824);

        $u-1#33 = this.<androidx.viewpager.widget.ViewPager: int mChildHeightMeasureSpec>;

        virtualinvoke $u-1.<android.view.View: void measure(int,int)>(i, $u-1#33);

     label21:
        childWidthSize = childWidthSize + 1;

        goto label19;

     label22:
        return;
    }

    protected void onPageScrolled(int, float, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u15, $u17, scrollX, $u-1, $u-1#6, $u-1#8, $u-1#10, i, hgrav#19, $u-1#26;
        float $u16, child;
        android.view.View $u-1#13;
        android.view.ViewGroup$LayoutParams $u-1#15;
        androidx.viewpager.widget.ViewPager$LayoutParams lp;
        boolean hgrav;
        androidx.viewpager.widget.ViewPager$PageTransformer scrollX#40;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u15 := @parameter0: int;

        $u16 := @parameter1: float;

        $u17 := @parameter2: int;

        scrollX = this.<androidx.viewpager.widget.ViewPager: int mDecorChildCount>;

        if scrollX <= 0 goto label08;

        scrollX = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        $u-1#6 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        $u-1#8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getWidth()>();

        $u-1#10 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        i = 0;

     label01:
        if i >= $u-1#10 goto label08;

        $u-1#13 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(i);

        $u-1#15 = virtualinvoke $u-1#13.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#15;

        hgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if hgrav != 0 goto label02;

        goto label07;

     label02:
        hgrav#19 = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: int gravity>;

        hgrav#19 = hgrav#19 & 7;

        if hgrav#19 == 1 goto label05;

        if hgrav#19 == 3 goto label04;

        if hgrav#19 == 5 goto label03;

        hgrav#19 = $u-1;

        goto label06;

     label03:
        hgrav#19 = $u-1#8 - $u-1#6;

        $u-1#26 = virtualinvoke $u-1#13.<android.view.View: int getMeasuredWidth()>();

        hgrav#19 = hgrav#19 - $u-1#26;

        $u-1#26 = virtualinvoke $u-1#13.<android.view.View: int getMeasuredWidth()>();

        $u-1#6 = $u-1#6 + $u-1#26;

        goto label06;

     label04:
        hgrav#19 = $u-1;

        $u-1#26 = virtualinvoke $u-1#13.<android.view.View: int getWidth()>();

        $u-1 = $u-1 + $u-1#26;

        goto label06;

     label05:
        hgrav#19 = virtualinvoke $u-1#13.<android.view.View: int getMeasuredWidth()>();

        hgrav#19 = $u-1#8 - hgrav#19;

        hgrav#19 = hgrav#19 / 2;

        hgrav#19 = staticinvoke <java.lang.Math: int max(int,int)>(hgrav#19, $u-1);

     label06:
        hgrav#19 = hgrav#19 + scrollX;

        $u-1#26 = virtualinvoke $u-1#13.<android.view.View: int getLeft()>();

        hgrav#19 = hgrav#19 - $u-1#26;

        if hgrav#19 == 0 goto label07;

        virtualinvoke $u-1#13.<android.view.View: void offsetLeftAndRight(int)>(hgrav#19);

     label07:
        i = i + 1;

        goto label01;

     label08:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void dispatchOnPageScrolled(int,float,int)>($u15, $u16, $u17);

        scrollX#40 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer>;

        if scrollX#40 == null goto label12;

        $u15 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u17 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        scrollX = 0;

     label09:
        if scrollX >= $u17 goto label12;

        $u-1#13 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(scrollX);

        $u-1#15 = virtualinvoke $u-1#13.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#15;

        hgrav = lp.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if hgrav == 0 goto label10;

        goto label11;

     label10:
        $u-1 = virtualinvoke $u-1#13.<android.view.View: int getLeft()>();

        $u-1 = $u-1 - $u15;

        $u16 = (float) $u-1;

        $u-1 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        child = (float) $u-1;

        $u16 = $u16 / child;

        scrollX#40 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer>;

        interfaceinvoke scrollX#40.<androidx.viewpager.widget.ViewPager$PageTransformer: void transformPage(android.view.View,float)>($u-1#13, $u16);

     label11:
        scrollX = scrollX + 1;

        goto label09;

     label12:
        this.<androidx.viewpager.widget.ViewPager: boolean mCalledSuper> = 1;

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u10, $u8, $u-1, index, $u7;
        android.graphics.Rect $u11;
        byte increment;
        android.view.View $u-1#7;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#10;
        boolean $u-1#13;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u10 := @parameter0: int;

        $u11 := @parameter1: android.graphics.Rect;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        index = $u10 & 2;

        if index == 0 goto label1;

        index = 0;

        increment = 1;

        goto label2;

     label1:
        index = $u-1 + -1;

        increment = -1;

        $u-1 = -1;

     label2:
        if index == $u-1 goto label4;

        $u-1#7 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(index);

        $u8 = virtualinvoke $u-1#7.<android.view.View: int getVisibility()>();

        if $u8 != 0 goto label3;

        $u-1#10 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1#7);

        if $u-1#10 == null goto label3;

        $u7 = $u-1#10.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u8 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u7 != $u8 goto label3;

        $u-1#13 = virtualinvoke $u-1#7.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($u10, $u11);

        if $u-1#13 == 0 goto label3;

        return 1;

     label3:
        index = index + increment;

        goto label2;

     label4:
        return 0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.viewpager.widget.ViewPager this;
        android.os.Parcelable $u5;
        boolean ss;
        androidx.viewpager.widget.ViewPager$SavedState ss#3;
        androidx.viewpager.widget.PagerAdapter $u1;
        java.lang.ClassLoader $u3;
        int $u1#8;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u5 := @parameter0: android.os.Parcelable;

        ss = $u5 instanceof androidx.viewpager.widget.ViewPager$SavedState;

        if ss != 0 goto label1;

        specialinvoke this.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($u5);

        return;

     label1:
        ss#3 = (androidx.viewpager.widget.ViewPager$SavedState) $u5;

        $u5 = virtualinvoke ss#3.<androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke this.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($u5);

        $u1 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if $u1 == null goto label2;

        $u5 = ss#3.<androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable adapterState>;

        $u3 = ss#3.<androidx.viewpager.widget.ViewPager$SavedState: java.lang.ClassLoader loader>;

        virtualinvoke $u1.<androidx.viewpager.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($u5, $u3);

        $u1#8 = ss#3.<androidx.viewpager.widget.ViewPager$SavedState: int position>;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($u1#8, 0, 1);

        return;

     label2:
        $u1#8 = ss#3.<androidx.viewpager.widget.ViewPager$SavedState: int position>;

        this.<androidx.viewpager.widget.ViewPager: int mRestoredCurItem> = $u1#8;

        $u5 = ss#3.<androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable adapterState>;

        this.<androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = $u5;

        $u3 = ss#3.<androidx.viewpager.widget.ViewPager$SavedState: java.lang.ClassLoader loader>;

        this.<androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = $u3;

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$SavedState ss;
        android.os.Parcelable $u-1;
        int $u2;
        androidx.viewpager.widget.PagerAdapter $u2#3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u-1 = specialinvoke this.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        ss = new androidx.viewpager.widget.ViewPager$SavedState;

        specialinvoke ss.<androidx.viewpager.widget.ViewPager$SavedState: void <init>(android.os.Parcelable)>($u-1);

        $u2 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        ss.<androidx.viewpager.widget.ViewPager$SavedState: int position> = $u2;

        $u2#3 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if $u2#3 == null goto label1;

        $u-1 = virtualinvoke $u2#3.<androidx.viewpager.widget.PagerAdapter: android.os.Parcelable saveState()>();

        ss.<androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable adapterState> = $u-1;

     label1:
        return ss;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u2, $u3, $u4, $u5;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        specialinvoke this.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($u2, $u3, $u4, $u5);

        if $u2 == $u4 goto label1;

        $u3 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)>($u2, $u4, $u3, $u3);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.MotionEvent $u18;
        boolean action, x;
        int $u-1, $u-1#94, $u-1#96, parent#100;
        androidx.viewpager.widget.PagerAdapter action#7;
        android.view.VelocityTracker action#10;
        float $u-1#26, $u-1#48, $u-1#52, yDiff, parent;
        byte parent#62;
        android.view.ViewParent $u-1#73;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1#98;
        android.widget.Scroller action#126;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u18 := @parameter0: android.view.MotionEvent;

        action = this.<androidx.viewpager.widget.ViewPager: boolean mFakeDragging>;

        if action == 0 goto label01;

        return 1;

     label01:
        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getAction()>();

        if $u-1 != 0 goto label02;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getEdgeFlags()>();

        if $u-1 == 0 goto label02;

        return 0;

     label02:
        action#7 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if action#7 == null goto label19;

        $u-1 = virtualinvoke action#7.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        if $u-1 != 0 goto label03;

        return 0;

     label03:
        action#10 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if action#10 != null goto label04;

        action#10 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = action#10;

     label04:
        action#10 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke action#10.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u18);

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getAction()>();

        action = 0;

        $u-1 = $u-1 & 255;

        if $u-1 == 0 goto label17;

        if $u-1 == 1 goto label15;

        if $u-1 == 2 goto label09;

        if $u-1 == 3 goto label07;

        if $u-1 == 5 goto label06;

        if $u-1 == 6 goto label05;

        goto label18;

     label05:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>($u18);

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int findPointerIndex(int)>($u-1);

        $u-1#26 = virtualinvoke $u18.<android.view.MotionEvent: float getX(int)>($u-1);

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1#26;

        goto label18;

     label06:
        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getActionIndex()>();

        $u-1#26 = virtualinvoke $u18.<android.view.MotionEvent: float getX(int)>($u-1);

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1#26;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getPointerId(int)>($u-1);

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = $u-1;

        goto label18;

     label07:
        x = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if x == 0 goto label08;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>($u-1, 1, 0, 0);

        action = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean resetTouch()>();

        goto label18;

     label08:
        goto label18;

     label09:
        x = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if x != 0 goto label13;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int findPointerIndex(int)>($u-1);

        if $u-1 != -1 goto label10;

        action = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean resetTouch()>();

        goto label18;

     label10:
        $u-1#48 = virtualinvoke $u18.<android.view.MotionEvent: float getX(int)>($u-1);

        $u-1#26 = this.<androidx.viewpager.widget.ViewPager: float mLastMotionX>;

        $u-1#26 = $u-1#48 - $u-1#26;

        $u-1#52 = staticinvoke <java.lang.Math: float abs(float)>($u-1#26);

        $u-1#26 = virtualinvoke $u18.<android.view.MotionEvent: float getY(int)>($u-1);

        yDiff = this.<androidx.viewpager.widget.ViewPager: float mLastMotionY>;

        yDiff = $u-1#26 - yDiff;

        yDiff = staticinvoke <java.lang.Math: float abs(float)>(yDiff);

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        parent = (float) $u-1;

        parent#62 = $u-1#52 cmpl parent;

        if parent#62 <= 0 goto label13;

        parent#62 = $u-1#52 cmpl yDiff;

        if parent#62 <= 0 goto label13;

        this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        $u-1#52 = this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX>;

        $u-1#48 = $u-1#48 - $u-1#52;

        parent#62 = $u-1#48 cmpl 0.0F;

        if parent#62 <= 0 goto label11;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        $u-1#48 = (float) $u-1;

        $u-1#48 = $u-1#52 + $u-1#48;

        goto label12;

     label11:
        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mTouchSlop>;

        $u-1#48 = (float) $u-1;

        $u-1#48 = $u-1#52 - $u-1#48;

     label12:
        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1#48;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionY> = $u-1#26;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollState(int)>(1);

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        $u-1#73 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.ViewParent getParent()>();

        if $u-1#73 == null goto label13;

        interfaceinvoke $u-1#73.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label13:
        x = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if x == 0 goto label14;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int findPointerIndex(int)>($u-1);

        $u-1#26 = virtualinvoke $u18.<android.view.MotionEvent: float getX(int)>($u-1);

        action = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean performDrag(float)>($u-1#26);

        goto label18;

     label14:
        goto label18;

     label15:
        x = this.<androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged>;

        if x == 0 goto label16;

        action#10 = this.<androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mMaximumVelocity>;

        $u-1#26 = (float) $u-1;

        virtualinvoke action#10.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $u-1#26);

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        $u-1#26 = virtualinvoke action#10.<android.view.VelocityTracker: float getXVelocity(int)>($u-1);

        $u-1 = (int) $u-1#26;

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 1;

        $u-1#94 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        $u-1#96 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

        $u-1#98 = specialinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        parent#100 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        $u-1#26 = (float) parent#100;

        $u-1#48 = (float) $u-1#94;

        $u-1#26 = $u-1#26 / $u-1#48;

        parent#100 = $u-1#98.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u-1#48 = (float) $u-1#96;

        $u-1#52 = (float) $u-1#94;

        $u-1#48 = $u-1#48 / $u-1#52;

        $u-1#52 = $u-1#98.<androidx.viewpager.widget.ViewPager$ItemInfo: float offset>;

        $u-1#48 = $u-1#48 - $u-1#52;

        $u-1#52 = $u-1#98.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        $u-1#26 = $u-1#52 + $u-1#26;

        $u-1#26 = $u-1#48 / $u-1#26;

        $u-1#94 = this.<androidx.viewpager.widget.ViewPager: int mActivePointerId>;

        $u-1#94 = virtualinvoke $u18.<android.view.MotionEvent: int findPointerIndex(int)>($u-1#94);

        $u-1#48 = virtualinvoke $u18.<android.view.MotionEvent: float getX(int)>($u-1#94);

        $u-1#52 = this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX>;

        $u-1#48 = $u-1#48 - $u-1#52;

        $u-1#94 = (int) $u-1#48;

        parent#100 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int determineTargetPage(int,float,int,int)>(parent#100, $u-1#26, $u-1, $u-1#94);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>(parent#100, 1, 1, $u-1);

        action = specialinvoke this.<androidx.viewpager.widget.ViewPager: boolean resetTouch()>();

        goto label18;

     label16:
        goto label18;

     label17:
        action#126 = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke action#126.<android.widget.Scroller: void abortAnimation()>();

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

        $u-1#26 = virtualinvoke $u18.<android.view.MotionEvent: float getX()>();

        this.<androidx.viewpager.widget.ViewPager: float mInitialMotionX> = $u-1#26;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionX> = $u-1#26;

        $u-1#26 = virtualinvoke $u18.<android.view.MotionEvent: float getY()>();

        this.<androidx.viewpager.widget.ViewPager: float mInitialMotionY> = $u-1#26;

        this.<androidx.viewpager.widget.ViewPager: float mLastMotionY> = $u-1#26;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getPointerId(int)>(0);

        this.<androidx.viewpager.widget.ViewPager: int mActivePointerId> = $u-1;

     label18:
        if action == 0 goto label20;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

        return 1;

     label19:
        return 0;

     label20:
        return 1;
    }

    boolean pageLeft()
    {
        androidx.viewpager.widget.ViewPager this;
        int $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u0 <= 0 goto label1;

        $u0 = $u0 - 1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)>($u0, 1);

        return 1;

     label1:
        return 0;
    }

    boolean pageRight()
    {
        androidx.viewpager.widget.ViewPager this;
        int $u1, $u-1;
        androidx.viewpager.widget.PagerAdapter $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if $u0 == null goto label1;

        $u1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u-1 = virtualinvoke $u0.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        $u-1 = $u-1 - 1;

        if $u1 >= $u-1 goto label1;

        $u1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u1 = $u1 + 1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)>($u1, 1);

        return 1;

     label1:
        return 0;
    }

    void populate()
    {
        androidx.viewpager.widget.ViewPager this;
        int $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u0 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate(int)>($u0);

        return;
    }

    void populate(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u19, oldCurInfo1, $u-1#16, oldCurInfo#20, endPos, extraWidthLeft, $u-1#53, pos1#62;
        androidx.viewpager.widget.ViewPager$ItemInfo $u-1, curItem, ii1#35;
        androidx.viewpager.widget.PagerAdapter oldCurInfo;
        boolean oldCurInfo#8;
        android.os.IBinder $u-1#9;
        java.util.ArrayList ii1;
        java.lang.Object $u-1#33;
        float extraWidthLeft#42, pos, ii1#55, pos1;
        byte pos1#61;
        android.view.View $u-1#156;
        android.view.ViewGroup$LayoutParams $u-1#158;
        androidx.viewpager.widget.ViewPager$LayoutParams ii1#160;
        android.content.res.Resources $u-1#193;
        java.lang.String $u-1#197;
        android.content.res.Resources$NotFoundException oldCurInfo#199;
        java.lang.IllegalStateException ii;
        java.lang.StringBuilder pageLimit;
        java.lang.Class $u-1#211;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u19 := @parameter0: int;

        oldCurInfo1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if oldCurInfo1 == $u19 goto label01;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)>(oldCurInfo1);

        this.<androidx.viewpager.widget.ViewPager: int mCurItem> = $u19;

        goto label02;

     label01:
        $u-1 = null;

     label02:
        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if oldCurInfo != null goto label03;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()>();

        return;

     label03:
        oldCurInfo#8 = this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending>;

        if oldCurInfo#8 == 0 goto label04;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()>();

        return;

     label04:
        $u-1#9 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.os.IBinder getWindowToken()>();

        if $u-1#9 != null goto label05;

        return;

     label05:
        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        virtualinvoke oldCurInfo.<androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)>(this);

        oldCurInfo1 = this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit>;

        $u19 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u19 = $u19 - oldCurInfo1;

        $u-1#16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u19);

        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u19 = virtualinvoke oldCurInfo.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        oldCurInfo#20 = $u19 + -1;

        endPos = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        oldCurInfo1 = endPos + oldCurInfo1;

        oldCurInfo1 = staticinvoke <java.lang.Math: int min(int,int)>(oldCurInfo#20, oldCurInfo1);

        oldCurInfo#20 = this.<androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount>;

        if $u19 != oldCurInfo#20 goto label52;

        curItem = null;

        oldCurInfo#20 = 0;

     label06:
        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        endPos = virtualinvoke ii1.<java.util.ArrayList: int size()>();

        if oldCurInfo#20 >= endPos goto label08;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>(oldCurInfo#20);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        endPos = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        extraWidthLeft = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if endPos < extraWidthLeft goto label07;

        endPos = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        extraWidthLeft = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if endPos != extraWidthLeft goto label08;

        curItem = ii1#35;

        goto label08;

     label07:
        oldCurInfo#20 = oldCurInfo#20 + 1;

        goto label06;

     label08:
        if curItem != null goto label09;

        if $u19 <= 0 goto label09;

        endPos = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        curItem = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)>(endPos, oldCurInfo#20);

     label09:
        if curItem == null goto label42;

        extraWidthLeft#42 = 0.0F;

        extraWidthLeft = oldCurInfo#20 + -1;

        if extraWidthLeft < 0 goto label10;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>(extraWidthLeft);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label11;

     label10:
        ii1#35 = null;

     label11:
        endPos = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        if endPos > 0 goto label12;

        pos = 0.0F;

        goto label13;

     label12:
        pos = curItem.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        pos = 2.0F - pos;

        $u-1#53 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingLeft()>();

        ii1#55 = (float) $u-1#53;

        pos1 = (float) endPos;

        ii1#55 = ii1#55 / pos1;

        pos = pos + ii1#55;

     label13:
        $u-1#53 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u-1#53 = $u-1#53 + -1;

     label14:
        if $u-1#53 < 0 goto label24;

        pos1#61 = extraWidthLeft#42 cmpl pos;

        if pos1#61 < 0 goto label18;

        if $u-1#53 >= $u-1#16 goto label18;

        if ii1#35 != null goto label15;

        goto label24;

     label15:
        pos1#62 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u-1#53 != pos1#62 goto label23;

        oldCurInfo#8 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling>;

        if oldCurInfo#8 != 0 goto label23;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke ii1.<java.util.ArrayList: java.lang.Object remove(int)>(extraWidthLeft);

        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#33 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke oldCurInfo.<androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(this, $u-1#53, $u-1#33);

        extraWidthLeft = extraWidthLeft + -1;

        oldCurInfo#20 = oldCurInfo#20 + -1;

        if extraWidthLeft < 0 goto label16;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>(extraWidthLeft);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label17;

     label16:
        ii1#35 = null;

     label17:
        goto label23;

     label18:
        if ii1#35 == null goto label21;

        pos1#62 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if $u-1#53 != pos1#62 goto label21;

        ii1#55 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        extraWidthLeft#42 = extraWidthLeft#42 + ii1#55;

        extraWidthLeft = extraWidthLeft + -1;

        if extraWidthLeft < 0 goto label19;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>(extraWidthLeft);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label20;

     label19:
        ii1#35 = null;

     label20:
        goto label23;

     label21:
        pos1#62 = extraWidthLeft + 1;

        ii1#35 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)>($u-1#53, pos1#62);

        ii1#55 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        extraWidthLeft#42 = extraWidthLeft#42 + ii1#55;

        oldCurInfo#20 = oldCurInfo#20 + 1;

        if extraWidthLeft < 0 goto label22;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>(extraWidthLeft);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label23;

     label22:
        ii1#35 = null;

     label23:
        $u-1#53 = $u-1#53 + -1;

        goto label14;

     label24:
        extraWidthLeft#42 = curItem.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        $u-1#16 = oldCurInfo#20 + 1;

        pos1#61 = extraWidthLeft#42 cmpg 2.0F;

        if pos1#61 >= 0 goto label41;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        extraWidthLeft = virtualinvoke ii1.<java.util.ArrayList: int size()>();

        if $u-1#16 >= extraWidthLeft goto label25;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>($u-1#16);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label26;

     label25:
        ii1#35 = null;

     label26:
        if endPos > 0 goto label27;

        pos = 0.0F;

        goto label28;

     label27:
        extraWidthLeft = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getPaddingRight()>();

        pos = (float) extraWidthLeft;

        ii1#55 = (float) endPos;

        pos = pos / ii1#55;

        pos = pos + 2.0F;

     label28:
        endPos = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        endPos = endPos + 1;

     label29:
        if endPos >= $u19 goto label40;

        pos1#61 = extraWidthLeft#42 cmpl pos;

        if pos1#61 < 0 goto label34;

        if endPos <= oldCurInfo1 goto label34;

        if ii1#35 != null goto label30;

        goto label40;

     label30:
        extraWidthLeft = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if endPos != extraWidthLeft goto label33;

        oldCurInfo#8 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling>;

        if oldCurInfo#8 != 0 goto label33;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke ii1.<java.util.ArrayList: java.lang.Object remove(int)>($u-1#16);

        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#33 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke oldCurInfo.<androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(this, endPos, $u-1#33);

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        extraWidthLeft = virtualinvoke ii1.<java.util.ArrayList: int size()>();

        if $u-1#16 >= extraWidthLeft goto label31;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>($u-1#16);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label32;

     label31:
        ii1#35 = null;

     label32:
        goto label39;

     label33:
        goto label39;

     label34:
        if ii1#35 == null goto label37;

        extraWidthLeft = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        if endPos != extraWidthLeft goto label37;

        ii1#55 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        extraWidthLeft#42 = extraWidthLeft#42 + ii1#55;

        $u-1#16 = $u-1#16 + 1;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        extraWidthLeft = virtualinvoke ii1.<java.util.ArrayList: int size()>();

        if $u-1#16 >= extraWidthLeft goto label35;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>($u-1#16);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label36;

     label35:
        ii1#35 = null;

     label36:
        goto label39;

     label37:
        ii1#35 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)>(endPos, $u-1#16);

        $u-1#16 = $u-1#16 + 1;

        ii1#55 = ii1#35.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        extraWidthLeft#42 = extraWidthLeft#42 + ii1#55;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        extraWidthLeft = virtualinvoke ii1.<java.util.ArrayList: int size()>();

        if $u-1#16 >= extraWidthLeft goto label38;

        ii1 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#33 = virtualinvoke ii1.<java.util.ArrayList: java.lang.Object get(int)>($u-1#16);

        ii1#35 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#33;

        goto label39;

     label38:
        ii1#35 = null;

     label39:
        endPos = endPos + 1;

        goto label29;

     label40:
        goto label41;

     label41:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)>(curItem, oldCurInfo#20, $u-1);

        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u19 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u-1#33 = curItem.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke oldCurInfo.<androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>(this, $u19, $u-1#33);

        goto label42;

     label42:
        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        virtualinvoke oldCurInfo.<androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(this);

        $u19 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        oldCurInfo1 = 0;

     label43:
        if oldCurInfo1 >= $u19 goto label45;

        $u-1#156 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>(oldCurInfo1);

        $u-1#158 = virtualinvoke $u-1#156.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        ii1#160 = (androidx.viewpager.widget.ViewPager$LayoutParams) $u-1#158;

        ii1#160.<androidx.viewpager.widget.ViewPager$LayoutParams: int childIndex> = oldCurInfo1;

        oldCurInfo#8 = ii1#160.<androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor>;

        if oldCurInfo#8 != 0 goto label44;

        extraWidthLeft#42 = ii1#160.<androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor>;

        pos1#61 = extraWidthLeft#42 cmpl 0.0F;

        if pos1#61 != 0 goto label44;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1#156);

        if $u-1 == null goto label44;

        extraWidthLeft#42 = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor>;

        ii1#160.<androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor> = extraWidthLeft#42;

        oldCurInfo#20 = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        ii1#160.<androidx.viewpager.widget.ViewPager$LayoutParams: int position> = oldCurInfo#20;

        goto label44;

     label44:
        oldCurInfo1 = oldCurInfo1 + 1;

        goto label43;

     label45:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()>();

        oldCurInfo#8 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: boolean hasFocus()>();

        if oldCurInfo#8 == 0 goto label51;

        $u-1#156 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View findFocus()>();

        if $u-1#156 == null goto label46;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)>($u-1#156);

        goto label47;

     label46:
        $u-1 = null;

     label47:
        if $u-1 == null goto label48;

        $u19 = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        oldCurInfo1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u19 == oldCurInfo1 goto label57;

     label48:
        $u19 = 0;

     label49:
        oldCurInfo1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        if $u19 >= oldCurInfo1 goto label57;

        $u-1#156 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.view.View getChildAt(int)>($u19);

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)>($u-1#156);

        if $u-1 == null goto label50;

        oldCurInfo1 = $u-1.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        oldCurInfo#20 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if oldCurInfo1 != oldCurInfo#20 goto label50;

        oldCurInfo#8 = virtualinvoke $u-1#156.<android.view.View: boolean requestFocus(int)>(2);

        if oldCurInfo#8 == 0 goto label50;

        return;

     label50:
        $u19 = $u19 + 1;

        goto label49;

     label51:
        return;

     label52:
        $u-1#193 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.content.res.Resources getResources()>();

        oldCurInfo1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getId()>();

        $u-1#197 = virtualinvoke $u-1#193.<android.content.res.Resources: java.lang.String getResourceName(int)>(oldCurInfo1);

     label53:
        goto label55;

     label54:
        oldCurInfo#199 := @caughtexception;

        oldCurInfo1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getId()>();

        $u-1#197 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(oldCurInfo1);

     label55:
        ii = new java.lang.IllegalStateException;

        pageLimit = new java.lang.StringBuilder;

        specialinvoke pageLimit.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The application\'s PagerAdapter changed the adapter\'s contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: ");

        oldCurInfo1 = this.<androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount>;

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(oldCurInfo1);

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", found: ");

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u19);

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pager id: ");

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#197);

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pager class: ");

        $u-1#211 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#211);

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Problematic adapter: ");

        oldCurInfo = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1#211 = virtualinvoke oldCurInfo.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#211);

        $u-1#197 = virtualinvoke pageLimit.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke ii.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#197);

        goto label56;

     label56:
        throw ii;

     label57:
        return;

        catch android.content.res.Resources$NotFoundException from label52 to label53 with label54;
    }

    public void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$OnAdapterChangeListener $u2;
        java.util.List $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: androidx.viewpager.widget.ViewPager$OnAdapterChangeListener;

        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners>;

        if $u0 == null goto label1;

        interfaceinvoke $u0.<java.util.List: boolean remove(java.lang.Object)>($u2);

     label1:
        return;
    }

    public void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener $u2;
        java.util.List $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: androidx.viewpager.widget.ViewPager$OnPageChangeListener;

        $u0 = this.<androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners>;

        if $u0 == null goto label1;

        interfaceinvoke $u0.<java.util.List: boolean remove(java.lang.Object)>($u2);

     label1:
        return;
    }

    public void removeView(android.view.View)
    {
        androidx.viewpager.widget.ViewPager this;
        android.view.View $u2;
        boolean $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: android.view.View;

        $u0 = this.<androidx.viewpager.widget.ViewPager: boolean mInLayout>;

        if $u0 == 0 goto label1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void removeViewInLayout(android.view.View)>($u2);

        return;

     label1:
        specialinvoke this.<android.view.ViewGroup: void removeView(android.view.View)>($u2);

        return;
    }

    public void setAdapter(androidx.viewpager.widget.PagerAdapter)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.PagerAdapter $u9, i, ii#21;
        java.lang.ClassLoader $u7;
        int i#5, $u-1;
        java.util.ArrayList ii;
        java.lang.Object $u-1#10;
        androidx.viewpager.widget.ViewPager$ItemInfo ii#12;
        androidx.viewpager.widget.ViewPager$PagerObserver ii#19;
        boolean ii#23;
        android.os.Parcelable $u6;
        java.util.List i1;
        androidx.viewpager.widget.ViewPager$OnAdapterChangeListener ii#43;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u9 := @parameter0: androidx.viewpager.widget.PagerAdapter;

        i = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        if i == null goto label3;

        virtualinvoke i.<androidx.viewpager.widget.PagerAdapter: void setViewPagerObserver(android.database.DataSetObserver)>(null);

        i = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        virtualinvoke i.<androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)>(this);

        i#5 = 0;

     label1:
        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1 = virtualinvoke ii.<java.util.ArrayList: int size()>();

        if i#5 >= $u-1 goto label2;

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#10 = virtualinvoke ii.<java.util.ArrayList: java.lang.Object get(int)>(i#5);

        ii#12 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#10;

        i = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1 = ii#12.<androidx.viewpager.widget.ViewPager$ItemInfo: int position>;

        $u-1#10 = ii#12.<androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke i.<androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(this, $u-1, $u-1#10);

        i#5 = i#5 + 1;

        goto label1;

     label2:
        i = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        virtualinvoke i.<androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(this);

        ii = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke ii.<java.util.ArrayList: void clear()>();

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void removeNonDecorViews()>();

        this.<androidx.viewpager.widget.ViewPager: int mCurItem> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void scrollTo(int,int)>(0, 0);

     label3:
        i = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter> = $u9;

        this.<androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount> = 0;

        if $u9 == null goto label7;

        ii#19 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver>;

        if ii#19 != null goto label4;

        ii#19 = new androidx.viewpager.widget.ViewPager$PagerObserver;

        specialinvoke ii#19.<androidx.viewpager.widget.ViewPager$PagerObserver: void <init>(androidx.viewpager.widget.ViewPager)>(this);

        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver> = ii#19;

     label4:
        ii#21 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        ii#19 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver>;

        virtualinvoke ii#21.<androidx.viewpager.widget.PagerAdapter: void setViewPagerObserver(android.database.DataSetObserver)>(ii#19);

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 0;

        ii#23 = this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout>;

        this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout> = 1;

        ii#21 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        i#5 = virtualinvoke ii#21.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        this.<androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount> = i#5;

        i#5 = this.<androidx.viewpager.widget.ViewPager: int mRestoredCurItem>;

        if i#5 < 0 goto label5;

        ii#21 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u6 = this.<androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState>;

        $u7 = this.<androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader>;

        virtualinvoke ii#21.<androidx.viewpager.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($u6, $u7);

        i#5 = this.<androidx.viewpager.widget.ViewPager: int mRestoredCurItem>;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>(i#5, 0, 1);

        this.<androidx.viewpager.widget.ViewPager: int mRestoredCurItem> = -1;

        this.<androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        this.<androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        goto label7;

     label5:
        if ii#23 != 0 goto label6;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

        goto label7;

     label6:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void requestLayout()>();

     label7:
        i1 = this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners>;

        if i1 == null goto label9;

        ii#23 = interfaceinvoke i1.<java.util.List: boolean isEmpty()>();

        if ii#23 != 0 goto label9;

        i#5 = 0;

        i1 = this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners>;

        $u-1 = interfaceinvoke i1.<java.util.List: int size()>();

     label8:
        if i#5 >= $u-1 goto label9;

        i1 = this.<androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners>;

        $u-1#10 = interfaceinvoke i1.<java.util.List: java.lang.Object get(int)>(i#5);

        ii#43 = (androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) $u-1#10;

        interfaceinvoke ii#43.<androidx.viewpager.widget.ViewPager$OnAdapterChangeListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)>(this, i, $u9);

        i#5 = i#5 + 1;

        goto label8;

     label9:
        return;
    }

    public void setCurrentItem(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u3;
        boolean $u1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: int;

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 0;

        $u1 = this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout>;

        $u1 = $u1 ^ 1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($u3, $u1, 0);

        return;
    }

    public void setCurrentItem(int, boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u2;
        boolean $u3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: int;

        $u3 := @parameter1: boolean;

        this.<androidx.viewpager.widget.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($u2, $u3, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u2;
        boolean $u3, $u4;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: int;

        $u3 := @parameter1: boolean;

        $u4 := @parameter2: boolean;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>($u2, $u3, $u4, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean, int)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u7, $u8, $u1;
        int $u9, $u6, $u-1, i, $u4;
        androidx.viewpager.widget.PagerAdapter dispatchSelected;
        java.util.ArrayList dispatchSelected#7;
        java.lang.Object $u-1#26;
        androidx.viewpager.widget.ViewPager$ItemInfo $u4#28;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u6 := @parameter0: int;

        $u7 := @parameter1: boolean;

        $u8 := @parameter2: boolean;

        $u9 := @parameter3: int;

        dispatchSelected = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u1 = 0;

        if dispatchSelected == null goto label11;

        $u-1 = virtualinvoke dispatchSelected.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        if $u-1 > 0 goto label01;

        goto label11;

     label01:
        if $u8 != 0 goto label02;

        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u-1 != $u6 goto label02;

        dispatchSelected#7 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1 = virtualinvoke dispatchSelected#7.<java.util.ArrayList: int size()>();

        if $u-1 == 0 goto label02;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label02:
        if $u6 >= 0 goto label03;

        $u6 = 0;

        goto label04;

     label03:
        dispatchSelected = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u-1 = virtualinvoke dispatchSelected.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        if $u6 < $u-1 goto label04;

        dispatchSelected = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u6 = virtualinvoke dispatchSelected.<androidx.viewpager.widget.PagerAdapter: int getCount()>();

        $u6 = $u6 + -1;

     label04:
        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit>;

        i = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        $u4 = i + $u-1;

        if $u6 > $u4 goto label05;

        $u-1 = i - $u-1;

        if $u6 >= $u-1 goto label07;

     label05:
        $u-1 = 0;

     label06:
        dispatchSelected#7 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        i = virtualinvoke dispatchSelected#7.<java.util.ArrayList: int size()>();

        if $u-1 >= i goto label07;

        dispatchSelected#7 = this.<androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems>;

        $u-1#26 = virtualinvoke dispatchSelected#7.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        $u4#28 = (androidx.viewpager.widget.ViewPager$ItemInfo) $u-1#26;

        $u4#28.<androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling> = 1;

        $u-1 = $u-1 + 1;

        goto label06;

     label07:
        $u-1 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        if $u-1 == $u6 goto label08;

        $u1 = 1;

     label08:
        $u8 = this.<androidx.viewpager.widget.ViewPager: boolean mFirstLayout>;

        if $u8 == 0 goto label10;

        this.<androidx.viewpager.widget.ViewPager: int mCurItem> = $u6;

        if $u1 == 0 goto label09;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)>($u6);

     label09:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void requestLayout()>();

        return;

     label10:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate(int)>($u6);

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>($u6, $u7, $u9, $u1);

        return;

     label11:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;
    }

    androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener $u2, ret0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: androidx.viewpager.widget.ViewPager$OnPageChangeListener;

        ret0 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener> = $u2;

        return ret0;
    }

    public void setOffscreenPageLimit(int)
    {
        androidx.viewpager.widget.ViewPager this;
        java.lang.String $u-1;
        int $u4, $u0;
        java.lang.StringBuilder $u1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u4 := @parameter0: int;

        if $u4 >= 1 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested offscreen page limit ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u4);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too small; defaulting to ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewPager", $u-1);

        $u4 = 1;

     label1:
        $u0 = this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit>;

        if $u4 == $u0 goto label2;

        this.<androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit> = $u4;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

     label2:
        return;
    }

    public void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    {
        androidx.viewpager.widget.ViewPager this;
        androidx.viewpager.widget.ViewPager$OnPageChangeListener $u1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u1 := @parameter0: androidx.viewpager.widget.ViewPager$OnPageChangeListener;

        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener> = $u1;

        return;
    }

    public void setPageMargin(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u3, oldMargin, $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u3 := @parameter0: int;

        oldMargin = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        this.<androidx.viewpager.widget.ViewPager: int mPageMargin> = $u3;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getWidth()>();

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)>($u-1, $u-1, $u3, oldMargin);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void requestLayout()>();

        return;
    }

    public void setPageMarginDrawable(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u2;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u-1#3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: android.content.Context getContext()>();

        $u-1#3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u-1, $u2);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)>($u-1#3);

        return;
    }

    public void setPageMarginDrawable(android.graphics.drawable.Drawable)
    {
        androidx.viewpager.widget.ViewPager this;
        android.graphics.drawable.Drawable $u2;
        boolean $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        this.<androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable> = $u2;

        if $u2 == null goto label1;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void refreshDrawableState()>();

     label1:
        if $u2 != null goto label2;

        $u0 = 1;

        goto label3;

     label2:
        $u0 = 0;

     label3:
        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setWillNotDraw(boolean)>($u0);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void invalidate()>();

        return;
    }

    public void setPageTransformer(boolean, androidx.viewpager.widget.ViewPager$PageTransformer)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u2;
        androidx.viewpager.widget.ViewPager$PageTransformer $u3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: boolean;

        $u3 := @parameter1: androidx.viewpager.widget.ViewPager$PageTransformer;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)>($u2, $u3, 2);

        return;
    }

    public void setPageTransformer(boolean, androidx.viewpager.widget.ViewPager$PageTransformer, int)
    {
        androidx.viewpager.widget.ViewPager this;
        boolean $u5, hasTransformer, needsPopulate#4;
        androidx.viewpager.widget.ViewPager$PageTransformer $u6, needsPopulate;
        int $u7;
        byte $u0;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u5 := @parameter0: boolean;

        $u6 := @parameter1: androidx.viewpager.widget.ViewPager$PageTransformer;

        $u7 := @parameter2: int;

        $u0 = 1;

        if $u6 == null goto label01;

        hasTransformer = 1;

        goto label02;

     label01:
        hasTransformer = 0;

     label02:
        needsPopulate = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer>;

        if needsPopulate == null goto label03;

        needsPopulate#4 = 1;

        goto label04;

     label03:
        needsPopulate#4 = 0;

     label04:
        if hasTransformer == needsPopulate#4 goto label05;

        needsPopulate#4 = 1;

        goto label06;

     label05:
        needsPopulate#4 = 0;

     label06:
        this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer> = $u6;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setChildrenDrawingOrderEnabled(boolean)>(hasTransformer);

        if hasTransformer == 0 goto label08;

        if $u5 == 0 goto label07;

        $u0 = 2;

     label07:
        this.<androidx.viewpager.widget.ViewPager: int mDrawingOrder> = $u0;

        this.<androidx.viewpager.widget.ViewPager: int mPageTransformerLayerType> = $u7;

        goto label09;

     label08:
        this.<androidx.viewpager.widget.ViewPager: int mDrawingOrder> = 0;

     label09:
        if needsPopulate#4 == 0 goto label10;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

     label10:
        return;
    }

    void setScrollState(int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u2, $u0;
        androidx.viewpager.widget.ViewPager$PageTransformer $u0#2;
        boolean $u0#3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.viewpager.widget.ViewPager: int mScrollState>;

        if $u0 != $u2 goto label1;

        return;

     label1:
        this.<androidx.viewpager.widget.ViewPager: int mScrollState> = $u2;

        $u0#2 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer>;

        if $u0#2 == null goto label4;

        if $u2 == 0 goto label2;

        $u0#3 = 1;

        goto label3;

     label2:
        $u0#3 = 0;

     label3:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void enableLayers(boolean)>($u0#3);

     label4:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void dispatchOnScrollStateChanged(int)>($u2);

        return;
    }

    void smoothScrollTo(int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u2, $u3;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)>($u2, $u3, 0);

        return;
    }

    void smoothScrollTo(int, int, int)
    {
        androidx.viewpager.widget.ViewPager this;
        int $u19, $u20, $u21, halfWidth, $u-1, $u-1#17, $u-1#19, $u-1#21;
        float distance, pageDelta, $u-1#28;
        android.widget.Scroller wasScrolling;
        boolean $u-1#6;
        androidx.viewpager.widget.PagerAdapter pageDelta#46;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u19 := @parameter0: int;

        $u20 := @parameter1: int;

        $u21 := @parameter2: int;

        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getChildCount()>();

        if $u-1 != 0 goto label01;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label01:
        wasScrolling = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        if wasScrolling == null goto label02;

        $u-1#6 = virtualinvoke wasScrolling.<android.widget.Scroller: boolean isFinished()>();

        if $u-1#6 != 0 goto label02;

        $u-1#6 = 1;

        goto label03;

     label02:
        $u-1#6 = 0;

     label03:
        if $u-1#6 == 0 goto label06;

        $u-1#6 = this.<androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted>;

        if $u-1#6 == 0 goto label04;

        wasScrolling = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1 = virtualinvoke wasScrolling.<android.widget.Scroller: int getCurrX()>();

        goto label05;

     label04:
        wasScrolling = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        $u-1 = virtualinvoke wasScrolling.<android.widget.Scroller: int getStartX()>();

     label05:
        wasScrolling = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke wasScrolling.<android.widget.Scroller: void abortAnimation()>();

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        goto label07;

     label06:
        $u-1 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollX()>();

     label07:
        $u-1#17 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: int getScrollY()>();

        $u19 = $u19 - $u-1;

        $u20 = $u20 - $u-1#17;

        if $u19 != 0 goto label08;

        if $u20 != 0 goto label08;

        specialinvoke this.<androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>(0);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void populate()>();

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollState(int)>(0);

        return;

     label08:
        specialinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        virtualinvoke this.<androidx.viewpager.widget.ViewPager: void setScrollState(int)>(2);

        $u-1#19 = specialinvoke this.<androidx.viewpager.widget.ViewPager: int getClientWidth()>();

        halfWidth = $u-1#19 / 2;

        $u-1#21 = staticinvoke <java.lang.Math: int abs(int)>($u19);

        distance = (float) $u-1#21;

        distance = distance * 1.0F;

        pageDelta = (float) $u-1#19;

        distance = distance / pageDelta;

        $u-1#28 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, distance);

        distance = (float) halfWidth;

        pageDelta = (float) halfWidth;

        $u-1#28 = virtualinvoke this.<androidx.viewpager.widget.ViewPager: float distanceInfluenceForSnapDuration(float)>($u-1#28);

        pageDelta = pageDelta * $u-1#28;

        distance = distance + pageDelta;

        $u21 = staticinvoke <java.lang.Math: int abs(int)>($u21);

        if $u21 <= 0 goto label09;

        pageDelta = (float) $u21;

        distance = distance / pageDelta;

        distance = staticinvoke <java.lang.Math: float abs(float)>(distance);

        distance = distance * 1000.0F;

        $u21 = staticinvoke <java.lang.Math: int round(float)>(distance);

        $u21 = $u21 * 4;

        goto label10;

     label09:
        distance = (float) $u-1#19;

        pageDelta#46 = this.<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter>;

        $u21 = this.<androidx.viewpager.widget.ViewPager: int mCurItem>;

        pageDelta = virtualinvoke pageDelta#46.<androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)>($u21);

        pageDelta = distance * pageDelta;

        $u21 = staticinvoke <java.lang.Math: int abs(int)>($u19);

        distance = (float) $u21;

        $u21 = this.<androidx.viewpager.widget.ViewPager: int mPageMargin>;

        $u-1#28 = (float) $u21;

        pageDelta = $u-1#28 + pageDelta;

        distance = distance / pageDelta;

        distance = 1.0F + distance;

        distance = distance * 100.0F;

        $u21 = (int) distance;

     label10:
        $u21 = staticinvoke <java.lang.Math: int min(int,int)>($u21, 600);

        this.<androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted> = 0;

        wasScrolling = this.<androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke wasScrolling.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($u-1, $u-1#17, $u19, $u20, $u21);

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        androidx.viewpager.widget.ViewPager this;
        android.graphics.drawable.Drawable $u2, $u0;
        boolean $u-1;

        this := @this: androidx.viewpager.widget.ViewPager;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>($u2);

        if $u-1 != 0 goto label2;

        $u0 = this.<androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if $u2 != $u0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
