class androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat
{
    private final android.graphics.Rect mTmpRect;
    final androidx.drawerlayout.widget.DrawerLayout this$0;

    void <init>(androidx.drawerlayout.widget.DrawerLayout)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        androidx.drawerlayout.widget.DrawerLayout $u2;
        android.graphics.Rect $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u2 := @parameter0: androidx.drawerlayout.widget.DrawerLayout;

        this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: androidx.drawerlayout.widget.DrawerLayout this$0> = $u2;

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>();

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect> = $u0;

        return;
    }

    private void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, android.view.ViewGroup)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $u5;
        android.view.ViewGroup $u6;
        int $u-1, i;
        android.view.View $u-1#3;
        boolean $u-1#4;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u5 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $u6 := @parameter1: android.view.ViewGroup;

        $u-1 = virtualinvoke $u6.<android.view.ViewGroup: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#3 = virtualinvoke $u6.<android.view.ViewGroup: android.view.View getChildAt(int)>(i);

        $u-1#4 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)>($u-1#3);

        if $u-1#4 == 0 goto label2;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>($u-1#3);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    private void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $u3, $u4;
        android.graphics.Rect rect;
        boolean $u-1;
        java.lang.CharSequence $u-1#3;
        int $u-1#23;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u3 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $u4 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        rect = this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect>;

        virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>(rect);

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>(rect);

        virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>(rect);

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>(rect);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($u-1);

        $u-1#3 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($u-1#3);

        $u-1#3 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($u-1#3);

        $u-1#3 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($u-1#3);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($u-1);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($u-1);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>($u-1);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($u-1);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>($u-1);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>($u-1);

        $u-1 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>($u-1);

        $u-1#23 = virtualinvoke $u4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        virtualinvoke $u3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>($u-1#23);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        android.view.View $u5;
        android.view.accessibility.AccessibilityEvent $u6;
        int $u-1;
        java.util.List $u-1#4;
        androidx.drawerlayout.widget.DrawerLayout visibleDrawer;
        java.lang.CharSequence $u-1#13;
        boolean $u-1#16;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $u-1 = virtualinvoke $u6.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $u-1 != 32 goto label2;

        $u-1#4 = virtualinvoke $u6.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        visibleDrawer = this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: androidx.drawerlayout.widget.DrawerLayout this$0>;

        $u5 = virtualinvoke visibleDrawer.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if $u5 == null goto label1;

        visibleDrawer = this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: androidx.drawerlayout.widget.DrawerLayout this$0>;

        $u-1 = virtualinvoke visibleDrawer.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>($u5);

        visibleDrawer = this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: androidx.drawerlayout.widget.DrawerLayout this$0>;

        $u-1#13 = virtualinvoke visibleDrawer.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)>($u-1);

        if $u-1#13 == null goto label1;

        interfaceinvoke $u-1#4.<java.util.List: boolean add(java.lang.Object)>($u-1#13);

     label1:
        return 1;

     label2:
        $u-1#16 = specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($u5, $u6);

        return $u-1#16;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        android.view.View $u2;
        android.view.accessibility.AccessibilityEvent $u3;
        java.lang.String $u-1;
        java.lang.Class $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($u2, $u3);

        $u0 = class "Landroidx/drawerlayout/widget/DrawerLayout;";

        $u-1 = virtualinvoke $u0.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $u3.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($u-1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        android.view.View $u4, $u2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $u5, $u-1;
        boolean superNode;
        android.view.ViewParent $u-1#4;
        android.view.ViewGroup $u2#9;
        java.lang.Class superNode#10;
        java.lang.String $u-1#11;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat superNode#14;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        superNode = <androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>;

        if superNode == 0 goto label1;

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($u4, $u5);

        goto label3;

     label1:
        $u-1 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($u5);

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($u4, $u-1);

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>($u4);

        $u-1#4 = staticinvoke <androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>($u4);

        superNode = $u-1#4 instanceof android.view.View;

        if superNode == 0 goto label2;

        $u2 = (android.view.View) $u-1#4;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($u2);

     label2:
        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($u5, $u-1);

        virtualinvoke $u-1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

        $u2#9 = (android.view.ViewGroup) $u4;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)>($u5, $u2#9);

     label3:
        superNode#10 = class "Landroidx/drawerlayout/widget/DrawerLayout;";

        $u-1#11 = virtualinvoke superNode#10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($u-1#11);

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>(0);

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>(0);

        superNode#14 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS>;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>(superNode#14);

        superNode#14 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS>;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>(superNode#14);

        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate this;
        android.view.ViewGroup $u2;
        android.view.View $u3;
        android.view.accessibility.AccessibilityEvent $u4;
        boolean $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        $u2 := @parameter0: android.view.ViewGroup;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $u0 = <androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>;

        if $u0 != 0 goto label2;

        $u0 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)>($u3);

        if $u0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        $u0 = specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>($u2, $u3, $u4);

        return $u0;
    }
}
