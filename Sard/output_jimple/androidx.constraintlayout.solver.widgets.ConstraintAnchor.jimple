public class androidx.constraintlayout.solver.widgets.ConstraintAnchor extends java.lang.Object
{
    private static final boolean ALLOW_BINARY;
    private static final int UNSET_GONE_MARGIN;
    private java.util.HashSet mDependents;
    int mGoneMargin;
    public int mMargin;
    public final androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner;
    androidx.constraintlayout.solver.SolverVariable mSolverVariable;
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget;
    public final androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType;

    public void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget, androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u2;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u3;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u2 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u3 := @parameter1: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = null;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner> = $u2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType> = $u3;

        return;
    }

    private boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget, java.util.HashSet)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, anchor;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u8, $u-1#3;
        java.util.HashSet checked;
        boolean $u-1;
        java.util.ArrayList $u-1#5;
        int i, $u-1#8;
        java.lang.Object $u-1#9;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u8 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        checked := @parameter1: java.util.HashSet;

        $u-1 = virtualinvoke checked.<java.util.HashSet: boolean contains(java.lang.Object)>($u8);

        if $u-1 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke checked.<java.util.HashSet: boolean add(java.lang.Object)>($u8);

        $u-1#3 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        if $u8 != $u-1#3 goto label2;

        return 1;

     label2:
        $u-1#5 = virtualinvoke $u8.<androidx.constraintlayout.solver.widgets.ConstraintWidget: java.util.ArrayList getAnchors()>();

        i = 0;

        $u-1#8 = virtualinvoke $u-1#5.<java.util.ArrayList: int size()>();

     label3:
        if i >= $u-1#8 goto label5;

        $u-1#9 = virtualinvoke $u-1#5.<java.util.ArrayList: java.lang.Object get(int)>(i);

        anchor = (androidx.constraintlayout.solver.widgets.ConstraintAnchor) $u-1#9;

        $u-1 = virtualinvoke anchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)>(this);

        if $u-1 == 0 goto label4;

        $u-1 = virtualinvoke anchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $u-1 == 0 goto label4;

        anchor = virtualinvoke anchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()>();

        $u8 = virtualinvoke anchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        $u-1 = specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet)>($u8, checked);

        if $u-1 == 0 goto label4;

        return 1;

     label4:
        i = i + 1;

        goto label3;

     label5:
        return 0;
    }

    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u3;
        int $u4;
        boolean $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u3 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u4 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean)>($u3, $u4, -1, 0);

        return $u-1;
    }

    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor, int, int, boolean)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u4;
        int $u5, $u6;
        boolean $u7;
        java.util.HashSet $u2;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u4 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u5 := @parameter1: int;

        $u6 := @parameter2: int;

        $u7 := @parameter3: boolean;

        if $u4 != null goto label1;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void reset()>();

        return 1;

     label1:
        if $u7 != 0 goto label2;

        $u7 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)>($u4);

        if $u7 != 0 goto label2;

        return 0;

     label2:
        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget> = $u4;

        $u2 = $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $u2 != null goto label3;

        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

        $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = $u2;

     label3:
        $u4 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        $u2 = $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        virtualinvoke $u2.<java.util.HashSet: boolean add(java.lang.Object)>(this);

        if $u5 <= 0 goto label4;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = $u5;

        goto label5;

     label4:
        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = 0;

     label5:
        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin> = $u6;

        return 1;
    }

    public void copyFrom(androidx.constraintlayout.solver.widgets.ConstraintAnchor, java.util.HashMap)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u4, type;
        java.util.HashMap map;
        java.util.HashSet type#2;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u-1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget owner;
        java.lang.Object $u-1#8;
        int type#18;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u4 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        map := @parameter1: java.util.HashMap;

        type = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if type == null goto label1;

        type#2 = type.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if type#2 == null goto label1;

        virtualinvoke type#2.<java.util.HashSet: boolean remove(java.lang.Object)>(this);

     label1:
        type = $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if type == null goto label2;

        $u-1 = virtualinvoke type.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()>();

        type = $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        owner = type.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        $u-1#8 = virtualinvoke map.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(owner);

        owner = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#8;

        type = virtualinvoke owner.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($u-1);

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget> = type;

        goto label3;

     label2:
        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget> = null;

     label3:
        type = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if type == null goto label5;

        type#2 = type.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if type#2 != null goto label4;

        type#2 = new java.util.HashSet;

        specialinvoke type#2.<java.util.HashSet: void <init>()>();

        type.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = type#2;

     label4:
        type = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        type#2 = type.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        virtualinvoke type#2.<java.util.HashSet: boolean add(java.lang.Object)>(this);

     label5:
        type#18 = $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = type#18;

        type#18 = $u4.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin> = type#18;

        return;
    }

    public int getMargin()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u0#6;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u0;
        int $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        $u-1 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1 != 8 goto label1;

        return 0;

     label1:
        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        if $u-1 <= -1 goto label2;

        $u0#6 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if $u0#6 == null goto label2;

        $u0 = $u0#6.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        $u-1 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1 != 8 goto label2;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        return $u-1;

     label2:
        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        return $u-1;
    }

    public final androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        int[] $u0;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u1;
        int $u-1;
        java.lang.AssertionError $u0#6;
        java.lang.String $u-1#8;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u0#10;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $u-1 = $u0[$u-1];

        lookupswitch($u-1)
        {
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label6;
            case 7: goto label6;
            case 8: goto label6;
            case 9: goto label6;
            default: goto label1;
        };

     label1:
        $u0#6 = new java.lang.AssertionError;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#8 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $u0#6.<java.lang.AssertionError: void <init>(java.lang.Object)>($u-1#8);

        throw $u0#6;

     label2:
        $u0#10 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        this = $u0#10.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        return this;

     label3:
        $u0#10 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        this = $u0#10.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        return this;

     label4:
        $u0#10 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        this = $u0#10.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        return this;

     label5:
        $u0#10 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        this = $u0#10.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        return this;

     label6:
        return null;
    }

    public androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        return ret0;
    }

    public androidx.constraintlayout.solver.SolverVariable getSolverVariable()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        androidx.constraintlayout.solver.SolverVariable ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        return ret0;
    }

    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        this = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        return this;
    }

    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        return ret0;
    }

    public boolean hasCenteredDependents()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        java.util.HashSet $u0;
        java.util.Iterator $u-1;
        boolean $u-1#4;
        java.lang.Object $u-1#6;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $u0 != null goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke $u0.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $u-1#4 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u-1#4 == 0 goto label3;

        $u-1#6 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        this = (androidx.constraintlayout.solver.widgets.ConstraintAnchor) $u-1#6;

        this = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()>();

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $u-1#4 == 0 goto label2;

        return 1;

     label3:
        return 0;
    }

    public boolean hasDependents()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        int $u-1;
        java.util.HashSet $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $u0 != null goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke $u0.<java.util.HashSet: int size()>();

        if $u-1 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isConnected()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        this = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if this == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u6, $u-1#3;
        java.util.HashSet checked;
        boolean $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u6 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        checked = new java.util.HashSet;

        specialinvoke checked.<java.util.HashSet: void <init>()>();

        $u-1 = specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet)>($u6, checked);

        if $u-1 == 0 goto label1;

        return 0;

     label1:
        $u-1#3 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        $u-1#3 = virtualinvoke $u-1#3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        if $u-1#3 != $u6 goto label2;

        return 1;

     label2:
        $u6 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        if $u6 != $u-1#3 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget, androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u3;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u2;
        boolean $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u2 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u3 := @parameter1: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u2);

        return $u-1;
    }

    public boolean isSideAnchor()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        int[] $u0;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u1;
        int $u-1;
        java.lang.AssertionError $u0#6;
        java.lang.String $u-1#8;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $u-1 = $u0[$u-1];

        lookupswitch($u-1)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            default: goto label1;
        };

     label1:
        $u0#6 = new java.lang.AssertionError;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#8 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $u0#6.<java.lang.AssertionError: void <init>(java.lang.Object)>($u-1#8);

        throw $u0#6;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u5;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u-1, $u1;
        int[] $u1#4;
        int $u-1#6;
        java.lang.AssertionError $u1#10;
        java.lang.String $u-1#12;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u5 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u-1 = virtualinvoke $u5.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()>();

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        if $u-1 != $u1 goto label01;

        return 1;

     label01:
        $u1#4 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#6 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $u-1#6 = $u1#4[$u-1#6];

        lookupswitch($u-1#6)
        {
            case 1: goto label08;
            case 2: goto label06;
            case 3: goto label06;
            case 4: goto label04;
            case 5: goto label04;
            case 6: goto label04;
            case 7: goto label06;
            case 8: goto label04;
            case 9: goto label03;
            default: goto label02;
        };

     label02:
        $u1#10 = new java.lang.AssertionError;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#12 = virtualinvoke $u-1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $u1#10.<java.lang.AssertionError: void <init>(java.lang.Object)>($u-1#12);

        throw $u1#10;

     label03:
        return 0;

     label04:
        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        if $u-1 == $u1 goto label10;

        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        if $u-1 == $u1 goto label10;

        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if $u-1 == $u1 goto label10;

        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $u-1 != $u1 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        if $u-1 == $u1 goto label10;

        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        if $u-1 == $u1 goto label10;

        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if $u-1 != $u1 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        $u1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $u-1 == $u1 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        return 1;
    }

    public boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u6;
        boolean $u0, isCompatible#24, $u4;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u-1, isCompatible;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u-1#5;
        int[] isCompatible#13;
        int $u-1#15;
        java.lang.AssertionError $u0#18;
        java.lang.String $u-1#20;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u6 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = 0;

        if $u6 != null goto label01;

        return 0;

     label01:
        $u-1 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()>();

        isCompatible = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        if $u-1 != isCompatible goto label03;

        $u-1 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if isCompatible != $u-1 goto label02;

        $u-1#5 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        $u0 = virtualinvoke $u-1#5.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $u0 == 0 goto label19;

        $u-1#5 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        $u0 = virtualinvoke $u-1#5.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $u0 != 0 goto label20;

        return 0;

     label02:
        return 1;

     label03:
        isCompatible#13 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type>;

        isCompatible = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#15 = virtualinvoke isCompatible.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $u-1#15 = isCompatible#13[$u-1#15];

        lookupswitch($u-1#15)
        {
            case 1: goto label18;
            case 2: goto label12;
            case 3: goto label12;
            case 4: goto label06;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label05;
            case 8: goto label05;
            case 9: goto label05;
            default: goto label04;
        };

     label04:
        $u0#18 = new java.lang.AssertionError;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#20 = virtualinvoke $u-1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $u0#18.<java.lang.AssertionError: void <init>(java.lang.Object)>($u-1#20);

        throw $u0#18;

     label05:
        return 0;

     label06:
        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        if $u-1 == isCompatible goto label08;

        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        if $u-1 != isCompatible goto label07;

        goto label08;

     label07:
        isCompatible#24 = 0;

        goto label09;

     label08:
        isCompatible#24 = 1;

     label09:
        $u-1#5 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        $u4 = $u-1#5 instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if $u4 == 0 goto label21;

        if isCompatible#24 != 0 goto label10;

        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if $u-1 != isCompatible goto label11;

     label10:
        $u0 = 1;

     label11:
        return $u0;

     label12:
        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        if $u-1 == isCompatible goto label14;

        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        if $u-1 != isCompatible goto label13;

        goto label14;

     label13:
        isCompatible#24 = 0;

        goto label15;

     label14:
        isCompatible#24 = 1;

     label15:
        $u-1#5 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()>();

        $u4 = $u-1#5 instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if $u4 == 0 goto label21;

        if isCompatible#24 != 0 goto label16;

        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if $u-1 != isCompatible goto label17;

     label16:
        $u0 = 1;

     label17:
        return $u0;

     label18:
        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $u-1 == isCompatible goto label22;

        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if $u-1 == isCompatible goto label22;

        isCompatible = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if $u-1 == isCompatible goto label22;

        return 1;

     label19:
        return 0;

     label20:
        return 1;

     label21:
        return isCompatible#24;

     label22:
        return 0;
    }

    public boolean isVerticalAnchor()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        int[] $u0;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u1;
        int $u-1;
        java.lang.AssertionError $u0#6;
        java.lang.String $u-1#8;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $u-1 = $u0[$u-1];

        lookupswitch($u-1)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label2;
            case 9: goto label2;
            default: goto label1;
        };

     label1:
        $u0#6 = new java.lang.AssertionError;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1#8 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $u0#6.<java.lang.AssertionError: void <init>(java.lang.Object)>($u-1#8);

        throw $u0#6;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this, $u0;
        java.util.HashSet $u0#2;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if $u0 == null goto label1;

        $u0#2 = $u0.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $u0#2 == null goto label1;

        virtualinvoke $u0#2.<java.util.HashSet: boolean remove(java.lang.Object)>(this);

     label1:
        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget> = null;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        return;
    }

    public void resetSolverVariable(androidx.constraintlayout.solver.Cache)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        androidx.constraintlayout.solver.Cache $u4;
        androidx.constraintlayout.solver.SolverVariable$Type $u1;
        androidx.constraintlayout.solver.SolverVariable $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u4 := @parameter0: androidx.constraintlayout.solver.Cache;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        if $u0 != null goto label1;

        $u0 = new androidx.constraintlayout.solver.SolverVariable;

        $u1 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED>;

        specialinvoke $u0.<androidx.constraintlayout.solver.SolverVariable: void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)>($u1, null);

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u0;

        return;

     label1:
        virtualinvoke $u0.<androidx.constraintlayout.solver.SolverVariable: void reset()>();

        return;
    }

    public void setGoneMargin(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        int $u2;
        boolean $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $u-1 == 0 goto label1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mGoneMargin> = $u2;

     label1:
        return;
    }

    public void setMargin(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        int $u2;
        boolean $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $u-1 == 0 goto label1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = $u2;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.widgets.ConstraintAnchor this;
        java.lang.StringBuilder $u0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u1;
        java.lang.String $u-1;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $u1#6;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        $u-1 = virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $u1#6 = this.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType>;

        $u-1 = virtualinvoke $u1#6.<androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: java.lang.String toString()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.widgets.ConstraintAnchor: int UNSET_GONE_MARGIN> = -1;

        <androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean ALLOW_BINARY> = 0;

        return;
    }
}
