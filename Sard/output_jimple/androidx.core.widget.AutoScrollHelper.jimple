public abstract class androidx.core.widget.AutoScrollHelper extends java.lang.Object implements android.view.View$OnTouchListener
{
    private static final int DEFAULT_ACTIVATION_DELAY;
    private static final int DEFAULT_EDGE_TYPE;
    private static final float DEFAULT_MAXIMUM_EDGE;
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS;
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS;
    private static final int DEFAULT_RAMP_DOWN_DURATION;
    private static final int DEFAULT_RAMP_UP_DURATION;
    private static final float DEFAULT_RELATIVE_EDGE;
    private static final float DEFAULT_RELATIVE_VELOCITY;
    public static final int EDGE_TYPE_INSIDE;
    public static final int EDGE_TYPE_INSIDE_EXTEND;
    public static final int EDGE_TYPE_OUTSIDE;
    private static final int HORIZONTAL;
    public static final float NO_MAX;
    public static final float NO_MIN;
    public static final float RELATIVE_UNSPECIFIED;
    private static final int VERTICAL;
    private int mActivationDelay;
    private boolean mAlreadyDelayed;
    boolean mAnimating;
    private final android.view.animation.Interpolator mEdgeInterpolator;
    private int mEdgeType;
    private boolean mEnabled;
    private boolean mExclusive;
    private float[] mMaximumEdges;
    private float[] mMaximumVelocity;
    private float[] mMinimumVelocity;
    boolean mNeedsCancel;
    boolean mNeedsReset;
    private float[] mRelativeEdges;
    private float[] mRelativeVelocity;
    private java.lang.Runnable mRunnable;
    final androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller;
    final android.view.View mTarget;

    static void <clinit>()
    {
        int $u-1;

        <androidx.core.widget.AutoScrollHelper: int VERTICAL> = 1;

        <androidx.core.widget.AutoScrollHelper: float RELATIVE_UNSPECIFIED> = 0.0F;

        <androidx.core.widget.AutoScrollHelper: float NO_MIN> = 0.0F;

        <androidx.core.widget.AutoScrollHelper: float NO_MAX> = 3.4028235E38F;

        <androidx.core.widget.AutoScrollHelper: int HORIZONTAL> = 0;

        <androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_OUTSIDE> = 2;

        <androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE_EXTEND> = 1;

        <androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE> = 0;

        <androidx.core.widget.AutoScrollHelper: float DEFAULT_RELATIVE_VELOCITY> = 1.0F;

        <androidx.core.widget.AutoScrollHelper: float DEFAULT_RELATIVE_EDGE> = 0.2F;

        <androidx.core.widget.AutoScrollHelper: int DEFAULT_RAMP_UP_DURATION> = 500;

        <androidx.core.widget.AutoScrollHelper: int DEFAULT_RAMP_DOWN_DURATION> = 500;

        <androidx.core.widget.AutoScrollHelper: int DEFAULT_MINIMUM_VELOCITY_DIPS> = 315;

        <androidx.core.widget.AutoScrollHelper: int DEFAULT_MAXIMUM_VELOCITY_DIPS> = 1575;

        <androidx.core.widget.AutoScrollHelper: float DEFAULT_MAXIMUM_EDGE> = 3.4028235E38F;

        <androidx.core.widget.AutoScrollHelper: int DEFAULT_EDGE_TYPE> = 1;

        $u-1 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        <androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY> = $u-1;

        return;
    }

    public void <init>(android.view.View)
    {
        androidx.core.widget.AutoScrollHelper this;
        android.view.View $u6;
        androidx.core.widget.AutoScrollHelper$ClampedScroller metrics;
        android.view.animation.AccelerateInterpolator metrics#2;
        float[] maxVelocity;
        android.content.res.Resources $u-1;
        android.util.DisplayMetrics $u-1#11;
        float maxVelocity#13, $u4;
        int maxVelocity#18, minVelocity;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u6 := @parameter0: android.view.View;

        specialinvoke this.<java.lang.Object: void <init>()>();

        metrics = new androidx.core.widget.AutoScrollHelper$ClampedScroller;

        specialinvoke metrics.<androidx.core.widget.AutoScrollHelper$ClampedScroller: void <init>()>();

        this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller> = metrics;

        metrics#2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke metrics#2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        this.<androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator> = metrics#2;

        maxVelocity = newarray (float)[2];

        maxVelocity[0] = 0.0F;

        maxVelocity[1] = 0.0F;

        this.<androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges> = maxVelocity;

        maxVelocity = newarray (float)[2];

        maxVelocity[0] = 3.4028235E38F;

        maxVelocity[1] = 3.4028235E38F;

        this.<androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges> = maxVelocity;

        maxVelocity = newarray (float)[2];

        maxVelocity[0] = 0.0F;

        maxVelocity[1] = 0.0F;

        this.<androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity> = maxVelocity;

        maxVelocity = newarray (float)[2];

        maxVelocity[0] = 0.0F;

        maxVelocity[1] = 0.0F;

        this.<androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity> = maxVelocity;

        maxVelocity = newarray (float)[2];

        maxVelocity[0] = 3.4028235E38F;

        maxVelocity[1] = 3.4028235E38F;

        this.<androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity> = maxVelocity;

        this.<androidx.core.widget.AutoScrollHelper: android.view.View mTarget> = $u6;

        $u-1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $u-1#11 = virtualinvoke $u-1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        maxVelocity#13 = $u-1#11.<android.util.DisplayMetrics: float density>;

        maxVelocity#13 = maxVelocity#13 * 1575.0F;

        maxVelocity#13 = maxVelocity#13 + 0.5F;

        maxVelocity#18 = (int) maxVelocity#13;

        maxVelocity#13 = $u-1#11.<android.util.DisplayMetrics: float density>;

        maxVelocity#13 = maxVelocity#13 * 315.0F;

        maxVelocity#13 = maxVelocity#13 + 0.5F;

        minVelocity = (int) maxVelocity#13;

        maxVelocity#13 = (float) maxVelocity#18;

        $u4 = (float) maxVelocity#18;

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)>(maxVelocity#13, $u4);

        maxVelocity#13 = (float) minVelocity;

        $u4 = (float) minVelocity;

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)>(maxVelocity#13, $u4);

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)>(1);

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)>(3.4028235E38F, 3.4028235E38F);

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)>(0.2F, 0.2F);

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)>(1.0F, 1.0F);

        maxVelocity#18 = <androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY>;

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)>(maxVelocity#18);

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)>(500);

        virtualinvoke this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)>(500);

        return;
    }

    private float computeTargetVelocity(int, float, float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        int $u9;
        float $u10, $u11, $u12, relativeEdge#2, maximumEdge;
        float[] relativeEdge;
        byte relativeVelocity;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u9 := @parameter0: int;

        $u10 := @parameter1: float;

        $u11 := @parameter2: float;

        $u12 := @parameter3: float;

        relativeEdge = this.<androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges>;

        relativeEdge#2 = relativeEdge[$u9];

        relativeEdge = this.<androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges>;

        maximumEdge = relativeEdge[$u9];

        relativeEdge#2 = specialinvoke this.<androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)>(relativeEdge#2, $u11, maximumEdge, $u10);

        relativeVelocity = relativeEdge#2 cmpl 0.0F;

        if relativeVelocity != 0 goto label1;

        return 0.0F;

     label1:
        relativeEdge = this.<androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity>;

        maximumEdge = relativeEdge[$u9];

        relativeEdge = this.<androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity>;

        $u10 = relativeEdge[$u9];

        relativeEdge = this.<androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity>;

        $u11 = relativeEdge[$u9];

        $u12 = maximumEdge * $u12;

        relativeVelocity = relativeEdge#2 cmpl 0.0F;

        if relativeVelocity <= 0 goto label2;

        $u12 = relativeEdge#2 * $u12;

        $u10 = staticinvoke <androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)>($u12, $u10, $u11);

        return $u10;

     label2:
        relativeEdge#2 = neg relativeEdge#2;

        $u12 = relativeEdge#2 * $u12;

        $u10 = staticinvoke <androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)>($u12, $u10, $u11);

        $u10 = neg $u10;

        return $u10;
    }

    static float constrain(float, float, float)
    {
        float $u1, $u2, $u3;
        byte $u0;

        $u1 := @parameter0: float;

        $u2 := @parameter1: float;

        $u3 := @parameter2: float;

        $u0 = $u1 cmpl $u3;

        if $u0 <= 0 goto label1;

        return $u3;

     label1:
        $u0 = $u1 cmpg $u2;

        if $u0 >= 0 goto label2;

        return $u2;

     label2:
        return $u1;
    }

    static int constrain(int, int, int)
    {
        int $u0, $u1, $u2;

        $u0 := @parameter0: int;

        $u1 := @parameter1: int;

        $u2 := @parameter2: int;

        if $u0 <= $u2 goto label1;

        return $u2;

     label1:
        if $u0 >= $u1 goto label2;

        return $u1;

     label2:
        return $u0;
    }

    private float constrainEdgeValue(float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u5, $u6;
        byte $u1;
        int $u1#3;
        boolean $u3;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u5 := @parameter0: float;

        $u6 := @parameter1: float;

        $u1 = $u6 cmpl 0.0F;

        if $u1 != 0 goto label1;

        return 0.0F;

     label1:
        $u1#3 = this.<androidx.core.widget.AutoScrollHelper: int mEdgeType>;

        if $u1#3 == 0 goto label3;

        if $u1#3 == 1 goto label3;

        if $u1#3 == 2 goto label2;

        return 0.0F;

     label2:
        $u1 = $u5 cmpg 0.0F;

        if $u1 >= 0 goto label5;

        $u6 = neg $u6;

        $u5 = $u5 / $u6;

        return $u5;

     label3:
        $u1 = $u5 cmpg $u6;

        if $u1 >= 0 goto label5;

        $u1 = $u5 cmpl 0.0F;

        if $u1 < 0 goto label4;

        $u5 = $u5 / $u6;

        $u5 = 1.0F - $u5;

        return $u5;

     label4:
        $u3 = this.<androidx.core.widget.AutoScrollHelper: boolean mAnimating>;

        if $u3 == 0 goto label5;

        $u1#3 = this.<androidx.core.widget.AutoScrollHelper: int mEdgeType>;

        if $u1#3 != 1 goto label5;

        return 1.0F;

     label5:
        return 0.0F;
    }

    private float getEdgeValue(float, float, float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u8, $u9, $u10, $u11;
        byte $u5;
        android.view.animation.Interpolator interpolated;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u8 := @parameter0: float;

        $u9 := @parameter1: float;

        $u10 := @parameter2: float;

        $u11 := @parameter3: float;

        $u8 = $u8 * $u9;

        $u10 = staticinvoke <androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)>($u8, 0.0F, $u10);

        $u8 = specialinvoke this.<androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)>($u11, $u10);

        $u9 = $u9 - $u11;

        $u9 = specialinvoke this.<androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)>($u9, $u10);

        $u8 = $u9 - $u8;

        $u5 = $u8 cmpg 0.0F;

        if $u5 >= 0 goto label1;

        interpolated = this.<androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator>;

        $u8 = neg $u8;

        $u8 = interfaceinvoke interpolated.<android.view.animation.Interpolator: float getInterpolation(float)>($u8);

        $u8 = neg $u8;

        goto label2;

     label1:
        $u5 = $u8 cmpl 0.0F;

        if $u5 <= 0 goto label3;

        interpolated = this.<androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator>;

        $u8 = interfaceinvoke interpolated.<android.view.animation.Interpolator: float getInterpolation(float)>($u8);

     label2:
        $u8 = staticinvoke <androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)>($u8, -1.0F, 1.0F);

        return $u8;

     label3:
        return 0.0F;
    }

    private void requestStop()
    {
        androidx.core.widget.AutoScrollHelper this;
        boolean $u0;
        androidx.core.widget.AutoScrollHelper$ClampedScroller $u0#3;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: boolean mNeedsReset>;

        if $u0 == 0 goto label1;

        this.<androidx.core.widget.AutoScrollHelper: boolean mAnimating> = 0;

        return;

     label1:
        $u0#3 = this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller>;

        virtualinvoke $u0#3.<androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()>();

        return;
    }

    private void startAnimating()
    {
        androidx.core.widget.AutoScrollHelper this;
        android.view.View $u2;
        java.lang.Runnable $u3;
        long $u4;
        androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable $u0;
        boolean $u1;
        int $u1#5;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u3 = this.<androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable>;

        if $u3 != null goto label1;

        $u0 = new androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable;

        specialinvoke $u0.<androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void <init>(androidx.core.widget.AutoScrollHelper)>(this);

        this.<androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable> = $u0;

     label1:
        this.<androidx.core.widget.AutoScrollHelper: boolean mAnimating> = 1;

        this.<androidx.core.widget.AutoScrollHelper: boolean mNeedsReset> = 1;

        $u1 = this.<androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed>;

        if $u1 != 0 goto label2;

        $u1#5 = this.<androidx.core.widget.AutoScrollHelper: int mActivationDelay>;

        if $u1#5 <= 0 goto label2;

        $u2 = this.<androidx.core.widget.AutoScrollHelper: android.view.View mTarget>;

        $u3 = this.<androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable>;

        $u4 = (long) $u1#5;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)>($u2, $u3, $u4);

        goto label3;

     label2:
        $u3 = this.<androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable>;

        interfaceinvoke $u3.<java.lang.Runnable: void run()>();

     label3:
        this.<androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed> = 1;

        return;
    }

    public abstract boolean canTargetScrollHorizontally(int);

    public abstract boolean canTargetScrollVertically(int);

    void cancelTargetTouch()
    {
        androidx.core.widget.AutoScrollHelper this;
        android.view.View $u1;
        long $u-1;
        android.view.MotionEvent $u-1#3;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u-1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u-1#3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($u-1, $u-1, 3, 0.0F, 0.0F, 0);

        $u1 = this.<androidx.core.widget.AutoScrollHelper: android.view.View mTarget>;

        virtualinvoke $u1.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($u-1#3);

        virtualinvoke $u-1#3.<android.view.MotionEvent: void recycle()>();

        return;
    }

    public boolean isEnabled()
    {
        androidx.core.widget.AutoScrollHelper this;
        boolean ret0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        ret0 = this.<androidx.core.widget.AutoScrollHelper: boolean mEnabled>;

        return ret0;
    }

    public boolean isExclusive()
    {
        androidx.core.widget.AutoScrollHelper this;
        boolean ret0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        ret0 = this.<androidx.core.widget.AutoScrollHelper: boolean mExclusive>;

        return ret0;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        androidx.core.widget.AutoScrollHelper this;
        android.view.View $u8, $u5;
        android.view.MotionEvent $u9;
        boolean action;
        int $u-1;
        float $u-1#7, yTargetVelocity, $u5#15, $u6;
        androidx.core.widget.AutoScrollHelper$ClampedScroller $u5#29;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u8 := @parameter0: android.view.View;

        $u9 := @parameter1: android.view.MotionEvent;

        action = this.<androidx.core.widget.AutoScrollHelper: boolean mEnabled>;

        if action != 0 goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke $u9.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1 == 0 goto label3;

        if $u-1 == 1 goto label2;

        if $u-1 == 2 goto label4;

        if $u-1 == 3 goto label2;

        goto label5;

     label2:
        specialinvoke this.<androidx.core.widget.AutoScrollHelper: void requestStop()>();

        goto label5;

     label3:
        this.<androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel> = 1;

        this.<androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed> = 0;

     label4:
        $u-1#7 = virtualinvoke $u9.<android.view.MotionEvent: float getX()>();

        $u-1 = virtualinvoke $u8.<android.view.View: int getWidth()>();

        yTargetVelocity = (float) $u-1;

        $u5 = this.<androidx.core.widget.AutoScrollHelper: android.view.View mTarget>;

        $u-1 = virtualinvoke $u5.<android.view.View: int getWidth()>();

        $u5#15 = (float) $u-1;

        $u-1#7 = specialinvoke this.<androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)>(0, $u-1#7, yTargetVelocity, $u5#15);

        yTargetVelocity = virtualinvoke $u9.<android.view.MotionEvent: float getY()>();

        $u-1 = virtualinvoke $u8.<android.view.View: int getHeight()>();

        $u5#15 = (float) $u-1;

        $u8 = this.<androidx.core.widget.AutoScrollHelper: android.view.View mTarget>;

        $u-1 = virtualinvoke $u8.<android.view.View: int getHeight()>();

        $u6 = (float) $u-1;

        yTargetVelocity = specialinvoke this.<androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)>(1, yTargetVelocity, $u5#15, $u6);

        $u5#29 = this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller>;

        virtualinvoke $u5#29.<androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)>($u-1#7, yTargetVelocity);

        action = this.<androidx.core.widget.AutoScrollHelper: boolean mAnimating>;

        if action != 0 goto label5;

        action = virtualinvoke this.<androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()>();

        if action == 0 goto label5;

        specialinvoke this.<androidx.core.widget.AutoScrollHelper: void startAnimating()>();

     label5:
        action = this.<androidx.core.widget.AutoScrollHelper: boolean mExclusive>;

        if action == 0 goto label6;

        action = this.<androidx.core.widget.AutoScrollHelper: boolean mAnimating>;

        if action == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    public abstract void scrollTargetBy(int, int);

    public androidx.core.widget.AutoScrollHelper setActivationDelay(int)
    {
        androidx.core.widget.AutoScrollHelper this;
        int $u1;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u1 := @parameter0: int;

        this.<androidx.core.widget.AutoScrollHelper: int mActivationDelay> = $u1;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setEdgeType(int)
    {
        androidx.core.widget.AutoScrollHelper this;
        int $u1;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u1 := @parameter0: int;

        this.<androidx.core.widget.AutoScrollHelper: int mEdgeType> = $u1;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setEnabled(boolean)
    {
        androidx.core.widget.AutoScrollHelper this;
        boolean $u2, $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: boolean mEnabled>;

        if $u0 == 0 goto label1;

        if $u2 != 0 goto label1;

        specialinvoke this.<androidx.core.widget.AutoScrollHelper: void requestStop()>();

     label1:
        this.<androidx.core.widget.AutoScrollHelper: boolean mEnabled> = $u2;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    {
        androidx.core.widget.AutoScrollHelper this;
        boolean $u1;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u1 := @parameter0: boolean;

        this.<androidx.core.widget.AutoScrollHelper: boolean mExclusive> = $u1;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setMaximumEdges(float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u3, $u4;
        float[] $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u3 := @parameter0: float;

        $u4 := @parameter1: float;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges>;

        $u0[0] = $u3;

        $u0[1] = $u4;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setMaximumVelocity(float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u5, $u6;
        float[] $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u5 := @parameter0: float;

        $u6 := @parameter1: float;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity>;

        $u5 = $u5 / 1000.0F;

        $u0[0] = $u5;

        $u5 = $u6 / 1000.0F;

        $u0[1] = $u5;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setMinimumVelocity(float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u5, $u6;
        float[] $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u5 := @parameter0: float;

        $u6 := @parameter1: float;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity>;

        $u5 = $u5 / 1000.0F;

        $u0[0] = $u5;

        $u5 = $u6 / 1000.0F;

        $u0[1] = $u5;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
    {
        androidx.core.widget.AutoScrollHelper this;
        int $u2;
        androidx.core.widget.AutoScrollHelper$ClampedScroller $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller>;

        virtualinvoke $u0.<androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)>($u2);

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
    {
        androidx.core.widget.AutoScrollHelper this;
        int $u2;
        androidx.core.widget.AutoScrollHelper$ClampedScroller $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller>;

        virtualinvoke $u0.<androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)>($u2);

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setRelativeEdges(float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u3, $u4;
        float[] $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u3 := @parameter0: float;

        $u4 := @parameter1: float;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges>;

        $u0[0] = $u3;

        $u0[1] = $u4;

        return this;
    }

    public androidx.core.widget.AutoScrollHelper setRelativeVelocity(float, float)
    {
        androidx.core.widget.AutoScrollHelper this;
        float $u5, $u6;
        float[] $u0;

        this := @this: androidx.core.widget.AutoScrollHelper;

        $u5 := @parameter0: float;

        $u6 := @parameter1: float;

        $u0 = this.<androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity>;

        $u5 = $u5 / 1000.0F;

        $u0[0] = $u5;

        $u5 = $u6 / 1000.0F;

        $u0[1] = $u5;

        return this;
    }

    boolean shouldAnimate()
    {
        androidx.core.widget.AutoScrollHelper this;
        androidx.core.widget.AutoScrollHelper$ClampedScroller scroller;
        int $u-1, $u-1#2;
        boolean $u-1#3;

        this := @this: androidx.core.widget.AutoScrollHelper;

        scroller = this.<androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller>;

        $u-1 = virtualinvoke scroller.<androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()>();

        $u-1#2 = virtualinvoke scroller.<androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()>();

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke this.<androidx.core.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)>($u-1);

        if $u-1#3 != 0 goto label2;

     label1:
        if $u-1#2 == 0 goto label3;

        $u-1#3 = virtualinvoke this.<androidx.core.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)>($u-1#2);

        if $u-1#3 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
}
