class androidx.constraintlayout.motion.widget.TouchResponse extends java.lang.Object
{
    private static final boolean DEBUG;
    static final int FLAG_DISABLE_POST_SCROLL;
    static final int FLAG_DISABLE_SCROLL;
    private static final int SIDE_BOTTOM;
    private static final int SIDE_END;
    private static final int SIDE_LEFT;
    private static final int SIDE_MIDDLE;
    private static final int SIDE_RIGHT;
    private static final int SIDE_START;
    private static final int SIDE_TOP;
    private static final java.lang.String TAG;
    private static final float[][] TOUCH_DIRECTION;
    private static final int TOUCH_DOWN;
    private static final int TOUCH_END;
    private static final int TOUCH_LEFT;
    private static final int TOUCH_RIGHT;
    private static final float[][] TOUCH_SIDES;
    private static final int TOUCH_START;
    private static final int TOUCH_UP;
    private float[] mAnchorDpDt;
    private float mDragScale;
    private boolean mDragStarted;
    private float mDragThreshold;
    private int mFlags;
    private float mLastTouchX;
    private float mLastTouchY;
    private int mLimitBoundsTo;
    private float mMaxAcceleration;
    private float mMaxVelocity;
    private final androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout;
    private boolean mMoveWhenScrollAtTop;
    private int mOnTouchUp;
    private int mTouchAnchorId;
    private int mTouchAnchorSide;
    private float mTouchAnchorX;
    private float mTouchAnchorY;
    private float mTouchDirectionX;
    private float mTouchDirectionY;
    private int mTouchRegionId;
    private int mTouchSide;

    static void <clinit>()
    {
        float[][] $u0;
        float[] $u2;

        <androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_START> = 4;

        <androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_RIGHT> = 3;

        <androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_LEFT> = 2;

        <androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_END> = 5;

        <androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_DOWN> = 1;

        <androidx.constraintlayout.motion.widget.TouchResponse: java.lang.String TAG> = "TouchResponse";

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_TOP> = 0;

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_START> = 5;

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_RIGHT> = 2;

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_MIDDLE> = 4;

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_LEFT> = 1;

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_END> = 6;

        <androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_BOTTOM> = 3;

        <androidx.constraintlayout.motion.widget.TouchResponse: int FLAG_DISABLE_SCROLL> = 2;

        <androidx.constraintlayout.motion.widget.TouchResponse: int FLAG_DISABLE_POST_SCROLL> = 1;

        <androidx.constraintlayout.motion.widget.TouchResponse: boolean DEBUG> = 0;

        $u0 = newarray (float[])[7];

        $u2 = newarray (float)[2];

        $u2[0] = 0.5F;

        $u2[1] = 0.0F;

        $u0[0] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 0.0F;

        $u2[1] = 0.5F;

        $u0[1] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 1.0F;

        $u2[1] = 0.5F;

        $u0[2] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 0.5F;

        $u2[1] = 1.0F;

        $u0[3] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 0.5F;

        $u2[1] = 0.5F;

        $u0[4] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 0.0F;

        $u2[1] = 0.5F;

        $u0[5] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 1.0F;

        $u2[1] = 0.5F;

        $u0[6] = $u2;

        <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES> = $u0;

        $u0 = newarray (float[])[6];

        $u2 = newarray (float)[2];

        $u2[0] = 0.0F;

        $u2[1] = -1.0F;

        $u0[0] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 0.0F;

        $u2[1] = 1.0F;

        $u0[1] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = -1.0F;

        $u2[1] = 0.0F;

        $u0[2] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 1.0F;

        $u2[1] = 0.0F;

        $u0[3] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = -1.0F;

        $u2[1] = 0.0F;

        $u0[4] = $u2;

        $u2 = newarray (float)[2];

        $u2[0] = 1.0F;

        $u2[1] = 0.0F;

        $u0[5] = $u2;

        <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION> = $u0;

        return;
    }

    void <init>(android.content.Context, androidx.constraintlayout.motion.widget.MotionLayout, org.xmlpull.v1.XmlPullParser)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        android.content.Context $u4;
        androidx.constraintlayout.motion.widget.MotionLayout $u5;
        org.xmlpull.v1.XmlPullParser $u6;
        android.util.AttributeSet $u-1;
        float[] $u2;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: androidx.constraintlayout.motion.widget.MotionLayout;

        $u6 := @parameter2: org.xmlpull.v1.XmlPullParser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide> = 0;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide> = 0;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = 0;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = -1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId> = -1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo> = -1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = 0.5F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = 0.5F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = 0.0F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = 1.0F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        $u2 = newarray (float)[2];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt> = $u2;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = 4.0F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = 1.2F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop> = 1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale> = 1.0F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags> = 0;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold> = 10.0F;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout> = $u5;

        $u-1 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($u6);

        specialinvoke this.<androidx.constraintlayout.motion.widget.TouchResponse: void fillFromAttributeList(android.content.Context,android.util.AttributeSet)>($u4, $u-1);

        return;
    }

    private void fill(android.content.res.TypedArray)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        android.content.res.TypedArray $u9;
        int $u-1, i, $u-1#3, $u3;
        float[][] $u6;
        float[] $u7;
        float $u5;
        boolean $u3#36;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u9 := @parameter0: android.content.res.TypedArray;

        $u-1 = virtualinvoke $u9.<android.content.res.TypedArray: int getIndexCount()>();

        i = 0;

     label01:
        if i >= $u-1 goto label14;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getIndex(int)>(i);

        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_touchAnchorId>;

        if $u-1#3 != $u3 goto label02;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getResourceId(int,int)>($u-1#3, $u3);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = $u-1#3;

        goto label13;

     label02:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_touchAnchorSide>;

        if $u-1#3 != $u3 goto label03;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getInt(int,int)>($u-1#3, $u3);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide> = $u-1#3;

        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $u7 = $u6[$u-1#3];

        $u5 = $u7[0];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = $u5;

        $u7 = $u6[$u-1#3];

        $u5 = $u7[1];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = $u5;

        goto label13;

     label03:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_dragDirection>;

        if $u-1#3 != $u3 goto label04;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getInt(int,int)>($u-1#3, $u3);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide> = $u-1#3;

        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $u7 = $u6[$u-1#3];

        $u5 = $u7[0];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = $u5;

        $u7 = $u6[$u-1#3];

        $u5 = $u7[1];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = $u5;

        goto label13;

     label04:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_maxVelocity>;

        if $u-1#3 != $u3 goto label05;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity>;

        $u5 = virtualinvoke $u9.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#3, $u5);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = $u5;

        goto label13;

     label05:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_maxAcceleration>;

        if $u-1#3 != $u3 goto label06;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration>;

        $u5 = virtualinvoke $u9.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#3, $u5);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = $u5;

        goto label13;

     label06:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_moveWhenScrollAtTop>;

        if $u-1#3 != $u3 goto label07;

        $u3#36 = this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop>;

        $u3#36 = virtualinvoke $u9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u-1#3, $u3#36);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop> = $u3#36;

        goto label13;

     label07:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_dragScale>;

        if $u-1#3 != $u3 goto label08;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        $u5 = virtualinvoke $u9.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#3, $u5);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale> = $u5;

        goto label13;

     label08:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_dragThreshold>;

        if $u-1#3 != $u3 goto label09;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold>;

        $u5 = virtualinvoke $u9.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#3, $u5);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold> = $u5;

        goto label13;

     label09:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_touchRegionId>;

        if $u-1#3 != $u3 goto label10;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getResourceId(int,int)>($u-1#3, $u3);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId> = $u-1#3;

        goto label13;

     label10:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_onTouchUp>;

        if $u-1#3 != $u3 goto label11;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getInt(int,int)>($u-1#3, $u3);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = $u-1#3;

        goto label13;

     label11:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_nestedScrollFlags>;

        if $u-1#3 != $u3 goto label12;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getInteger(int,int)>($u-1#3, 0);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags> = $u-1#3;

        goto label13;

     label12:
        $u3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_limitBoundsTo>;

        if $u-1#3 != $u3 goto label13;

        $u-1#3 = virtualinvoke $u9.<android.content.res.TypedArray: int getResourceId(int,int)>($u-1#3, 0);

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo> = $u-1#3;

     label13:
        i = i + 1;

        goto label01;

     label14:
        return;
    }

    private void fillFromAttributeList(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;
        android.content.res.TypedArray $u-1;
        int[] a;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        a = <androidx.constraintlayout.widget.R$styleable: int[] OnSwipe>;

        $u-1 = virtualinvoke $u2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($u3, a);

        specialinvoke this.<androidx.constraintlayout.motion.widget.TouchResponse: void fill(android.content.res.TypedArray)>($u-1);

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    float dot(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u3, $u4, $u0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u3 := @parameter0: float;

        $u4 := @parameter1: float;

        $u0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $u3 = $u0 * $u3;

        $u0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $u4 = $u0 * $u4;

        $u3 = $u3 + $u4;

        return $u3;
    }

    public int getAnchorId()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        int ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        return ret0;
    }

    public int getFlags()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        int ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags>;

        return ret0;
    }

    android.graphics.RectF getLimitBoundsTo(android.view.ViewGroup, android.graphics.RectF)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        android.view.ViewGroup $u6;
        android.graphics.RectF $u7;
        int view;
        android.view.View $u-1;
        float $u1, $u2, $u3, $u4;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u6 := @parameter0: android.view.ViewGroup;

        $u7 := @parameter1: android.graphics.RectF;

        view = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo>;

        if view != -1 goto label1;

        return null;

     label1:
        $u-1 = virtualinvoke $u6.<android.view.ViewGroup: android.view.View findViewById(int)>(view);

        if $u-1 != null goto label2;

        return null;

     label2:
        view = virtualinvoke $u-1.<android.view.View: int getLeft()>();

        $u1 = (float) view;

        view = virtualinvoke $u-1.<android.view.View: int getTop()>();

        $u2 = (float) view;

        view = virtualinvoke $u-1.<android.view.View: int getRight()>();

        $u3 = (float) view;

        view = virtualinvoke $u-1.<android.view.View: int getBottom()>();

        $u4 = (float) view;

        virtualinvoke $u7.<android.graphics.RectF: void set(float,float,float,float)>($u1, $u2, $u3, $u4);

        return $u7;
    }

    int getLimitBoundsToId()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        int ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo>;

        return ret0;
    }

    float getMaxAcceleration()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration>;

        return ret0;
    }

    public float getMaxVelocity()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity>;

        return ret0;
    }

    boolean getMoveWhenScrollAtTop()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        boolean ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop>;

        return ret0;
    }

    float getProgressDirection(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u8, $u9, $u-1, $u4, $u5;
        float[] $u6;
        androidx.constraintlayout.motion.widget.MotionLayout pos;
        int $u2;
        byte velocity;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u8 := @parameter0: float;

        $u9 := @parameter1: float;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1 = virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u2 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $u4 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($u2, $u-1, $u4, $u5, $u6);

        $u-1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        velocity = $u-1 cmpl 0.0F;

        if velocity == 0 goto label2;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u9 = $u6[0];

        velocity = $u9 cmpl 0.0F;

        if velocity != 0 goto label1;

        $u6[0] = 1.0E-7F;

     label1:
        $u9 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $u8 = $u9 * $u8;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u9 = $u6[0];

        $u8 = $u8 / $u9;

        return $u8;

     label2:
        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u8 = $u6[1];

        velocity = $u8 cmpl 0.0F;

        if velocity != 0 goto label3;

        $u6[1] = 1.0E-7F;

     label3:
        $u8 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $u8 = $u8 * $u9;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u9 = $u6[1];

        $u8 = $u8 / $u9;

        return $u8;
    }

    android.graphics.RectF getTouchRegion(android.view.ViewGroup, android.graphics.RectF)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        android.view.ViewGroup $u6;
        android.graphics.RectF $u7;
        int view;
        android.view.View $u-1;
        float $u1, $u2, $u3, $u4;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u6 := @parameter0: android.view.ViewGroup;

        $u7 := @parameter1: android.graphics.RectF;

        view = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        if view != -1 goto label1;

        return null;

     label1:
        $u-1 = virtualinvoke $u6.<android.view.ViewGroup: android.view.View findViewById(int)>(view);

        if $u-1 != null goto label2;

        return null;

     label2:
        view = virtualinvoke $u-1.<android.view.View: int getLeft()>();

        $u1 = (float) view;

        view = virtualinvoke $u-1.<android.view.View: int getTop()>();

        $u2 = (float) view;

        view = virtualinvoke $u-1.<android.view.View: int getRight()>();

        $u3 = (float) view;

        view = virtualinvoke $u-1.<android.view.View: int getBottom()>();

        $u4 = (float) view;

        virtualinvoke $u7.<android.graphics.RectF: void set(float,float,float,float)>($u1, $u2, $u3, $u4);

        return $u7;
    }

    int getTouchRegionId()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        int ret0;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        ret0 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        return ret0;
    }

    void processTouchEvent(android.view.MotionEvent, androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker, int, androidx.constraintlayout.motion.widget.MotionScene)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        android.view.MotionEvent $u20;
        androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker $u21;
        int $u22, $u-1#44;
        androidx.constraintlayout.motion.widget.MotionScene $u23;
        float $u-1, dx, drag, pos1, $u15, change#59;
        byte pos1#25;
        boolean pos1#26;
        androidx.constraintlayout.motion.widget.MotionLayout pos1#27;
        float[] change;
        double tvy;
        androidx.constraintlayout.motion.widget.MotionLayout$TransitionState $u8;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u20 := @parameter0: android.view.MotionEvent;

        $u21 := @parameter1: androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker;

        $u22 := @parameter2: int;

        $u23 := @parameter3: androidx.constraintlayout.motion.widget.MotionScene;

        interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void addMovement(android.view.MotionEvent)>($u20);

        $u22 = virtualinvoke $u20.<android.view.MotionEvent: int getAction()>();

        if $u22 == 0 goto label25;

        if $u22 == 1 goto label13;

        if $u22 == 2 goto label01;

        return;

     label01:
        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getRawY()>();

        dx = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY>;

        $u-1 = $u-1 - dx;

        dx = virtualinvoke $u20.<android.view.MotionEvent: float getRawX()>();

        drag = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX>;

        dx = dx - drag;

        drag = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        drag = drag * dx;

        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        pos1 = pos1 * $u-1;

        drag = drag + pos1;

        drag = staticinvoke <java.lang.Math: float abs(float)>(drag);

        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold>;

        pos1#25 = drag cmpl pos1;

        if pos1#25 > 0 goto label02;

        pos1#26 = this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if pos1#26 == 0 goto label26;

     label02:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        drag = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        pos1#26 = this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if pos1#26 != 0 goto label03;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 1;

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(drag);

     label03:
        $u22 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $u22 == -1 goto label04;

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($u22, drag, pos1, $u15, change);

        goto label05;

     label04:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u22 = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: int getWidth()>();

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1#44 = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: int getHeight()>();

        $u22 = staticinvoke <java.lang.Math: int min(int,int)>($u22, $u-1#44);

        pos1 = (float) $u22;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $u15 = $u15 * pos1;

        change[1] = $u15;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        pos1 = $u15 * pos1;

        change[0] = pos1;

     label05:
        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u15 = change[0];

        pos1 = pos1 * $u15;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        change#59 = change[1];

        $u15 = $u15 * change#59;

        pos1 = pos1 + $u15;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        pos1 = pos1 * $u15;

        pos1 = staticinvoke <java.lang.Math: float abs(float)>(pos1);

        tvy = (double) pos1;

        pos1#25 = tvy cmpg 0.01;

        if pos1#25 >= 0 goto label06;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        change[0] = 0.01F;

        change[1] = 0.01F;

     label06:
        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        pos1#25 = pos1 cmpl 0.0F;

        if pos1#25 == 0 goto label07;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u-1 = change[0];

        $u-1 = dx / $u-1;

        goto label08;

     label07:
        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        dx = change[1];

        $u-1 = $u-1 / dx;

     label08:
        $u-1 = drag + $u-1;

        $u-1 = staticinvoke <java.lang.Math: float min(float,float)>($u-1, 1.0F);

        $u-1 = staticinvoke <java.lang.Math: float max(float,float)>($u-1, 0.0F);

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        dx = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        pos1#25 = $u-1 cmpl dx;

        if pos1#25 == 0 goto label11;

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>($u-1);

        interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        $u-1 = interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getXVelocity()>();

        dx = interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getYVelocity()>();

        drag = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        pos1#25 = drag cmpl 0.0F;

        if pos1#25 == 0 goto label09;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        dx = change[0];

        $u-1 = $u-1 / dx;

        goto label10;

     label09:
        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u-1 = change[1];

        $u-1 = dx / $u-1;

     label10:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: float mLastVelocity> = $u-1;

        goto label12;

     label11:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: float mLastVelocity> = 0.0F;

     label12:
        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getRawX()>();

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $u-1;

        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getRawY()>();

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $u-1;

        return;

     label13:
        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        dx = interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getXVelocity()>();

        drag = interfaceinvoke $u21.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getYVelocity()>();

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1 = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $u22 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $u22 == -1 goto label14;

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($u22, $u-1, pos1, $u15, change);

        goto label15;

     label14:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u22 = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: int getWidth()>();

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1#44 = virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: int getHeight()>();

        $u22 = staticinvoke <java.lang.Math: int min(int,int)>($u22, $u-1#44);

        pos1 = (float) $u22;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $u15 = $u15 * pos1;

        change[1] = $u15;

        $u15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        pos1 = $u15 * pos1;

        change[0] = pos1;

     label15:
        pos1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u15 = change[0];

        $u15 = change[1];

        pos1#25 = pos1 cmpl 0.0F;

        if pos1#25 == 0 goto label16;

        drag = change[0];

        dx = dx / drag;

        goto label17;

     label16:
        dx = change[1];

        dx = drag / dx;

     label17:
        pos1#26 = staticinvoke <java.lang.Float: boolean isNaN(float)>(dx);

        if pos1#26 != 0 goto label18;

        drag = dx / 3.0F;

        drag = $u-1 + drag;

        goto label19;

     label18:
        drag = $u-1;

     label19:
        pos1#25 = drag cmpl 0.0F;

        if pos1#25 == 0 goto label23;

        pos1#25 = drag cmpl 1.0F;

        if pos1#25 == 0 goto label23;

        $u22 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $u22 == 3 goto label23;

        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        tvy = (double) drag;

        pos1#25 = tvy cmpg 0.5;

        if pos1#25 >= 0 goto label20;

        drag = 0.0F;

        goto label21;

     label20:
        drag = 1.0F;

     label21:
        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void touchAnimateTo(int,float,float)>($u22, drag, dx);

        pos1#25 = 0.0F cmpl $u-1;

        if pos1#25 >= 0 goto label22;

        pos1#25 = 1.0F cmpg $u-1;

        if pos1#25 > 0 goto label26;

     label22:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u8 = <androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED>;

        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)>($u8);

        return;

     label23:
        pos1#25 = 0.0F cmpl drag;

        if pos1#25 >= 0 goto label24;

        pos1#25 = 1.0F cmpg drag;

        if pos1#25 > 0 goto label26;

     label24:
        pos1#27 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u8 = <androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED>;

        virtualinvoke pos1#27.<androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)>($u8);

        return;

     label25:
        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getRawX()>();

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $u-1;

        $u-1 = virtualinvoke $u20.<android.view.MotionEvent: float getRawY()>();

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $u-1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

     label26:
        return;
    }

    void scrollMove(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u12, $u13, $u-1, $u5, $u6, change#22;
        float[] $u7;
        androidx.constraintlayout.motion.widget.MotionLayout pos;
        boolean movmentInDir;
        int change;
        double $u5#27;
        byte change#28;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u12 := @parameter0: float;

        $u13 := @parameter1: float;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1 = virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        movmentInDir = this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if movmentInDir != 0 goto label1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 1;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>($u-1);

     label1:
        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        change = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>(change, $u-1, $u5, $u6, $u7);

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u6 = $u7[0];

        $u5 = $u5 * $u6;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        change#22 = $u7[1];

        $u6 = $u6 * change#22;

        $u5 = $u5 + $u6;

        $u5 = staticinvoke <java.lang.Math: float abs(float)>($u5);

        $u5#27 = (double) $u5;

        change#28 = $u5#27 cmpg 0.01;

        if change#28 >= 0 goto label2;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u7[0] = 0.01F;

        $u7[1] = 0.01F;

     label2:
        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        change#28 = $u5 cmpl 0.0F;

        if change#28 == 0 goto label3;

        $u12 = $u5 * $u12;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u13 = $u7[0];

        $u12 = $u12 / $u13;

        goto label4;

     label3:
        $u12 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $u12 = $u12 * $u13;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u13 = $u7[1];

        $u12 = $u12 / $u13;

     label4:
        $u12 = $u-1 + $u12;

        $u12 = staticinvoke <java.lang.Math: float min(float,float)>($u12, 1.0F);

        $u12 = staticinvoke <java.lang.Math: float max(float,float)>($u12, 0.0F);

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u13 = virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        change#28 = $u12 cmpl $u13;

        if change#28 == 0 goto label5;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>($u12);

     label5:
        return;
    }

    void scrollUp(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u13, $u14, $u-1, pos#4, $u5, $u6, $u5#15;
        byte $u0, $u8;
        androidx.constraintlayout.motion.widget.MotionLayout pos;
        int $u3;
        float[] $u7;
        boolean $u-1#27;
        double $u8#39;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u13 := @parameter0: float;

        $u14 := @parameter1: float;

        $u0 = 0;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1 = virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        pos#4 = $u-1;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $u5 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($u3, $u-1, $u5, $u6, $u7);

        $u6 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $u7 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $u5 = $u7[0];

        $u5#15 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $u5 = $u7[1];

        $u5 = 0.0F;

        $u8 = $u6 cmpl 0.0F;

        if $u8 == 0 goto label1;

        $u13 = $u6 * $u13;

        $u14 = $u7[0];

        $u13 = $u13 / $u14;

        goto label2;

     label1:
        $u13 = $u5#15 * $u14;

        $u14 = $u7[1];

        $u13 = $u13 / $u14;

     label2:
        $u-1#27 = staticinvoke <java.lang.Float: boolean isNaN(float)>($u13);

        if $u-1#27 != 0 goto label3;

        $u14 = $u13 / 3.0F;

        pos#4 = $u-1 + $u14;

     label3:
        $u8 = pos#4 cmpl 0.0F;

        if $u8 == 0 goto label9;

        $u8 = pos#4 cmpl 1.0F;

        if $u8 == 0 goto label4;

        $u8 = 1;

        goto label5;

     label4:
        $u8 = 0;

     label5:
        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $u3 == 3 goto label6;

        $u0 = 1;

     label6:
        $u3 = $u0 & $u8;

        if $u3 == 0 goto label9;

        pos = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        $u8#39 = (double) pos#4;

        $u0 = $u8#39 cmpg 0.5;

        if $u0 >= 0 goto label7;

        goto label8;

     label7:
        $u5 = 1.0F;

     label8:
        virtualinvoke pos.<androidx.constraintlayout.motion.widget.MotionLayout: void touchAnimateTo(int,float,float)>($u3, $u5, $u13);

     label9:
        return;
    }

    public void setAnchorId(int)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        int $u1;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u1 := @parameter0: int;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = $u1;

        return;
    }

    void setDown(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u1, $u2;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u1 := @parameter0: float;

        $u2 := @parameter1: float;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $u1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $u2;

        return;
    }

    public void setMaxAcceleration(float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u1;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u1 := @parameter0: float;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = $u1;

        return;
    }

    public void setMaxVelocity(float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u1;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u1 := @parameter0: float;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = $u1;

        return;
    }

    public void setRTL(boolean)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        boolean $u9;
        float[] $u7;
        float[][] $u6;
        int $u1;
        float $u2;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u9 := @parameter0: boolean;

        if $u9 == 0 goto label1;

        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $u7 = $u6[3];

        $u6[4] = $u7;

        $u7 = $u6[2];

        $u6[5] = $u7;

        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $u7 = $u6[2];

        $u6[5] = $u7;

        $u7 = $u6[1];

        $u6[6] = $u7;

        goto label2;

     label1:
        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $u7 = $u6[2];

        $u6[4] = $u7;

        $u7 = $u6[3];

        $u6[5] = $u7;

        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $u7 = $u6[1];

        $u6[5] = $u7;

        $u7 = $u6[2];

        $u6[6] = $u7;

     label2:
        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $u1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $u7 = $u6[$u1];

        $u2 = $u7[0];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = $u2;

        $u7 = $u6[$u1];

        $u2 = $u7[1];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = $u2;

        $u6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $u1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $u7 = $u6[$u1];

        $u2 = $u7[0];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = $u2;

        $u7 = $u6[$u1];

        $u2 = $u7[1];

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = $u2;

        return;
    }

    public void setTouchAnchorLocation(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u1, $u2;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u1 := @parameter0: float;

        $u2 := @parameter1: float;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = $u1;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = $u2;

        return;
    }

    void setUpTouchEvent(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        float $u2, $u3;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $u2;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $u3;

        this.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        return;
    }

    void setupTouch()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        int $u3;
        android.view.View view, $u-1;
        androidx.constraintlayout.motion.widget.MotionLayout $u2;
        java.lang.StringBuilder sv;
        android.content.Context $u-1#9;
        java.lang.String $u-1#11;
        boolean sv#16;
        androidx.core.widget.NestedScrollView sv#18;
        androidx.constraintlayout.motion.widget.TouchResponse$1 $u2#19;
        androidx.constraintlayout.motion.widget.TouchResponse$2 $u2#20;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        view = null;

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $u3 == -1 goto label1;

        $u2 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1 = virtualinvoke $u2.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($u3);

        view = $u-1;

        if $u-1 != null goto label1;

        sv = new java.lang.StringBuilder;

        specialinvoke sv.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke sv.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find TouchAnchorId @id/");

        $u2 = this.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $u-1#9 = virtualinvoke $u2.<androidx.constraintlayout.motion.widget.MotionLayout: android.content.Context getContext()>();

        $u3 = this.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $u-1#11 = staticinvoke <androidx.constraintlayout.motion.widget.Debug: java.lang.String getName(android.content.Context,int)>($u-1#9, $u3);

        virtualinvoke sv.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#11);

        $u-1#11 = virtualinvoke sv.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TouchResponse", $u-1#11);

     label1:
        sv#16 = view instanceof androidx.core.widget.NestedScrollView;

        if sv#16 == 0 goto label2;

        sv#18 = (androidx.core.widget.NestedScrollView) view;

        $u2#19 = new androidx.constraintlayout.motion.widget.TouchResponse$1;

        specialinvoke $u2#19.<androidx.constraintlayout.motion.widget.TouchResponse$1: void <init>(androidx.constraintlayout.motion.widget.TouchResponse)>(this);

        virtualinvoke sv#18.<androidx.core.widget.NestedScrollView: void setOnTouchListener(android.view.View$OnTouchListener)>($u2#19);

        $u2#20 = new androidx.constraintlayout.motion.widget.TouchResponse$2;

        specialinvoke $u2#20.<androidx.constraintlayout.motion.widget.TouchResponse$2: void <init>(androidx.constraintlayout.motion.widget.TouchResponse)>(this);

        virtualinvoke sv#18.<androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)>($u2#20);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.motion.widget.TouchResponse this;
        java.lang.String $u-1;
        java.lang.StringBuilder $u0;
        float $u1;

        this := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $u1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u1);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $u1 = this.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u1);

        $u-1 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1;
    }
}
