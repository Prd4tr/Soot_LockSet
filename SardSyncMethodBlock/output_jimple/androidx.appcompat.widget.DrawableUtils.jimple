public class androidx.appcompat.widget.DrawableUtils extends java.lang.Object
{
    private static final int[] CHECKED_STATE_SET;
    private static final int[] EMPTY_STATE_SET;
    public static final android.graphics.Rect INSETS_NONE;
    private static final java.lang.String TAG;
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME;
    private static java.lang.Class sInsetsClazz;

    static void <clinit>()
    {
        java.lang.Class $u-1;
        int[] $u0;
        android.graphics.Rect $u0#5;
        int $u0#6;
        java.lang.ClassNotFoundException $u0#10;

        <androidx.appcompat.widget.DrawableUtils: java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME> = "android.graphics.drawable.VectorDrawable";

        <androidx.appcompat.widget.DrawableUtils: java.lang.String TAG> = "DrawableUtils";

        $u0 = newarray (int)[1];

        $u0[0] = 16842912;

        <androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET> = $u0;

        $u0 = newarray (int)[0];

        <androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET> = $u0;

        $u0#5 = new android.graphics.Rect;

        specialinvoke $u0#5.<android.graphics.Rect: void <init>()>();

        <androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE> = $u0#5;

        $u0#6 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0#6 < 18 goto label4;

     label1:
        $u-1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.graphics.Insets");

     label2:
        <androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz> = $u-1;

        return;

     label3:
        $u0#10 := @caughtexception;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private void <init>()
    {
        androidx.appcompat.widget.DrawableUtils this;

        this := @this: androidx.appcompat.widget.DrawableUtils;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u8;
        int $u4, $u5;
        boolean state;
        android.graphics.drawable.Drawable$ConstantState $u-1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState containerState;
        android.graphics.drawable.Drawable[] $u-1#15;
        androidx.core.graphics.drawable.WrappedDrawable state#20;
        androidx.appcompat.graphics.drawable.DrawableWrapper state#27;
        android.graphics.drawable.ScaleDrawable state#34;

        $u8 := @parameter0: android.graphics.drawable.Drawable;

        $u4 = <android.os.Build$VERSION: int SDK_INT>;

        if $u4 >= 15 goto label01;

        state = $u8 instanceof android.graphics.drawable.InsetDrawable;

        if state == 0 goto label01;

        return 0;

     label01:
        $u4 = <android.os.Build$VERSION: int SDK_INT>;

        if $u4 >= 15 goto label02;

        state = $u8 instanceof android.graphics.drawable.GradientDrawable;

        if state == 0 goto label02;

        return 0;

     label02:
        $u4 = <android.os.Build$VERSION: int SDK_INT>;

        if $u4 >= 17 goto label03;

        state = $u8 instanceof android.graphics.drawable.LayerDrawable;

        if state == 0 goto label03;

        return 0;

     label03:
        state = $u8 instanceof android.graphics.drawable.DrawableContainer;

        if state == 0 goto label07;

        $u-1 = virtualinvoke $u8.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        state = $u-1 instanceof android.graphics.drawable.DrawableContainer$DrawableContainerState;

        if state == 0 goto label06;

        containerState = (android.graphics.drawable.DrawableContainer$DrawableContainerState) $u-1;

        $u-1#15 = virtualinvoke containerState.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>();

        $u4 = lengthof $u-1#15;

        $u5 = 0;

     label04:
        if $u5 >= $u4 goto label06;

        $u8 = $u-1#15[$u5];

        state = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u8);

        if state != 0 goto label05;

        return 0;

     label05:
        $u5 = $u5 + 1;

        goto label04;

     label06:
        goto label10;

     label07:
        state = $u8 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if state == 0 goto label08;

        state#20 = (androidx.core.graphics.drawable.WrappedDrawable) $u8;

        $u8 = interfaceinvoke state#20.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

        state = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u8);

        return state;

     label08:
        state = $u8 instanceof androidx.appcompat.graphics.drawable.DrawableWrapper;

        if state == 0 goto label09;

        state#27 = (androidx.appcompat.graphics.drawable.DrawableWrapper) $u8;

        $u8 = virtualinvoke state#27.<androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()>();

        state = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u8);

        return state;

     label09:
        state = $u8 instanceof android.graphics.drawable.ScaleDrawable;

        if state == 0 goto label10;

        state#34 = (android.graphics.drawable.ScaleDrawable) $u8;

        $u8 = virtualinvoke state#34.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>();

        state = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u8);

        return state;

     label10:
        return 1;
    }

    static void fixDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        int $u0;
        java.lang.Class $u-1;
        java.lang.String $u-1#5, $u1;
        boolean $u-1#8;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 != 21 goto label1;

        $u-1 = virtualinvoke $u2.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#5 = virtualinvoke $u-1.<java.lang.Class: java.lang.String getName()>();

        $u1 = "android.graphics.drawable.VectorDrawable";

        $u-1#8 = virtualinvoke $u1.<java.lang.String: boolean equals(java.lang.Object)>($u-1#5);

        if $u-1#8 == 0 goto label1;

        staticinvoke <androidx.appcompat.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)>($u2);

     label1:
        return;
    }

    private static void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        int[] $u-1, $u1#2;
        int $u1;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u-1 = virtualinvoke $u2.<android.graphics.drawable.Drawable: int[] getState()>();

        if $u-1 == null goto label2;

        $u1 = lengthof $u-1;

        if $u1 != 0 goto label1;

        goto label2;

     label1:
        $u1#2 = <androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET>;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: boolean setState(int[])>($u1#2);

        goto label3;

     label2:
        $u1#2 = <androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET>;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: boolean setState(int[])>($u1#2);

     label3:
        virtualinvoke $u2.<android.graphics.drawable.Drawable: boolean setState(int[])>($u-1);

        return;
    }

    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    {
        int $u5, $u6, $u-1#33;
        java.lang.reflect.Field field;
        android.graphics.drawable.Drawable $u14;
        android.graphics.Insets $u-1;
        android.graphics.Rect result;
        java.lang.Class insets;
        java.lang.Class[] result1;
        java.lang.reflect.Method $u-1#20;
        java.lang.Object[] result#22;
        java.lang.Object $u-1#23;
        java.lang.reflect.Field[] $u-1#27;
        java.lang.String $u-1#30;
        byte $u9;
        boolean $u-1#36;
        java.lang.Exception insets#55;

        $u14 := @parameter0: android.graphics.drawable.Drawable;

        $u5 = <android.os.Build$VERSION: int SDK_INT>;

        if $u5 < 29 goto label01;

        $u-1 = virtualinvoke $u14.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        result = new android.graphics.Rect;

        specialinvoke result.<android.graphics.Rect: void <init>()>();

        $u5 = $u-1.<android.graphics.Insets: int left>;

        result.<android.graphics.Rect: int left> = $u5;

        $u5 = $u-1.<android.graphics.Insets: int right>;

        result.<android.graphics.Rect: int right> = $u5;

        $u5 = $u-1.<android.graphics.Insets: int top>;

        result.<android.graphics.Rect: int top> = $u5;

        $u5 = $u-1.<android.graphics.Insets: int bottom>;

        result.<android.graphics.Rect: int bottom> = $u5;

        return result;

     label01:
        insets = <androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz>;

        if insets == null goto label34;

     label02:
        $u14 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)>($u14);

        insets = virtualinvoke $u14.<java.lang.Object: java.lang.Class getClass()>();

        result1 = newarray (java.lang.Class)[0];

        $u-1#20 = virtualinvoke insets.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getOpticalInsets", result1);

        result#22 = newarray (java.lang.Object)[0];

        $u-1#23 = virtualinvoke $u-1#20.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($u14, result#22);

     label03:
        if $u-1#23 == null goto label32;

        result = new android.graphics.Rect;

     label04:
        specialinvoke result.<android.graphics.Rect: void <init>()>();

     label05:
        insets = <androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz>;

     label06:
        $u-1#27 = virtualinvoke insets.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        $u5 = lengthof $u-1#27;

     label07:
        $u6 = 0;

     label08:
        if $u6 >= $u5 goto label31;

     label09:
        field = $u-1#27[$u6];

        $u-1#30 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

     label10:
        $u9 = -1;

     label11:
        $u-1#33 = virtualinvoke $u-1#30.<java.lang.String: int hashCode()>();

     label12:
        lookupswitch($u-1#33)
        {
            case -1383228885: goto label20;
            case 115029: goto label18;
            case 3317767: goto label16;
            case 108511772: goto label14;
            default: goto label13;
        };

     label13:
        goto label22;

     label14:
        $u-1#36 = virtualinvoke $u-1#30.<java.lang.String: boolean equals(java.lang.Object)>("right");

     label15:
        if $u-1#36 == 0 goto label13;

        $u9 = 2;

        goto label22;

     label16:
        $u-1#36 = virtualinvoke $u-1#30.<java.lang.String: boolean equals(java.lang.Object)>("left");

     label17:
        if $u-1#36 == 0 goto label13;

        $u9 = 0;

        goto label22;

     label18:
        $u-1#36 = virtualinvoke $u-1#30.<java.lang.String: boolean equals(java.lang.Object)>("top");

     label19:
        if $u-1#36 == 0 goto label13;

        $u9 = 1;

        goto label22;

     label20:
        $u-1#36 = virtualinvoke $u-1#30.<java.lang.String: boolean equals(java.lang.Object)>("bottom");

     label21:
        if $u-1#36 == 0 goto label13;

        $u9 = 3;

     label22:
        if $u9 == 0 goto label29;

        if $u9 == 1 goto label27;

        if $u9 == 2 goto label25;

        if $u9 == 3 goto label23;

        goto label30;

     label23:
        $u-1#33 = virtualinvoke field.<java.lang.reflect.Field: int getInt(java.lang.Object)>($u-1#23);

        result.<android.graphics.Rect: int bottom> = $u-1#33;

     label24:
        goto label30;

     label25:
        $u-1#33 = virtualinvoke field.<java.lang.reflect.Field: int getInt(java.lang.Object)>($u-1#23);

        result.<android.graphics.Rect: int right> = $u-1#33;

     label26:
        goto label30;

     label27:
        $u-1#33 = virtualinvoke field.<java.lang.reflect.Field: int getInt(java.lang.Object)>($u-1#23);

        result.<android.graphics.Rect: int top> = $u-1#33;

     label28:
        goto label30;

     label29:
        $u-1#33 = virtualinvoke field.<java.lang.reflect.Field: int getInt(java.lang.Object)>($u-1#23);

        result.<android.graphics.Rect: int left> = $u-1#33;

     label30:
        $u6 = $u6 + 1;

        goto label08;

     label31:
        return result;

     label32:
        goto label34;

     label33:
        insets#55 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DrawableUtils", "Couldn\'t obtain the optical insets. Ignoring.");

     label34:
        result = <androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE>;

        return result;

        catch java.lang.Exception from label02 to label03 with label33;
        catch java.lang.Exception from label04 to label05 with label33;
        catch java.lang.Exception from label06 to label07 with label33;
        catch java.lang.Exception from label09 to label10 with label33;
        catch java.lang.Exception from label11 to label12 with label33;
        catch java.lang.Exception from label14 to label15 with label33;
        catch java.lang.Exception from label16 to label17 with label33;
        catch java.lang.Exception from label18 to label19 with label33;
        catch java.lang.Exception from label20 to label21 with label33;
        catch java.lang.Exception from label23 to label24 with label33;
        catch java.lang.Exception from label25 to label26 with label33;
        catch java.lang.Exception from label27 to label28 with label33;
        catch java.lang.Exception from label29 to label30 with label33;
    }

    public static android.graphics.PorterDuff$Mode parseTintMode(int, android.graphics.PorterDuff$Mode)
    {
        int $u1;
        android.graphics.PorterDuff$Mode $u2;

        $u1 := @parameter0: int;

        $u2 := @parameter1: android.graphics.PorterDuff$Mode;

        if $u1 == 3 goto label7;

        if $u1 == 5 goto label6;

        if $u1 == 9 goto label5;

        lookupswitch($u1)
        {
            case 14: goto label4;
            case 15: goto label3;
            case 16: goto label2;
            default: goto label1;
        };

     label1:
        return $u2;

     label2:
        $u2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode ADD>;

        return $u2;

     label3:
        $u2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SCREEN>;

        return $u2;

     label4:
        $u2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return $u2;

     label5:
        $u2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        return $u2;

     label6:
        $u2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        return $u2;

     label7:
        $u2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER>;

        return $u2;
    }
}
