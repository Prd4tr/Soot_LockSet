class androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton extends androidx.appcompat.widget.AppCompatImageView implements androidx.appcompat.widget.ActionMenuView$ActionMenuChildView
{
    final androidx.appcompat.widget.ActionMenuPresenter this$0;

    public void <init>(androidx.appcompat.widget.ActionMenuPresenter, android.content.Context)
    {
        androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this;
        androidx.appcompat.widget.ActionMenuPresenter $u3;
        android.content.Context $u4;
        java.lang.CharSequence $u-1;
        int $u0;
        androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 $u0#6;

        this := @this: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton;

        $u3 := @parameter0: androidx.appcompat.widget.ActionMenuPresenter;

        $u4 := @parameter1: android.content.Context;

        this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0> = $u3;

        $u0 = <androidx.appcompat.R$attr: int actionOverflowButtonStyle>;

        specialinvoke this.<androidx.appcompat.widget.AppCompatImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($u4, null, $u0);

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: void setClickable(boolean)>(1);

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: void setFocusable(boolean)>(1);

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: void setVisibility(int)>(0);

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: void setEnabled(boolean)>(1);

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: java.lang.CharSequence getContentDescription()>();

        staticinvoke <androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>(this, $u-1);

        $u0#6 = new androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1;

        specialinvoke $u0#6.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter)>(this, this, $u3);

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: void setOnTouchListener(android.view.View$OnTouchListener)>($u0#6);

        return;
    }

    public boolean needsDividerAfter()
    {
        androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this;

        this := @this: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton;

        return 0;
    }

    public boolean needsDividerBefore()
    {
        androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this;

        this := @this: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton;

        return 0;
    }

    public boolean performClick()
    {
        androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatImageView: boolean performClick()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: void playSoundEffect(int)>(0);

        $u0 = this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return 1;
    }

    protected boolean setFrame(int, int, int, int)
    {
        androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this;
        int $u15, $u16, $u17, $u18, $u-1#11, $u-1#16;
        boolean $u-1;
        android.graphics.drawable.Drawable $u-1#2, $u-1#3;

        this := @this: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton;

        $u15 := @parameter0: int;

        $u16 := @parameter1: int;

        $u17 := @parameter2: int;

        $u18 := @parameter3: int;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatImageView: boolean setFrame(int,int,int,int)>($u15, $u16, $u17, $u18);

        $u-1#2 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: android.graphics.drawable.Drawable getDrawable()>();

        $u-1#3 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: android.graphics.drawable.Drawable getBackground()>();

        if $u-1#2 == null goto label1;

        if $u-1#3 == null goto label1;

        $u17 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: int getWidth()>();

        $u16 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: int getHeight()>();

        $u15 = staticinvoke <java.lang.Math: int max(int,int)>($u17, $u16);

        $u15 = $u15 / 2;

        $u18 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: int getPaddingLeft()>();

        $u-1#11 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: int getPaddingRight()>();

        $u18 = $u18 - $u-1#11;

        $u-1#11 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: int getPaddingTop()>();

        $u-1#16 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: int getPaddingBottom()>();

        $u-1#11 = $u-1#11 - $u-1#16;

        $u17 = $u17 + $u18;

        $u17 = $u17 / 2;

        $u16 = $u16 + $u-1#11;

        $u-1#11 = $u16 / 2;

        $u16 = $u17 - $u15;

        $u18 = $u-1#11 - $u15;

        $u17 = $u17 + $u15;

        $u15 = $u-1#11 + $u15;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($u-1#3, $u16, $u18, $u17, $u15);

     label1:
        return $u-1;
    }
}
