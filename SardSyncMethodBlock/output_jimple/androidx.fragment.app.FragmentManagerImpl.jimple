final class androidx.fragment.app.FragmentManagerImpl extends androidx.fragment.app.FragmentManager implements android.view.LayoutInflater$Factory2
{
    static final int ANIM_DUR;
    public static final int ANIM_STYLE_CLOSE_ENTER;
    public static final int ANIM_STYLE_CLOSE_EXIT;
    public static final int ANIM_STYLE_FADE_ENTER;
    public static final int ANIM_STYLE_FADE_EXIT;
    public static final int ANIM_STYLE_OPEN_ENTER;
    public static final int ANIM_STYLE_OPEN_EXIT;
    static boolean DEBUG;
    static final android.view.animation.Interpolator DECELERATE_CUBIC;
    static final android.view.animation.Interpolator DECELERATE_QUINT;
    static final java.lang.String TAG;
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG;
    static final java.lang.String TARGET_STATE_TAG;
    static final java.lang.String USER_VISIBLE_HINT_TAG;
    static final java.lang.String VIEW_STATE_TAG;
    final java.util.HashMap mActive;
    final java.util.ArrayList mAdded;
    java.util.ArrayList mAvailBackStackIndices;
    java.util.ArrayList mBackStack;
    java.util.ArrayList mBackStackChangeListeners;
    java.util.ArrayList mBackStackIndices;
    androidx.fragment.app.FragmentContainer mContainer;
    java.util.ArrayList mCreatedMenus;
    int mCurState;
    boolean mDestroyed;
    java.lang.Runnable mExecCommit;
    boolean mExecutingActions;
    boolean mHavePendingDeferredStart;
    androidx.fragment.app.FragmentHostCallback mHost;
    private final java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks;
    boolean mNeedMenuInvalidate;
    int mNextFragmentIndex;
    private androidx.fragment.app.FragmentManagerViewModel mNonConfig;
    private final androidx.activity.OnBackPressedCallback mOnBackPressedCallback;
    private androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher;
    androidx.fragment.app.Fragment mParent;
    java.util.ArrayList mPendingActions;
    java.util.ArrayList mPostponedTransactions;
    androidx.fragment.app.Fragment mPrimaryNav;
    android.util.SparseArray mStateArray;
    android.os.Bundle mStateBundle;
    boolean mStateSaved;
    boolean mStopped;
    java.util.ArrayList mTmpAddedFragments;
    java.util.ArrayList mTmpIsPop;
    java.util.ArrayList mTmpRecords;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $u0;

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String VIEW_STATE_TAG> = "android:view_state";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String USER_VISIBLE_HINT_TAG> = "android:user_visible_hint";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String TARGET_STATE_TAG> = "android:target_state";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String TARGET_REQUEST_CODE_STATE_TAG> = "android:target_req_state";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String TAG> = "FragmentManager";

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_EXIT> = 2;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_ENTER> = 1;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_FADE_EXIT> = 6;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_FADE_ENTER> = 5;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_EXIT> = 4;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_ENTER> = 3;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_DUR> = 220;

        <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG> = 0;

        $u0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $u0.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.5F);

        <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT> = $u0;

        $u0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $u0.<android.view.animation.DecelerateInterpolator: void <init>(float)>(1.5F);

        <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC> = $u0;

        return;
    }

    void <init>()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList $u1;
        java.util.HashMap $u1#3;
        androidx.fragment.app.FragmentManagerImpl$1 $u1#4;
        java.util.concurrent.CopyOnWriteArrayList $u1#5;
        androidx.fragment.app.FragmentManagerImpl$2 $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManager: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex> = 0;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded> = $u1;

        $u1#3 = new java.util.HashMap;

        specialinvoke $u1#3.<java.util.HashMap: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive> = $u1#3;

        $u1#4 = new androidx.fragment.app.FragmentManagerImpl$1;

        specialinvoke $u1#4.<androidx.fragment.app.FragmentManagerImpl$1: void <init>(androidx.fragment.app.FragmentManagerImpl,boolean)>(this, 0);

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback> = $u1#4;

        $u1#5 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $u1#5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks> = $u1#5;

        this.<androidx.fragment.app.FragmentManagerImpl: int mCurState> = 0;

        this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = null;

        this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = null;

        $u0 = new androidx.fragment.app.FragmentManagerImpl$2;

        specialinvoke $u0.<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl)>(this);

        this.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit> = $u0;

        return;
    }

    private void addAddedFragments(androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.collection.ArraySet added;
        int state, $u-1, i, $u2, $u-1#18;
        java.util.ArrayList numAdded;
        java.lang.Object $u-1#12;
        androidx.fragment.app.Fragment fragment;
        android.view.View $u2#20;
        boolean $u2#21;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        added := @parameter0: androidx.collection.ArraySet;

        state = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if state >= 1 goto label1;

        return;

     label1:
        state = staticinvoke <java.lang.Math: int min(int,int)>(state, 3);

        numAdded = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke numAdded.<java.util.ArrayList: int size()>();

        i = 0;

     label2:
        if i >= $u-1 goto label4;

        numAdded = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#12 = virtualinvoke numAdded.<java.util.ArrayList: java.lang.Object get(int)>(i);

        fragment = (androidx.fragment.app.Fragment) $u-1#12;

        $u2 = fragment.<androidx.fragment.app.Fragment: int mState>;

        if $u2 >= state goto label3;

        $u2 = virtualinvoke fragment.<androidx.fragment.app.Fragment: int getNextAnim()>();

        $u-1#18 = virtualinvoke fragment.<androidx.fragment.app.Fragment: int getNextTransition()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>(fragment, state, $u2, $u-1#18, 0);

        $u2#20 = fragment.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u2#20 == null goto label3;

        $u2#21 = fragment.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $u2#21 != 0 goto label3;

        $u2#21 = fragment.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $u2#21 == 0 goto label3;

        virtualinvoke added.<androidx.collection.ArraySet: boolean add(java.lang.Object)>(fragment);

     label3:
        i = i + 1;

        goto label2;

     label4:
        return;
    }

    private void animateRemoveFragment(androidx.fragment.app.Fragment, androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u5;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $u6;
        int $u7;
        android.view.View viewToAnimate;
        android.view.ViewGroup container;
        android.view.animation.Animation animation;
        androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation animation#2;
        androidx.fragment.app.FragmentManagerImpl$3 $u3;
        android.animation.Animator animation#7, $u3#8;
        androidx.fragment.app.FragmentManagerImpl$4 $u3#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        $u6 := @parameter1: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        $u7 := @parameter2: int;

        viewToAnimate = $u5.<androidx.fragment.app.Fragment: android.view.View mView>;

        container = $u5.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        virtualinvoke container.<android.view.ViewGroup: void startViewTransition(android.view.View)>(viewToAnimate);

        virtualinvoke $u5.<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>($u7);

        animation = $u6.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        if animation == null goto label1;

        animation#2 = new androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation;

        animation = $u6.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        specialinvoke animation#2.<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View)>(animation, container, viewToAnimate);

        viewToAnimate = $u5.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u5.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(viewToAnimate);

        $u3 = new androidx.fragment.app.FragmentManagerImpl$3;

        specialinvoke $u3.<androidx.fragment.app.FragmentManagerImpl$3: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment)>(this, container, $u5);

        virtualinvoke animation#2.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($u3);

        viewToAnimate = $u5.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke viewToAnimate.<android.view.View: void startAnimation(android.view.animation.Animation)>(animation#2);

        return;

     label1:
        animation#7 = $u6.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $u3#8 = $u6.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        virtualinvoke $u5.<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>($u3#8);

        $u3#9 = new androidx.fragment.app.FragmentManagerImpl$4;

        specialinvoke $u3#9.<androidx.fragment.app.FragmentManagerImpl$4: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>(this, container, viewToAnimate, $u5);

        virtualinvoke animation#7.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($u3#9);

        viewToAnimate = $u5.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke animation#7.<android.animation.Animator: void setTarget(java.lang.Object)>(viewToAnimate);

        virtualinvoke animation#7.<android.animation.Animator: void start()>();

        return;
    }

    private void burpActive()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.HashMap values;
        java.util.Collection $u-1;
        java.util.Set $u-1#5;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        values = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke values.<java.util.HashMap: java.util.Collection values()>();

        $u-1#5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(null);

        interfaceinvoke $u-1.<java.util.Collection: boolean removeAll(java.util.Collection)>($u-1#5);

        return;
    }

    private void checkStateLoss()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u-1;
        java.lang.IllegalStateException $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>();

        if $u-1 != 0 goto label1;

        return;

     label1:
        $u0 = new java.lang.IllegalStateException;

        specialinvoke $u0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not perform this action after onSaveInstanceState");

        throw $u0;
    }

    private void cleanupExec()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        virtualinvoke $u0.<java.util.ArrayList: void clear()>();

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        virtualinvoke $u0.<java.util.ArrayList: void clear()>();

        return;
    }

    private void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u3;
        java.lang.String $u1;
        java.lang.Object $u-1;
        java.util.HashMap $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        if $u3 == null goto label1;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u1 = $u3.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u1);

        if $u-1 != $u3 goto label1;

        virtualinvoke $u3.<androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()>();

     label1:
        return;
    }

    private void dispatchStateChange(int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u3;
        java.lang.Throwable $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: int;

     label1:
        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>($u3, 0);

     label2:
        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        return;

     label3:
        $u0 := @caughtexception;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        throw $u0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void endAnimatingAwayFragments()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.HashMap $u0;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#4;
        boolean $u-1#6;
        java.lang.Object $u-1#8;
        androidx.fragment.app.Fragment fragment;
        android.view.View $u-1#11;
        int $u-1#13;
        android.view.animation.Animation $u-1#15;
        android.animation.Animator $u-1#18;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.util.Collection values()>();

        $u-1#4 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $u-1#6 = interfaceinvoke $u-1#4.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label4;

        $u-1#8 = interfaceinvoke $u-1#4.<java.util.Iterator: java.lang.Object next()>();

        fragment = (androidx.fragment.app.Fragment) $u-1#8;

        if fragment == null goto label1;

        $u-1#11 = virtualinvoke fragment.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $u-1#11 == null goto label3;

        $u-1#13 = virtualinvoke fragment.<androidx.fragment.app.Fragment: int getStateAfterAnimating()>();

        $u-1#11 = virtualinvoke fragment.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        $u-1#15 = virtualinvoke $u-1#11.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $u-1#15 == null goto label2;

        virtualinvoke $u-1#15.<android.view.animation.Animation: void cancel()>();

        virtualinvoke $u-1#11.<android.view.View: void clearAnimation()>();

     label2:
        virtualinvoke fragment.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(null);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>(fragment, $u-1#13, 0, 0, 0);

        goto label1;

     label3:
        $u-1#18 = virtualinvoke fragment.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $u-1#18 == null goto label1;

        $u-1#18 = virtualinvoke fragment.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        virtualinvoke $u-1#18.<android.animation.Animator: void end()>();

        goto label1;

     label4:
        return;
    }

    private void ensureExecReady(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u3, $u0;
        androidx.fragment.app.FragmentHostCallback $u0#2;
        android.os.Looper $u-1, $u-1#8;
        android.os.Handler $u-1#6;
        java.util.ArrayList $u0#10;
        java.lang.Throwable $u1;
        java.lang.IllegalStateException $u0#17;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: boolean;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions>;

        if $u0 != 0 goto label8;

        $u0#2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $u0#2 == null goto label7;

        $u-1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $u0#2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#6 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $u-1#8 = virtualinvoke $u-1#6.<android.os.Handler: android.os.Looper getLooper()>();

        if $u-1 != $u-1#8 goto label6;

        if $u3 != 0 goto label1;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

     label1:
        $u0#10 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        if $u0#10 != null goto label2;

        $u0#10 = new java.util.ArrayList;

        specialinvoke $u0#10.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords> = $u0#10;

        $u0#10 = new java.util.ArrayList;

        specialinvoke $u0#10.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop> = $u0#10;

     label2:
        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label3:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>(null, null);

     label4:
        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        return;

     label5:
        $u1 := @caughtexception;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        throw $u1;

     label6:
        $u0#17 = new java.lang.IllegalStateException;

        specialinvoke $u0#17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread of fragment host");

        throw $u0#17;

     label7:
        $u0#17 = new java.lang.IllegalStateException;

        specialinvoke $u0#17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Fragment host has been destroyed");

        throw $u0#17;

     label8:
        $u0#17 = new java.lang.IllegalStateException;

        specialinvoke $u0#17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager is already executing transactions");

        throw $u0#17;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static void executeOps(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        java.util.ArrayList records, isRecordPop;
        int $u7, $u8, $u4;
        java.lang.Object $u-1;
        androidx.fragment.app.BackStackRecord record;
        java.lang.Boolean isPop;
        boolean $u-1#8, moveToState;

        records := @parameter0: java.util.ArrayList;

        isRecordPop := @parameter1: java.util.ArrayList;

        $u7 := @parameter2: int;

        $u8 := @parameter3: int;

     label1:
        if $u7 >= $u8 goto label6;

        $u-1 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>($u7);

        record = (androidx.fragment.app.BackStackRecord) $u-1;

        $u-1 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>($u7);

        isPop = (java.lang.Boolean) $u-1;

        $u-1#8 = virtualinvoke isPop.<java.lang.Boolean: boolean booleanValue()>();

        moveToState = 1;

        if $u-1#8 == 0 goto label4;

        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(-1);

        $u4 = $u8 + -1;

        if $u7 != $u4 goto label2;

        goto label3;

     label2:
        moveToState = 0;

     label3:
        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void executePopOps(boolean)>(moveToState);

        goto label5;

     label4:
        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void executeOps()>();

     label5:
        $u7 = $u7 + 1;

        goto label1;

     label6:
        return;
    }

    private void executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList records, isRecordPop, oldPrimaryNav, recordNum;
        int $u20, $u21, recordNum#11;
        boolean allowReordering, addToBackStack1, $u14, $u-1#21;
        java.lang.Object $u-1;
        androidx.fragment.app.BackStackRecord addToBackStack;
        androidx.fragment.app.Fragment $u-1#9;
        java.lang.Boolean oldPrimaryNav#20;
        androidx.collection.ArraySet addToBackStack#38;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        records := @parameter0: java.util.ArrayList;

        isRecordPop := @parameter1: java.util.ArrayList;

        $u20 := @parameter2: int;

        $u21 := @parameter3: int;

        $u-1 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>($u20);

        addToBackStack = (androidx.fragment.app.BackStackRecord) $u-1;

        allowReordering = addToBackStack.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        oldPrimaryNav = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        if oldPrimaryNav != null goto label01;

        oldPrimaryNav = new java.util.ArrayList;

        specialinvoke oldPrimaryNav.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments> = oldPrimaryNav;

        goto label02;

     label01:
        virtualinvoke oldPrimaryNav.<java.util.ArrayList: void clear()>();

     label02:
        oldPrimaryNav = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        recordNum = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke oldPrimaryNav.<java.util.ArrayList: boolean addAll(java.util.Collection)>(recordNum);

        recordNum#11 = $u20;

        addToBackStack1 = 0;

        $u-1#9 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>();

     label03:
        $u14 = 1;

        if recordNum#11 >= $u21 goto label08;

        $u-1 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>(recordNum#11);

        addToBackStack = (androidx.fragment.app.BackStackRecord) $u-1;

        $u-1 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>(recordNum#11);

        oldPrimaryNav#20 = (java.lang.Boolean) $u-1;

        $u-1#21 = virtualinvoke oldPrimaryNav#20.<java.lang.Boolean: boolean booleanValue()>();

        if $u-1#21 != 0 goto label04;

        oldPrimaryNav = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        $u-1#9 = virtualinvoke addToBackStack.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)>(oldPrimaryNav, $u-1#9);

        goto label05;

     label04:
        oldPrimaryNav = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        $u-1#9 = virtualinvoke addToBackStack.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)>(oldPrimaryNav, $u-1#9);

     label05:
        if addToBackStack1 != 0 goto label07;

        addToBackStack1 = addToBackStack.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if addToBackStack1 == 0 goto label06;

        goto label07;

     label06:
        $u14 = 0;

     label07:
        addToBackStack1 = $u14;

        recordNum#11 = recordNum#11 + 1;

        goto label03;

     label08:
        oldPrimaryNav = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        virtualinvoke oldPrimaryNav.<java.util.ArrayList: void clear()>();

        if allowReordering != 0 goto label09;

        staticinvoke <androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>(this, records, isRecordPop, $u20, $u21, 0);

     label09:
        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>(records, isRecordPop, $u20, $u21);

        recordNum#11 = $u21;

        if allowReordering == 0 goto label10;

        addToBackStack#38 = new androidx.collection.ArraySet;

        specialinvoke addToBackStack#38.<androidx.collection.ArraySet: void <init>()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>(addToBackStack#38);

        recordNum#11 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)>(records, isRecordPop, $u20, $u21, addToBackStack#38);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)>(addToBackStack#38);

     label10:
        if recordNum#11 == $u20 goto label11;

        if allowReordering == 0 goto label11;

        staticinvoke <androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>(this, records, isRecordPop, $u20, recordNum#11, 1);

        recordNum#11 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>(recordNum#11, 1);

     label11:
        if $u20 >= $u21 goto label13;

        $u-1 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>($u20);

        addToBackStack = (androidx.fragment.app.BackStackRecord) $u-1;

        $u-1 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>($u20);

        oldPrimaryNav#20 = (java.lang.Boolean) $u-1;

        allowReordering = virtualinvoke oldPrimaryNav#20.<java.lang.Boolean: boolean booleanValue()>();

        if allowReordering == 0 goto label12;

        recordNum#11 = addToBackStack.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if recordNum#11 < 0 goto label12;

        recordNum#11 = addToBackStack.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)>(recordNum#11);

        addToBackStack.<androidx.fragment.app.BackStackRecord: int mIndex> = -1;

     label12:
        virtualinvoke addToBackStack.<androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()>();

        $u20 = $u20 + 1;

        goto label11;

     label13:
        if addToBackStack1 == 0 goto label14;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void reportBackStackChanged()>();

     label14:
        return;
    }

    private void executePostponedTransaction(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList records, isRecordPop, numPostponed;
        int numPostponed#2, i, $u-1#12;
        java.lang.Object $u-1;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener listener;
        boolean index;
        androidx.fragment.app.BackStackRecord index#11;
        java.lang.Boolean index1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        records := @parameter0: java.util.ArrayList;

        isRecordPop := @parameter1: java.util.ArrayList;

        numPostponed = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if numPostponed != null goto label1;

        numPostponed#2 = 0;

        goto label2;

     label1:
        numPostponed#2 = virtualinvoke numPostponed.<java.util.ArrayList: int size()>();

     label2:
        i = 0;

     label3:
        if i >= numPostponed#2 goto label8;

        numPostponed = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $u-1 = virtualinvoke numPostponed.<java.util.ArrayList: java.lang.Object get(int)>(i);

        listener = (androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener) $u-1;

        if records == null goto label4;

        index = listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack>;

        if index != 0 goto label4;

        index#11 = listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord>;

        $u-1#12 = virtualinvoke records.<java.util.ArrayList: int indexOf(java.lang.Object)>(index#11);

        if $u-1#12 == -1 goto label4;

        $u-1 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>($u-1#12);

        index1 = (java.lang.Boolean) $u-1;

        index = virtualinvoke index1.<java.lang.Boolean: boolean booleanValue()>();

        if index == 0 goto label4;

        numPostponed = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke numPostponed.<java.util.ArrayList: java.lang.Object remove(int)>(i);

        i = i + -1;

        numPostponed#2 = numPostponed#2 + -1;

        virtualinvoke listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()>();

        goto label7;

     label4:
        index = virtualinvoke listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()>();

        if index != 0 goto label5;

        if records == null goto label7;

        index#11 = listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord>;

        $u-1#12 = virtualinvoke records.<java.util.ArrayList: int size()>();

        index = virtualinvoke index#11.<androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)>(records, 0, $u-1#12);

        if index == 0 goto label7;

     label5:
        numPostponed = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke numPostponed.<java.util.ArrayList: java.lang.Object remove(int)>(i);

        i = i + -1;

        numPostponed#2 = numPostponed#2 + -1;

        if records == null goto label6;

        index = listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack>;

        if index != 0 goto label6;

        index#11 = listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord>;

        $u-1#12 = virtualinvoke records.<java.util.ArrayList: int indexOf(java.lang.Object)>(index#11);

        if $u-1#12 == -1 goto label6;

        $u-1 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>($u-1#12);

        index1 = (java.lang.Boolean) $u-1;

        index = virtualinvoke index1.<java.lang.Boolean: boolean booleanValue()>();

        if index == 0 goto label6;

        virtualinvoke listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()>();

        goto label7;

     label6:
        virtualinvoke listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()>();

     label7:
        i = i + 1;

        goto label3;

     label8:
        return;
    }

    private androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u8;
        android.view.ViewGroup container, $u6;
        android.view.View view;
        java.util.ArrayList fragmentIndex;
        int $u-1;
        java.lang.Object $u-1#6;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u8 := @parameter0: androidx.fragment.app.Fragment;

        container = $u8.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        view = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        if container == null goto label4;

        if view != null goto label1;

        return null;

     label1:
        fragmentIndex = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke fragmentIndex.<java.util.ArrayList: int indexOf(java.lang.Object)>($u8);

        $u-1 = $u-1 + -1;

     label2:
        if $u-1 < 0 goto label4;

        fragmentIndex = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke fragmentIndex.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        $u8 = (androidx.fragment.app.Fragment) $u-1#6;

        $u6 = $u8.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if $u6 != container goto label3;

        view = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        if view == null goto label3;

        return $u8;

     label3:
        $u-1 = $u-1 + -1;

        goto label2;

     label4:
        return null;
    }

    private void forcePostponedTransactions()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList $u0;
        boolean $u-1;
        java.lang.Object $u-1#6;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener $u0#8;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $u0 == null goto label2;

     label1:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1 != 0 goto label2;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $u-1#6 = virtualinvoke $u0.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $u0#8 = (androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener) $u-1#6;

        virtualinvoke $u0#8.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()>();

        goto label1;

     label2:
        return;
    }

    private boolean generateOpsForPendingActions(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList records, isPop, numActions;
        boolean didSomething, $u-1#14;
        int $u-1, i;
        java.lang.Object $u-1#11;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $u3;
        androidx.fragment.app.FragmentHostCallback i#17;
        android.os.Handler $u-1#18;
        java.lang.Runnable $u3#20;
        java.lang.Throwable numActions#22;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        records := @parameter0: java.util.ArrayList;

        isPop := @parameter1: java.util.ArrayList;

        didSomething = 0;

        entermonitor this;

     label01:
        numActions = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if numActions == null goto label06;

        numActions = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $u-1 = virtualinvoke numActions.<java.util.ArrayList: int size()>();

        if $u-1 != 0 goto label02;

        goto label06;

     label02:
        numActions = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $u-1 = virtualinvoke numActions.<java.util.ArrayList: int size()>();

        i = 0;

     label03:
        if i >= $u-1 goto label04;

        numActions = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $u-1#11 = virtualinvoke numActions.<java.util.ArrayList: java.lang.Object get(int)>(i);

        $u3 = (androidx.fragment.app.FragmentManagerImpl$OpGenerator) $u-1#11;

        $u-1#14 = interfaceinvoke $u3.<androidx.fragment.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>(records, isPop);

        didSomething = didSomething | $u-1#14;

        i = i + 1;

        goto label03;

     label04:
        records = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        virtualinvoke records.<java.util.ArrayList: void clear()>();

        i#17 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#18 = virtualinvoke i#17.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $u3#20 = this.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $u-1#18.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($u3#20);

        exitmonitor this;

     label05:
        return didSomething;

     label06:
        exitmonitor this;

     label07:
        return 0;

     label08:
        numActions#22 := @caughtexception;

        exitmonitor this;

     label09:
        goto label10;

     label10:
        throw numActions#22;

        catch java.lang.Throwable from label01 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private boolean isMenuAvailable(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u2;
        boolean $u-1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: androidx.fragment.app.Fragment;

        $u-1 = $u2.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $u-1 == 0 goto label1;

        $u-1 = $u2.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $u-1 != 0 goto label2;

     label1:
        this = $u2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager>;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean checkForMenus()>();

        if $u-1 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float, float)
    {
        float $u3, $u4;
        android.view.animation.AlphaAnimation anim;
        android.view.animation.Interpolator $u1;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $u1#3;

        $u3 := @parameter0: float;

        $u4 := @parameter1: float;

        anim = new android.view.animation.AlphaAnimation;

        specialinvoke anim.<android.view.animation.AlphaAnimation: void <init>(float,float)>($u3, $u4);

        $u1 = <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC>;

        virtualinvoke anim.<android.view.animation.AlphaAnimation: void setInterpolator(android.view.animation.Interpolator)>($u1);

        virtualinvoke anim.<android.view.animation.AlphaAnimation: void setDuration(long)>(220L);

        $u1#3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $u1#3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>(anim);

        return $u1#3;
    }

    static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float, float, float, float)
    {
        float $u11, $u12, $u13, $u14;
        android.view.animation.AnimationSet set;
        android.view.animation.ScaleAnimation $u10;
        android.view.animation.Interpolator $u2;
        android.view.animation.AlphaAnimation alpha;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $u2#10;

        $u11 := @parameter0: float;

        $u12 := @parameter1: float;

        $u13 := @parameter2: float;

        $u14 := @parameter3: float;

        set = new android.view.animation.AnimationSet;

        specialinvoke set.<android.view.animation.AnimationSet: void <init>(boolean)>(0);

        $u10 = new android.view.animation.ScaleAnimation;

        specialinvoke $u10.<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>($u11, $u12, $u11, $u12, 1, 0.5F, 1, 0.5F);

        $u2 = <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT>;

        virtualinvoke $u10.<android.view.animation.ScaleAnimation: void setInterpolator(android.view.animation.Interpolator)>($u2);

        virtualinvoke $u10.<android.view.animation.ScaleAnimation: void setDuration(long)>(220L);

        virtualinvoke set.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($u10);

        alpha = new android.view.animation.AlphaAnimation;

        specialinvoke alpha.<android.view.animation.AlphaAnimation: void <init>(float,float)>($u13, $u14);

        $u2 = <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC>;

        virtualinvoke alpha.<android.view.animation.AlphaAnimation: void setInterpolator(android.view.animation.Interpolator)>($u2);

        virtualinvoke alpha.<android.view.animation.AlphaAnimation: void setDuration(long)>(220L);

        virtualinvoke set.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(alpha);

        $u2#10 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $u2#10.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>(set);

        return $u2#10;
    }

    private void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.collection.ArraySet fragments;
        int $u-1, i;
        java.lang.Object $u-1#3;
        androidx.fragment.app.Fragment fragment;
        boolean view;
        android.view.View $u-1#7;
        float $u-1#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        fragments := @parameter0: androidx.collection.ArraySet;

        $u-1 = virtualinvoke fragments.<androidx.collection.ArraySet: int size()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#3 = virtualinvoke fragments.<androidx.collection.ArraySet: java.lang.Object valueAt(int)>(i);

        fragment = (androidx.fragment.app.Fragment) $u-1#3;

        view = fragment.<androidx.fragment.app.Fragment: boolean mAdded>;

        if view != 0 goto label2;

        $u-1#7 = virtualinvoke fragment.<androidx.fragment.app.Fragment: android.view.View requireView()>();

        $u-1#9 = virtualinvoke $u-1#7.<android.view.View: float getAlpha()>();

        fragment.<androidx.fragment.app.Fragment: float mPostponedAlpha> = $u-1#9;

        virtualinvoke $u-1#7.<android.view.View: void setAlpha(float)>(0.0F);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    private boolean popBackStackImmediate(java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u10;
        int $u11, $u12;
        java.util.ArrayList $u4, $u5;
        androidx.fragment.app.Fragment childManager;
        androidx.fragment.app.FragmentManager $u-1;
        boolean $u-1#5;
        java.lang.Throwable $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u10 := @parameter0: java.lang.String;

        $u11 := @parameter1: int;

        $u12 := @parameter2: int;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>(1);

        childManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        if childManager == null goto label1;

        if $u11 >= 0 goto label1;

        if $u10 != null goto label1;

        $u-1 = virtualinvoke childManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        $u-1#5 = virtualinvoke $u-1.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()>();

        if $u-1#5 == 0 goto label1;

        return 1;

     label1:
        $u4 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $u5 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $u-1#5 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>($u4, $u5, $u10, $u11, $u12);

        if $u-1#5 == 0 goto label5;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $u4 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $u5 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($u4, $u5);

     label3:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        goto label5;

     label4:
        $u0 := @caughtexception;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        throw $u0;

     label5:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void burpActive()>();

        return $u-1#5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private int postponePostponableTransactions(java.util.ArrayList, java.util.ArrayList, int, int, androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList records, isRecordPop, $u7;
        int $u11, $u12, postponeIndex, i, isPostponed;
        androidx.collection.ArraySet added;
        java.lang.Object $u-1;
        androidx.fragment.app.BackStackRecord record;
        java.lang.Boolean isPop;
        boolean $u-1#9, $u-1#11;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener listener;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        records := @parameter0: java.util.ArrayList;

        isRecordPop := @parameter1: java.util.ArrayList;

        $u11 := @parameter2: int;

        $u12 := @parameter3: int;

        added := @parameter4: androidx.collection.ArraySet;

        postponeIndex = $u12;

        i = $u12 + -1;

     label1:
        if i < $u11 goto label9;

        $u-1 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>(i);

        record = (androidx.fragment.app.BackStackRecord) $u-1;

        $u-1 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>(i);

        isPop = (java.lang.Boolean) $u-1;

        $u-1#9 = virtualinvoke isPop.<java.lang.Boolean: boolean booleanValue()>();

        $u-1#11 = virtualinvoke record.<androidx.fragment.app.BackStackRecord: boolean isPostponed()>();

        if $u-1#11 == 0 goto label2;

        isPostponed = i + 1;

        $u-1#11 = virtualinvoke record.<androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)>(records, isPostponed, $u12);

        if $u-1#11 != 0 goto label2;

        $u-1#11 = 1;

        goto label3;

     label2:
        $u-1#11 = 0;

     label3:
        if $u-1#11 == 0 goto label8;

        $u7 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $u7 != null goto label4;

        $u7 = new java.util.ArrayList;

        specialinvoke $u7.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions> = $u7;

     label4:
        listener = new androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener;

        specialinvoke listener.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(androidx.fragment.app.BackStackRecord,boolean)>(record, $u-1#9);

        $u7 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke $u7.<java.util.ArrayList: boolean add(java.lang.Object)>(listener);

        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)>(listener);

        if $u-1#9 == 0 goto label5;

        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void executeOps()>();

        goto label6;

     label5:
        virtualinvoke record.<androidx.fragment.app.BackStackRecord: void executePopOps(boolean)>(0);

     label6:
        postponeIndex = postponeIndex + -1;

        if i == postponeIndex goto label7;

        virtualinvoke records.<java.util.ArrayList: java.lang.Object remove(int)>(i);

        virtualinvoke records.<java.util.ArrayList: void add(int,java.lang.Object)>(postponeIndex, record);

     label7:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>(added);

     label8:
        i = i + -1;

        goto label1;

     label9:
        return postponeIndex;
    }

    private void removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList records, isRecordPop;
        boolean $u-1;
        int $u-1#3, $u-1#5, recordNum, reorderingEnd;
        java.lang.Object $u-1#11;
        androidx.fragment.app.BackStackRecord canReorder;
        java.lang.Boolean $u5;
        java.lang.IllegalStateException numRecords;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        records := @parameter0: java.util.ArrayList;

        isRecordPop := @parameter1: java.util.ArrayList;

        if records == null goto label9;

        $u-1 = virtualinvoke records.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1 == 0 goto label1;

        return;

     label1:
        if isRecordPop == null goto label8;

        $u-1#3 = virtualinvoke records.<java.util.ArrayList: int size()>();

        $u-1#5 = virtualinvoke isRecordPop.<java.util.ArrayList: int size()>();

        if $u-1#3 != $u-1#5 goto label8;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>(records, isRecordPop);

        $u-1#3 = virtualinvoke records.<java.util.ArrayList: int size()>();

        $u-1#5 = 0;

        recordNum = 0;

     label2:
        if recordNum >= $u-1#3 goto label7;

        $u-1#11 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>(recordNum);

        canReorder = (androidx.fragment.app.BackStackRecord) $u-1#11;

        $u-1 = canReorder.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $u-1 != 0 goto label6;

        if $u-1#5 == recordNum goto label3;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(records, isRecordPop, $u-1#5, recordNum);

     label3:
        reorderingEnd = recordNum + 1;

        $u-1#11 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>(recordNum);

        $u5 = (java.lang.Boolean) $u-1#11;

        $u-1 = virtualinvoke $u5.<java.lang.Boolean: boolean booleanValue()>();

        if $u-1 == 0 goto label5;

     label4:
        if reorderingEnd >= $u-1#3 goto label5;

        $u-1#11 = virtualinvoke isRecordPop.<java.util.ArrayList: java.lang.Object get(int)>(reorderingEnd);

        $u5 = (java.lang.Boolean) $u-1#11;

        $u-1 = virtualinvoke $u5.<java.lang.Boolean: boolean booleanValue()>();

        if $u-1 == 0 goto label5;

        $u-1#11 = virtualinvoke records.<java.util.ArrayList: java.lang.Object get(int)>(reorderingEnd);

        canReorder = (androidx.fragment.app.BackStackRecord) $u-1#11;

        $u-1 = canReorder.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $u-1 != 0 goto label5;

        reorderingEnd = reorderingEnd + 1;

        goto label4;

     label5:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(records, isRecordPop, recordNum, reorderingEnd);

        $u-1#5 = reorderingEnd;

        recordNum = reorderingEnd + -1;

     label6:
        recordNum = recordNum + 1;

        goto label2;

     label7:
        if $u-1#5 == $u-1#3 goto label9;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(records, isRecordPop, $u-1#5, $u-1#3);

        return;

     label8:
        numRecords = new java.lang.IllegalStateException;

        specialinvoke numRecords.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error with the back stack records");

        throw numRecords;

     label9:
        return;
    }

    public static int reverseTransit(int)
    {
        int $u2;

        $u2 := @parameter0: int;

        if $u2 == 4097 goto label3;

        if $u2 == 4099 goto label2;

        if $u2 == 8194 goto label1;

        return 0;

     label1:
        return 4097;

     label2:
        return 4099;

     label3:
        return 8194;
    }

    private void throwException(java.lang.RuntimeException)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.RuntimeException $u9;
        java.io.PrintWriter pw;
        java.lang.String $u-1;
        androidx.core.util.LogWriter logw;
        androidx.fragment.app.FragmentHostCallback e;
        java.lang.String[] $u5;
        java.lang.Exception e#7, e#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u9 := @parameter0: java.lang.RuntimeException;

        $u-1 = virtualinvoke $u9.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", "Activity state:");

        logw = new androidx.core.util.LogWriter;

        specialinvoke logw.<androidx.core.util.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        pw = new java.io.PrintWriter;

        specialinvoke pw.<java.io.PrintWriter: void <init>(java.io.Writer)>(logw);

        e = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if e == null goto label5;

     label1:
        $u5 = newarray (java.lang.String)[0];

        virtualinvoke e.<androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, pw, $u5);

     label2:
        goto label4;

     label3:
        e#7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", e#7);

     label4:
        goto label8;

     label5:
        $u5 = newarray (java.lang.String)[0];

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, pw, $u5);

     label6:
        goto label8;

     label7:
        e#9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", e#9);

     label8:
        throw $u9;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static int transitToStyleIndex(int, boolean)
    {
        int $u2;
        boolean $u3;
        byte $u1;

        $u2 := @parameter0: int;

        $u3 := @parameter1: boolean;

        if $u2 == 4097 goto label7;

        if $u2 == 4099 goto label4;

        if $u2 == 8194 goto label1;

        return -1;

     label1:
        if $u3 == 0 goto label2;

        $u1 = 3;

        goto label3;

     label2:
        $u1 = 4;

     label3:
        return $u1;

     label4:
        if $u3 == 0 goto label5;

        $u1 = 5;

        goto label6;

     label5:
        $u1 = 6;

     label6:
        return $u1;

     label7:
        if $u3 == 0 goto label8;

        $u1 = 1;

        goto label9;

     label8:
        $u1 = 2;

     label9:
        return $u1;
    }

    private void updateOnBackPressedCallbackEnabled()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList $u0;
        boolean $u1, $u-1;
        androidx.activity.OnBackPressedCallback $u0#5;
        int $u-1#7;
        androidx.fragment.app.Fragment $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $u1 = 1;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1 != 0 goto label1;

        $u0#5 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $u0#5.<androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>(1);

        return;

     label1:
        $u0#5 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        $u-1#7 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: int getBackStackEntryCount()>();

        if $u-1#7 <= 0 goto label2;

        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($u2);

        if $u-1 == 0 goto label2;

        goto label3;

     label2:
        $u1 = 0;

     label3:
        virtualinvoke $u0#5.<androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>($u1);

        return;
    }

    void addBackStackState(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.BackStackRecord $u2;
        java.util.ArrayList $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: androidx.fragment.app.BackStackRecord;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $u0 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = $u0;

     label1:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        virtualinvoke $u0.<java.util.ArrayList: boolean add(java.lang.Object)>($u2);

        return;
    }

    public void addFragment(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u4;
        boolean $u5, $u0;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1;
        java.util.ArrayList $u0#8, $u1#12;
        android.view.View $u2;
        java.lang.Throwable $u1#18;
        java.lang.IllegalStateException $u0#19;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label01;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label01:
        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void makeActive(androidx.fragment.app.Fragment)>($u4);

        $u0 = $u4.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $u0 != 0 goto label10;

        $u0#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u0 = virtualinvoke $u0#8.<java.util.ArrayList: boolean contains(java.lang.Object)>($u4);

        if $u0 != 0 goto label09;

        $u0#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $u0#8;

     label02:
        $u1#12 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $u1#12.<java.util.ArrayList: boolean add(java.lang.Object)>($u4);

        exitmonitor $u0#8;

     label03:
        $u4.<androidx.fragment.app.Fragment: boolean mAdded> = 1;

        $u4.<androidx.fragment.app.Fragment: boolean mRemoving> = 0;

        $u2 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u2 != null goto label04;

        $u4.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = 0;

     label04:
        $u0 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($u4);

        if $u0 == 0 goto label05;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label05:
        if $u5 == 0 goto label10;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)>($u4);

        return;

     label06:
        $u1#18 := @caughtexception;

     label07:
        exitmonitor $u0#8;

     label08:
        throw $u1#18;

     label09:
        $u0#19 = new java.lang.IllegalStateException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1);

        throw $u0#19;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $u2;
        java.util.ArrayList $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: androidx.fragment.app.FragmentManager$OnBackStackChangedListener;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $u0 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners> = $u0;

     label1:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        virtualinvoke $u0.<java.util.ArrayList: boolean add(java.lang.Object)>($u2);

        return;
    }

    void addRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u5;
        boolean $u-1;
        androidx.fragment.app.FragmentManagerViewModel added;
        java.lang.StringBuilder $u2;
        java.lang.String $u-1#10;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>();

        if $u-1 == 0 goto label1;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "Ignoring addRetainedFragment as the state is already saved");

        return;

     label1:
        added = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u-1 = virtualinvoke added.<androidx.fragment.app.FragmentManagerViewModel: boolean addRetainedFragment(androidx.fragment.app.Fragment)>($u5);

        if $u-1 == 0 goto label2;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label2;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating retained Fragments: Added ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1#10 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#10);

     label2:
        return;
    }

    public int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.BackStackRecord $u5;
        java.util.ArrayList index, $u1;
        int $u-1;
        java.lang.Object $u-1#10;
        java.lang.Integer index#12;
        boolean $u1#15;
        java.lang.StringBuilder $u2;
        java.lang.String $u-1#20;
        java.lang.Throwable index#36;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.BackStackRecord;

        entermonitor this;

     label01:
        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if index == null goto label05;

        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u-1 = virtualinvoke index.<java.util.ArrayList: int size()>();

        if $u-1 > 0 goto label02;

        goto label05;

     label02:
        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u-1 = virtualinvoke $u1.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

        $u-1#10 = virtualinvoke index.<java.util.ArrayList: java.lang.Object remove(int)>($u-1);

        index#12 = (java.lang.Integer) $u-1#10;

        $u-1 = virtualinvoke index#12.<java.lang.Integer: int intValue()>();

        $u1#15 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u1#15 == 0 goto label03;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding back stack index ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u-1);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1#20 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#20);

     label03:
        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke index.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($u-1, $u5);

        exitmonitor this;

     label04:
        return $u-1;

     label05:
        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if index != null goto label06;

        index = new java.util.ArrayList;

        specialinvoke index.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices> = index;

     label06:
        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $u-1 = virtualinvoke index.<java.util.ArrayList: int size()>();

        $u1#15 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u1#15 == 0 goto label07;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting back stack index ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u-1);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1#20 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#20);

     label07:
        index = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke index.<java.util.ArrayList: boolean add(java.lang.Object)>($u5);

        exitmonitor this;

     label08:
        return $u-1;

     label09:
        index#36 := @caughtexception;

        exitmonitor this;

     label10:
        throw index#36;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void attachController(androidx.fragment.app.FragmentHostCallback, androidx.fragment.app.FragmentContainer, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this, dispatcherOwner#8;
        androidx.fragment.app.FragmentHostCallback $u5, dispatcherOwner;
        androidx.fragment.app.FragmentContainer $u6;
        androidx.fragment.app.Fragment $u7;
        androidx.activity.OnBackPressedDispatcher $u2;
        androidx.activity.OnBackPressedCallback $u3;
        boolean dispatcherOwner#2;
        androidx.activity.OnBackPressedDispatcherOwner dispatcherOwner#4;
        androidx.lifecycle.LifecycleOwner owner;
        androidx.fragment.app.FragmentManagerViewModel $u-1;
        androidx.lifecycle.ViewModelStoreOwner dispatcherOwner#13;
        androidx.lifecycle.ViewModelStore $u-1#14;
        java.lang.IllegalStateException dispatcherOwner#20;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.FragmentHostCallback;

        $u6 := @parameter1: androidx.fragment.app.FragmentContainer;

        $u7 := @parameter2: androidx.fragment.app.Fragment;

        dispatcherOwner = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if dispatcherOwner != null goto label7;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost> = $u5;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer> = $u6;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent> = $u7;

        if $u7 == null goto label1;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()>();

     label1:
        dispatcherOwner#2 = $u5 instanceof androidx.activity.OnBackPressedDispatcherOwner;

        if dispatcherOwner#2 == 0 goto label4;

        dispatcherOwner#4 = (androidx.activity.OnBackPressedDispatcherOwner) $u5;

        $u2 = interfaceinvoke dispatcherOwner#4.<androidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>();

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher> = $u2;

        if $u7 == null goto label2;

        owner = $u7;

        goto label3;

     label2:
        owner = dispatcherOwner#4;

     label3:
        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $u2.<androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>(owner, $u3);

     label4:
        if $u7 == null goto label5;

        dispatcherOwner#8 = $u7.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke dispatcherOwner#8.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>($u7);

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig> = $u-1;

        return;

     label5:
        dispatcherOwner#2 = $u5 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if dispatcherOwner#2 == 0 goto label6;

        dispatcherOwner#13 = (androidx.lifecycle.ViewModelStoreOwner) $u5;

        $u-1#14 = interfaceinvoke dispatcherOwner#13.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        $u-1 = staticinvoke <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)>($u-1#14);

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig> = $u-1;

        return;

     label6:
        $u-1 = new androidx.fragment.app.FragmentManagerViewModel;

        specialinvoke $u-1.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>(0);

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig> = $u-1;

        return;

     label7:
        dispatcherOwner#20 = new java.lang.IllegalStateException;

        specialinvoke dispatcherOwner#20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already attached");

        throw dispatcherOwner#20;
    }

    public void attachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u4;
        boolean $u0;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1;
        java.util.ArrayList $u0#10, $u1#20;
        java.lang.Throwable $u1#24;
        java.lang.IllegalStateException $u0#25;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label1:
        $u0 = $u4.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $u0 == 0 goto label9;

        $u4.<androidx.fragment.app.Fragment: boolean mDetached> = 0;

        $u0 = $u4.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $u0 != 0 goto label9;

        $u0#10 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u0 = virtualinvoke $u0#10.<java.util.ArrayList: boolean contains(java.lang.Object)>($u4);

        if $u0 != 0 goto label8;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label2;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add from attach: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label2:
        $u0#10 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $u0#10;

     label3:
        $u1#20 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $u1#20.<java.util.ArrayList: boolean add(java.lang.Object)>($u4);

        exitmonitor $u0#10;

     label4:
        $u4.<androidx.fragment.app.Fragment: boolean mAdded> = 1;

        $u0 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($u4);

        if $u0 == 0 goto label9;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

        return;

     label5:
        $u1#24 := @caughtexception;

     label6:
        exitmonitor $u0#10;

     label7:
        throw $u1#24;

     label8:
        $u0#25 = new java.lang.IllegalStateException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#25.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1);

        throw $u0#25;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public androidx.fragment.app.FragmentTransaction beginTransaction()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.BackStackRecord $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $u0.<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManagerImpl)>(this);

        return $u0;
    }

    boolean checkForMenus()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean hasMenu, $u-1#7;
        java.util.HashMap $u1;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#5;
        java.lang.Object $u-1#9;
        androidx.fragment.app.Fragment f;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        hasMenu = 0;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke $u1.<java.util.HashMap: java.util.Collection values()>();

        $u-1#5 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $u-1#7 = interfaceinvoke $u-1#5.<java.util.Iterator: boolean hasNext()>();

        if $u-1#7 == 0 goto label3;

        $u-1#9 = interfaceinvoke $u-1#5.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#9;

        if f == null goto label2;

        hasMenu = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(f);

     label2:
        if hasMenu == 0 goto label1;

        return 1;

     label3:
        return 0;
    }

    void completeExecute(androidx.fragment.app.BackStackRecord, boolean, boolean, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.BackStackRecord $u10;
        boolean $u11, $u12, $u13;
        java.util.ArrayList records, fragment;
        java.lang.Boolean $u-1;
        int fragment#9;
        java.util.HashMap $u1;
        java.util.Collection $u-1#11;
        java.util.Iterator $u-1#13;
        java.lang.Object $u-1#17;
        androidx.fragment.app.Fragment fragment#19;
        android.view.View $u3;
        float $u3#25;
        byte $u3#27;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u10 := @parameter0: androidx.fragment.app.BackStackRecord;

        $u11 := @parameter1: boolean;

        $u12 := @parameter2: boolean;

        $u13 := @parameter3: boolean;

        if $u11 == 0 goto label1;

        virtualinvoke $u10.<androidx.fragment.app.BackStackRecord: void executePopOps(boolean)>($u13);

        goto label2;

     label1:
        virtualinvoke $u10.<androidx.fragment.app.BackStackRecord: void executeOps()>();

     label2:
        records = new java.util.ArrayList;

        specialinvoke records.<java.util.ArrayList: void <init>(int)>(1);

        fragment = new java.util.ArrayList;

        specialinvoke fragment.<java.util.ArrayList: void <init>(int)>(1);

        virtualinvoke records.<java.util.ArrayList: boolean add(java.lang.Object)>($u10);

        $u-1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($u11);

        virtualinvoke fragment.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1);

        if $u12 == 0 goto label3;

        staticinvoke <androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>(this, records, fragment, 0, 1, 1);

     label3:
        if $u13 == 0 goto label4;

        fragment#9 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>(fragment#9, 1);

     label4:
        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#11 = virtualinvoke $u1.<java.util.HashMap: java.util.Collection values()>();

        $u-1#13 = interfaceinvoke $u-1#11.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $u11 = interfaceinvoke $u-1#13.<java.util.Iterator: boolean hasNext()>();

        if $u11 == 0 goto label8;

        $u-1#17 = interfaceinvoke $u-1#13.<java.util.Iterator: java.lang.Object next()>();

        fragment#19 = (androidx.fragment.app.Fragment) $u-1#17;

        if fragment#19 == null goto label5;

        $u3 = fragment#19.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u3 == null goto label5;

        $u11 = fragment#19.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $u11 == 0 goto label5;

        fragment#9 = fragment#19.<androidx.fragment.app.Fragment: int mContainerId>;

        $u11 = virtualinvoke $u10.<androidx.fragment.app.BackStackRecord: boolean interactsWith(int)>(fragment#9);

        if $u11 == 0 goto label5;

        $u3#25 = fragment#19.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        $u3#27 = $u3#25 cmpl 0.0F;

        if $u3#27 <= 0 goto label6;

        $u3 = fragment#19.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u3#25 = fragment#19.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        virtualinvoke $u3.<android.view.View: void setAlpha(float)>($u3#25);

     label6:
        if $u13 == 0 goto label7;

        fragment#19.<androidx.fragment.app.Fragment: float mPostponedAlpha> = 0.0F;

        goto label5;

     label7:
        fragment#19.<androidx.fragment.app.Fragment: float mPostponedAlpha> = -1.0F;

        fragment#19.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded> = 0;

        goto label5;

     label8:
        return;
    }

    void completeShowHideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u8;
        android.animation.Animator $u5;
        androidx.fragment.app.FragmentManagerImpl$5 $u6;
        android.view.View anim;
        int $u-1, $u-1#6;
        boolean container;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $u-1#8;
        android.view.ViewGroup container#16;
        android.view.animation.Animation animatingView;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u8 := @parameter0: androidx.fragment.app.Fragment;

        anim = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        if anim == null goto label8;

        $u-1 = virtualinvoke $u8.<androidx.fragment.app.Fragment: int getNextTransition()>();

        container = $u8.<androidx.fragment.app.Fragment: boolean mHidden>;

        container = container ^ 1;

        $u-1#6 = virtualinvoke $u8.<androidx.fragment.app.Fragment: int getNextTransitionStyle()>();

        $u-1#8 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>($u8, $u-1, container, $u-1#6);

        if $u-1#8 == null goto label4;

        $u5 = $u-1#8.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        if $u5 == null goto label4;

        $u5 = $u-1#8.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        anim = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u5.<android.animation.Animator: void setTarget(java.lang.Object)>(anim);

        container = $u8.<androidx.fragment.app.Fragment: boolean mHidden>;

        if container == 0 goto label2;

        container = virtualinvoke $u8.<androidx.fragment.app.Fragment: boolean isHideReplaced()>();

        if container == 0 goto label1;

        virtualinvoke $u8.<androidx.fragment.app.Fragment: void setHideReplaced(boolean)>(0);

        goto label3;

     label1:
        container#16 = $u8.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        anim = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke container#16.<android.view.ViewGroup: void startViewTransition(android.view.View)>(anim);

        $u5 = $u-1#8.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $u6 = new androidx.fragment.app.FragmentManagerImpl$5;

        specialinvoke $u6.<androidx.fragment.app.FragmentManagerImpl$5: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>(this, container#16, anim, $u8);

        virtualinvoke $u5.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($u6);

        goto label3;

     label2:
        anim = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke anim.<android.view.View: void setVisibility(int)>(0);

     label3:
        $u5 = $u-1#8.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        virtualinvoke $u5.<android.animation.Animator: void start()>();

        goto label8;

     label4:
        if $u-1#8 == null goto label5;

        anim = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        animatingView = $u-1#8.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        virtualinvoke anim.<android.view.View: void startAnimation(android.view.animation.Animation)>(animatingView);

        animatingView = $u-1#8.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        virtualinvoke animatingView.<android.view.animation.Animation: void start()>();

     label5:
        container = $u8.<androidx.fragment.app.Fragment: boolean mHidden>;

        if container == 0 goto label6;

        container = virtualinvoke $u8.<androidx.fragment.app.Fragment: boolean isHideReplaced()>();

        if container != 0 goto label6;

        $u-1 = 8;

        goto label7;

     label6:
        $u-1 = 0;

     label7:
        anim = $u8.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke anim.<android.view.View: void setVisibility(int)>($u-1);

        container = virtualinvoke $u8.<androidx.fragment.app.Fragment: boolean isHideReplaced()>();

        if container == 0 goto label8;

        virtualinvoke $u8.<androidx.fragment.app.Fragment: void setHideReplaced(boolean)>(0);

     label8:
        container = $u8.<androidx.fragment.app.Fragment: boolean mAdded>;

        if container == 0 goto label9;

        container = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($u8);

        if container == 0 goto label9;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label9:
        $u8.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = 0;

        container = $u8.<androidx.fragment.app.Fragment: boolean mHidden>;

        virtualinvoke $u8.<androidx.fragment.app.Fragment: void onHiddenChanged(boolean)>(container);

        return;
    }

    public void detachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u5;
        boolean $u0;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1;
        java.util.ArrayList $u1#15, $u2;
        java.lang.Throwable $u0#20;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detach: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label1:
        $u0 = $u5.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $u0 != 0 goto label9;

        $u5.<androidx.fragment.app.Fragment: boolean mDetached> = 1;

        $u0 = $u5.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $u0 == 0 goto label9;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label2;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove from detach: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label2:
        $u1#15 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $u1#15;

     label3:
        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $u2.<java.util.ArrayList: boolean remove(java.lang.Object)>($u5);

        exitmonitor $u1#15;

     label4:
        $u0 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($u5);

        if $u0 == 0 goto label5;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label5:
        $u5.<androidx.fragment.app.Fragment: boolean mAdded> = 0;

        return;

     label6:
        $u0#20 := @caughtexception;

     label7:
        exitmonitor $u1#15;

     label8:
        throw $u0#20;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void dispatchActivityCreated()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(2);

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.content.res.Configuration $u3;
        int i, $u-1;
        java.util.ArrayList f;
        java.lang.Object $u-1#6;
        androidx.fragment.app.Fragment f#8;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: android.content.res.Configuration;

        i = 0;

     label1:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label3;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(i);

        f#8 = (androidx.fragment.app.Fragment) $u-1#6;

        if f#8 == null goto label2;

        virtualinvoke f#8.<androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)>($u3);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.view.MenuItem $u6;
        int i, $u-1;
        java.util.ArrayList f;
        java.lang.Object $u-1#7;
        androidx.fragment.app.Fragment f#9;
        boolean $u-1#10;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u6 := @parameter0: android.view.MenuItem;

        i = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if i >= 1 goto label1;

        return 0;

     label1:
        i = 0;

     label2:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label4;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#7 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(i);

        f#9 = (androidx.fragment.app.Fragment) $u-1#7;

        if f#9 == null goto label3;

        $u-1#10 = virtualinvoke f#9.<androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)>($u6);

        if $u-1#10 == 0 goto label3;

        return 1;

     label3:
        i = i + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchCreate()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(1);

        return;
    }

    public boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.view.Menu $u6;
        android.view.MenuInflater $u7;
        int show, $u-1;
        boolean show#4, $u-1#14;
        java.util.ArrayList newMenus, f;
        java.lang.Object $u-1#11;
        androidx.fragment.app.Fragment f#13;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u6 := @parameter0: android.view.Menu;

        $u7 := @parameter1: android.view.MenuInflater;

        show = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if show >= 1 goto label1;

        return 0;

     label1:
        show#4 = 0;

        newMenus = null;

        show = 0;

     label2:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if show >= $u-1 goto label5;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#11 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(show);

        f#13 = (androidx.fragment.app.Fragment) $u-1#11;

        if f#13 == null goto label4;

        $u-1#14 = virtualinvoke f#13.<androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>($u6, $u7);

        if $u-1#14 == 0 goto label4;

        show#4 = 1;

        if newMenus != null goto label3;

        newMenus = new java.util.ArrayList;

        specialinvoke newMenus.<java.util.ArrayList: void <init>()>();

     label3:
        virtualinvoke newMenus.<java.util.ArrayList: boolean add(java.lang.Object)>(f#13);

     label4:
        show = show + 1;

        goto label2;

     label5:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        if f == null goto label9;

        show = 0;

     label6:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if show >= $u-1 goto label9;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $u-1#11 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(show);

        f#13 = (androidx.fragment.app.Fragment) $u-1#11;

        if newMenus == null goto label7;

        $u-1#14 = virtualinvoke newMenus.<java.util.ArrayList: boolean contains(java.lang.Object)>(f#13);

        if $u-1#14 != 0 goto label8;

     label7:
        virtualinvoke f#13.<androidx.fragment.app.Fragment: void onDestroyOptionsMenu()>();

     label8:
        show = show + 1;

        goto label6;

     label9:
        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus> = newMenus;

        return show#4;
    }

    public void dispatchDestroy()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.activity.OnBackPressedDispatcher $u1;
        androidx.activity.OnBackPressedCallback $u1#5;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed> = 1;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(0);

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost> = null;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer> = null;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent> = null;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        if $u1 == null goto label1;

        $u1#5 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $u1#5.<androidx.activity.OnBackPressedCallback: void remove()>();

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher> = null;

     label1:
        return;
    }

    public void dispatchDestroyView()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(1);

        return;
    }

    public void dispatchLowMemory()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int i, $u-1;
        java.util.ArrayList f;
        java.lang.Object $u-1#6;
        androidx.fragment.app.Fragment f#8;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        i = 0;

     label1:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label3;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(i);

        f#8 = (androidx.fragment.app.Fragment) $u-1#6;

        if f#8 == null goto label2;

        virtualinvoke f#8.<androidx.fragment.app.Fragment: void performLowMemory()>();

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    public void dispatchMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u3;
        java.util.ArrayList i;
        int $u-1;
        java.lang.Object $u-1#6;
        androidx.fragment.app.Fragment f;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: boolean;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke i.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label3;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        f = (androidx.fragment.app.Fragment) $u-1#6;

        if f == null goto label2;

        virtualinvoke f.<androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)>($u3);

     label2:
        $u-1 = $u-1 + -1;

        goto label1;

     label3:
        return;
    }

    void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.os.Bundle $u5;
        boolean $u6, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.os.Bundle;

        $u6 := @parameter2: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u4, $u5, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u6 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>(this, $u4, $u5);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentAttached(androidx.fragment.app.Fragment, android.content.Context, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.content.Context $u5;
        boolean $u6, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.content.Context;

        $u6 := @parameter2: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($u4, $u5, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u6 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)>(this, $u4, $u5);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.os.Bundle $u5;
        boolean $u6, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.os.Bundle;

        $u6 := @parameter2: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u4, $u5, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u6 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>(this, $u4, $u5);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentDetached(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPaused(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment, android.content.Context, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.content.Context $u5;
        boolean $u6, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.content.Context;

        $u6 := @parameter2: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($u4, $u5, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u6 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)>(this, $u4, $u5);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.os.Bundle $u5;
        boolean $u6, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.os.Bundle;

        $u6 := @parameter2: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u4, $u5, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u6 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>(this, $u4, $u5);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentResumed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.os.Bundle $u5;
        boolean $u6, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.os.Bundle;

        $u6 := @parameter2: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u4, $u5, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u6 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>(this, $u4, $u5);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentStarted(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentStopped(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment, android.view.View, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        android.view.View $u5;
        android.os.Bundle $u6;
        boolean $u7, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: android.view.View;

        $u6 := @parameter2: android.os.Bundle;

        $u7 := @parameter3: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($u4, $u5, $u6, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u7 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)>(this, $u4, $u5, $u6);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, holder#6;
        androidx.fragment.app.Fragment $u4, parentManager;
        boolean $u5, holder;
        androidx.fragment.app.FragmentManager $u-1;
        java.util.concurrent.CopyOnWriteArrayList parentManager#8;
        java.util.Iterator $u-1#9;
        java.lang.Object $u-1#13;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder holder#15;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: boolean;

        parentManager = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if parentManager == null goto label1;

        $u-1 = virtualinvoke parentManager.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        holder = $u-1 instanceof androidx.fragment.app.FragmentManagerImpl;

        if holder == 0 goto label1;

        holder#6 = (androidx.fragment.app.FragmentManagerImpl) $u-1;

        virtualinvoke holder#6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>($u4, 1);

     label1:
        parentManager#8 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#9 = virtualinvoke parentManager#8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        holder = interfaceinvoke $u-1#9.<java.util.Iterator: boolean hasNext()>();

        if holder == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#9.<java.util.Iterator: java.lang.Object next()>();

        holder#15 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#13;

        if $u5 == 0 goto label3;

        holder = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if holder == 0 goto label2;

     label3:
        $u2 = holder#15.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $u2.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(this, $u4);

        goto label2;

     label4:
        return;
    }

    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.view.MenuItem $u6;
        int i, $u-1;
        java.util.ArrayList f;
        java.lang.Object $u-1#7;
        androidx.fragment.app.Fragment f#9;
        boolean $u-1#10;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u6 := @parameter0: android.view.MenuItem;

        i = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if i >= 1 goto label1;

        return 0;

     label1:
        i = 0;

     label2:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label4;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#7 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(i);

        f#9 = (androidx.fragment.app.Fragment) $u-1#7;

        if f#9 == null goto label3;

        $u-1#10 = virtualinvoke f#9.<androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)>($u6);

        if $u-1#10 == 0 goto label3;

        return 1;

     label3:
        i = i + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.view.Menu $u3;
        int i, $u-1;
        java.util.ArrayList f;
        java.lang.Object $u-1#8;
        androidx.fragment.app.Fragment f#10;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: android.view.Menu;

        i = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if i >= 1 goto label1;

        return;

     label1:
        i = 0;

     label2:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label4;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#8 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(i);

        f#10 = (androidx.fragment.app.Fragment) $u-1#8;

        if f#10 == null goto label3;

        virtualinvoke f#10.<androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)>($u3);

     label3:
        i = i + 1;

        goto label2;

     label4:
        return;
    }

    public void dispatchPause()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(3);

        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u3;
        java.util.ArrayList i;
        int $u-1;
        java.lang.Object $u-1#6;
        androidx.fragment.app.Fragment f;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: boolean;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke i.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label3;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        f = (androidx.fragment.app.Fragment) $u-1#6;

        if f == null goto label2;

        virtualinvoke f.<androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)>($u3);

     label2:
        $u-1 = $u-1 + -1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.view.Menu $u5;
        int show, $u-1;
        boolean show#4, $u-1#13;
        java.util.ArrayList f;
        java.lang.Object $u-1#10;
        androidx.fragment.app.Fragment f#12;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: android.view.Menu;

        show = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if show >= 1 goto label1;

        return 0;

     label1:
        show#4 = 0;

        show = 0;

     label2:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke f.<java.util.ArrayList: int size()>();

        if show >= $u-1 goto label4;

        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#10 = virtualinvoke f.<java.util.ArrayList: java.lang.Object get(int)>(show);

        f#12 = (androidx.fragment.app.Fragment) $u-1#10;

        if f#12 == null goto label3;

        $u-1#13 = virtualinvoke f#12.<androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)>($u5);

        if $u-1#13 == 0 goto label3;

        show#4 = 1;

     label3:
        show = show + 1;

        goto label2;

     label4:
        return show#4;
    }

    void dispatchPrimaryNavigationFragmentChanged()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()>();

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($u0);

        return;
    }

    public void dispatchResume()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(4);

        return;
    }

    public void dispatchStart()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(3);

        return;
    }

    public void dispatchStop()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 1;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(2);

        return;
    }

    void doPendingDeferredStart()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart>;

        if $u0 == 0 goto label1;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart> = 0;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

     label1:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u6, $u-1, $u-1#11;
        java.io.FileDescriptor $u7;
        java.io.PrintWriter $u8;
        java.lang.String[] $u9;
        java.lang.StringBuilder innerPrefix;
        java.util.HashMap N;
        boolean $u-1#6;
        int $u-1#9, f#28;
        java.util.Collection $u-1#15;
        java.util.Iterator $u-1#17;
        java.lang.Object $u-1#21;
        androidx.fragment.app.Fragment f;
        java.util.ArrayList N#24;
        androidx.fragment.app.BackStackRecord f1;
        java.lang.Object[] $u-1#82;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator f1#94;
        androidx.fragment.app.FragmentHostCallback f#99;
        androidx.fragment.app.FragmentContainer f#101;
        java.lang.Throwable f#116;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u6 := @parameter0: java.lang.String;

        $u7 := @parameter1: java.io.FileDescriptor;

        $u8 := @parameter2: java.io.PrintWriter;

        $u9 := @parameter3: java.lang.String[];

        innerPrefix = new java.lang.StringBuilder;

        specialinvoke innerPrefix.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke innerPrefix.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u6);

        virtualinvoke innerPrefix.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $u-1 = virtualinvoke innerPrefix.<java.lang.StringBuilder: java.lang.String toString()>();

        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#6 = virtualinvoke N.<java.util.HashMap: boolean isEmpty()>();

        if $u-1#6 != 0 goto label02;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("Active Fragments in ");

        $u-1#9 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this);

        $u-1#11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u-1#9);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u-1#11);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>(":");

        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#15 = virtualinvoke N.<java.util.HashMap: java.util.Collection values()>();

        $u-1#17 = interfaceinvoke $u-1#15.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $u-1#6 = interfaceinvoke $u-1#17.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label02;

        $u-1#21 = interfaceinvoke $u-1#17.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.Object)>(f);

        if f == null goto label01;

        virtualinvoke f.<androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($u-1, $u7, $u8, $u9);

        goto label01;

     label02:
        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#9 = virtualinvoke N#24.<java.util.ArrayList: int size()>();

        if $u-1#9 <= 0 goto label04;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>("Added Fragments:");

        f#28 = 0;

     label03:
        if f#28 >= $u-1#9 goto label04;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#21 = virtualinvoke N#24.<java.util.ArrayList: java.lang.Object get(int)>(f#28);

        f = (androidx.fragment.app.Fragment) $u-1#21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $u8.<java.io.PrintWriter: void print(int)>(f#28);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $u-1#11 = virtualinvoke f.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>($u-1#11);

        f#28 = f#28 + 1;

        goto label03;

     label04:
        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        if N#24 == null goto label06;

        $u-1#9 = virtualinvoke N#24.<java.util.ArrayList: int size()>();

        if $u-1#9 <= 0 goto label06;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>("Fragments Created Menus:");

        f#28 = 0;

     label05:
        if f#28 >= $u-1#9 goto label06;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $u-1#21 = virtualinvoke N#24.<java.util.ArrayList: java.lang.Object get(int)>(f#28);

        f = (androidx.fragment.app.Fragment) $u-1#21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $u8.<java.io.PrintWriter: void print(int)>(f#28);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $u-1#11 = virtualinvoke f.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>($u-1#11);

        f#28 = f#28 + 1;

        goto label05;

     label06:
        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if N#24 == null goto label08;

        $u-1#9 = virtualinvoke N#24.<java.util.ArrayList: int size()>();

        if $u-1#9 <= 0 goto label08;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack:");

        f#28 = 0;

     label07:
        if f#28 >= $u-1#9 goto label08;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1#21 = virtualinvoke N#24.<java.util.ArrayList: java.lang.Object get(int)>(f#28);

        f1 = (androidx.fragment.app.BackStackRecord) $u-1#21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $u8.<java.io.PrintWriter: void print(int)>(f#28);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $u-1#11 = virtualinvoke f1.<androidx.fragment.app.BackStackRecord: java.lang.String toString()>();

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>($u-1#11);

        virtualinvoke f1.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)>($u-1, $u8);

        f#28 = f#28 + 1;

        goto label07;

     label08:
        entermonitor this;

     label09:
        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if N#24 == null goto label11;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $u-1#9 = virtualinvoke N#24.<java.util.ArrayList: int size()>();

        if $u-1#9 <= 0 goto label11;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack Indices:");

        f#28 = 0;

     label10:
        if f#28 >= $u-1#9 goto label11;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $u-1#21 = virtualinvoke N#24.<java.util.ArrayList: java.lang.Object get(int)>(f#28);

        f1 = (androidx.fragment.app.BackStackRecord) $u-1#21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $u8.<java.io.PrintWriter: void print(int)>(f#28);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.Object)>(f1);

        f#28 = f#28 + 1;

        goto label10;

     label11:
        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if N#24 == null goto label12;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u-1#9 = virtualinvoke N#24.<java.util.ArrayList: int size()>();

        if $u-1#9 <= 0 goto label12;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("mAvailBackStackIndices: ");

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u-1#82 = virtualinvoke N#24.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $u-1 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($u-1#82);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>($u-1);

     label12:
        exitmonitor this;

     label13:
        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if N#24 == null goto label15;

        $u-1#9 = virtualinvoke N#24.<java.util.ArrayList: int size()>();

        if $u-1#9 <= 0 goto label15;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>("Pending Actions:");

        f#28 = 0;

     label14:
        if f#28 >= $u-1#9 goto label15;

        N#24 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $u-1#21 = virtualinvoke N#24.<java.util.ArrayList: java.lang.Object get(int)>(f#28);

        f1#94 = (androidx.fragment.app.FragmentManagerImpl$OpGenerator) $u-1#21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $u8.<java.io.PrintWriter: void print(int)>(f#28);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.Object)>(f1#94);

        f#28 = f#28 + 1;

        goto label14;

     label15:
        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.String)>("FragmentManager misc state:");

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  mHost=");

        f#99 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.Object)>(f#99);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  mContainer=");

        f#101 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.Object)>(f#101);

        f = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if f == null goto label16;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  mParent=");

        f = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(java.lang.Object)>(f);

     label16:
        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  mCurState=");

        $u-1#9 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $u8.<java.io.PrintWriter: void print(int)>($u-1#9);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(" mStateSaved=");

        $u-1#6 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved>;

        virtualinvoke $u8.<java.io.PrintWriter: void print(boolean)>($u-1#6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(" mStopped=");

        $u-1#6 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped>;

        virtualinvoke $u8.<java.io.PrintWriter: void print(boolean)>($u-1#6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroyed=");

        $u-1#6 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(boolean)>($u-1#6);

        $u-1#6 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        if $u-1#6 == 0 goto label21;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("  mNeedMenuInvalidate=");

        $u-1#6 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(boolean)>($u-1#6);

        return;

     label17:
        f#116 := @caughtexception;

     label18:
        exitmonitor this;

     label19:
        goto label20;

     label20:
        throw f#116;

     label21:
        return;

        catch java.lang.Throwable from label09 to label13 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $u3;
        boolean $u4, $u0;
        androidx.fragment.app.FragmentHostCallback $u0#2;
        java.util.ArrayList $u0#3;
        java.lang.IllegalStateException $u0#6;
        java.lang.Throwable $u0#7;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.FragmentManagerImpl$OpGenerator;

        $u4 := @parameter1: boolean;

        if $u4 != 0 goto label01;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

     label01:
        entermonitor this;

     label02:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $u0 != 0 goto label06;

        $u0#2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $u0#2 != null goto label03;

        goto label06;

     label03:
        $u0#3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $u0#3 != null goto label04;

        $u0#3 = new java.util.ArrayList;

        specialinvoke $u0#3.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions> = $u0#3;

     label04:
        $u0#3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        virtualinvoke $u0#3.<java.util.ArrayList: boolean add(java.lang.Object)>($u3);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()>();

        exitmonitor this;

     label05:
        return;

     label06:
        if $u4 == 0 goto label08;

        exitmonitor this;

     label07:
        return;

     label08:
        $u0#6 = new java.lang.IllegalStateException;

        specialinvoke $u0#6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Activity has been destroyed");

        throw $u0#6;

     label09:
        $u0#7 := @caughtexception;

        exitmonitor this;

     label10:
        throw $u0#7;

        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u4;
        android.view.LayoutInflater $u-1;
        boolean $u0;
        android.os.Bundle $u0#3;
        android.view.View $u0#7;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = $u4.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $u0 == 0 goto label3;

        $u0 = $u4.<androidx.fragment.app.Fragment: boolean mPerformedCreateView>;

        if $u0 != 0 goto label3;

        $u0#3 = $u4.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $u-1 = virtualinvoke $u4.<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($u0#3);

        $u0#3 = $u4.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u4.<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($u-1, null, $u0#3);

        $u0#7 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u0#7 == null goto label2;

        $u0#7 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u4.<androidx.fragment.app.Fragment: android.view.View mInnerView> = $u0#7;

        $u0#7 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u0#7.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        $u0 = $u4.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $u0 == 0 goto label1;

        $u0#7 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u0#7.<android.view.View: void setVisibility(int)>(8);

     label1:
        $u0#7 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u0#3 = $u4.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u4.<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($u0#7, $u0#3);

        $u0#7 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u0#3 = $u4.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($u4, $u0#7, $u0#3, 0);

        return;

     label2:
        $u4.<androidx.fragment.app.Fragment: android.view.View mInnerView> = null;

     label3:
        return;
    }

    public boolean execPendingActions()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u-1, didSomething;
        java.util.ArrayList $u2, $u3;
        java.lang.Throwable $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>(1);

        didSomething = 0;

     label1:
        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $u-1 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>($u2, $u3);

        if $u-1 == 0 goto label5;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($u2, $u3);

     label3:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        didSomething = 1;

        goto label1;

     label4:
        $u0 := @caughtexception;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        throw $u0;

     label5:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void burpActive()>();

        return didSomething;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $u3;
        boolean $u4, $u0#2;
        androidx.fragment.app.FragmentHostCallback $u0;
        java.util.ArrayList $u0#3, $u1;
        java.lang.Throwable $u0#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.FragmentManagerImpl$OpGenerator;

        $u4 := @parameter1: boolean;

        if $u4 == 0 goto label1;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $u0 == null goto label6;

        $u0#2 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $u0#2 == 0 goto label1;

        return;

     label1:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>($u4);

        $u0#3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $u4 = interfaceinvoke $u3.<androidx.fragment.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>($u0#3, $u1);

        if $u4 == 0 goto label5;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $u0#3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($u0#3, $u1);

     label3:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        goto label5;

     label4:
        $u0#9 := @caughtexception;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        throw $u0#9;

     label5:
        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void burpActive()>();

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean executePendingTransactions()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u-1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>();

        return $u-1;
    }

    public androidx.fragment.app.Fragment findFragmentById(int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u4, $u-1, $u2;
        java.util.ArrayList i;
        java.lang.Object $u-1#6;
        androidx.fragment.app.Fragment f;
        java.util.HashMap i#10;
        java.util.Collection $u-1#11;
        java.util.Iterator $u-1#13;
        boolean $u-1#15;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: int;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke i.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label3;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        f = (androidx.fragment.app.Fragment) $u-1#6;

        if f == null goto label2;

        $u2 = f.<androidx.fragment.app.Fragment: int mFragmentId>;

        if $u2 != $u4 goto label2;

        return f;

     label2:
        $u-1 = $u-1 + -1;

        goto label1;

     label3:
        i#10 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#11 = virtualinvoke i#10.<java.util.HashMap: java.util.Collection values()>();

        $u-1#13 = interfaceinvoke $u-1#11.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $u-1#15 = interfaceinvoke $u-1#13.<java.util.Iterator: boolean hasNext()>();

        if $u-1#15 == 0 goto label5;

        $u-1#6 = interfaceinvoke $u-1#13.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#6;

        if f == null goto label4;

        $u-1 = f.<androidx.fragment.app.Fragment: int mFragmentId>;

        if $u-1 != $u4 goto label4;

        return f;

     label5:
        return null;
    }

    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u4, $u2;
        java.util.ArrayList i;
        int $u-1;
        java.lang.Object $u-1#6;
        androidx.fragment.app.Fragment f;
        boolean $u-1#10;
        java.util.HashMap i#12;
        java.util.Collection $u-1#13;
        java.util.Iterator $u-1#15;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: java.lang.String;

        if $u4 == null goto label3;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke i.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label3;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#6 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        f = (androidx.fragment.app.Fragment) $u-1#6;

        if f == null goto label2;

        $u2 = f.<androidx.fragment.app.Fragment: java.lang.String mTag>;

        $u-1#10 = virtualinvoke $u4.<java.lang.String: boolean equals(java.lang.Object)>($u2);

        if $u-1#10 == 0 goto label2;

        return f;

     label2:
        $u-1 = $u-1 + -1;

        goto label1;

     label3:
        if $u4 == null goto label5;

        i#12 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#13 = virtualinvoke i#12.<java.util.HashMap: java.util.Collection values()>();

        $u-1#15 = interfaceinvoke $u-1#13.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $u-1#10 = interfaceinvoke $u-1#15.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label5;

        $u-1#6 = interfaceinvoke $u-1#15.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#6;

        if f == null goto label4;

        $u2 = f.<androidx.fragment.app.Fragment: java.lang.String mTag>;

        $u-1#10 = virtualinvoke $u4.<java.lang.String: boolean equals(java.lang.Object)>($u2);

        if $u-1#10 == 0 goto label4;

        return f;

     label5:
        return null;
    }

    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u4;
        java.util.HashMap $u0;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#4;
        boolean $u-1#6;
        java.lang.Object $u-1#8;
        androidx.fragment.app.Fragment f;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: java.lang.String;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.util.Collection values()>();

        $u-1#4 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $u-1#6 = interfaceinvoke $u-1#4.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label2;

        $u-1#8 = interfaceinvoke $u-1#4.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#8;

        if f == null goto label1;

        f = virtualinvoke f.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>($u4);

        if f == null goto label1;

        return f;

     label2:
        return null;
    }

    public void freeBackStackIndex(int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u4;
        java.util.ArrayList $u0;
        boolean $u0#5;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1;
        java.lang.Integer $u-1#11;
        java.lang.Throwable $u0#13;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: int;

        entermonitor this;

     label1:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $u0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($u4, null);

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $u0 != null goto label2;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices> = $u0;

     label2:
        $u0#5 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0#5 == 0 goto label3;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing back stack index ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label3:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u-1#11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u4);

        virtualinvoke $u0.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#11);

        exitmonitor this;

     label4:
        return;

     label5:
        $u0#13 := @caughtexception;

        exitmonitor this;

     label6:
        throw $u0#13;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    int getActiveFragmentCount()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u-1;
        java.util.HashMap $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: int size()>();

        return $u-1;
    }

    java.util.List getActiveFragments()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList $u0;
        java.util.Collection $u-1;
        java.util.HashMap $u1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = new java.util.ArrayList;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke $u1.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($u-1);

        return $u0;
    }

    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u2;
        java.lang.Object $u-1;
        java.util.ArrayList $u0;
        androidx.fragment.app.FragmentManager$BackStackEntry $u0#3;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: java.lang.Object get(int)>($u2);

        $u0#3 = (androidx.fragment.app.FragmentManager$BackStackEntry) $u-1;

        return $u0#3;
    }

    public int getBackStackEntryCount()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u-1;
        java.util.ArrayList $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: int size()>();

        return $u-1;

     label1:
        return 0;
    }

    androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u2;
        androidx.fragment.app.FragmentManagerViewModel $u-1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: androidx.fragment.app.Fragment;

        $u-1 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u-1 = virtualinvoke $u-1.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>($u2);

        return $u-1;
    }

    public androidx.fragment.app.Fragment getFragment(android.os.Bundle, java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.os.Bundle $u6;
        java.lang.String $u7, $u-1;
        java.lang.IllegalStateException $u2;
        java.util.HashMap f;
        java.lang.Object $u-1#4;
        androidx.fragment.app.Fragment f#6;
        java.lang.StringBuilder $u3;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u6 := @parameter0: android.os.Bundle;

        $u7 := @parameter1: java.lang.String;

        $u-1 = virtualinvoke $u6.<android.os.Bundle: java.lang.String getString(java.lang.String)>($u7);

        if $u-1 != null goto label1;

        return null;

     label1:
        f = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#4 = virtualinvoke f.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1);

        f#6 = (androidx.fragment.app.Fragment) $u-1#4;

        if f#6 != null goto label2;

        $u2 = new java.lang.IllegalStateException;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment no longer exists for key ");

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u7);

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unique id ");

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u7 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u7);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($u2);

     label2:
        return f#6;
    }

    public androidx.fragment.app.FragmentFactory getFragmentFactory()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentFactory $u-1, $u1;
        androidx.fragment.app.Fragment $u1#3;
        androidx.fragment.app.FragmentManagerImpl$6 $u1#7;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u-1 = specialinvoke this.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        $u1 = <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory DEFAULT_FACTORY>;

        if $u-1 != $u1 goto label2;

        $u1#3 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $u1#3 == null goto label1;

        this = $u1#3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        return $u-1;

     label1:
        $u1#7 = new androidx.fragment.app.FragmentManagerImpl$6;

        specialinvoke $u1#7.<androidx.fragment.app.FragmentManagerImpl$6: void <init>(androidx.fragment.app.FragmentManagerImpl)>(this);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void setFragmentFactory(androidx.fragment.app.FragmentFactory)>($u1#7);

     label2:
        $u-1 = specialinvoke this.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        return $u-1;
    }

    public java.util.List getFragments()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList $u0, $u1;
        boolean $u-1;
        java.util.List $u-1#4;
        java.lang.Object $u-1#8;
        java.lang.Throwable $u1#11;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1 == 0 goto label1;

        $u-1#4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $u-1#4;

     label1:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $u0;

     label2:
        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#8 = virtualinvoke $u1.<java.util.ArrayList: java.lang.Object clone()>();

        $u-1#4 = (java.util.List) $u-1#8;

        exitmonitor $u0;

     label3:
        return $u-1#4;

     label4:
        $u1#11 := @caughtexception;

        exitmonitor $u0;

     label5:
        throw $u1#11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    {
        androidx.fragment.app.FragmentManagerImpl this;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        return this;
    }

    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment ret0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        ret0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        return ret0;
    }

    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u2;
        androidx.lifecycle.ViewModelStore $u-1;
        androidx.fragment.app.FragmentManagerViewModel $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u-1 = virtualinvoke $u0.<androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)>($u2);

        return $u-1;
    }

    void handleOnBackPressed()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u-1;
        androidx.activity.OnBackPressedCallback $u0;
        androidx.activity.OnBackPressedDispatcher $u0#3;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        $u-1 = virtualinvoke $u0.<androidx.activity.OnBackPressedCallback: boolean isEnabled()>();

        if $u-1 == 0 goto label1;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()>();

        return;

     label1:
        $u0#3 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        virtualinvoke $u0#3.<androidx.activity.OnBackPressedDispatcher: void onBackPressed()>();

        return;
    }

    public void hideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u3;
        java.lang.String $u-1;
        boolean $u0;
        java.lang.StringBuilder $u0#2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label1;

        $u0#2 = new java.lang.StringBuilder;

        specialinvoke $u0#2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hide: ");

        virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u3);

        $u-1 = virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label1:
        $u0 = $u3.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $u0 != 0 goto label2;

        $u3.<androidx.fragment.app.Fragment: boolean mHidden> = 1;

        $u0 = $u3.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        $u0 = 1 ^ $u0;

        $u3.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = $u0;

     label2:
        return;
    }

    public boolean isDestroyed()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean ret0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        ret0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        return ret0;
    }

    boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this, parentFragmentManager;
        androidx.fragment.app.Fragment $u5, $u-1;
        boolean $u-1#4;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        if $u5 != null goto label1;

        return 1;

     label1:
        parentFragmentManager = $u5.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke parentFragmentManager.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>();

        if $u5 != $u-1 goto label2;

        $u5 = parentFragmentManager.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        $u-1#4 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($u5);

        if $u-1#4 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isStateAtLeast(int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u2, $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $u0 < $u2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isStateSaved()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved>;

        if $u0 != 0 goto label2;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped>;

        if $u0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment, int, boolean, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u10;
        int $u11, $u13, $u-1;
        boolean $u12, $u-1#23, successfulLoad;
        android.view.ViewGroup animation;
        android.animation.LayoutTransition $u-1#7;
        android.view.animation.Animation $u-1#9;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator e;
        android.animation.Animator $u-1#12;
        androidx.fragment.app.FragmentHostCallback dir;
        android.content.Context $u-1#16;
        android.content.res.Resources $u-1#18;
        java.lang.String $u-1#20, isAnim;
        java.lang.RuntimeException e1, e1#42;
        android.content.res.Resources$NotFoundException e#34;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u10 := @parameter0: androidx.fragment.app.Fragment;

        $u11 := @parameter1: int;

        $u12 := @parameter2: boolean;

        $u13 := @parameter3: int;

        $u-1 = virtualinvoke $u10.<androidx.fragment.app.Fragment: int getNextAnim()>();

        virtualinvoke $u10.<androidx.fragment.app.Fragment: void setNextAnim(int)>(0);

        animation = $u10.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if animation == null goto label01;

        animation = $u10.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $u-1#7 = virtualinvoke animation.<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>();

        if $u-1#7 == null goto label01;

        return null;

     label01:
        $u-1#9 = virtualinvoke $u10.<androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>($u11, $u12, $u-1);

        if $u-1#9 == null goto label02;

        e = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke e.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($u-1#9);

        return e;

     label02:
        $u-1#12 = virtualinvoke $u10.<androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>($u11, $u12, $u-1);

        if $u-1#12 == null goto label03;

        e = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke e.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.animation.Animator)>($u-1#12);

        return e;

     label03:
        if $u-1 == 0 goto label20;

        dir = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#16 = virtualinvoke dir.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#18 = virtualinvoke $u-1#16.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#20 = virtualinvoke $u-1#18.<android.content.res.Resources: java.lang.String getResourceTypeName(int)>($u-1);

        isAnim = "anim";

        $u-1#23 = virtualinvoke isAnim.<java.lang.String: boolean equals(java.lang.Object)>($u-1#20);

        successfulLoad = 0;

        if $u-1#23 == 0 goto label12;

     label04:
        dir = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

     label05:
        $u-1#16 = virtualinvoke dir.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#9 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($u-1#16, $u-1);

     label06:
        if $u-1#9 == null goto label09;

        e = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

     label07:
        specialinvoke e.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($u-1#9);

     label08:
        return e;

     label09:
        successfulLoad = 1;

        goto label12;

     label10:
        e1 := @caughtexception;

        goto label12;

     label11:
        e#34 := @caughtexception;

        throw e#34;

     label12:
        if successfulLoad != 0 goto label20;

     label13:
        dir = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#16 = virtualinvoke dir.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#12 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($u-1#16, $u-1);

     label14:
        if $u-1#12 == null goto label17;

        e = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

     label15:
        specialinvoke e.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.animation.Animator)>($u-1#12);

     label16:
        return e;

     label17:
        goto label20;

     label18:
        e1#42 := @caughtexception;

        if $u-1#23 != 0 goto label19;

        dir = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#16 = virtualinvoke dir.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#9 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($u-1#16, $u-1);

        if $u-1#9 == null goto label20;

        e = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke e.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($u-1#9);

        return e;

     label19:
        throw e1#42;

     label20:
        if $u11 != 0 goto label21;

        return null;

     label21:
        $u11 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>($u11, $u12);

        if $u11 >= 0 goto label22;

        return null;

     label22:
        lookupswitch($u11)
        {
            case 1: goto label29;
            case 2: goto label28;
            case 3: goto label27;
            case 4: goto label26;
            case 5: goto label25;
            case 6: goto label24;
            default: goto label23;
        };

     label23:
        if $u13 != 0 goto label30;

        dir = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u12 = virtualinvoke dir.<androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()>();

        if $u12 == 0 goto label30;

        dir = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u13 = virtualinvoke dir.<androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()>();

        goto label30;

     label24:
        e = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)>(1.0F, 0.0F);

        return e;

     label25:
        e = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)>(0.0F, 1.0F);

        return e;

     label26:
        e = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)>(1.0F, 1.075F, 1.0F, 0.0F);

        return e;

     label27:
        e = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)>(0.975F, 1.0F, 0.0F, 1.0F);

        return e;

     label28:
        e = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)>(1.0F, 0.975F, 1.0F, 0.0F);

        return e;

     label29:
        e = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)>(1.125F, 1.0F, 0.0F, 1.0F);

        return e;

     label30:
        if $u13 != 0 goto label31;

     label31:
        return null;

        catch android.content.res.Resources$NotFoundException from label05 to label06 with label11;
        catch android.content.res.Resources$NotFoundException from label07 to label08 with label11;
        catch java.lang.RuntimeException from label04 to label06 with label10;
        catch java.lang.RuntimeException from label07 to label08 with label10;
        catch java.lang.RuntimeException from label13 to label14 with label18;
        catch java.lang.RuntimeException from label15 to label16 with label18;
    }

    void makeActive(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u3;
        java.util.HashMap $u0;
        java.lang.String $u1;
        java.lang.Object $u-1;
        boolean $u0#7;
        java.lang.StringBuilder $u0#11;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u1 = $u3.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u1);

        if $u-1 == null goto label1;

        return;

     label1:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u1 = $u3.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $u0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u1, $u3);

        $u0#7 = $u3.<androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached>;

        if $u0#7 == 0 goto label4;

        $u0#7 = $u3.<androidx.fragment.app.Fragment: boolean mRetainInstance>;

        if $u0#7 == 0 goto label2;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void addRetainedFragment(androidx.fragment.app.Fragment)>($u3);

        goto label3;

     label2:
        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void removeRetainedFragment(androidx.fragment.app.Fragment)>($u3);

     label3:
        $u3.<androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached> = 0;

     label4:
        $u0#7 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0#7 == 0 goto label5;

        $u0#11 = new java.lang.StringBuilder;

        specialinvoke $u0#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added fragment to active set ");

        virtualinvoke $u0#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u3);

        $u1 = virtualinvoke $u0#11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u1);

     label5:
        return;
    }

    void makeInactive(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u6, fragment;
        java.lang.String $u4, $u3;
        java.util.HashMap $u0;
        java.lang.Object $u-1;
        boolean $u0#5;
        java.lang.StringBuilder $u0#6;
        java.util.Collection $u-1#12;
        java.util.Iterator $u-1#14;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u6 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u4 = $u6.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u4);

        if $u-1 != null goto label1;

        return;

     label1:
        $u0#5 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0#5 == 0 goto label2;

        $u0#6 = new java.lang.StringBuilder;

        specialinvoke $u0#6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed fragment from active set ");

        virtualinvoke $u0#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u6);

        $u4 = virtualinvoke $u0#6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u4);

     label2:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#12 = virtualinvoke $u0.<java.util.HashMap: java.util.Collection values()>();

        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $u0#5 = interfaceinvoke $u-1#14.<java.util.Iterator: boolean hasNext()>();

        if $u0#5 == 0 goto label4;

        $u-1 = interfaceinvoke $u-1#14.<java.util.Iterator: java.lang.Object next()>();

        fragment = (androidx.fragment.app.Fragment) $u-1;

        if fragment == null goto label3;

        $u3 = $u6.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u4 = fragment.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        $u0#5 = virtualinvoke $u3.<java.lang.String: boolean equals(java.lang.Object)>($u4);

        if $u0#5 == 0 goto label3;

        fragment.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = $u6;

        fragment.<androidx.fragment.app.Fragment: java.lang.String mTargetWho> = null;

        goto label3;

     label4:
        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u4 = $u6.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $u0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u4, null);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void removeRetainedFragment(androidx.fragment.app.Fragment)>($u6);

        $u4 = $u6.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        if $u4 == null goto label5;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u4 = $u6.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u4);

        fragment = (androidx.fragment.app.Fragment) $u-1;

        $u6.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = fragment;

     label5:
        virtualinvoke $u6.<androidx.fragment.app.Fragment: void initState()>();

        return;
    }

    void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u11, $u-1#30;
        java.util.HashMap nextState;
        java.lang.String underFragment;
        boolean $u-1;
        java.lang.StringBuilder nextState#6;
        int underFragment#9, $u-1#22, $u-1#24;
        android.view.View underFragment#29;
        android.view.ViewGroup container;
        float underView;
        byte underView#44;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $u-1#51;
        android.view.animation.Animation $u3;
        android.animation.Animator $u3#56;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u11 := @parameter0: androidx.fragment.app.Fragment;

        if $u11 != null goto label1;

        return;

     label1:
        nextState = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        underFragment = $u11.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke nextState.<java.util.HashMap: boolean containsKey(java.lang.Object)>(underFragment);

        if $u-1 != 0 goto label2;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label9;

        nextState#6 = new java.lang.StringBuilder;

        specialinvoke nextState#6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring moving ");

        virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u11);

        virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to state ");

        underFragment#9 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(underFragment#9);

        virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("since it is not added to ");

        virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        underFragment = virtualinvoke nextState#6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", underFragment);

        return;

     label2:
        underFragment#9 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        $u-1 = $u11.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $u-1 == 0 goto label4;

        $u-1 = virtualinvoke $u11.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        if $u-1 == 0 goto label3;

        underFragment#9 = staticinvoke <java.lang.Math: int min(int,int)>(underFragment#9, 1);

        goto label4;

     label3:
        underFragment#9 = staticinvoke <java.lang.Math: int min(int,int)>(underFragment#9, 0);

     label4:
        $u-1#22 = virtualinvoke $u11.<androidx.fragment.app.Fragment: int getNextTransition()>();

        $u-1#24 = virtualinvoke $u11.<androidx.fragment.app.Fragment: int getNextTransitionStyle()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($u11, underFragment#9, $u-1#22, $u-1#24, 0);

        underFragment#29 = $u11.<androidx.fragment.app.Fragment: android.view.View mView>;

        if underFragment#29 == null goto label8;

        $u-1#30 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)>($u11);

        if $u-1#30 == null goto label5;

        underFragment#29 = $u-1#30.<androidx.fragment.app.Fragment: android.view.View mView>;

        container = $u11.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        underFragment#9 = virtualinvoke container.<android.view.ViewGroup: int indexOfChild(android.view.View)>(underFragment#29);

        underFragment#29 = $u11.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u-1#22 = virtualinvoke container.<android.view.ViewGroup: int indexOfChild(android.view.View)>(underFragment#29);

        if $u-1#22 >= underFragment#9 goto label5;

        virtualinvoke container.<android.view.ViewGroup: void removeViewAt(int)>($u-1#22);

        underFragment#29 = $u11.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke container.<android.view.ViewGroup: void addView(android.view.View,int)>(underFragment#29, underFragment#9);

     label5:
        $u-1 = $u11.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $u-1 == 0 goto label8;

        container = $u11.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if container == null goto label8;

        underView = $u11.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        underView#44 = underView cmpl 0.0F;

        if underView#44 <= 0 goto label6;

        underFragment#29 = $u11.<androidx.fragment.app.Fragment: android.view.View mView>;

        underView = $u11.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        virtualinvoke underFragment#29.<android.view.View: void setAlpha(float)>(underView);

     label6:
        $u11.<androidx.fragment.app.Fragment: float mPostponedAlpha> = 0.0F;

        $u11.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded> = 0;

        underFragment#9 = virtualinvoke $u11.<androidx.fragment.app.Fragment: int getNextTransition()>();

        $u-1#22 = virtualinvoke $u11.<androidx.fragment.app.Fragment: int getNextTransitionStyle()>();

        $u-1#51 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>($u11, underFragment#9, 1, $u-1#22);

        if $u-1#51 == null goto label8;

        $u3 = $u-1#51.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        if $u3 == null goto label7;

        underFragment#29 = $u11.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u3 = $u-1#51.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        virtualinvoke underFragment#29.<android.view.View: void startAnimation(android.view.animation.Animation)>($u3);

        goto label8;

     label7:
        $u3#56 = $u-1#51.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        underFragment#29 = $u11.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u3#56.<android.animation.Animator: void setTarget(java.lang.Object)>(underFragment#29);

        $u3#56 = $u-1#51.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        virtualinvoke $u3#56.<android.animation.Animator: void start()>();

     label8:
        $u-1 = $u11.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        if $u-1 == 0 goto label9;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)>($u11);

     label9:
        return;
    }

    void moveToState(int, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u5, numAdded#4;
        boolean $u6;
        androidx.fragment.app.FragmentHostCallback numAdded;
        java.lang.IllegalStateException numAdded#2;
        java.util.ArrayList numAdded#5;
        java.lang.Object $u-1;
        androidx.fragment.app.Fragment f;
        java.util.HashMap i;
        java.util.Collection $u-1#14;
        java.util.Iterator $u-1#16;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: int;

        $u6 := @parameter1: boolean;

        numAdded = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if numAdded != null goto label2;

        if $u5 != 0 goto label1;

        goto label2;

     label1:
        numAdded#2 = new java.lang.IllegalStateException;

        specialinvoke numAdded#2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No activity");

        throw numAdded#2;

     label2:
        if $u6 != 0 goto label3;

        numAdded#4 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $u5 != numAdded#4 goto label3;

        return;

     label3:
        this.<androidx.fragment.app.FragmentManagerImpl: int mCurState> = $u5;

        numAdded#5 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u5 = virtualinvoke numAdded#5.<java.util.ArrayList: int size()>();

        numAdded#4 = 0;

     label4:
        if numAdded#4 >= $u5 goto label5;

        numAdded#5 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke numAdded#5.<java.util.ArrayList: java.lang.Object get(int)>(numAdded#4);

        f = (androidx.fragment.app.Fragment) $u-1;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>(f);

        numAdded#4 = numAdded#4 + 1;

        goto label4;

     label5:
        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#14 = virtualinvoke i.<java.util.HashMap: java.util.Collection values()>();

        $u-1#16 = interfaceinvoke $u-1#14.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $u6 = interfaceinvoke $u-1#16.<java.util.Iterator: boolean hasNext()>();

        if $u6 == 0 goto label8;

        $u-1 = interfaceinvoke $u-1#16.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1;

        if f == null goto label6;

        $u6 = f.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $u6 != 0 goto label7;

        $u6 = f.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $u6 == 0 goto label6;

     label7:
        $u6 = f.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $u6 != 0 goto label6;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>(f);

        goto label6;

     label8:
        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

        $u6 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        if $u6 == 0 goto label9;

        numAdded = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if numAdded == null goto label9;

        $u5 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $u5 != 4 goto label9;

        virtualinvoke numAdded.<androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()>();

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 0;

     label9:
        return;
    }

    void moveToState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u7;
        int $u2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u7 := @parameter0: androidx.fragment.app.Fragment;

        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($u7, $u2, 0, 0, 0);

        return;
    }

    void moveToState(androidx.fragment.app.Fragment, int, int, int, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this, target#75;
        androidx.fragment.app.Fragment $u19, $u-1#55;
        int $u20, $u21, $u22, newState#4;
        boolean $u23, newState, $u9;
        androidx.lifecycle.Lifecycle$State target, container;
        android.view.View $u-1;
        android.animation.Animator $u-1#27;
        java.lang.StringBuilder target#38;
        java.lang.String $u-1#40, $u-1#176;
        android.os.Bundle target#42;
        androidx.fragment.app.FragmentHostCallback container#44;
        android.content.Context $u-1#45;
        java.lang.ClassLoader $u-1#47;
        android.util.SparseArray $u-1#51;
        java.lang.Boolean container#63;
        java.util.HashMap target#80;
        java.lang.Object $u-1#83;
        java.lang.IllegalStateException target#101;
        android.view.ViewGroup newState#149;
        java.lang.IllegalArgumentException container#153;
        androidx.fragment.app.FragmentContainer container#159;
        android.content.res.Resources $u-1#165;
        android.content.res.Resources$NotFoundException newState#170;
        android.view.LayoutInflater $u-1#183;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator target#253;
        float container#267;
        byte container#268;
        androidx.lifecycle.MutableLiveData target#280;
        androidx.fragment.app.FragmentManagerViewModel shouldClear;
        android.app.Activity shouldClear#321;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u19 := @parameter0: androidx.fragment.app.Fragment;

        $u20 := @parameter1: int;

        $u21 := @parameter2: int;

        $u22 := @parameter3: int;

        $u23 := @parameter4: boolean;

        newState = $u19.<androidx.fragment.app.Fragment: boolean mAdded>;

        $u9 = 1;

        if newState == 0 goto label02;

        newState = $u19.<androidx.fragment.app.Fragment: boolean mDetached>;

        if newState == 0 goto label01;

        goto label02;

     label01:
        newState#4 = $u20;

        goto label03;

     label02:
        newState#4 = $u20;

        if $u20 <= 1 goto label03;

        newState#4 = 1;

     label03:
        newState = $u19.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if newState == 0 goto label05;

        $u20 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if newState#4 <= $u20 goto label05;

        $u20 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if $u20 != 0 goto label04;

        newState = virtualinvoke $u19.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        if newState == 0 goto label04;

        newState#4 = 1;

        goto label05;

     label04:
        newState#4 = $u19.<androidx.fragment.app.Fragment: int mState>;

     label05:
        newState = $u19.<androidx.fragment.app.Fragment: boolean mDeferStart>;

        if newState == 0 goto label06;

        $u20 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if $u20 >= 3 goto label06;

        if newState#4 <= 2 goto label06;

        newState#4 = 2;

     label06:
        target = $u19.<androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState>;

        container = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        if target != container goto label07;

        $u20 = staticinvoke <java.lang.Math: int min(int,int)>(newState#4, 1);

        goto label08;

     label07:
        target = $u19.<androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState>;

        $u20 = virtualinvoke target.<androidx.lifecycle.Lifecycle$State: int ordinal()>();

        $u20 = staticinvoke <java.lang.Math: int min(int,int)>(newState#4, $u20);

     label08:
        newState#4 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if newState#4 > $u20 goto label55;

        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $u23 == 0 goto label09;

        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mInLayout>;

        if $u23 != 0 goto label09;

        return;

     label09:
        $u-1 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $u-1 != null goto label10;

        $u-1#27 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $u-1#27 == null goto label11;

     label10:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(null);

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>(null);

        $u21 = virtualinvoke $u19.<androidx.fragment.app.Fragment: int getStateAfterAnimating()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($u19, $u21, 0, 0, 1);

     label11:
        $u21 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if $u21 == 0 goto label12;

        if $u21 == 1 goto label31;

        if $u21 == 2 goto label50;

        if $u21 == 3 goto label52;

        goto label54;

     label12:
        if $u20 <= 0 goto label31;

        $u23 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u23 == 0 goto label13;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto CREATED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label13:
        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        if target#42 == null goto label19;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#45 = virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#47 = virtualinvoke $u-1#45.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke target#42.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($u-1#47);

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $u-1#51 = virtualinvoke target#42.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state");

        $u19.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = $u-1#51;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $u-1#55 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>(target#42, "android:target_state");

        if $u-1#55 == null goto label14;

        $u-1#40 = $u-1#55.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        goto label15;

     label14:
        $u-1#40 = null;

     label15:
        $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho> = $u-1#40;

        $u-1#40 = $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        if $u-1#40 == null goto label16;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $u21 = virtualinvoke target#42.<android.os.Bundle: int getInt(java.lang.String,int)>("android:target_req_state", 0);

        $u19.<androidx.fragment.app.Fragment: int mTargetRequestCode> = $u21;

     label16:
        container#63 = $u19.<androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint>;

        if container#63 == null goto label17;

        container#63 = $u19.<androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint>;

        $u23 = virtualinvoke container#63.<java.lang.Boolean: boolean booleanValue()>();

        $u19.<androidx.fragment.app.Fragment: boolean mUserVisibleHint> = $u23;

        $u19.<androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint> = null;

        goto label18;

     label17:
        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $u23 = virtualinvoke target#42.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android:user_visible_hint", 1);

        $u19.<androidx.fragment.app.Fragment: boolean mUserVisibleHint> = $u23;

     label18:
        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mUserVisibleHint>;

        if $u23 != 0 goto label19;

        $u19.<androidx.fragment.app.Fragment: boolean mDeferStart> = 1;

        if $u20 <= 2 goto label19;

        $u20 = 2;

     label19:
        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = container#44;

        $u-1#55 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment> = $u-1#55;

        $u-1#55 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $u-1#55 == null goto label20;

        target#75 = $u-1#55.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager>;

        goto label21;

     label20:
        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        target#75 = container#44.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

     label21:
        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = target#75;

        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $u-1#55 == null goto label24;

        target#80 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $u-1#40 = $u-1#55.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1#83 = virtualinvoke target#80.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#40);

        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $u-1#83 != $u-1#55 goto label23;

        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $u21 = $u-1#55.<androidx.fragment.app.Fragment: int mState>;

        if $u21 >= 1 goto label22;

        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($u-1#55, 1, 0, 0, 1);

        goto label22;

     label22:
        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $u-1#40 = $u-1#55.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho> = $u-1#40;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = null;

        goto label24;

     label23:
        target#101 = new java.lang.IllegalStateException;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declared target fragment ");

        $u19 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that does not belong to this FragmentManager!");

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke target#101.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#40);

        throw target#101;

     label24:
        $u-1#40 = $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        if $u-1#40 == null goto label27;

        target#80 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#40 = $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        $u-1#83 = virtualinvoke target#80.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#40);

        $u-1#55 = (androidx.fragment.app.Fragment) $u-1#83;

        if $u-1#55 == null goto label26;

        $u21 = $u-1#55.<androidx.fragment.app.Fragment: int mState>;

        if $u21 >= 1 goto label25;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($u-1#55, 1, 0, 0, 1);

        goto label27;

     label25:
        goto label27;

     label26:
        target#101 = new java.lang.IllegalStateException;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declared target fragment ");

        $u-1#40 = $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#40);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that does not belong to this FragmentManager!");

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke target#101.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#40);

        throw target#101;

     label27:
        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#45 = virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($u19, $u-1#45, 0);

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performAttach()>();

        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment>;

        if $u-1#55 != null goto label28;

        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: void onAttachFragment(androidx.fragment.app.Fragment)>($u19);

        goto label29;

     label28:
        $u-1#55 = $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment>;

        virtualinvoke $u-1#55.<androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)>($u19);

     label29:
        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#45 = virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($u19, $u-1#45, 0);

        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mIsCreated>;

        if $u23 != 0 goto label30;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u19, target#42, 0);

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)>(target#42);

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u19, target#42, 0);

        goto label31;

     label30:
        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>(target#42);

        $u19.<androidx.fragment.app.Fragment: int mState> = 1;

     label31:
        $u21 = $u20;

        if $u20 <= 0 goto label32;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)>($u19);

     label32:
        if $u21 <= 1 goto label49;

        $u23 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u23 == 0 goto label33;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto ACTIVITY_CREATED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label33:
        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $u23 != 0 goto label47;

        newState#149 = null;

        $u20 = $u19.<androidx.fragment.app.Fragment: int mContainerId>;

        if $u20 == 0 goto label41;

        $u20 = $u19.<androidx.fragment.app.Fragment: int mContainerId>;

        if $u20 != -1 goto label34;

        container#153 = new java.lang.IllegalArgumentException;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create fragment ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for a container view with no id");

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke container#153.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#40);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>(container#153);

     label34:
        container#159 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer>;

        $u20 = $u19.<androidx.fragment.app.Fragment: int mContainerId>;

        $u-1 = virtualinvoke container#159.<androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)>($u20);

        newState#149 = (android.view.ViewGroup) $u-1;

        if newState#149 != null goto label41;

        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mRestored>;

        if $u23 != 0 goto label41;

     label35:
        $u-1#165 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>();

     label36:
        $u20 = $u19.<androidx.fragment.app.Fragment: int mContainerId>;

     label37:
        $u-1#40 = virtualinvoke $u-1#165.<android.content.res.Resources: java.lang.String getResourceName(int)>($u20);

     label38:
        goto label40;

     label39:
        newState#170 := @caughtexception;

        $u-1#40 = "unknown";

     label40:
        container#153 = new java.lang.IllegalArgumentException;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No view found for id 0x");

        $u20 = $u19.<androidx.fragment.app.Fragment: int mContainerId>;

        $u-1#176 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u20);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#176);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#40);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for fragment ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke container#153.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#40);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>(container#153);

     label41:
        $u19.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer> = newState#149;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $u-1#183 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>(target#42);

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($u-1#183, newState#149, target#42);

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u-1 == null goto label46;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u19.<androidx.fragment.app.Fragment: android.view.View mInnerView> = $u-1;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u-1.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        if newState#149 == null goto label42;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke newState#149.<android.view.ViewGroup: void addView(android.view.View)>($u-1);

     label42:
        $u23 = $u19.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $u23 == 0 goto label43;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u-1.<android.view.View: void setVisibility(int)>(8);

     label43:
        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($u-1, target#42);

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($u19, $u-1, target#42, 0);

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u20 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u20 != 0 goto label44;

        newState#149 = $u19.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if newState#149 == null goto label44;

        goto label45;

     label44:
        $u9 = 0;

     label45:
        $u19.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded> = $u9;

        goto label47;

     label46:
        $u19.<androidx.fragment.app.Fragment: android.view.View mInnerView> = null;

     label47:
        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)>(target#42);

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u19, target#42, 0);

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u-1 == null goto label48;

        target#42 = $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)>(target#42);

     label48:
        $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState> = null;

     label49:
        $u20 = $u21;

     label50:
        if $u20 <= 2 goto label52;

        $u23 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u23 == 0 goto label51;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto STARTED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label51:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performStart()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>($u19, 0);

     label52:
        if $u20 <= 3 goto label54;

        $u23 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u23 == 0 goto label53;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto RESUMED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label53:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performResume()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>($u19, 0);

        $u19.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState> = null;

        $u19.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = null;

     label54:
        goto label88;

     label55:
        newState#4 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if newState#4 <= $u20 goto label88;

        newState#4 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if newState#4 == 1 goto label70;

        if newState#4 == 2 goto label60;

        if newState#4 == 3 goto label58;

        if newState#4 == 4 goto label56;

        goto label88;

     label56:
        if $u20 >= 4 goto label58;

        $u9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u9 == 0 goto label57;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom RESUMED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label57:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performPause()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>($u19, 0);

     label58:
        if $u20 >= 3 goto label60;

        $u9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u9 == 0 goto label59;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom STARTED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label59:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performStop()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>($u19, 0);

     label60:
        if $u20 >= 2 goto label69;

        $u9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u9 == 0 goto label61;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom ACTIVITY_CREATED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label61:
        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u-1 == null goto label62;

        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u9 = virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)>($u19);

        if $u9 == 0 goto label62;

        $u-1#51 = $u19.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState>;

        if $u-1#51 != null goto label62;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>($u19);

     label62:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performDestroyView()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>($u19, 0);

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u-1 == null goto label68;

        newState#149 = $u19.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if newState#149 == null goto label68;

        newState#149 = $u19.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke newState#149.<android.view.ViewGroup: void endViewTransition(android.view.View)>($u-1);

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u-1.<android.view.View: void clearAnimation()>();

        target#253 = null;

        $u-1#55 = virtualinvoke $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()>();

        if $u-1#55 == null goto label64;

        $u-1#55 = virtualinvoke $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()>();

        $u9 = $u-1#55.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $u9 != 0 goto label63;

        goto label64;

     label63:
        goto label68;

     label64:
        newState#4 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if newState#4 <= 0 goto label66;

        $u9 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $u9 != 0 goto label66;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        newState#4 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if newState#4 != 0 goto label65;

        container#267 = $u19.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        container#268 = container#267 cmpl 0.0F;

        if container#268 < 0 goto label65;

        target#253 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>($u19, $u21, 0, $u22);

        goto label66;

     label65:
        goto label66;

     label66:
        $u19.<androidx.fragment.app.Fragment: float mPostponedAlpha> = 0.0F;

        if target#253 == null goto label67;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)>($u19, target#253, $u20);

     label67:
        newState#149 = $u19.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $u-1 = $u19.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke newState#149.<android.view.ViewGroup: void removeView(android.view.View)>($u-1);

        goto label68;

     label68:
        $u19.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer> = null;

        $u19.<androidx.fragment.app.Fragment: android.view.View mView> = null;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner> = null;

        target#280 = $u19.<androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData>;

        virtualinvoke target#280.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(null);

        $u19.<androidx.fragment.app.Fragment: android.view.View mInnerView> = null;

        $u19.<androidx.fragment.app.Fragment: boolean mInLayout> = 0;

        goto label70;

     label69:
        goto label70;

     label70:
        if $u20 >= 1 goto label88;

        $u9 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $u9 == 0 goto label72;

        $u-1 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $u-1 == null goto label71;

        $u-1 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(null);

        virtualinvoke $u-1.<android.view.View: void clearAnimation()>();

        goto label72;

     label71:
        $u-1#27 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $u-1#27 == null goto label72;

        $u-1#27 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        virtualinvoke $u19.<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>(null);

        virtualinvoke $u-1#27.<android.animation.Animator: void cancel()>();

     label72:
        $u-1 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $u-1 != null goto label87;

        $u-1#27 = virtualinvoke $u19.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $u-1#27 == null goto label73;

        goto label87;

     label73:
        $u9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u9 == 0 goto label74;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom CREATED: ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

     label74:
        $u9 = $u19.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $u9 == 0 goto label75;

        $u9 = virtualinvoke $u19.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        if $u9 != 0 goto label75;

        $u9 = 1;

        goto label76;

     label75:
        $u9 = 0;

     label76:
        if $u9 != 0 goto label78;

        shouldClear = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        newState = virtualinvoke shouldClear.<androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)>($u19);

        if newState == 0 goto label77;

        goto label78;

     label77:
        $u19.<androidx.fragment.app.Fragment: int mState> = 0;

        goto label84;

     label78:
        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        newState = container#44 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if newState == 0 goto label79;

        shouldClear = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        newState = virtualinvoke shouldClear.<androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()>();

        goto label81;

     label79:
        $u-1#45 = virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        newState = $u-1#45 instanceof android.app.Activity;

        if newState == 0 goto label80;

        container#44 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#45 = virtualinvoke container#44.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        shouldClear#321 = (android.app.Activity) $u-1#45;

        newState = virtualinvoke shouldClear#321.<android.app.Activity: boolean isChangingConfigurations()>();

        newState = newState ^ 1;

        goto label81;

     label80:
        newState = 1;

     label81:
        if $u9 != 0 goto label82;

        if newState == 0 goto label83;

     label82:
        shouldClear = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke shouldClear.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)>($u19);

     label83:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performDestroy()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>($u19, 0);

     label84:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void performDetach()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>($u19, 0);

        if $u23 != 0 goto label88;

        if $u9 != 0 goto label86;

        shouldClear = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u23 = virtualinvoke shouldClear.<androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)>($u19);

        if $u23 == 0 goto label85;

        goto label86;

     label85:
        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = null;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment> = null;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = null;

        $u-1#40 = $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        if $u-1#40 == null goto label88;

        target#80 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#40 = $u19.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        $u-1#83 = virtualinvoke target#80.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#40);

        $u-1#55 = (androidx.fragment.app.Fragment) $u-1#83;

        if $u-1#55 == null goto label88;

        $u23 = virtualinvoke $u-1#55.<androidx.fragment.app.Fragment: boolean getRetainInstance()>();

        if $u23 == 0 goto label88;

        $u19.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = $u-1#55;

        goto label88;

     label86:
        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)>($u19);

        goto label88;

     label87:
        virtualinvoke $u19.<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>($u20);

        $u20 = 1;

        goto label88;

     label88:
        $u21 = $u19.<androidx.fragment.app.Fragment: int mState>;

        if $u21 == $u20 goto label89;

        target#38 = new java.lang.StringBuilder;

        specialinvoke target#38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveToState: Fragment state for ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u19);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not updated inline; expected state ");

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u20);

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $u21 = $u19.<androidx.fragment.app.Fragment: int mState>;

        virtualinvoke target#38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u21);

        $u-1#40 = virtualinvoke target#38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $u-1#40);

        $u19.<androidx.fragment.app.Fragment: int mState> = $u20;

     label89:
        return;

        catch android.content.res.Resources$NotFoundException from label35 to label36 with label39;
        catch android.content.res.Resources$NotFoundException from label37 to label38 with label39;
    }

    public void noteStateNotSaved()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList addedCount;
        int $u-1, i;
        java.lang.Object $u-1#7;
        androidx.fragment.app.Fragment fragment;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        addedCount = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1 = virtualinvoke addedCount.<java.util.ArrayList: int size()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        addedCount = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#7 = virtualinvoke addedCount.<java.util.ArrayList: java.lang.Object get(int)>(i);

        fragment = (androidx.fragment.app.Fragment) $u-1#7;

        if fragment == null goto label2;

        virtualinvoke fragment.<androidx.fragment.app.Fragment: void noteStateNotSaved()>();

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.view.View $u17;
        java.lang.String $u18, fname, $u-1#37;
        android.content.Context $u19;
        android.util.AttributeSet $u20;
        int containerId, $u2#10, $u-1#16;
        boolean $u-1;
        androidx.fragment.app.Fragment fragment;
        int[] $u2;
        android.content.res.TypedArray $u-1#9;
        java.lang.ClassLoader $u-1#19;
        java.lang.IllegalArgumentException fname#24;
        java.lang.StringBuilder fragment#25;
        androidx.fragment.app.FragmentFactory $u-1#44;
        androidx.fragment.app.FragmentHostCallback $u2#51;
        android.os.Bundle $u3;
        java.lang.Object $u-1#73;
        java.lang.IllegalStateException fname#77;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u17 := @parameter0: android.view.View;

        $u18 := @parameter1: java.lang.String;

        $u19 := @parameter2: android.content.Context;

        $u20 := @parameter3: android.util.AttributeSet;

        fname = "fragment";

        $u-1 = virtualinvoke fname.<java.lang.String: boolean equals(java.lang.Object)>($u18);

        fragment = null;

        if $u-1 != 0 goto label01;

        return null;

     label01:
        $u18 = interfaceinvoke $u20.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

        $u2 = <androidx.fragment.app.FragmentManagerImpl$FragmentTag: int[] Fragment>;

        $u-1#9 = virtualinvoke $u19.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($u20, $u2);

        $u2#10 = 0;

        if $u18 != null goto label02;

        $u18 = virtualinvoke $u-1#9.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        goto label02;

     label02:
        $u-1#16 = virtualinvoke $u-1#9.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        fname = virtualinvoke $u-1#9.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        virtualinvoke $u-1#9.<android.content.res.TypedArray: void recycle()>();

        if $u18 == null goto label21;

        $u-1#19 = virtualinvoke $u19.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $u-1 = staticinvoke <androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)>($u-1#19, $u18);

        if $u-1 != 0 goto label03;

        return null;

     label03:
        if $u17 == null goto label04;

        $u2#10 = virtualinvoke $u17.<android.view.View: int getId()>();

     label04:
        containerId = $u2#10;

        if $u2#10 != -1 goto label06;

        if $u-1#16 != -1 goto label06;

        if fname == null goto label05;

        goto label06;

     label05:
        fname#24 = new java.lang.IllegalArgumentException;

        fragment#25 = new java.lang.StringBuilder;

        specialinvoke fragment#25.<java.lang.StringBuilder: void <init>()>();

        fname = interfaceinvoke $u20.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fname);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Must specify unique android:id, android:tag, or have a parent with an id for ");

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u18);

        $u18 = virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke fname#24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u18);

        throw fname#24;

     label06:
        if $u-1#16 == -1 goto label07;

        fragment = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)>($u-1#16);

     label07:
        if fragment != null goto label08;

        if fname == null goto label08;

        fragment = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>(fname);

     label08:
        if fragment != null goto label09;

        if containerId == -1 goto label09;

        fragment = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)>(containerId);

     label09:
        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label10;

        fragment#25 = new java.lang.StringBuilder;

        specialinvoke fragment#25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreateView: id=0x");

        $u-1#37 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u-1#16);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#37);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fname=");

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u18);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" existing=");

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(fragment);

        $u-1#37 = virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#37);

     label10:
        if fragment != null goto label13;

        $u-1#44 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        $u-1#19 = virtualinvoke $u19.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        fragment = virtualinvoke $u-1#44.<androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)>($u-1#19, $u18);

        fragment.<androidx.fragment.app.Fragment: boolean mFromLayout> = 1;

        if $u-1#16 == 0 goto label11;

        $u2#10 = $u-1#16;

        goto label12;

     label11:
        $u2#10 = containerId;

     label12:
        fragment.<androidx.fragment.app.Fragment: int mFragmentId> = $u2#10;

        fragment.<androidx.fragment.app.Fragment: int mContainerId> = containerId;

        fragment.<androidx.fragment.app.Fragment: java.lang.String mTag> = fname;

        fragment.<androidx.fragment.app.Fragment: boolean mInLayout> = 1;

        fragment.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = this;

        $u2#51 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        fragment.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = $u2#51;

        $u2#51 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u19 = virtualinvoke $u2#51.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u3 = fragment.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke fragment.<androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>($u19, $u20, $u3);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)>(fragment, 1);

        goto label14;

     label13:
        $u-1 = fragment.<androidx.fragment.app.Fragment: boolean mInLayout>;

        if $u-1 != 0 goto label20;

        fragment.<androidx.fragment.app.Fragment: boolean mInLayout> = 1;

        $u2#51 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        fragment.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = $u2#51;

        $u2#51 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u19 = virtualinvoke $u2#51.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u3 = fragment.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke fragment.<androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>($u19, $u20, $u3);

     label14:
        containerId = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if containerId >= 1 goto label15;

        $u-1 = fragment.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $u-1 == 0 goto label15;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>(fragment, 1, 0, 0, 0);

        goto label16;

     label15:
        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)>(fragment);

     label16:
        $u17 = fragment.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u17 == null goto label19;

        if $u-1#16 == 0 goto label17;

        $u17 = fragment.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u17.<android.view.View: void setId(int)>($u-1#16);

     label17:
        $u17 = fragment.<androidx.fragment.app.Fragment: android.view.View mView>;

        $u-1#73 = virtualinvoke $u17.<android.view.View: java.lang.Object getTag()>();

        if $u-1#73 != null goto label18;

        $u17 = fragment.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $u17.<android.view.View: void setTag(java.lang.Object)>(fname);

     label18:
        $u17 = fragment.<androidx.fragment.app.Fragment: android.view.View mView>;

        return $u17;

     label19:
        fname#77 = new java.lang.IllegalStateException;

        fragment#25 = new java.lang.StringBuilder;

        specialinvoke fragment#25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u18);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not create a view.");

        $u18 = virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke fname#77.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u18);

        throw fname#77;

     label20:
        fname#24 = new java.lang.IllegalArgumentException;

        fragment#25 = new java.lang.StringBuilder;

        specialinvoke fragment#25.<java.lang.StringBuilder: void <init>()>();

        $u-1#37 = interfaceinvoke $u20.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#37);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Duplicate id 0x");

        $u-1#37 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u-1#16);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#37);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag ");

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fname);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or parent id 0x");

        fname = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(containerId);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fname);

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with another fragment for ");

        virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u18);

        $u18 = virtualinvoke fragment#25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke fname#24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u18);

        throw fname#24;

     label21:
        return null;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u2;
        android.content.Context $u3;
        android.util.AttributeSet $u4;
        android.view.View $u-1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: android.content.Context;

        $u4 := @parameter2: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(null, $u2, $u3, $u4);

        return $u-1;
    }

    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u8;
        int $u3;
        boolean $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u8 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = $u8.<androidx.fragment.app.Fragment: boolean mDeferStart>;

        if $u0 == 0 goto label2;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions>;

        if $u0 == 0 goto label1;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart> = 1;

        return;

     label1:
        $u8.<androidx.fragment.app.Fragment: boolean mDeferStart> = 0;

        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($u8, $u3, 0, 0, 0);

     label2:
        return;
    }

    public void popBackStack()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $u0.<androidx.fragment.app.FragmentManagerImpl$PopBackStackState: void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)>(this, null, -1, 0);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>($u0, 0);

        return;
    }

    public void popBackStack(int, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u4, $u5;
        java.lang.String $u-1;
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $u0;
        java.lang.IllegalArgumentException $u0#4;
        java.lang.StringBuilder $u1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        if $u4 < 0 goto label1;

        $u0 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $u0.<androidx.fragment.app.FragmentManagerImpl$PopBackStackState: void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)>(this, null, $u4, $u5);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>($u0, 0);

        return;

     label1:
        $u0#4 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u4);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1);

        throw $u0#4;
    }

    public void popBackStack(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u3;
        int $u4;
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: java.lang.String;

        $u4 := @parameter1: int;

        $u0 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $u0.<androidx.fragment.app.FragmentManagerImpl$PopBackStackState: void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)>(this, $u3, -1, $u4);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>($u0, 0);

        return;
    }

    public boolean popBackStackImmediate()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        boolean $u-1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

        $u-1 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(null, -1, 0);

        return $u-1;
    }

    public boolean popBackStackImmediate(int, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u4, $u5;
        boolean $u-1;
        java.lang.IllegalArgumentException $u0;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#6;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        if $u4 < 0 goto label1;

        $u-1 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(null, $u4, $u5);

        return $u-1;

     label1:
        $u0 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u4);

        $u-1#6 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#6);

        throw $u0;
    }

    public boolean popBackStackImmediate(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.String $u2;
        int $u3;
        boolean $u-1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: int;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

        $u-1 = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>($u2, -1, $u3);

        return $u-1;
    }

    boolean popBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList records, isRecordPop, last;
        java.lang.String $u8, $u-1#21;
        int $u9, $u10, bss, $u4;
        java.lang.Object $u-1;
        java.lang.Boolean $u-1#10;
        androidx.fragment.app.BackStackRecord bss#20;
        boolean $u-1#23;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        records := @parameter0: java.util.ArrayList;

        isRecordPop := @parameter1: java.util.ArrayList;

        $u8 := @parameter2: java.lang.String;

        $u9 := @parameter3: int;

        $u10 := @parameter4: int;

        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if last != null goto label01;

        return 0;

     label01:
        if $u8 != null goto label03;

        if $u9 >= 0 goto label03;

        bss = $u10 & 1;

        if bss != 0 goto label03;

        $u9 = virtualinvoke last.<java.util.ArrayList: int size()>();

        $u9 = $u9 - 1;

        if $u9 >= 0 goto label02;

        return 0;

     label02:
        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1 = virtualinvoke last.<java.util.ArrayList: java.lang.Object remove(int)>($u9);

        virtualinvoke records.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1);

        $u-1#10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke isRecordPop.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#10);

        return 1;

     label03:
        bss = -1;

        if $u8 != null goto label04;

        if $u9 < 0 goto label13;

     label04:
        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        bss = virtualinvoke last.<java.util.ArrayList: int size()>();

        bss = bss - 1;

     label05:
        if bss < 0 goto label08;

        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1 = virtualinvoke last.<java.util.ArrayList: java.lang.Object get(int)>(bss);

        bss#20 = (androidx.fragment.app.BackStackRecord) $u-1;

        if $u8 == null goto label06;

        $u-1#21 = virtualinvoke bss#20.<androidx.fragment.app.BackStackRecord: java.lang.String getName()>();

        $u-1#23 = virtualinvoke $u8.<java.lang.String: boolean equals(java.lang.Object)>($u-1#21);

        if $u-1#23 == 0 goto label06;

        goto label08;

     label06:
        if $u9 < 0 goto label07;

        $u4 = bss#20.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $u9 != $u4 goto label07;

        goto label08;

     label07:
        bss = bss + -1;

        goto label05;

     label08:
        if bss >= 0 goto label09;

        return 0;

     label09:
        $u10 = $u10 & 1;

        if $u10 == 0 goto label13;

        bss = bss + -1;

     label10:
        if bss < 0 goto label13;

        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1 = virtualinvoke last.<java.util.ArrayList: java.lang.Object get(int)>(bss);

        bss#20 = (androidx.fragment.app.BackStackRecord) $u-1;

        if $u8 == null goto label11;

        $u-1#21 = virtualinvoke bss#20.<androidx.fragment.app.BackStackRecord: java.lang.String getName()>();

        $u-1#23 = virtualinvoke $u8.<java.lang.String: boolean equals(java.lang.Object)>($u-1#21);

        if $u-1#23 != 0 goto label12;

     label11:
        if $u9 < 0 goto label13;

        $u10 = bss#20.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $u9 != $u10 goto label13;

     label12:
        bss = bss + -1;

        goto label10;

     label13:
        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u9 = virtualinvoke last.<java.util.ArrayList: int size()>();

        $u9 = $u9 - 1;

        if bss != $u9 goto label14;

        return 0;

     label14:
        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u9 = virtualinvoke last.<java.util.ArrayList: int size()>();

        $u9 = $u9 - 1;

     label15:
        if $u9 <= bss goto label16;

        last = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1 = virtualinvoke last.<java.util.ArrayList: java.lang.Object remove(int)>($u9);

        virtualinvoke records.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1);

        $u-1#10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke isRecordPop.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#10);

        $u9 = $u9 + -1;

        goto label15;

     label16:
        return 1;
    }

    public void putFragment(android.os.Bundle, java.lang.String, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this, $u0;
        android.os.Bundle $u4;
        java.lang.String $u5, $u-1;
        androidx.fragment.app.Fragment $u6;
        java.lang.IllegalStateException $u0#2;
        java.lang.StringBuilder $u1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: android.os.Bundle;

        $u5 := @parameter1: java.lang.String;

        $u6 := @parameter2: androidx.fragment.app.Fragment;

        $u0 = $u6.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if $u0 == this goto label1;

        $u0#2 = new java.lang.IllegalStateException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u6);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($u0#2);

     label1:
        $u-1 = $u6.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $u4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($u5, $u-1);

        return;
    }

    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u3;
        boolean $u4;
        java.util.concurrent.CopyOnWriteArrayList $u0;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $u1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        $u4 := @parameter1: boolean;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u1 = new androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder;

        specialinvoke $u1.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)>($u3, $u4);

        virtualinvoke $u0.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($u1);

        return;
    }

    public void removeFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u5;
        java.util.ArrayList $u3, $u2#14;
        boolean inactive, $u2#13;
        java.lang.StringBuilder $u1;
        int $u2;
        java.lang.String $u-1;
        java.lang.Throwable $u1#18;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        inactive = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if inactive == 0 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove: ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nesting=");

        $u2 = $u5.<androidx.fragment.app.Fragment: int mBackStackNesting>;

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u2);

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label1:
        inactive = virtualinvoke $u5.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        inactive = inactive ^ 1;

        $u2#13 = $u5.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $u2#13 == 0 goto label2;

        if inactive == 0 goto label9;

     label2:
        $u2#14 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $u2#14;

     label3:
        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $u3.<java.util.ArrayList: boolean remove(java.lang.Object)>($u5);

        exitmonitor $u2#14;

     label4:
        inactive = specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)>($u5);

        if inactive == 0 goto label5;

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label5:
        $u5.<androidx.fragment.app.Fragment: boolean mAdded> = 0;

        $u5.<androidx.fragment.app.Fragment: boolean mRemoving> = 1;

        return;

     label6:
        $u1#18 := @caughtexception;

     label7:
        exitmonitor $u2#14;

     label8:
        throw $u1#18;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $u2;
        java.util.ArrayList $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u2 := @parameter0: androidx.fragment.app.FragmentManager$OnBackStackChangedListener;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<java.util.ArrayList: boolean remove(java.lang.Object)>($u2);

     label1:
        return;
    }

    void removeRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u5;
        boolean $u-1;
        androidx.fragment.app.FragmentManagerViewModel removed;
        java.lang.StringBuilder $u2;
        java.lang.String $u-1#10;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        $u-1 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>();

        if $u-1 == 0 goto label1;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "Ignoring removeRetainedFragment as the state is already saved");

        return;

     label1:
        removed = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u-1 = virtualinvoke removed.<androidx.fragment.app.FragmentManagerViewModel: boolean removeRetainedFragment(androidx.fragment.app.Fragment)>($u5);

        if $u-1 == 0 goto label2;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label2;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating retained Fragments: Removed ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1#10 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#10);

     label2:
        return;
    }

    void reportBackStackChanged()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList i;
        int i#2, $u-1;
        java.lang.Object $u-1#7;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $u1;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if i == null goto label2;

        i#2 = 0;

     label1:
        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        $u-1 = virtualinvoke i.<java.util.ArrayList: int size()>();

        if i#2 >= $u-1 goto label2;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        $u-1#7 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>(i#2);

        $u1 = (androidx.fragment.app.FragmentManager$OnBackStackChangedListener) $u-1#7;

        interfaceinvoke $u1.<androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()>();

        i#2 = i#2 + 1;

        goto label1;

     label2:
        return;
    }

    void restoreAllState(android.os.Parcelable, androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.os.Parcelable $u3;
        androidx.fragment.app.FragmentManagerNonConfig $u4;
        androidx.fragment.app.FragmentHostCallback $u0;
        boolean $u0#2;
        java.lang.IllegalStateException $u0#3;
        androidx.fragment.app.FragmentManagerViewModel $u0#4;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: android.os.Parcelable;

        $u4 := @parameter1: androidx.fragment.app.FragmentManagerNonConfig;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $u0#2 == 0 goto label1;

        $u0#3 = new java.lang.IllegalStateException;

        specialinvoke $u0#3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must use restoreSaveState when your FragmentHostCallback implements ViewModelStoreOwner");

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($u0#3);

     label1:
        $u0#4 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $u0#4.<androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)>($u4);

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)>($u3);

        return;
    }

    void restoreSaveState(android.os.Parcelable)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        android.os.Parcelable $u14;
        androidx.fragment.app.FragmentManagerState fms;
        java.util.ArrayList i, fragmentState#126;
        androidx.fragment.app.FragmentManagerViewModel i#4;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#7, $u-1#25;
        boolean $u-1#9;
        java.lang.Object $u-1#14;
        androidx.fragment.app.Fragment f, logw;
        java.lang.StringBuilder $u7;
        java.lang.String $u-1#21, $u10;
        androidx.fragment.app.FragmentState fragmentState;
        android.os.Bundle logw#55;
        androidx.fragment.app.FragmentHostCallback $u4;
        android.content.Context $u-1#58;
        java.lang.ClassLoader $u-1#60;
        android.util.SparseArray $u-1#64;
        java.util.HashMap i#67;
        androidx.fragment.app.FragmentFactory $u-1#81;
        java.lang.IllegalStateException $u7#109;
        java.lang.Throwable i#127;
        androidx.fragment.app.BackStackState[] i#133;
        int f#136, f#139;
        androidx.fragment.app.BackStackState f#141;
        androidx.fragment.app.BackStackRecord $u-1#142;
        androidx.core.util.LogWriter logw#153;
        java.io.PrintWriter pw;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u14 := @parameter0: android.os.Parcelable;

        if $u14 != null goto label01;

        return;

     label01:
        fms = (androidx.fragment.app.FragmentManagerState) $u14;

        i = fms.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive>;

        if i != null goto label02;

        return;

     label02:
        i#4 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u-1 = virtualinvoke i#4.<androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()>();

        $u-1#7 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $u-1#9 = interfaceinvoke $u-1#7.<java.util.Iterator: boolean hasNext()>();

        if $u-1#9 == 0 goto label12;

        $u-1#14 = interfaceinvoke $u-1#7.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#14;

        $u-1#9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1#9 == 0 goto label04;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: re-attaching retained ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        $u-1#21 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#21);

     label04:
        i = fms.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive>;

        $u-1#25 = virtualinvoke i.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $u-1#9 = interfaceinvoke $u-1#25.<java.util.Iterator: boolean hasNext()>();

        if $u-1#9 == 0 goto label06;

        $u-1#14 = interfaceinvoke $u-1#25.<java.util.Iterator: java.lang.Object next()>();

        fragmentState = (androidx.fragment.app.FragmentState) $u-1#14;

        $u-1#21 = fragmentState.<androidx.fragment.app.FragmentState: java.lang.String mWho>;

        $u10 = f.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1#9 = virtualinvoke $u-1#21.<java.lang.String: boolean equals(java.lang.Object)>($u10);

        if $u-1#9 == 0 goto label05;

        goto label07;

     label06:
        fragmentState = null;

     label07:
        if fragmentState != null goto label09;

        $u-1#9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1#9 == 0 goto label08;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discarding retained Fragment ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was not found in the set of active Fragments ");

        i = fms.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive>;

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i);

        $u-1#21 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#21);

     label08:
        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>(f, 1, 0, 0, 0);

        f.<androidx.fragment.app.Fragment: boolean mRemoving> = 1;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>(f, 0, 0, 0, 0);

        goto label03;

     label09:
        fragmentState.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance> = f;

        f.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = null;

        f.<androidx.fragment.app.Fragment: int mBackStackNesting> = 0;

        f.<androidx.fragment.app.Fragment: boolean mInLayout> = 0;

        f.<androidx.fragment.app.Fragment: boolean mAdded> = 0;

        logw = f.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if logw == null goto label10;

        logw = f.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $u-1#21 = logw.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        goto label11;

     label10:
        $u-1#21 = null;

     label11:
        f.<androidx.fragment.app.Fragment: java.lang.String mTargetWho> = $u-1#21;

        f.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = null;

        logw#55 = fragmentState.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if logw#55 == null goto label03;

        logw#55 = fragmentState.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $u4 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#58 = virtualinvoke $u4.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#60 = virtualinvoke $u-1#58.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke logw#55.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($u-1#60);

        logw#55 = fragmentState.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $u-1#64 = virtualinvoke logw#55.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state");

        f.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = $u-1#64;

        logw#55 = fragmentState.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        f.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState> = logw#55;

        goto label03;

     label12:
        i#67 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        virtualinvoke i#67.<java.util.HashMap: void clear()>();

        i = fms.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive>;

        $u-1#7 = virtualinvoke i.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $u-1#9 = interfaceinvoke $u-1#7.<java.util.Iterator: boolean hasNext()>();

        if $u-1#9 == 0 goto label15;

        $u-1#14 = interfaceinvoke $u-1#7.<java.util.Iterator: java.lang.Object next()>();

        fragmentState = (androidx.fragment.app.FragmentState) $u-1#14;

        if fragmentState == null goto label13;

        $u4 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#58 = virtualinvoke $u4.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $u-1#60 = virtualinvoke $u-1#58.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $u-1#81 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        f = virtualinvoke fragmentState.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory)>($u-1#60, $u-1#81);

        f.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = this;

        $u-1#9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1#9 == 0 goto label14;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: active (");

        $u-1#21 = f.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#21);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        $u-1#21 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#21);

     label14:
        i#67 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#21 = f.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke i#67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u-1#21, f);

        fragmentState.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance> = null;

        goto label13;

     label15:
        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke i.<java.util.ArrayList: void clear()>();

        i = fms.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded>;

        if i == null goto label24;

        i = fms.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded>;

        $u-1#7 = virtualinvoke i.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $u-1#9 = interfaceinvoke $u-1#7.<java.util.Iterator: boolean hasNext()>();

        if $u-1#9 == 0 goto label24;

        $u-1#14 = interfaceinvoke $u-1#7.<java.util.Iterator: java.lang.Object next()>();

        $u-1#21 = (java.lang.String) $u-1#14;

        i#67 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#14 = virtualinvoke i#67.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#21);

        f = (androidx.fragment.app.Fragment) $u-1#14;

        if f != null goto label17;

        $u7#109 = new java.lang.IllegalStateException;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No instantiated fragment for (");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#21);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $u10 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u7#109.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u10);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($u7#109);

     label17:
        f.<androidx.fragment.app.Fragment: boolean mAdded> = 1;

        $u-1#9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1#9 == 0 goto label18;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: added (");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#21);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        $u-1#21 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#21);

     label18:
        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#9 = virtualinvoke i.<java.util.ArrayList: boolean contains(java.lang.Object)>(f);

        if $u-1#9 != 0 goto label23;

        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor i;

     label19:
        fragmentState#126 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke fragmentState#126.<java.util.ArrayList: boolean add(java.lang.Object)>(f);

        exitmonitor i;

     label20:
        goto label16;

     label21:
        i#127 := @caughtexception;

        exitmonitor i;

     label22:
        throw i#127;

     label23:
        $u7#109 = new java.lang.IllegalStateException;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already added ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        $u-1#21 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u7#109.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#21);

        throw $u7#109;

     label24:
        i#133 = fms.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        if i#133 == null goto label29;

        i = new java.util.ArrayList;

        i#133 = fms.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        f#136 = lengthof i#133;

        specialinvoke i.<java.util.ArrayList: void <init>(int)>(f#136);

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = i;

        f#136 = 0;

     label25:
        i#133 = fms.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        f#139 = lengthof i#133;

        if f#136 >= f#139 goto label28;

        i#133 = fms.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        f#141 = i#133[f#136];

        $u-1#142 = virtualinvoke f#141.<androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)>(this);

        $u-1#9 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1#9 == 0 goto label26;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: back stack #");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(f#136);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (index ");

        f#139 = $u-1#142.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(f#139);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#142);

        $u-1#21 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#21);

        logw#153 = new androidx.core.util.LogWriter;

        specialinvoke logw#153.<androidx.core.util.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        pw = new java.io.PrintWriter;

        specialinvoke pw.<java.io.PrintWriter: void <init>(java.io.Writer)>(logw#153);

        virtualinvoke $u-1#142.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>("  ", pw, 0);

        virtualinvoke pw.<java.io.PrintWriter: void close()>();

     label26:
        i = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        virtualinvoke i.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#142);

        f#139 = $u-1#142.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if f#139 < 0 goto label27;

        f#139 = $u-1#142.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)>(f#139, $u-1#142);

     label27:
        f#136 = f#136 + 1;

        goto label25;

     label28:
        goto label30;

     label29:
        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = null;

     label30:
        $u-1#21 = fms.<androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho>;

        if $u-1#21 == null goto label31;

        i#67 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#21 = fms.<androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho>;

        $u-1#14 = virtualinvoke i#67.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#21);

        f = (androidx.fragment.app.Fragment) $u-1#14;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav> = f;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>(f);

     label31:
        f#136 = fms.<androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex>;

        this.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex> = f#136;

        return;

        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManagerNonConfig $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        boolean $u0#2;
        java.lang.IllegalStateException $u0#3;
        androidx.fragment.app.FragmentManagerViewModel $u0#4;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $u0#2 == 0 goto label1;

        $u0#3 = new java.lang.IllegalStateException;

        specialinvoke $u0#3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot use retainNonConfig when your FragmentHostCallback implements ViewModelStoreOwner.");

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($u0#3);

     label1:
        $u0#4 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $u-1 = virtualinvoke $u0#4.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()>();

        return $u-1;
    }

    android.os.Parcelable saveAllState()
    {
        androidx.fragment.app.FragmentManagerImpl this, f1;
        java.util.ArrayList active, added, f#65, f#69;
        java.util.HashMap size;
        boolean $u-1, $u-1#15;
        int $u-1#7, f#93;
        java.util.Collection $u-1#11;
        java.util.Iterator $u-1#13;
        java.lang.Object $u-1#20;
        androidx.fragment.app.Fragment f, target#38;
        java.lang.IllegalStateException f1#24;
        java.lang.StringBuilder $u11;
        java.lang.String $u-1#26;
        androidx.fragment.app.FragmentState fs;
        android.os.Bundle target;
        androidx.fragment.app.BackStackState[] backStack;
        androidx.fragment.app.BackStackState fs#94;
        androidx.fragment.app.BackStackRecord target#98;
        androidx.fragment.app.FragmentManagerState f#107;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>();

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()>();

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        this.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 1;

        size = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke size.<java.util.HashMap: boolean isEmpty()>();

        if $u-1 == 0 goto label01;

        return null;

     label01:
        size = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#7 = virtualinvoke size.<java.util.HashMap: int size()>();

        active = new java.util.ArrayList;

        specialinvoke active.<java.util.ArrayList: void <init>(int)>($u-1#7);

        $u-1 = 0;

        size = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#11 = virtualinvoke size.<java.util.HashMap: java.util.Collection values()>();

        $u-1#13 = interfaceinvoke $u-1#11.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $u-1#15 = interfaceinvoke $u-1#13.<java.util.Iterator: boolean hasNext()>();

        if $u-1#15 == 0 goto label09;

        $u-1#20 = interfaceinvoke $u-1#13.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#20;

        if f == null goto label02;

        f1 = f.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if f1 == this goto label03;

        f1#24 = new java.lang.IllegalStateException;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: active ");

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was removed from the FragmentManager");

        $u-1#26 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke f1#24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#26);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>(f1#24);

     label03:
        $u-1 = 1;

        fs = new androidx.fragment.app.FragmentState;

        specialinvoke fs.<androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)>(f);

        virtualinvoke active.<java.util.ArrayList: boolean add(java.lang.Object)>(fs);

        $u-1#7 = f.<androidx.fragment.app.Fragment: int mState>;

        if $u-1#7 <= 0 goto label07;

        target = fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if target != null goto label07;

        target = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)>(f);

        fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState> = target;

        $u-1#26 = f.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        if $u-1#26 == null goto label08;

        size = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1#26 = f.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        $u-1#20 = virtualinvoke size.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#26);

        target#38 = (androidx.fragment.app.Fragment) $u-1#20;

        if target#38 != null goto label04;

        f1#24 = new java.lang.IllegalStateException;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: ");

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has target not in fragment manager: ");

        $u-1#26 = f.<androidx.fragment.app.Fragment: java.lang.String mTargetWho>;

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#26);

        $u-1#26 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke f1#24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#26);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>(f1#24);

     label04:
        target = fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if target != null goto label05;

        target = new android.os.Bundle;

        specialinvoke target.<android.os.Bundle: void <init>()>();

        fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState> = target;

     label05:
        target = fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>(target, "android:target_state", target#38);

        $u-1#7 = f.<androidx.fragment.app.Fragment: int mTargetRequestCode>;

        if $u-1#7 == 0 goto label06;

        target = fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $u-1#7 = f.<androidx.fragment.app.Fragment: int mTargetRequestCode>;

        virtualinvoke target.<android.os.Bundle: void putInt(java.lang.String,int)>("android:target_req_state", $u-1#7);

     label06:
        goto label08;

     label07:
        target = f.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState> = target;

     label08:
        $u-1#15 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1#15 == 0 goto label02;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved state of ");

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        target = fs.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(target);

        $u-1#26 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#26);

        goto label02;

     label09:
        if $u-1 != 0 goto label10;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label18;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "saveAllState: no fragments!");

        return null;

     label10:
        added = null;

        backStack = null;

        f#65 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#7 = virtualinvoke f#65.<java.util.ArrayList: int size()>();

        if $u-1#7 <= 0 goto label13;

        f#65 = new java.util.ArrayList;

        specialinvoke f#65.<java.util.ArrayList: void <init>(int)>($u-1#7);

        added = f#65;

        f#69 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $u-1#13 = virtualinvoke f#69.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $u-1 = interfaceinvoke $u-1#13.<java.util.Iterator: boolean hasNext()>();

        if $u-1 == 0 goto label13;

        $u-1#20 = interfaceinvoke $u-1#13.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#20;

        $u-1#26 = f.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke f#65.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#26);

        f1 = f.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if f1 == this goto label12;

        f1#24 = new java.lang.IllegalStateException;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: active ");

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was removed from the FragmentManager");

        $u-1#26 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke f1#24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#26);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>(f1#24);

     label12:
        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label11;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding fragment (");

        $u-1#26 = f.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#26);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f);

        $u-1#26 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#26);

        goto label11;

     label13:
        f#65 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if f#65 == null goto label16;

        $u-1#7 = virtualinvoke f#65.<java.util.ArrayList: int size()>();

        if $u-1#7 <= 0 goto label16;

        backStack = newarray (androidx.fragment.app.BackStackState)[$u-1#7];

        f#93 = 0;

     label14:
        if f#93 >= $u-1#7 goto label16;

        fs#94 = new androidx.fragment.app.BackStackState;

        f#65 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1#20 = virtualinvoke f#65.<java.util.ArrayList: java.lang.Object get(int)>(f#93);

        target#98 = (androidx.fragment.app.BackStackRecord) $u-1#20;

        specialinvoke fs#94.<androidx.fragment.app.BackStackState: void <init>(androidx.fragment.app.BackStackRecord)>(target#98);

        backStack[f#93] = fs#94;

        $u-1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label15;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding back stack #");

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(f#93);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        f#65 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $u-1#20 = virtualinvoke f#65.<java.util.ArrayList: java.lang.Object get(int)>(f#93);

        virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#20);

        $u-1#26 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#26);

     label15:
        f#93 = f#93 + 1;

        goto label14;

     label16:
        f#107 = new androidx.fragment.app.FragmentManagerState;

        specialinvoke f#107.<androidx.fragment.app.FragmentManagerState: void <init>()>();

        f#107.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive> = active;

        f#107.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded> = added;

        f#107.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack> = backStack;

        f = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        if f == null goto label17;

        $u-1#26 = f.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        f#107.<androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho> = $u-1#26;

     label17:
        $u-1#7 = this.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex>;

        f#107.<androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex> = $u-1#7;

        return f#107;

     label18:
        return null;
    }

    android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u4;
        boolean $u-1;
        android.os.Bundle result, $u1;
        android.view.View $u1#10;
        android.util.SparseArray $u1#11;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        result = null;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        if $u1 != null goto label1;

        $u1 = new android.os.Bundle;

        specialinvoke $u1.<android.os.Bundle: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = $u1;

     label1:
        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        virtualinvoke $u4.<androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)>($u1);

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($u4, $u1, 0);

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        $u-1 = virtualinvoke $u1.<android.os.Bundle: boolean isEmpty()>();

        if $u-1 != 0 goto label2;

        result = this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = null;

     label2:
        $u1#10 = $u4.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $u1#10 == null goto label3;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>($u4);

     label3:
        $u1#11 = $u4.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState>;

        if $u1#11 == null goto label5;

        if result != null goto label4;

        result = new android.os.Bundle;

        specialinvoke result.<android.os.Bundle: void <init>()>();

     label4:
        $u1#11 = $u4.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState>;

        virtualinvoke result.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:view_state", $u1#11);

     label5:
        $u-1 = $u4.<androidx.fragment.app.Fragment: boolean mUserVisibleHint>;

        if $u-1 != 0 goto label7;

        if result != null goto label6;

        result = new android.os.Bundle;

        specialinvoke result.<android.os.Bundle: void <init>()>();

     label6:
        $u-1 = $u4.<androidx.fragment.app.Fragment: boolean mUserVisibleHint>;

        virtualinvoke result.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android:user_visible_hint", $u-1);

     label7:
        return result;
    }

    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this, result;
        androidx.fragment.app.Fragment $u4;
        java.lang.IllegalStateException result#2;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1;
        int result#8;
        android.os.Bundle $u-1#10;
        androidx.fragment.app.Fragment$SavedState $u1#12;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        result = $u4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if result == this goto label1;

        result#2 = new java.lang.IllegalStateException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke result#2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>(result#2);

     label1:
        result#8 = $u4.<androidx.fragment.app.Fragment: int mState>;

        if result#8 <= 0 goto label2;

        $u-1#10 = virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)>($u4);

        if $u-1#10 == null goto label2;

        $u1#12 = new androidx.fragment.app.Fragment$SavedState;

        specialinvoke $u1#12.<androidx.fragment.app.Fragment$SavedState: void <init>(android.os.Bundle)>($u-1#10);

        return $u1#12;

     label2:
        return null;
    }

    void saveFragmentViewState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u3;
        android.util.SparseArray $u1;
        int $u-1;
        android.view.View $u0;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = $u3.<androidx.fragment.app.Fragment: android.view.View mInnerView>;

        if $u0 != null goto label1;

        return;

     label1:
        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        if $u1 != null goto label2;

        $u1 = new android.util.SparseArray;

        specialinvoke $u1.<android.util.SparseArray: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = $u1;

        goto label3;

     label2:
        virtualinvoke $u1.<android.util.SparseArray: void clear()>();

     label3:
        $u0 = $u3.<androidx.fragment.app.Fragment: android.view.View mInnerView>;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        virtualinvoke $u0.<android.view.View: void saveHierarchyState(android.util.SparseArray)>($u1);

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        $u-1 = virtualinvoke $u1.<android.util.SparseArray: int size()>();

        if $u-1 <= 0 goto label4;

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        $u3.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = $u1;

        this.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = null;

     label4:
        return;
    }

    void scheduleCommit()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.ArrayList postponeReady;
        boolean pendingReady, $u-1;
        int $u-1#10;
        androidx.fragment.app.FragmentHostCallback $u2;
        android.os.Handler $u-1#13;
        java.lang.Runnable $u3;
        java.lang.Throwable postponeReady#20;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        entermonitor this;

     label1:
        postponeReady = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        pendingReady = 0;

        if postponeReady == null goto label2;

        postponeReady = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $u-1 = virtualinvoke postponeReady.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1 != 0 goto label2;

        $u-1 = 1;

        goto label3;

     label2:
        $u-1 = 0;

     label3:
        postponeReady = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if postponeReady == null goto label4;

        postponeReady = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $u-1#10 = virtualinvoke postponeReady.<java.util.ArrayList: int size()>();

        if $u-1#10 != 1 goto label4;

        pendingReady = 1;

     label4:
        if $u-1 != 0 goto label5;

        if pendingReady == 0 goto label6;

     label5:
        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#13 = virtualinvoke $u2.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $u-1#13.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($u3);

        $u2 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $u-1#13 = virtualinvoke $u2.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $u3 = this.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $u-1#13.<android.os.Handler: boolean post(java.lang.Runnable)>($u3);

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()>();

     label6:
        exitmonitor this;

     label7:
        return;

     label8:
        postponeReady#20 := @caughtexception;

        exitmonitor this;

     label9:
        throw postponeReady#20;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void setBackStackIndex(int, androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        int $u5, $u-1, N#5;
        androidx.fragment.app.BackStackRecord $u6;
        java.util.ArrayList N;
        boolean $u1;
        java.lang.StringBuilder $u2;
        java.lang.String $u-1#11;
        java.lang.Integer $u-1#25;
        java.lang.Throwable N#35;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: int;

        $u6 := @parameter1: androidx.fragment.app.BackStackRecord;

        entermonitor this;

     label01:
        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if N != null goto label02;

        N = new java.util.ArrayList;

        specialinvoke N.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices> = N;

     label02:
        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $u-1 = virtualinvoke N.<java.util.ArrayList: int size()>();

        N#5 = $u-1;

        if $u5 >= $u-1 goto label04;

        $u1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u1 == 0 goto label03;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting back stack index ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u5);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u6);

        $u-1#11 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#11);

     label03:
        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke N.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($u5, $u6);

        goto label09;

     label04:
        if N#5 >= $u5 goto label07;

        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke N.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if N != null goto label05;

        N = new java.util.ArrayList;

        specialinvoke N.<java.util.ArrayList: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices> = N;

     label05:
        $u1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u1 == 0 goto label06;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding available back stack index ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(N#5);

        $u-1#11 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#11);

     label06:
        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $u-1#25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(N#5);

        virtualinvoke N.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#25);

        N#5 = N#5 + 1;

        goto label04;

     label07:
        $u1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u1 == 0 goto label08;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding back stack index ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u5);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u6);

        $u-1#11 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1#11);

     label08:
        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke N.<java.util.ArrayList: boolean add(java.lang.Object)>($u6);

     label09:
        exitmonitor this;

     label10:
        return;

     label11:
        N#35 := @caughtexception;

        exitmonitor this;

     label12:
        goto label13;

     label13:
        throw N#35;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void setMaxLifecycle(androidx.fragment.app.Fragment, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u4;
        androidx.lifecycle.Lifecycle$State $u5;
        java.util.HashMap $u0;
        java.lang.String $u1;
        java.lang.Object $u-1;
        androidx.fragment.app.FragmentHostCallback $u0#5;
        androidx.fragment.app.FragmentManager $u-1#6;
        java.lang.IllegalArgumentException $u0#8;
        java.lang.StringBuilder $u1#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        $u5 := @parameter1: androidx.lifecycle.Lifecycle$State;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u1 = $u4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u1);

        if $u-1 != $u4 goto label2;

        $u0#5 = $u4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost>;

        if $u0#5 == null goto label1;

        $u-1#6 = virtualinvoke $u4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        if $u-1#6 != this goto label2;

     label1:
        $u4.<androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState> = $u5;

        return;

     label2:
        $u0#8 = new java.lang.IllegalArgumentException;

        $u1#9 = new java.lang.StringBuilder;

        specialinvoke $u1#9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an active fragment of FragmentManager ");

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        $u1 = virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u1);

        throw $u0#8;
    }

    public void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u4, previousPrimaryNav#14;
        java.util.HashMap previousPrimaryNav;
        java.lang.String $u1;
        java.lang.Object $u-1;
        androidx.fragment.app.FragmentHostCallback previousPrimaryNav#5;
        androidx.fragment.app.FragmentManager $u-1#6;
        java.lang.IllegalArgumentException previousPrimaryNav#8;
        java.lang.StringBuilder $u1#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        if $u4 == null goto label2;

        previousPrimaryNav = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u1 = $u4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke previousPrimaryNav.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u1);

        if $u-1 != $u4 goto label1;

        previousPrimaryNav#5 = $u4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost>;

        if previousPrimaryNav#5 == null goto label2;

        $u-1#6 = virtualinvoke $u4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        if $u-1#6 != this goto label1;

        goto label2;

     label1:
        previousPrimaryNav#8 = new java.lang.IllegalArgumentException;

        $u1#9 = new java.lang.StringBuilder;

        specialinvoke $u1#9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an active fragment of FragmentManager ");

        virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        $u1 = virtualinvoke $u1#9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke previousPrimaryNav#8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u1);

        throw previousPrimaryNav#8;

     label2:
        previousPrimaryNav#14 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav> = $u4;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>(previousPrimaryNav#14);

        $u4 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        specialinvoke this.<androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($u4);

        return;
    }

    public void showFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.Fragment $u3;
        java.lang.String $u-1;
        boolean $u0;
        java.lang.StringBuilder $u0#2;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label1;

        $u0#2 = new java.lang.StringBuilder;

        specialinvoke $u0#2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("show: ");

        virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u3);

        $u-1 = virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label1:
        $u0 = $u3.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $u0 == 0 goto label2;

        $u3.<androidx.fragment.app.Fragment: boolean mHidden> = 0;

        $u0 = $u3.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        $u0 = $u0 ^ 1;

        $u3.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = $u0;

     label2:
        return;
    }

    void startPendingDeferredFragments()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.util.HashMap $u0;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#4;
        boolean $u-1#6;
        java.lang.Object $u-1#8;
        androidx.fragment.app.Fragment f;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.util.Collection values()>();

        $u-1#4 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $u-1#6 = interfaceinvoke $u-1#4.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label2;

        $u-1#8 = interfaceinvoke $u-1#4.<java.util.Iterator: java.lang.Object next()>();

        f = (androidx.fragment.app.Fragment) $u-1#8;

        if f == null goto label1;

        virtualinvoke this.<androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)>(f);

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.FragmentManagerImpl this;
        java.lang.StringBuilder sb;
        int $u-1;
        java.lang.String $u-1#5;
        androidx.fragment.app.Fragment $u1;
        androidx.fragment.app.FragmentHostCallback $u1#9;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        sb = new java.lang.StringBuilder;

        specialinvoke sb.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FragmentManager{");

        $u-1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this);

        $u-1#5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u-1);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#5);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $u1 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $u1 == null goto label1;

        staticinvoke <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($u1, sb);

        goto label2;

     label1:
        $u1#9 = this.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        staticinvoke <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($u1#9, sb);

     label2:
        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $u-1#5 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1#5;
    }

    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    {
        androidx.fragment.app.FragmentManagerImpl this;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $u5, $u3#9;
        java.util.concurrent.CopyOnWriteArrayList $u0, N;
        int i, $u-1;
        java.lang.Object $u-1#6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $u3;
        java.lang.Throwable i#11;

        this := @this: androidx.fragment.app.FragmentManagerImpl;

        $u5 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        $u0 = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        entermonitor $u0;

        i = 0;

     label1:
        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1 = virtualinvoke N.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

     label2:
        if i >= $u-1 goto label4;

        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $u-1#6 = virtualinvoke N.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>(i);

        $u3 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $u-1#6;

        $u3#9 = $u3.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        if $u3#9 != $u5 goto label3;

        N = this.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        virtualinvoke N.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>(i);

        goto label4;

     label3:
        i = i + 1;

        goto label2;

     label4:
        exitmonitor $u0;

     label5:
        return;

     label6:
        i#11 := @caughtexception;

        exitmonitor $u0;

     label7:
        goto label8;

     label8:
        throw i#11;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
