class androidx.core.app.NotificationManagerCompat$SideChannelManager extends java.lang.Object implements android.os.Handler$Callback, android.content.ServiceConnection
{
    private static final int MSG_QUEUE_TASK;
    private static final int MSG_RETRY_LISTENER_QUEUE;
    private static final int MSG_SERVICE_CONNECTED;
    private static final int MSG_SERVICE_DISCONNECTED;
    private java.util.Set mCachedEnabledPackages;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final android.os.HandlerThread mHandlerThread;
    private final java.util.Map mRecordMap;

    void <init>(android.content.Context)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.Context $u3;
        android.os.Looper $u-1;
        java.util.HashMap $u0;
        java.util.HashSet $u0#2;
        android.os.HandlerThread $u0#3;
        android.os.Handler $u0#5;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u3 := @parameter0: android.content.Context;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap> = $u0;

        $u0#2 = new java.util.HashSet;

        specialinvoke $u0#2.<java.util.HashSet: void <init>()>();

        this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages> = $u0#2;

        this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext> = $u3;

        $u0#3 = new android.os.HandlerThread;

        specialinvoke $u0#3.<android.os.HandlerThread: void <init>(java.lang.String)>("NotificationManagerCompat");

        this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread> = $u0#3;

        virtualinvoke $u0#3.<android.os.HandlerThread: void start()>();

        $u0#5 = new android.os.Handler;

        $u0#3 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread>;

        $u-1 = virtualinvoke $u0#3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $u0#5.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($u-1, this);

        this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler> = $u0#5;

        return;
    }

    private boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $u4;
        boolean intent;
        android.content.Intent intent#3;
        android.content.ComponentName $u1;
        android.content.Context $u1#8;
        java.lang.StringBuilder $u1#14;
        java.lang.String $u-1;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u4 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        intent = $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        if intent == 0 goto label1;

        return 1;

     label1:
        intent#3 = new android.content.Intent;

        specialinvoke intent#3.<android.content.Intent: void <init>(java.lang.String)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");

        $u1 = $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        intent#3 = virtualinvoke intent#3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($u1);

        $u1#8 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        intent = virtualinvoke $u1#8.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(intent#3, this, 33);

        $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound> = intent;

        intent = $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        if intent == 0 goto label2;

        $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = 0;

        goto label3;

     label2:
        $u1#14 = new java.lang.StringBuilder;

        specialinvoke $u1#14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind to listener ");

        $u1 = $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke $u1#14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u1);

        $u-1 = virtualinvoke $u1#14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $u-1);

        $u1#8 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        virtualinvoke $u1#8.<android.content.Context: void unbindService(android.content.ServiceConnection)>(this);

     label3:
        intent = $u4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        return intent;
    }

    private void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $u2;
        boolean $u0;
        android.content.Context $u0#2;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u2 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        $u0 = $u2.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        if $u0 == 0 goto label1;

        $u0#2 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        virtualinvoke $u0#2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(this);

        $u2.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound> = 0;

     label1:
        $u2.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service> = null;

        return;
    }

    private void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        androidx.core.app.NotificationManagerCompat$Task $u4;
        java.util.ArrayDeque $u2;
        java.util.Map $u0;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#4;
        boolean $u-1#6;
        java.lang.Object $u-1#8;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord record;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u4 := @parameter0: androidx.core.app.NotificationManagerCompat$Task;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()>();

        $u0 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u-1 = interfaceinvoke $u0.<java.util.Map: java.util.Collection values()>();

        $u-1#4 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $u-1#6 = interfaceinvoke $u-1#4.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label2;

        $u-1#8 = interfaceinvoke $u-1#4.<java.util.Iterator: java.lang.Object next()>();

        record = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $u-1#8;

        $u2 = record.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        virtualinvoke $u2.<java.util.ArrayDeque: boolean add(java.lang.Object)>($u4);

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>(record);

        goto label1;

     label2:
        return;
    }

    private void handleRetryListenerQueue(android.content.ComponentName)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.ComponentName $u2;
        java.lang.Object $u-1;
        java.util.Map record;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord record#3;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u2 := @parameter0: android.content.ComponentName;

        record = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u-1 = interfaceinvoke record.<java.util.Map: java.lang.Object get(java.lang.Object)>($u2);

        record#3 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $u-1;

        if record#3 == null goto label1;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>(record#3);

     label1:
        return;
    }

    private void handleServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.ComponentName $u3;
        android.os.IBinder $u4;
        java.util.Map record;
        java.lang.Object $u-1;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord record#4;
        android.support.v4.app.INotificationSideChannel $u-1#5;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u3 := @parameter0: android.content.ComponentName;

        $u4 := @parameter1: android.os.IBinder;

        record = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u-1 = interfaceinvoke record.<java.util.Map: java.lang.Object get(java.lang.Object)>($u3);

        record#4 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $u-1;

        if record#4 == null goto label1;

        $u-1#5 = staticinvoke <android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)>($u4);

        record#4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service> = $u-1#5;

        record#4.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = 0;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>(record#4);

     label1:
        return;
    }

    private void handleServiceDisconnected(android.content.ComponentName)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.ComponentName $u2;
        java.lang.Object $u-1;
        java.util.Map record;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord record#3;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u2 := @parameter0: android.content.ComponentName;

        record = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u-1 = interfaceinvoke record.<java.util.Map: java.lang.Object get(java.lang.Object)>($u2);

        record#3 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $u-1;

        if record#3 == null goto label1;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>(record#3);

     label1:
        return;
    }

    private void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $u6;
        boolean $u-1;
        java.lang.StringBuilder task;
        android.content.ComponentName e1;
        java.util.ArrayDeque e1#9;
        int $u-1#10;
        java.lang.String $u-1#13;
        android.support.v4.app.INotificationSideChannel task#20;
        java.lang.Object $u-1#22;
        androidx.core.app.NotificationManagerCompat$Task task#24;
        android.os.RemoteException e;
        android.os.DeadObjectException e1#34;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u6 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        $u-1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1 == 0 goto label01;

        task = new java.lang.StringBuilder;

        specialinvoke task.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing component ");

        e1 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e1);

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        e1#9 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $u-1#10 = virtualinvoke e1#9.<java.util.ArrayDeque: int size()>();

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u-1#10);

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queued tasks");

        $u-1#13 = virtualinvoke task.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#13);

     label01:
        e1#9 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $u-1 = virtualinvoke e1#9.<java.util.ArrayDeque: boolean isEmpty()>();

        if $u-1 == 0 goto label02;

        return;

     label02:
        $u-1 = specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($u6);

        if $u-1 == 0 goto label17;

        task#20 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service>;

        if task#20 != null goto label03;

        goto label17;

     label03:
        e1#9 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $u-1#22 = virtualinvoke e1#9.<java.util.ArrayDeque: java.lang.Object peek()>();

        task#24 = (androidx.core.app.NotificationManagerCompat$Task) $u-1#22;

        if task#24 != null goto label04;

        goto label16;

     label04:
        $u-1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

     label05:
        if $u-1 == 0 goto label07;

        task = new java.lang.StringBuilder;

     label06:
        specialinvoke task.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending task ");

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(task#24);

        $u-1#13 = virtualinvoke task.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#13);

     label07:
        task#20 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service>;

     label08:
        interfaceinvoke task#24.<androidx.core.app.NotificationManagerCompat$Task: void send(android.support.v4.app.INotificationSideChannel)>(task#20);

     label09:
        e1#9 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

     label10:
        virtualinvoke e1#9.<java.util.ArrayDeque: java.lang.Object remove()>();

     label11:
        goto label03;

     label12:
        e := @caughtexception;

        goto label14;

     label13:
        e1#34 := @caughtexception;

        goto label15;

     label14:
        task = new java.lang.StringBuilder;

        specialinvoke task.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException communicating with ");

        e1 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e1);

        $u-1#13 = virtualinvoke task.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotifManCompat", $u-1#13, e);

        goto label16;

     label15:
        $u-1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1 == 0 goto label16;

        task = new java.lang.StringBuilder;

        specialinvoke task.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote service has died: ");

        e1 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke task.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e1);

        $u-1#13 = virtualinvoke task.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#13);

     label16:
        e1#9 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $u-1 = virtualinvoke e1#9.<java.util.ArrayDeque: boolean isEmpty()>();

        if $u-1 != 0 goto label18;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($u6);

        return;

     label17:
        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($u6);

     label18:
        return;

        catch android.os.DeadObjectException from label04 to label05 with label13;
        catch android.os.DeadObjectException from label06 to label07 with label13;
        catch android.os.DeadObjectException from label08 to label09 with label13;
        catch android.os.DeadObjectException from label10 to label11 with label13;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    private void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $u6;
        android.os.Handler delayMs;
        android.content.ComponentName msg;
        boolean $u-1;
        int delayMs#6;
        java.lang.StringBuilder delayMs#11;
        java.util.ArrayDeque msg#13;
        java.lang.String $u-1#21;
        android.os.Message $u-1#37;
        long $u3;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u6 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        delayMs = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        msg = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        $u-1 = virtualinvoke delayMs.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(3, msg);

        if $u-1 == 0 goto label1;

        return;

     label1:
        delayMs#6 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        delayMs#6 = delayMs#6 + 1;

        $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = delayMs#6;

        delayMs#6 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        if delayMs#6 <= 6 goto label2;

        delayMs#11 = new java.lang.StringBuilder;

        specialinvoke delayMs#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Giving up on delivering ");

        msg#13 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        delayMs#6 = virtualinvoke msg#13.<java.util.ArrayDeque: int size()>();

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(delayMs#6);

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks to ");

        msg = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(msg);

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        delayMs#6 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(delayMs#6);

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" retries");

        $u-1#21 = virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#21);

        msg#13 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        virtualinvoke msg#13.<java.util.ArrayDeque: void clear()>();

        return;

     label2:
        delayMs#6 = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        delayMs#6 = delayMs#6 - 1;

        delayMs#6 = 1 << delayMs#6;

        delayMs#6 = delayMs#6 * 1000;

        $u-1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1 == 0 goto label3;

        delayMs#11 = new java.lang.StringBuilder;

        specialinvoke delayMs#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling retry for ");

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(delayMs#6);

        virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $u-1#21 = virtualinvoke delayMs#11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#21);

     label3:
        delayMs = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        msg = $u6.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        $u-1#37 = virtualinvoke delayMs.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, msg);

        delayMs = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $u3 = (long) delayMs#6;

        virtualinvoke delayMs.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($u-1#37, $u3);

        return;
    }

    private void updateListenerMap()
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.Context enabledPackages;
        java.util.Set $u-1, resolveInfos;
        boolean $u-1#5;
        android.content.pm.PackageManager $u-1#8;
        android.content.Intent enabledComponents;
        java.util.List $u-1#15;
        java.util.HashSet enabledComponents#17;
        java.util.Iterator $u-1#18;
        java.lang.Object $u-1#22;
        android.content.pm.ResolveInfo resolveInfo;
        android.content.pm.ServiceInfo componentName;
        java.lang.String componentName#26, $u8;
        android.content.ComponentName componentName#29;
        java.lang.StringBuilder $u7;
        java.util.Map $u7#49;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $u7#59;
        java.util.Map$Entry resolveInfo#69;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        enabledPackages = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        $u-1 = staticinvoke <androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)>(enabledPackages);

        resolveInfos = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages>;

        $u-1#5 = interfaceinvoke $u-1.<java.util.Set: boolean equals(java.lang.Object)>(resolveInfos);

        if $u-1#5 == 0 goto label01;

        return;

     label01:
        this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages> = $u-1;

        enabledPackages = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        $u-1#8 = virtualinvoke enabledPackages.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        enabledComponents = new android.content.Intent;

        specialinvoke enabledComponents.<android.content.Intent: void <init>()>();

        enabledComponents = virtualinvoke enabledComponents.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");

        $u-1#15 = virtualinvoke $u-1#8.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(enabledComponents, 0);

        enabledComponents#17 = new java.util.HashSet;

        specialinvoke enabledComponents#17.<java.util.HashSet: void <init>()>();

        $u-1#18 = interfaceinvoke $u-1#15.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $u-1#5 = interfaceinvoke $u-1#18.<java.util.Iterator: boolean hasNext()>();

        if $u-1#5 == 0 goto label05;

        $u-1#22 = interfaceinvoke $u-1#18.<java.util.Iterator: java.lang.Object next()>();

        resolveInfo = (android.content.pm.ResolveInfo) $u-1#22;

        componentName = resolveInfo.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        componentName#26 = componentName.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $u-1#5 = interfaceinvoke $u-1.<java.util.Set: boolean contains(java.lang.Object)>(componentName#26);

        if $u-1#5 != 0 goto label03;

        goto label02;

     label03:
        componentName#29 = new android.content.ComponentName;

        componentName = resolveInfo.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        componentName#26 = componentName.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        componentName = resolveInfo.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $u8 = componentName.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke componentName#29.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(componentName#26, $u8);

        componentName = resolveInfo.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        componentName#26 = componentName.<android.content.pm.ServiceInfo: java.lang.String permission>;

        if componentName#26 == null goto label04;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission present on component ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(componentName#29);

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not adding listener record.");

        componentName#26 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", componentName#26);

        goto label02;

     label04:
        interfaceinvoke enabledComponents#17.<java.util.Set: boolean add(java.lang.Object)>(componentName#29);

        goto label02;

     label05:
        $u-1#18 = interfaceinvoke enabledComponents#17.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $u-1#5 = interfaceinvoke $u-1#18.<java.util.Iterator: boolean hasNext()>();

        if $u-1#5 == 0 goto label08;

        $u-1#22 = interfaceinvoke $u-1#18.<java.util.Iterator: java.lang.Object next()>();

        componentName#29 = (android.content.ComponentName) $u-1#22;

        $u7#49 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u-1#5 = interfaceinvoke $u7#49.<java.util.Map: boolean containsKey(java.lang.Object)>(componentName#29);

        if $u-1#5 != 0 goto label06;

        $u-1#5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1#5 == 0 goto label07;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding listener record for ");

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(componentName#29);

        componentName#26 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", componentName#26);

     label07:
        $u7#49 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u7#59 = new androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        specialinvoke $u7#59.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: void <init>(android.content.ComponentName)>(componentName#29);

        interfaceinvoke $u7#49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(componentName#29, $u7#59);

        goto label06;

     label08:
        $u7#49 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $u-1 = interfaceinvoke $u7#49.<java.util.Map: java.util.Set entrySet()>();

        $u-1#18 = interfaceinvoke $u-1.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $u-1#5 = interfaceinvoke $u-1#18.<java.util.Iterator: boolean hasNext()>();

        if $u-1#5 == 0 goto label11;

        $u-1#22 = interfaceinvoke $u-1#18.<java.util.Iterator: java.lang.Object next()>();

        resolveInfo#69 = (java.util.Map$Entry) $u-1#22;

        $u-1#22 = interfaceinvoke resolveInfo#69.<java.util.Map$Entry: java.lang.Object getKey()>();

        $u-1#5 = interfaceinvoke enabledComponents#17.<java.util.Set: boolean contains(java.lang.Object)>($u-1#22);

        if $u-1#5 != 0 goto label09;

        $u-1#5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1#5 == 0 goto label10;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing listener record for ");

        $u-1#22 = interfaceinvoke resolveInfo#69.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#22);

        componentName#26 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", componentName#26);

     label10:
        $u-1#22 = interfaceinvoke resolveInfo#69.<java.util.Map$Entry: java.lang.Object getValue()>();

        $u7#59 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $u-1#22;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($u7#59);

        interfaceinvoke $u-1#18.<java.util.Iterator: void remove()>();

        goto label09;

     label11:
        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.os.Message $u5;
        android.os.IBinder $u3;
        int event;
        java.lang.Object event#5;
        android.content.ComponentName event#6;
        androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent event#10;
        androidx.core.app.NotificationManagerCompat$Task event#13;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u5 := @parameter0: android.os.Message;

        event = $u5.<android.os.Message: int what>;

        if event == 0 goto label4;

        if event == 1 goto label3;

        if event == 2 goto label2;

        if event == 3 goto label1;

        return 0;

     label1:
        event#5 = $u5.<android.os.Message: java.lang.Object obj>;

        event#6 = (android.content.ComponentName) event#5;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)>(event#6);

        return 1;

     label2:
        event#5 = $u5.<android.os.Message: java.lang.Object obj>;

        event#6 = (android.content.ComponentName) event#5;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)>(event#6);

        return 1;

     label3:
        event#5 = $u5.<android.os.Message: java.lang.Object obj>;

        event#10 = (androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent) event#5;

        event#6 = event#10.<androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName>;

        $u3 = event#10.<androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder>;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)>(event#6, $u3);

        return 1;

     label4:
        event#5 = $u5.<android.os.Message: java.lang.Object obj>;

        event#13 = (androidx.core.app.NotificationManagerCompat$Task) event#5;

        specialinvoke this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)>(event#13);

        return 1;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.ComponentName $u4;
        android.os.IBinder $u5;
        boolean $u-1;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#7;
        android.os.Handler $u0;
        androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent $u2;
        android.os.Message $u-1#12;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u4 := @parameter0: android.content.ComponentName;

        $u5 := @parameter1: android.os.IBinder;

        $u-1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1 == 0 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to service ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1#7 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#7);

     label1:
        $u0 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $u2 = new androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent;

        specialinvoke $u2.<androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: void <init>(android.content.ComponentName,android.os.IBinder)>($u4, $u5);

        $u-1#12 = virtualinvoke $u0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $u2);

        virtualinvoke $u-1#12.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        android.content.ComponentName $u4;
        boolean $u-1;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#6;
        android.os.Handler $u0;
        android.os.Message $u-1#10;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u4 := @parameter0: android.content.ComponentName;

        $u-1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $u-1 == 0 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnected from service ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        $u-1#6 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $u-1#6);

     label1:
        $u0 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $u-1#10 = virtualinvoke $u0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $u4);

        virtualinvoke $u-1#10.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void queueTask(androidx.core.app.NotificationManagerCompat$Task)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager this;
        androidx.core.app.NotificationManagerCompat$Task $u3;
        android.os.Message $u-1;
        android.os.Handler $u0;

        this := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $u3 := @parameter0: androidx.core.app.NotificationManagerCompat$Task;

        $u0 = this.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $u-1 = virtualinvoke $u0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $u3);

        virtualinvoke $u-1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_DISCONNECTED> = 2;

        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_CONNECTED> = 1;

        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_RETRY_LISTENER_QUEUE> = 3;

        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_QUEUE_TASK> = 0;

        return;
    }
}
