class androidx.constraintlayout.motion.widget.KeyCycleOscillator$IntFloatFloatSort extends java.lang.Object
{

    private void <init>()
    {
        androidx.constraintlayout.motion.widget.KeyCycleOscillator$IntFloatFloatSort this;

        this := @this: androidx.constraintlayout.motion.widget.KeyCycleOscillator$IntFloatFloatSort;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static int partition(int[], float[], float[], int, int)
    {
        int[] $u4;
        float[] $u5, $u6;
        int $u7, $u8, pivot, i, j;

        $u4 := @parameter0: int[];

        $u5 := @parameter1: float[];

        $u6 := @parameter2: float[];

        $u7 := @parameter3: int;

        $u8 := @parameter4: int;

        pivot = $u4[$u8];

        i = $u7;

        j = $u7;

     label1:
        if j >= $u8 goto label3;

        $u7 = $u4[j];

        if $u7 > pivot goto label2;

        staticinvoke <androidx.constraintlayout.motion.widget.KeyCycleOscillator$IntFloatFloatSort: void swap(int[],float[],float[],int,int)>($u4, $u5, $u6, i, j);

        i = i + 1;

     label2:
        j = j + 1;

        goto label1;

     label3:
        staticinvoke <androidx.constraintlayout.motion.widget.KeyCycleOscillator$IntFloatFloatSort: void swap(int[],float[],float[],int,int)>($u4, $u5, $u6, i, $u8);

        return i;
    }

    static void sort(int[], float[], float[], int, int)
    {
        int[] $u5, stack#5;
        float[] $u6, $u7;
        int $u-1, $u9, stack, $u9#11, count2, $u4;

        $u5 := @parameter0: int[];

        $u6 := @parameter1: float[];

        $u7 := @parameter2: float[];

        $u-1 := @parameter3: int;

        $u9 := @parameter4: int;

        stack = lengthof $u5;

        stack = stack + 10;

        stack#5 = newarray (int)[stack];

        stack#5[0] = $u9;

        $u9 = 1 + 1;

        stack#5[1] = $u-1;

     label1:
        if $u9 <= 0 goto label2;

        $u-1 = $u9 + -1;

        stack = stack#5[$u-1];

        $u9 = $u-1 + -1;

        $u9#11 = stack#5[$u9];

        if stack >= $u9#11 goto label1;

        $u-1 = staticinvoke <androidx.constraintlayout.motion.widget.KeyCycleOscillator$IntFloatFloatSort: int partition(int[],float[],float[],int,int)>($u5, $u6, $u7, stack, $u9#11);

        count2 = $u9 + 1;

        $u4 = $u-1 + -1;

        stack#5[$u9] = $u4;

        $u9 = count2 + 1;

        stack#5[count2] = stack;

        stack = $u9 + 1;

        stack#5[$u9] = $u9#11;

        $u9 = stack + 1;

        $u-1 = $u-1 + 1;

        stack#5[stack] = $u-1;

        goto label1;

     label2:
        return;
    }

    private static void swap(int[], float[], float[], int, int)
    {
        int[] $u3;
        float[] $u4, $u5;
        int $u6, $u7, tmp, tmpFloat;
        float tmpFloat#2, $u2;

        $u3 := @parameter0: int[];

        $u4 := @parameter1: float[];

        $u5 := @parameter2: float[];

        $u6 := @parameter3: int;

        $u7 := @parameter4: int;

        tmp = $u3[$u6];

        tmpFloat = $u3[$u7];

        $u3[$u6] = tmpFloat;

        $u3[$u7] = tmp;

        tmpFloat#2 = $u4[$u6];

        $u2 = $u4[$u7];

        $u4[$u6] = $u2;

        $u4[$u7] = tmpFloat#2;

        tmpFloat#2 = $u5[$u6];

        $u2 = $u5[$u7];

        $u5[$u6] = $u2;

        $u5[$u7] = tmpFloat#2;

        return;
    }
}
