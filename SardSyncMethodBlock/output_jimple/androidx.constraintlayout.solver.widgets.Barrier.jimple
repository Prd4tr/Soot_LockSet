public class androidx.constraintlayout.solver.widgets.Barrier extends androidx.constraintlayout.solver.widgets.HelperWidget
{
    public static final int BOTTOM;
    public static final int LEFT;
    public static final int RIGHT;
    public static final int TOP;
    private boolean mAllowsGoneWidget;
    private int mBarrierType;
    private int mMargin;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.HelperWidget: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType> = 0;

        this.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget> = 1;

        this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin> = 0;

        return;
    }

    public void addToSolver(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        androidx.constraintlayout.solver.LinearSystem $u17;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor[] i;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor hasMatchConstraintWidgets, i1;
        int i#12, hasMatchConstraintWidgets#14, barrierParentStrength;
        androidx.constraintlayout.solver.SolverVariable $u-1, barrierParentStrength#100;
        boolean hasMatchConstraintWidgets#26, applyEqualityOnReferences, $u-1#58;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] widget;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget#30, barrierParentStrength#94;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $u-1#35, equalityOnReferencesStrength;
        byte equalityOnReferencesStrength#69;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        $u17 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i[0] = hasMatchConstraintWidgets;

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i[2] = hasMatchConstraintWidgets;

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i[1] = hasMatchConstraintWidgets;

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i[3] = hasMatchConstraintWidgets;

        i#12 = 0;

     label01:
        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets#14 = lengthof i;

        if i#12 >= hasMatchConstraintWidgets#14 goto label02;

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets = i[i#12];

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        i1 = i[i#12];

        $u-1 = virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>(i1);

        hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1;

        i#12 = i#12 + 1;

        goto label01;

     label02:
        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if i#12 < 0 goto label34;

        if i#12 >= 4 goto label34;

        i = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        hasMatchConstraintWidgets = i[i#12];

        hasMatchConstraintWidgets#26 = 0;

        i#12 = 0;

     label03:
        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mWidgetsCount>;

        if i#12 >= hasMatchConstraintWidgets#14 goto label09;

        widget = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        widget#30 = widget[i#12];

        applyEqualityOnReferences = this.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget>;

        if applyEqualityOnReferences != 0 goto label04;

        applyEqualityOnReferences = virtualinvoke widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean allowedInBarrier()>();

        if applyEqualityOnReferences != 0 goto label04;

        goto label08;

     label04:
        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if hasMatchConstraintWidgets#14 == 0 goto label05;

        if hasMatchConstraintWidgets#14 != 1 goto label06;

     label05:
        $u-1#35 = virtualinvoke widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        equalityOnReferencesStrength = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $u-1#35 != equalityOnReferencesStrength goto label06;

        i1 = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i1 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if i1 == null goto label06;

        i1 = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i1 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if i1 == null goto label06;

        hasMatchConstraintWidgets#26 = 1;

        goto label09;

     label06:
        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if hasMatchConstraintWidgets#14 == 2 goto label07;

        if hasMatchConstraintWidgets#14 != 3 goto label08;

     label07:
        $u-1#35 = virtualinvoke widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        equalityOnReferencesStrength = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $u-1#35 != equalityOnReferencesStrength goto label08;

        i1 = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i1 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if i1 == null goto label08;

        i1 = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i1 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if i1 == null goto label08;

        hasMatchConstraintWidgets#26 = 1;

        goto label09;

     label08:
        i#12 = i#12 + 1;

        goto label03;

     label09:
        i1 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        applyEqualityOnReferences = virtualinvoke i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean hasCenteredDependents()>();

        if applyEqualityOnReferences != 0 goto label11;

        i1 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        applyEqualityOnReferences = virtualinvoke i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean hasCenteredDependents()>();

        if applyEqualityOnReferences == 0 goto label10;

        goto label11;

     label10:
        applyEqualityOnReferences = 0;

        goto label12;

     label11:
        applyEqualityOnReferences = 1;

     label12:
        i1 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1#58 = virtualinvoke i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean hasCenteredDependents()>();

        if $u-1#58 != 0 goto label14;

        i1 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1#58 = virtualinvoke i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean hasCenteredDependents()>();

        if $u-1#58 == 0 goto label13;

        goto label14;

     label13:
        $u-1#58 = 0;

        goto label15;

     label14:
        $u-1#58 = 1;

     label15:
        if hasMatchConstraintWidgets#26 != 0 goto label20;

        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if i#12 != 0 goto label16;

        if applyEqualityOnReferences != 0 goto label19;

     label16:
        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if i#12 != 2 goto label17;

        if $u-1#58 != 0 goto label19;

     label17:
        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if i#12 != 1 goto label18;

        if applyEqualityOnReferences != 0 goto label19;

     label18:
        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if i#12 != 3 goto label20;

        if $u-1#58 == 0 goto label20;

     label19:
        applyEqualityOnReferences = 1;

        goto label21;

     label20:
        applyEqualityOnReferences = 0;

     label21:
        equalityOnReferencesStrength#69 = 5;

        if applyEqualityOnReferences != 0 goto label22;

        equalityOnReferencesStrength#69 = 4;

     label22:
        i#12 = 0;

     label23:
        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mWidgetsCount>;

        if i#12 >= hasMatchConstraintWidgets#14 goto label30;

        widget = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        widget#30 = widget[i#12];

        applyEqualityOnReferences = this.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget>;

        if applyEqualityOnReferences != 0 goto label24;

        applyEqualityOnReferences = virtualinvoke widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean allowedInBarrier()>();

        if applyEqualityOnReferences != 0 goto label24;

        goto label29;

     label24:
        i = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        i1 = i[hasMatchConstraintWidgets#14];

        $u-1 = virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>(i1);

        i = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        i1 = i[hasMatchConstraintWidgets#14];

        i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1;

        hasMatchConstraintWidgets#14 = 0;

        i = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        barrierParentStrength = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        i1 = i[barrierParentStrength];

        i1 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        if i1 == null goto label25;

        i = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        barrierParentStrength = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        i1 = i[barrierParentStrength];

        i1 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget>;

        barrierParentStrength#94 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        if barrierParentStrength#94 != this goto label25;

        i = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors>;

        hasMatchConstraintWidgets#14 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        i1 = i[hasMatchConstraintWidgets#14];

        hasMatchConstraintWidgets#14 = i1.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

     label25:
        barrierParentStrength = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if barrierParentStrength == 0 goto label27;

        if barrierParentStrength != 2 goto label26;

        goto label27;

     label26:
        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        barrierParentStrength = this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin>;

        barrierParentStrength = barrierParentStrength + hasMatchConstraintWidgets#14;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)>(barrierParentStrength#100, $u-1, barrierParentStrength, hasMatchConstraintWidgets#26);

        goto label28;

     label27:
        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        barrierParentStrength = this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin>;

        barrierParentStrength = barrierParentStrength - hasMatchConstraintWidgets#14;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)>(barrierParentStrength#100, $u-1, barrierParentStrength, hasMatchConstraintWidgets#26);

     label28:
        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        barrierParentStrength = this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin>;

        hasMatchConstraintWidgets#14 = barrierParentStrength + hasMatchConstraintWidgets#14;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>(barrierParentStrength#100, $u-1, hasMatchConstraintWidgets#14, equalityOnReferencesStrength#69);

     label29:
        i#12 = i#12 + 1;

        goto label23;

     label30:
        i#12 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if i#12 != 0 goto label31;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 8);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 4);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 0);

        return;

     label31:
        if i#12 != 1 goto label32;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 8);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 4);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 0);

        return;

     label32:
        if i#12 != 2 goto label33;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 8);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 4);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 0);

        return;

     label33:
        if i#12 != 3 goto label34;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 8);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 4);

        hasMatchConstraintWidgets = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        widget#30 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget mParent>;

        hasMatchConstraintWidgets = widget#30.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        barrierParentStrength#100 = hasMatchConstraintWidgets.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u17.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)>($u-1, barrierParentStrength#100, 0, 0);

     label34:
        return;
    }

    public boolean allowedInBarrier()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        return 1;
    }

    public boolean allowsGoneWidget()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        boolean ret0;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        ret0 = this.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget>;

        return ret0;
    }

    public void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget, java.util.HashMap)
    {
        androidx.constraintlayout.solver.widgets.Barrier this, srcBarrier;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u3;
        java.util.HashMap map;
        int $u1;
        boolean $u1#4;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        $u3 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        map := @parameter1: java.util.HashMap;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.HelperWidget: void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap)>($u3, map);

        srcBarrier = (androidx.constraintlayout.solver.widgets.Barrier) $u3;

        $u1 = srcBarrier.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType> = $u1;

        $u1#4 = srcBarrier.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget>;

        this.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget> = $u1#4;

        $u1 = srcBarrier.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin>;

        this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin> = $u1;

        return;
    }

    public int getBarrierType()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        int ret0;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        ret0 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        return ret0;
    }

    public int getMargin()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        int ret0;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        ret0 = this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin>;

        return ret0;
    }

    protected void markWidgets()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        int i, widget;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] widget#3;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget#4;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        i = 0;

     label1:
        widget = this.<androidx.constraintlayout.solver.widgets.Barrier: int mWidgetsCount>;

        if i >= widget goto label6;

        widget#3 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        widget#4 = widget#3[i];

        widget = this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType>;

        if widget == 0 goto label4;

        if widget != 1 goto label2;

        goto label4;

     label2:
        if widget == 2 goto label3;

        if widget != 3 goto label5;

     label3:
        virtualinvoke widget#4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setInBarrier(int,boolean)>(1, 1);

        goto label5;

     label4:
        virtualinvoke widget#4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setInBarrier(int,boolean)>(0, 1);

     label5:
        i = i + 1;

        goto label1;

     label6:
        return;
    }

    public void setAllowsGoneWidget(boolean)
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        boolean $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        $u1 := @parameter0: boolean;

        this.<androidx.constraintlayout.solver.widgets.Barrier: boolean mAllowsGoneWidget> = $u1;

        return;
    }

    public void setBarrierType(int)
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        int $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        $u1 := @parameter0: int;

        this.<androidx.constraintlayout.solver.widgets.Barrier: int mBarrierType> = $u1;

        return;
    }

    public void setMargin(int)
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        int $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        $u1 := @parameter0: int;

        this.<androidx.constraintlayout.solver.widgets.Barrier: int mMargin> = $u1;

        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.widgets.Barrier this;
        java.lang.StringBuilder debug;
        java.lang.String $u-1;
        int i, widget;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] widget#10;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget#11;

        this := @this: androidx.constraintlayout.solver.widgets.Barrier;

        debug = new java.lang.StringBuilder;

        specialinvoke debug.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Barrier] ");

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.Barrier: java.lang.String getDebugName()>();

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $u-1 = virtualinvoke debug.<java.lang.StringBuilder: java.lang.String toString()>();

        i = 0;

     label1:
        widget = this.<androidx.constraintlayout.solver.widgets.Barrier: int mWidgetsCount>;

        if i >= widget goto label3;

        widget#10 = this.<androidx.constraintlayout.solver.widgets.Barrier: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        widget#11 = widget#10[i];

        if i <= 0 goto label2;

        debug = new java.lang.StringBuilder;

        specialinvoke debug.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $u-1 = virtualinvoke debug.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        debug = new java.lang.StringBuilder;

        specialinvoke debug.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke widget#11.<androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke debug.<java.lang.StringBuilder: java.lang.String toString()>();

        i = i + 1;

        goto label1;

     label3:
        debug = new java.lang.StringBuilder;

        specialinvoke debug.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke debug.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $u-1 = virtualinvoke debug.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.widgets.Barrier: int TOP> = 2;

        <androidx.constraintlayout.solver.widgets.Barrier: int RIGHT> = 1;

        <androidx.constraintlayout.solver.widgets.Barrier: int LEFT> = 0;

        <androidx.constraintlayout.solver.widgets.Barrier: int BOTTOM> = 3;

        return;
    }
}
