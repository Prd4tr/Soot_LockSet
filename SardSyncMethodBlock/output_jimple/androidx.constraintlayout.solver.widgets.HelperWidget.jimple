public class androidx.constraintlayout.solver.widgets.HelperWidget extends androidx.constraintlayout.solver.widgets.ConstraintWidget implements androidx.constraintlayout.solver.widgets.Helper
{
    public androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets;
    public int mWidgetsCount;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.HelperWidget this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u0;

        this := @this: androidx.constraintlayout.solver.widgets.HelperWidget;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void <init>()>();

        $u0 = newarray (androidx.constraintlayout.solver.widgets.ConstraintWidget)[4];

        this.<androidx.constraintlayout.solver.widgets.HelperWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets> = $u0;

        this.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount> = 0;

        return;
    }

    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.HelperWidget this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u4;
        int $u2, $u0;
        java.lang.Object[] $u-1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u1;

        this := @this: androidx.constraintlayout.solver.widgets.HelperWidget;

        $u4 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        if $u4 == this goto label3;

        if $u4 != null goto label1;

        return;

     label1:
        $u2 = this.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount>;

        $u0 = $u2 + 1;

        $u1 = this.<androidx.constraintlayout.solver.widgets.HelperWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        $u2 = lengthof $u1;

        if $u0 <= $u2 goto label2;

        $u2 = lengthof $u1;

        $u2 = $u2 * 2;

        $u-1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($u1, $u2);

        $u1 = (androidx.constraintlayout.solver.widgets.ConstraintWidget[]) $u-1;

        this.<androidx.constraintlayout.solver.widgets.HelperWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets> = $u1;

     label2:
        $u1 = this.<androidx.constraintlayout.solver.widgets.HelperWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        $u2 = this.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount>;

        $u1[$u2] = $u4;

        $u2 = $u2 + 1;

        this.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount> = $u2;

     label3:
        return;
    }

    public void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget, java.util.HashMap)
    {
        androidx.constraintlayout.solver.widgets.HelperWidget this, srcHelper;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u5;
        java.util.HashMap map;
        java.lang.Object $u-1;
        int count, i;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u3;

        this := @this: androidx.constraintlayout.solver.widgets.HelperWidget;

        $u5 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        map := @parameter1: java.util.HashMap;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap)>($u5, map);

        srcHelper = (androidx.constraintlayout.solver.widgets.HelperWidget) $u5;

        this.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount> = 0;

        count = srcHelper.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount>;

        i = 0;

     label1:
        if i >= count goto label2;

        $u3 = srcHelper.<androidx.constraintlayout.solver.widgets.HelperWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        $u5 = $u3[i];

        $u-1 = virtualinvoke map.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u5);

        $u5 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.HelperWidget: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u5);

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public void removeAllIds()
    {
        androidx.constraintlayout.solver.widgets.HelperWidget this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u0;

        this := @this: androidx.constraintlayout.solver.widgets.HelperWidget;

        this.<androidx.constraintlayout.solver.widgets.HelperWidget: int mWidgetsCount> = 0;

        $u0 = this.<androidx.constraintlayout.solver.widgets.HelperWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($u0, null);

        return;
    }

    public void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
    {
        androidx.constraintlayout.solver.widgets.HelperWidget this;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u1;

        this := @this: androidx.constraintlayout.solver.widgets.HelperWidget;

        $u1 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        return;
    }
}
