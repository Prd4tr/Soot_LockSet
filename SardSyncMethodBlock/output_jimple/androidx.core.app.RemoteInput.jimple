public final class androidx.core.app.RemoteInput extends java.lang.Object
{
    public static final int EDIT_CHOICES_BEFORE_SENDING_AUTO;
    public static final int EDIT_CHOICES_BEFORE_SENDING_DISABLED;
    public static final int EDIT_CHOICES_BEFORE_SENDING_ENABLED;
    private static final java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA;
    public static final java.lang.String EXTRA_RESULTS_DATA;
    private static final java.lang.String EXTRA_RESULTS_SOURCE;
    public static final java.lang.String RESULTS_CLIP_LABEL;
    public static final int SOURCE_CHOICE;
    public static final int SOURCE_FREE_FORM_INPUT;
    private static final java.lang.String TAG;
    private final boolean mAllowFreeFormTextInput;
    private final java.util.Set mAllowedDataTypes;
    private final java.lang.CharSequence[] mChoices;
    private final int mEditChoicesBeforeSending;
    private final android.os.Bundle mExtras;
    private final java.lang.CharSequence mLabel;
    private final java.lang.String mResultKey;

    void <init>(java.lang.String, java.lang.CharSequence, java.lang.CharSequence[], boolean, int, android.os.Bundle, java.util.Set)
    {
        androidx.core.app.RemoteInput this;
        java.lang.String $u3;
        java.lang.CharSequence $u4;
        java.lang.CharSequence[] $u5;
        boolean $u6;
        int $u7;
        android.os.Bundle $u8;
        java.util.Set allowedDataTypes;
        java.lang.IllegalArgumentException $u0;

        this := @this: androidx.core.app.RemoteInput;

        $u3 := @parameter0: java.lang.String;

        $u4 := @parameter1: java.lang.CharSequence;

        $u5 := @parameter2: java.lang.CharSequence[];

        $u6 := @parameter3: boolean;

        $u7 := @parameter4: int;

        $u8 := @parameter5: android.os.Bundle;

        allowedDataTypes := @parameter6: java.util.Set;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.core.app.RemoteInput: java.lang.String mResultKey> = $u3;

        this.<androidx.core.app.RemoteInput: java.lang.CharSequence mLabel> = $u4;

        this.<androidx.core.app.RemoteInput: java.lang.CharSequence[] mChoices> = $u5;

        this.<androidx.core.app.RemoteInput: boolean mAllowFreeFormTextInput> = $u6;

        this.<androidx.core.app.RemoteInput: int mEditChoicesBeforeSending> = $u7;

        this.<androidx.core.app.RemoteInput: android.os.Bundle mExtras> = $u8;

        this.<androidx.core.app.RemoteInput: java.util.Set mAllowedDataTypes> = allowedDataTypes;

        $u7 = virtualinvoke this.<androidx.core.app.RemoteInput: int getEditChoicesBeforeSending()>();

        if $u7 != 2 goto label2;

        $u6 = virtualinvoke this.<androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()>();

        if $u6 == 0 goto label1;

        return;

     label1:
        $u0 = new java.lang.IllegalArgumentException;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setEditChoicesBeforeSending requires setAllowFreeFormInput");

        throw $u0;

     label2:
        return;
    }

    public static void addDataResultToIntent(androidx.core.app.RemoteInput, android.content.Intent, java.util.Map)
    {
        androidx.core.app.RemoteInput $u8;
        android.content.Intent $u9, $u-1#7, clipDataIntent#8;
        java.util.Map results;
        int clipDataIntent;
        android.app.RemoteInput $u-1;
        java.util.Set $u-1#10;
        java.util.Iterator $u-1#12;
        boolean $u-1#14;
        java.lang.Object $u-1#16;
        java.util.Map$Entry entry;
        java.lang.String mimeType, $u-1#25, $u-1#32;
        android.net.Uri uri;
        android.os.Bundle $u-1#27, resultsBundle;
        android.content.ClipData $u-1#36;

        $u8 := @parameter0: androidx.core.app.RemoteInput;

        $u9 := @parameter1: android.content.Intent;

        results := @parameter2: java.util.Map;

        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 26 goto label1;

        $u-1 = staticinvoke <androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>($u8);

        staticinvoke <android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)>($u-1, $u9, results);

        return;

     label1:
        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 16 goto label7;

        $u-1#7 = staticinvoke <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($u9);

        clipDataIntent#8 = $u-1#7;

        if $u-1#7 != null goto label2;

        $u-1#7 = new android.content.Intent;

        specialinvoke $u-1#7.<android.content.Intent: void <init>()>();

        clipDataIntent#8 = $u-1#7;

     label2:
        $u-1#10 = interfaceinvoke results.<java.util.Map: java.util.Set entrySet()>();

        $u-1#12 = interfaceinvoke $u-1#10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Iterator: boolean hasNext()>();

        if $u-1#14 == 0 goto label6;

        $u-1#16 = interfaceinvoke $u-1#12.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $u-1#16;

        $u-1#16 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        mimeType = (java.lang.String) $u-1#16;

        $u-1#16 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        uri = (android.net.Uri) $u-1#16;

        if mimeType != null goto label4;

        goto label3;

     label4:
        $u-1#25 = staticinvoke <androidx.core.app.RemoteInput: java.lang.String getExtraResultsKeyForData(java.lang.String)>(mimeType);

        $u-1#27 = virtualinvoke clipDataIntent#8.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>($u-1#25);

        resultsBundle = $u-1#27;

        if $u-1#27 != null goto label5;

        $u-1#27 = new android.os.Bundle;

        specialinvoke $u-1#27.<android.os.Bundle: void <init>()>();

        resultsBundle = $u-1#27;

     label5:
        $u-1#25 = virtualinvoke $u8.<androidx.core.app.RemoteInput: java.lang.String getResultKey()>();

        $u-1#32 = virtualinvoke uri.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke resultsBundle.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($u-1#25, $u-1#32);

        mimeType = staticinvoke <androidx.core.app.RemoteInput: java.lang.String getExtraResultsKeyForData(java.lang.String)>(mimeType);

        virtualinvoke clipDataIntent#8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>(mimeType, resultsBundle);

        goto label3;

     label6:
        $u-1#36 = staticinvoke <android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>("android.remoteinput.results", clipDataIntent#8);

        virtualinvoke $u9.<android.content.Intent: void setClipData(android.content.ClipData)>($u-1#36);

     label7:
        return;
    }

    public static void addResultsToIntent(androidx.core.app.RemoteInput[], android.content.Intent, android.os.Bundle)
    {
        androidx.core.app.RemoteInput[] $u9, arr;
        android.content.Intent $u10, $u-1#25, existingTextResults#26;
        android.os.Bundle $u11, $u-1#8, existingTextResults#9;
        int existingTextResults, existingTextResults#5, $u4;
        android.app.RemoteInput[] $u-1;
        androidx.core.app.RemoteInput input;
        java.lang.String $u-1#15;
        java.util.Map $u-1#17;
        java.lang.Object $u-1#36;
        boolean arr#38;
        java.lang.CharSequence $u8;
        android.content.ClipData $u-1#44;

        $u9 := @parameter0: androidx.core.app.RemoteInput[];

        $u10 := @parameter1: android.content.Intent;

        $u11 := @parameter2: android.os.Bundle;

        existingTextResults = <android.os.Build$VERSION: int SDK_INT>;

        if existingTextResults < 26 goto label01;

        $u-1 = staticinvoke <androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>($u9);

        staticinvoke <android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>($u-1, $u10, $u11);

        return;

     label01:
        existingTextResults#5 = <android.os.Build$VERSION: int SDK_INT>;

        existingTextResults = 0;

        if existingTextResults#5 < 20 goto label07;

        $u-1#8 = staticinvoke <androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>($u10);

        existingTextResults#9 = $u-1#8;

        existingTextResults = staticinvoke <androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>($u10);

        if $u-1#8 != null goto label02;

        existingTextResults#9 = $u11;

        goto label03;

     label02:
        virtualinvoke $u-1#8.<android.os.Bundle: void putAll(android.os.Bundle)>($u11);

     label03:
        existingTextResults#5 = lengthof $u9;

        $u4 = 0;

     label04:
        if $u4 >= existingTextResults#5 goto label06;

        input = $u9[$u4];

        $u-1#15 = virtualinvoke input.<androidx.core.app.RemoteInput: java.lang.String getResultKey()>();

        $u-1#17 = staticinvoke <androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>($u10, $u-1#15);

        arr = newarray (androidx.core.app.RemoteInput)[1];

        arr[0] = input;

        $u-1 = staticinvoke <androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>(arr);

        staticinvoke <android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>($u-1, $u10, existingTextResults#9);

        if $u-1#17 == null goto label05;

        staticinvoke <androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>(input, $u10, $u-1#17);

     label05:
        $u4 = $u4 + 1;

        goto label04;

     label06:
        staticinvoke <androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>($u10, existingTextResults);

        goto label13;

     label07:
        existingTextResults#5 = <android.os.Build$VERSION: int SDK_INT>;

        if existingTextResults#5 < 16 goto label13;

        $u-1#25 = staticinvoke <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($u10);

        existingTextResults#26 = $u-1#25;

        if $u-1#25 != null goto label08;

        $u-1#25 = new android.content.Intent;

        specialinvoke $u-1#25.<android.content.Intent: void <init>()>();

        existingTextResults#26 = $u-1#25;

     label08:
        $u-1#8 = virtualinvoke existingTextResults#26.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("android.remoteinput.resultsData");

        existingTextResults#9 = $u-1#8;

        if $u-1#8 != null goto label09;

        $u-1#8 = new android.os.Bundle;

        specialinvoke $u-1#8.<android.os.Bundle: void <init>()>();

        existingTextResults#9 = $u-1#8;

     label09:
        existingTextResults#5 = lengthof $u9;

     label10:
        if existingTextResults >= existingTextResults#5 goto label12;

        input = $u9[existingTextResults];

        $u-1#15 = virtualinvoke input.<androidx.core.app.RemoteInput: java.lang.String getResultKey()>();

        $u-1#36 = virtualinvoke $u11.<android.os.Bundle: java.lang.Object get(java.lang.String)>($u-1#15);

        arr#38 = $u-1#36 instanceof java.lang.CharSequence;

        if arr#38 == 0 goto label11;

        $u-1#15 = virtualinvoke input.<androidx.core.app.RemoteInput: java.lang.String getResultKey()>();

        $u8 = (java.lang.CharSequence) $u-1#36;

        virtualinvoke existingTextResults#9.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>($u-1#15, $u8);

     label11:
        existingTextResults = existingTextResults + 1;

        goto label10;

     label12:
        virtualinvoke existingTextResults#26.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("android.remoteinput.resultsData", existingTextResults#9);

        $u-1#44 = staticinvoke <android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>("android.remoteinput.results", existingTextResults#26);

        virtualinvoke $u10.<android.content.Intent: void setClipData(android.content.ClipData)>($u-1#44);

     label13:
        return;
    }

    static android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
    {
        androidx.core.app.RemoteInput $u3;
        android.app.RemoteInput$Builder builder;
        java.lang.String $u-1;
        java.lang.CharSequence $u-1#4;
        java.lang.CharSequence[] $u-1#8;
        boolean $u-1#12;
        android.os.Bundle $u-1#16;
        int $u1;
        android.app.RemoteInput $u-1#23;

        $u3 := @parameter0: androidx.core.app.RemoteInput;

        builder = new android.app.RemoteInput$Builder;

        $u-1 = virtualinvoke $u3.<androidx.core.app.RemoteInput: java.lang.String getResultKey()>();

        specialinvoke builder.<android.app.RemoteInput$Builder: void <init>(java.lang.String)>($u-1);

        $u-1#4 = virtualinvoke $u3.<androidx.core.app.RemoteInput: java.lang.CharSequence getLabel()>();

        builder = virtualinvoke builder.<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setLabel(java.lang.CharSequence)>($u-1#4);

        $u-1#8 = virtualinvoke $u3.<androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()>();

        builder = virtualinvoke builder.<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])>($u-1#8);

        $u-1#12 = virtualinvoke $u3.<androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()>();

        builder = virtualinvoke builder.<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setAllowFreeFormInput(boolean)>($u-1#12);

        $u-1#16 = virtualinvoke $u3.<androidx.core.app.RemoteInput: android.os.Bundle getExtras()>();

        builder = virtualinvoke builder.<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder addExtras(android.os.Bundle)>($u-1#16);

        $u1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u1 < 29 goto label1;

        $u1 = virtualinvoke $u3.<androidx.core.app.RemoteInput: int getEditChoicesBeforeSending()>();

        virtualinvoke builder.<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setEditChoicesBeforeSending(int)>($u1);

     label1:
        $u-1#23 = virtualinvoke builder.<android.app.RemoteInput$Builder: android.app.RemoteInput build()>();

        return $u-1#23;
    }

    static android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])
    {
        androidx.core.app.RemoteInput[] $u3;
        android.app.RemoteInput $u-1;
        int result, $u2;
        android.app.RemoteInput[] result#3;
        androidx.core.app.RemoteInput $u2#6;

        $u3 := @parameter0: androidx.core.app.RemoteInput[];

        if $u3 != null goto label1;

        return null;

     label1:
        result = lengthof $u3;

        result#3 = newarray (android.app.RemoteInput)[result];

        result = 0;

     label2:
        $u2 = lengthof $u3;

        if result >= $u2 goto label3;

        $u2#6 = $u3[result];

        $u-1 = staticinvoke <androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>($u2#6);

        result#3[result] = $u-1;

        result = result + 1;

        goto label2;

     label3:
        return result#3;
    }

    private static android.content.Intent getClipDataIntentFromIntent(android.content.Intent)
    {
        android.content.Intent $u5;
        android.content.ClipData $u-1;
        android.content.ClipDescription $u-1#3;
        boolean $u-1#5;
        java.lang.CharSequence $u-1#7;
        java.lang.String $u-1#9;
        android.content.ClipData$Item $u-1#14;

        $u5 := @parameter0: android.content.Intent;

        $u-1 = virtualinvoke $u5.<android.content.Intent: android.content.ClipData getClipData()>();

        if $u-1 != null goto label1;

        return null;

     label1:
        $u-1#3 = virtualinvoke $u-1.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        $u-1#5 = virtualinvoke $u-1#3.<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>("text/vnd.android.intent");

        if $u-1#5 != 0 goto label2;

        return null;

     label2:
        $u-1#7 = virtualinvoke $u-1#3.<android.content.ClipDescription: java.lang.CharSequence getLabel()>();

        $u-1#9 = interfaceinvoke $u-1#7.<java.lang.CharSequence: java.lang.String toString()>();

        $u-1#5 = virtualinvoke $u-1#9.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>("android.remoteinput.results");

        if $u-1#5 != 0 goto label3;

        return null;

     label3:
        $u-1#14 = virtualinvoke $u-1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        $u5 = virtualinvoke $u-1#14.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        return $u5;
    }

    public static java.util.Map getDataResultsFromIntent(android.content.Intent, java.lang.String)
    {
        android.content.Intent $u10;
        java.lang.String $u11, key, mimeType;
        int clipDataIntent;
        java.util.Map $u-1;
        java.util.HashMap results;
        android.os.Bundle $u-1#11;
        java.util.Set $u-1#12;
        java.util.Iterator $u-1#14;
        boolean $u-1#16;
        java.lang.Object $u-1#18;
        android.net.Uri $u-1#35;

        $u10 := @parameter0: android.content.Intent;

        $u11 := @parameter1: java.lang.String;

        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 26 goto label1;

        $u-1 = staticinvoke <android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>($u10, $u11);

        return $u-1;

     label1:
        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 16 goto label8;

        $u10 = staticinvoke <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($u10);

        if $u10 != null goto label2;

        return null;

     label2:
        results = new java.util.HashMap;

        specialinvoke results.<java.util.HashMap: void <init>()>();

        $u-1#11 = virtualinvoke $u10.<android.content.Intent: android.os.Bundle getExtras()>();

        $u-1#12 = virtualinvoke $u-1#11.<android.os.Bundle: java.util.Set keySet()>();

        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $u-1#16 = interfaceinvoke $u-1#14.<java.util.Iterator: boolean hasNext()>();

        if $u-1#16 == 0 goto label6;

        $u-1#18 = interfaceinvoke $u-1#14.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $u-1#18;

        mimeType = "android.remoteinput.dataTypeResultsData";

        $u-1#16 = virtualinvoke key.<java.lang.String: boolean startsWith(java.lang.String)>("android.remoteinput.dataTypeResultsData");

        if $u-1#16 == 0 goto label3;

        clipDataIntent = virtualinvoke mimeType.<java.lang.String: int length()>();

        mimeType = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>(clipDataIntent);

        $u-1#16 = virtualinvoke mimeType.<java.lang.String: boolean isEmpty()>();

        if $u-1#16 == 0 goto label4;

        goto label3;

     label4:
        $u-1#11 = virtualinvoke $u10.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>(key);

        key = virtualinvoke $u-1#11.<android.os.Bundle: java.lang.String getString(java.lang.String)>($u11);

        if key == null goto label3;

        $u-1#16 = virtualinvoke key.<java.lang.String: boolean isEmpty()>();

        if $u-1#16 == 0 goto label5;

        goto label3;

     label5:
        $u-1#35 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(key);

        interfaceinvoke results.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(mimeType, $u-1#35);

        goto label3;

     label6:
        $u-1#16 = interfaceinvoke results.<java.util.Map: boolean isEmpty()>();

        if $u-1#16 == 0 goto label7;

        return null;

     label7:
        return results;

     label8:
        return null;
    }

    private static java.lang.String getExtraResultsKeyForData(java.lang.String)
    {
        java.lang.String $u2;
        java.lang.StringBuilder $u0;

        $u2 := @parameter0: java.lang.String;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.remoteinput.dataTypeResultsData");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u2);

        $u2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u2;
    }

    public static android.os.Bundle getResultsFromIntent(android.content.Intent)
    {
        android.content.Intent $u3;
        int clipDataIntent;
        android.os.Bundle $u-1;
        android.os.Parcelable $u-1#13;

        $u3 := @parameter0: android.content.Intent;

        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 20 goto label1;

        $u-1 = staticinvoke <android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>($u3);

        return $u-1;

     label1:
        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 16 goto label3;

        $u3 = staticinvoke <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($u3);

        if $u3 != null goto label2;

        return null;

     label2:
        $u-1 = virtualinvoke $u3.<android.content.Intent: android.os.Bundle getExtras()>();

        $u-1#13 = virtualinvoke $u-1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.remoteinput.resultsData");

        $u-1 = (android.os.Bundle) $u-1#13;

        return $u-1;

     label3:
        return null;
    }

    public static int getResultsSource(android.content.Intent)
    {
        android.content.Intent $u4;
        int clipDataIntent;
        android.os.Bundle $u-1;

        $u4 := @parameter0: android.content.Intent;

        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 28 goto label1;

        clipDataIntent = staticinvoke <android.app.RemoteInput: int getResultsSource(android.content.Intent)>($u4);

        return clipDataIntent;

     label1:
        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 16 goto label3;

        $u4 = staticinvoke <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($u4);

        if $u4 != null goto label2;

        return 0;

     label2:
        $u-1 = virtualinvoke $u4.<android.content.Intent: android.os.Bundle getExtras()>();

        clipDataIntent = virtualinvoke $u-1.<android.os.Bundle: int getInt(java.lang.String,int)>("android.remoteinput.resultsSource", 0);

        return clipDataIntent;

     label3:
        return 0;
    }

    public static void setResultsSource(android.content.Intent, int)
    {
        android.content.Intent $u2, $u-1, clipDataIntent#6;
        int $u3, clipDataIntent;
        android.content.ClipData $u-1#10;

        $u2 := @parameter0: android.content.Intent;

        $u3 := @parameter1: int;

        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 28 goto label1;

        staticinvoke <android.app.RemoteInput: void setResultsSource(android.content.Intent,int)>($u2, $u3);

        return;

     label1:
        clipDataIntent = <android.os.Build$VERSION: int SDK_INT>;

        if clipDataIntent < 16 goto label3;

        $u-1 = staticinvoke <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($u2);

        clipDataIntent#6 = $u-1;

        if $u-1 != null goto label2;

        $u-1 = new android.content.Intent;

        specialinvoke $u-1.<android.content.Intent: void <init>()>();

        clipDataIntent#6 = $u-1;

     label2:
        virtualinvoke clipDataIntent#6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.remoteinput.resultsSource", $u3);

        $u-1#10 = staticinvoke <android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>("android.remoteinput.results", clipDataIntent#6);

        virtualinvoke $u2.<android.content.Intent: void setClipData(android.content.ClipData)>($u-1#10);

     label3:
        return;
    }

    public boolean getAllowFreeFormInput()
    {
        androidx.core.app.RemoteInput this;
        boolean ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: boolean mAllowFreeFormTextInput>;

        return ret0;
    }

    public java.util.Set getAllowedDataTypes()
    {
        androidx.core.app.RemoteInput this;
        java.util.Set ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: java.util.Set mAllowedDataTypes>;

        return ret0;
    }

    public java.lang.CharSequence[] getChoices()
    {
        androidx.core.app.RemoteInput this;
        java.lang.CharSequence[] ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: java.lang.CharSequence[] mChoices>;

        return ret0;
    }

    public int getEditChoicesBeforeSending()
    {
        androidx.core.app.RemoteInput this;
        int ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: int mEditChoicesBeforeSending>;

        return ret0;
    }

    public android.os.Bundle getExtras()
    {
        androidx.core.app.RemoteInput this;
        android.os.Bundle ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: android.os.Bundle mExtras>;

        return ret0;
    }

    public java.lang.CharSequence getLabel()
    {
        androidx.core.app.RemoteInput this;
        java.lang.CharSequence ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: java.lang.CharSequence mLabel>;

        return ret0;
    }

    public java.lang.String getResultKey()
    {
        androidx.core.app.RemoteInput this;
        java.lang.String ret0;

        this := @this: androidx.core.app.RemoteInput;

        ret0 = this.<androidx.core.app.RemoteInput: java.lang.String mResultKey>;

        return ret0;
    }

    public boolean isDataOnly()
    {
        androidx.core.app.RemoteInput this;
        boolean $u-1;
        java.lang.CharSequence[] $u-1#3;
        int $u0;
        java.util.Set $u-1#8;

        this := @this: androidx.core.app.RemoteInput;

        $u-1 = virtualinvoke this.<androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()>();

        if $u-1 != 0 goto label2;

        $u-1#3 = virtualinvoke this.<androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()>();

        if $u-1#3 == null goto label1;

        $u-1#3 = virtualinvoke this.<androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()>();

        $u0 = lengthof $u-1#3;

        if $u0 != 0 goto label2;

     label1:
        $u-1#8 = virtualinvoke this.<androidx.core.app.RemoteInput: java.util.Set getAllowedDataTypes()>();

        if $u-1#8 == null goto label2;

        $u-1#8 = virtualinvoke this.<androidx.core.app.RemoteInput: java.util.Set getAllowedDataTypes()>();

        $u-1 = interfaceinvoke $u-1#8.<java.util.Set: boolean isEmpty()>();

        if $u-1 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.core.app.RemoteInput: java.lang.String TAG> = "RemoteInput";

        <androidx.core.app.RemoteInput: int SOURCE_FREE_FORM_INPUT> = 0;

        <androidx.core.app.RemoteInput: int SOURCE_CHOICE> = 1;

        <androidx.core.app.RemoteInput: java.lang.String RESULTS_CLIP_LABEL> = "android.remoteinput.results";

        <androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_SOURCE> = "android.remoteinput.resultsSource";

        <androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_DATA> = "android.remoteinput.resultsData";

        <androidx.core.app.RemoteInput: java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA> = "android.remoteinput.dataTypeResultsData";

        <androidx.core.app.RemoteInput: int EDIT_CHOICES_BEFORE_SENDING_ENABLED> = 2;

        <androidx.core.app.RemoteInput: int EDIT_CHOICES_BEFORE_SENDING_DISABLED> = 1;

        <androidx.core.app.RemoteInput: int EDIT_CHOICES_BEFORE_SENDING_AUTO> = 0;

        return;
    }
}
