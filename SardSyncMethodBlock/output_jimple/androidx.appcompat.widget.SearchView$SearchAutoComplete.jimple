public class androidx.appcompat.widget.SearchView$SearchAutoComplete extends androidx.appcompat.widget.AppCompatAutoCompleteTextView
{
    private boolean mHasPendingShowSoftInputRequest;
    final java.lang.Runnable mRunShowSoftInputIfNecessary;
    private androidx.appcompat.widget.SearchView mSearchView;
    private int mThreshold;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        android.content.Context $u2;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;
        int $u0;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        $u0 = <androidx.appcompat.R$attr: int autoCompleteTextViewStyle>;

        specialinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, $u0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;
        int $u4;
        androidx.appcompat.widget.SearchView$SearchAutoComplete$1 $u0;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        $u4 := @parameter2: int;

        specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, $u4);

        $u0 = new androidx.appcompat.widget.SearchView$SearchAutoComplete$1;

        specialinvoke $u0.<androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete)>(this);

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary> = $u0;

        $u4 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getThreshold()>();

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold> = $u4;

        return;
    }

    private int getSearchViewTextMinWidthDp()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        int widthDp, heightDp, $u3;
        android.content.res.Resources $u-1;
        android.content.res.Configuration $u-1#3;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.res.Resources getResources()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        widthDp = $u-1#3.<android.content.res.Configuration: int screenWidthDp>;

        heightDp = $u-1#3.<android.content.res.Configuration: int screenHeightDp>;

        if widthDp < 960 goto label1;

        if heightDp < 720 goto label1;

        $u3 = $u-1#3.<android.content.res.Configuration: int orientation>;

        if $u3 != 2 goto label1;

        return 256;

     label1:
        if widthDp >= 600 goto label3;

        if widthDp < 640 goto label2;

        if heightDp < 480 goto label2;

        goto label3;

     label2:
        return 160;

     label3:
        return 192;
    }

    public boolean enoughToFilter()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        boolean $u-1;
        int $u0;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u0 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold>;

        if $u0 <= 0 goto label2;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: boolean enoughToFilter()>();

        if $u-1 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    void ensureImeVisible()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        boolean $u-1;
        int $u0;
        androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector $u0#4;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 29 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setInputMethodMode(int)>(1);

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()>();

        if $u-1 == 0 goto label2;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void showDropDown()>();

        return;

     label1:
        $u0#4 = <androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector PRE_API_29_HIDDEN_METHOD_INVOKER>;

        virtualinvoke $u0#4.<androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView)>(this);

     label2:
        return;
    }

    boolean isEmpty()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        android.text.Editable $u-1;
        int $u-1#3;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.text.Editable getText()>();

        $u-1#3 = staticinvoke <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>($u-1);

        if $u-1#3 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        android.view.inputmethod.EditorInfo $u3;
        android.view.inputmethod.InputConnection $u-1;
        boolean $u1;
        java.lang.Runnable $u1#2;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u3 := @parameter0: android.view.inputmethod.EditorInfo;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>($u3);

        $u1 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest>;

        if $u1 == 0 goto label1;

        $u1#2 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($u1#2);

        $u1#2 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean post(java.lang.Runnable)>($u1#2);

     label1:
        return $u-1;
    }

    protected void onFinishInflate()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        android.content.res.Resources $u-1;
        android.util.DisplayMetrics $u-1#3;
        int $u-1#5;
        float $u1;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void onFinishInflate()>();

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.res.Resources getResources()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $u-1#5 = specialinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()>();

        $u1 = (float) $u-1#5;

        $u1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $u1, $u-1#3);

        $u-1#5 = (int) $u1;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setMinWidth(int)>($u-1#5);

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        boolean $u2;
        int $u3;
        android.graphics.Rect $u4;
        androidx.appcompat.widget.SearchView $u0;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u2 := @parameter0: boolean;

        $u3 := @parameter1: int;

        $u4 := @parameter2: android.graphics.Rect;

        specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>($u2, $u3, $u4);

        $u0 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView>;

        virtualinvoke $u0.<androidx.appcompat.widget.SearchView: void onTextFocusChanged()>();

        return;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        int $u4, $u-1;
        android.view.KeyEvent $u5;
        android.view.KeyEvent$DispatcherState $u-1#6;
        boolean $u-1#12;
        androidx.appcompat.widget.SearchView $u2;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u4 := @parameter0: int;

        $u5 := @parameter1: android.view.KeyEvent;

        if $u4 != 4 goto label3;

        $u-1 = virtualinvoke $u5.<android.view.KeyEvent: int getAction()>();

        if $u-1 != 0 goto label1;

        $u-1 = virtualinvoke $u5.<android.view.KeyEvent: int getRepeatCount()>();

        if $u-1 != 0 goto label1;

        $u-1#6 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if $u-1#6 == null goto label4;

        virtualinvoke $u-1#6.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>($u5, this);

        return 1;

     label1:
        $u-1 = virtualinvoke $u5.<android.view.KeyEvent: int getAction()>();

        if $u-1 != 1 goto label3;

        $u-1#6 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if $u-1#6 == null goto label2;

        virtualinvoke $u-1#6.<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>($u5);

     label2:
        $u-1#12 = virtualinvoke $u5.<android.view.KeyEvent: boolean isTracking()>();

        if $u-1#12 == 0 goto label3;

        $u-1#12 = virtualinvoke $u5.<android.view.KeyEvent: boolean isCanceled()>();

        if $u-1#12 != 0 goto label3;

        $u2 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView>;

        virtualinvoke $u2.<androidx.appcompat.widget.SearchView: void clearFocus()>();

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>(0);

        return 1;

     label3:
        $u-1#12 = specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>($u4, $u5);

        return $u-1#12;

     label4:
        return 1;
    }

    public void onWindowFocusChanged(boolean)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        boolean $u2;
        androidx.appcompat.widget.SearchView $u0;
        int $u-1;
        android.content.Context $u-1#7;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u2 := @parameter0: boolean;

        specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void onWindowFocusChanged(boolean)>($u2);

        if $u2 == 0 goto label1;

        $u0 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView>;

        $u2 = virtualinvoke $u0.<androidx.appcompat.widget.SearchView: boolean hasFocus()>();

        if $u2 == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getVisibility()>();

        if $u-1 != 0 goto label1;

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 1;

        $u-1#7 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $u2 = staticinvoke <androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)>($u-1#7);

        if $u2 == 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void ensureImeVisible()>();

     label1:
        return;
    }

    public void performCompletion()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        return;
    }

    protected void replaceText(java.lang.CharSequence)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        java.lang.CharSequence $u1;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u1 := @parameter0: java.lang.CharSequence;

        return;
    }

    void setImeVisibility(boolean)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        boolean $u4;
        android.content.Context $u-1;
        java.lang.Object $u-1#4;
        android.view.inputmethod.InputMethodManager imm;
        java.lang.Runnable $u2;
        android.os.IBinder $u-1#9;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u4 := @parameter0: boolean;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $u-1#4 = virtualinvoke $u-1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        imm = (android.view.inputmethod.InputMethodManager) $u-1#4;

        if $u4 != 0 goto label1;

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

        $u2 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($u2);

        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.os.IBinder getWindowToken()>();

        virtualinvoke imm.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($u-1#9, 0);

        return;

     label1:
        $u4 = virtualinvoke imm.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(this);

        if $u4 == 0 goto label2;

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

        $u2 = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($u2);

        virtualinvoke imm.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(this, 0);

        return;

     label2:
        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 1;

        return;
    }

    void setSearchView(androidx.appcompat.widget.SearchView)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        androidx.appcompat.widget.SearchView $u1;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u1 := @parameter0: androidx.appcompat.widget.SearchView;

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView> = $u1;

        return;
    }

    public void setThreshold(int)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        int $u1;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $u1 := @parameter0: int;

        specialinvoke this.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setThreshold(int)>($u1);

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold> = $u1;

        return;
    }

    void showSoftInputIfNecessary()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete this;
        boolean imm;
        android.content.Context $u-1;
        java.lang.Object $u-1#5;
        android.view.inputmethod.InputMethodManager imm#7;

        this := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        imm = this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest>;

        if imm == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $u-1#5 = virtualinvoke $u-1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        imm#7 = (android.view.inputmethod.InputMethodManager) $u-1#5;

        virtualinvoke imm#7.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(this, 0);

        this.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

     label1:
        return;
    }
}
