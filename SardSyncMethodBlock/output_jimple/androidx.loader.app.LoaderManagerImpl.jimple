class androidx.loader.app.LoaderManagerImpl extends androidx.loader.app.LoaderManager
{
    static boolean DEBUG;
    static final java.lang.String TAG;
    private final androidx.lifecycle.LifecycleOwner mLifecycleOwner;
    private final androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel;

    static void <clinit>()
    {
        <androidx.loader.app.LoaderManagerImpl: java.lang.String TAG> = "LoaderManager";

        <androidx.loader.app.LoaderManagerImpl: boolean DEBUG> = 0;

        <androidx.loader.app.LoaderManagerImpl: boolean DEBUG> = 0;

        return;
    }

    void <init>(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.ViewModelStore)
    {
        androidx.loader.app.LoaderManagerImpl this;
        androidx.lifecycle.LifecycleOwner $u2;
        androidx.lifecycle.ViewModelStore $u3;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $u-1;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u2 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $u3 := @parameter1: androidx.lifecycle.ViewModelStore;

        specialinvoke this.<androidx.loader.app.LoaderManager: void <init>()>();

        this.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner> = $u2;

        $u-1 = staticinvoke <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>($u3);

        this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel> = $u-1;

        return;
    }

    private androidx.loader.content.Loader createAndInstallLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks, androidx.loader.content.Loader)
    {
        androidx.loader.app.LoaderManagerImpl this;
        int $u6, $u-1#11;
        android.os.Bundle $u7;
        androidx.loader.app.LoaderManager$LoaderCallbacks callback;
        androidx.loader.content.Loader priorLoader, $u-1;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel loader;
        java.lang.Class $u-1#5;
        boolean $u-1#7;
        java.lang.IllegalArgumentException $u2;
        java.lang.StringBuilder $u3;
        java.lang.String $u-1#18;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $u2#20;
        androidx.lifecycle.LifecycleOwner loader#30;
        java.lang.Throwable loader#33;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u6 := @parameter0: int;

        $u7 := @parameter1: android.os.Bundle;

        callback := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        priorLoader := @parameter3: androidx.loader.content.Loader;

     label01:
        loader = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke loader.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void startCreatingLoader()>();

        $u-1 = interfaceinvoke callback.<androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)>($u6, $u7);

     label02:
        if $u-1 == null goto label15;

     label03:
        $u-1#5 = virtualinvoke $u-1.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#7 = virtualinvoke $u-1#5.<java.lang.Class: boolean isMemberClass()>();

     label04:
        if $u-1#7 == 0 goto label08;

     label05:
        $u-1#5 = virtualinvoke $u-1.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#11 = virtualinvoke $u-1#5.<java.lang.Class: int getModifiers()>();

        $u-1#7 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($u-1#11);

     label06:
        if $u-1#7 == 0 goto label07;

        goto label08;

     label07:
        $u2 = new java.lang.IllegalArgumentException;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object returned from onCreateLoader must not be a non-static inner member class: ");

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1);

        $u-1#18 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#18);

        throw $u2;

     label08:
        $u2#20 = new androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        specialinvoke $u2#20.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)>($u6, $u7, $u-1, priorLoader);

     label09:
        $u-1#7 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

     label10:
        if $u-1#7 == 0 goto label12;

     label11:
        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Created new loader ");

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u2#20);

        $u-1#18 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $u-1#18);

     label12:
        loader = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke loader.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)>($u6, $u2#20);

     label13:
        loader = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke loader.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()>();

        loader#30 = this.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        priorLoader = virtualinvoke $u2#20.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)>(loader#30, callback);

        return priorLoader;

     label14:
        loader#33 := @caughtexception;

        goto label17;

     label15:
        $u2 = new java.lang.IllegalArgumentException;

        specialinvoke $u2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object returned from onCreateLoader must not be null");

        throw $u2;

     label16:
        loader#33 := @caughtexception;

     label17:
        loader = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke loader.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()>();

        throw loader#33;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label16;
    }

    public void destroyLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl this;
        int $u3;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel info;
        boolean $u-1;
        android.os.Looper $u-1#4, $u-1#6;
        java.lang.StringBuilder info#9;
        java.lang.String $u-1#12;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $u-1#16;
        java.lang.IllegalStateException info#20;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u3 := @parameter0: int;

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $u-1 != 0 goto label3;

        $u-1#4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $u-1#6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $u-1#4 != $u-1#6 goto label2;

        $u-1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label1;

        info#9 = new java.lang.StringBuilder;

        specialinvoke info#9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroyLoader in ");

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u3);

        $u-1#12 = virtualinvoke info#9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $u-1#12);

     label1:
        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1#16 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($u3);

        if $u-1#16 == null goto label4;

        virtualinvoke $u-1#16.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(1);

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void removeLoader(int)>($u3);

        return;

     label2:
        info#20 = new java.lang.IllegalStateException;

        specialinvoke info#20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("destroyLoader must be called on the main thread");

        throw info#20;

     label3:
        info#20 = new java.lang.IllegalStateException;

        specialinvoke info#20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw info#20;

     label4:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.app.LoaderManagerImpl this;
        java.lang.String $u2;
        java.io.FileDescriptor $u3;
        java.io.PrintWriter $u4;
        java.lang.String[] $u5;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $u0;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: java.io.FileDescriptor;

        $u4 := @parameter2: java.io.PrintWriter;

        $u5 := @parameter3: java.lang.String[];

        $u0 = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $u0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($u2, $u3, $u4, $u5);

        return;
    }

    public androidx.loader.content.Loader getLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl this;
        int $u3;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel info;
        boolean $u-1;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $u-1#5;
        androidx.loader.content.Loader $u-1#7;
        java.lang.IllegalStateException info#10;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u3 := @parameter0: int;

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $u-1 != 0 goto label2;

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1#5 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($u3);

        if $u-1#5 == null goto label1;

        $u-1#7 = virtualinvoke $u-1#5.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()>();

        return $u-1#7;

     label1:
        return null;

     label2:
        info#10 = new java.lang.IllegalStateException;

        specialinvoke info#10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw info#10;
    }

    public boolean hasRunningLoaders()
    {
        androidx.loader.app.LoaderManagerImpl this;
        boolean $u-1;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $u0;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u0 = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1 = virtualinvoke $u0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean hasRunningLoaders()>();

        return $u-1;
    }

    public androidx.loader.content.Loader initLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl this;
        int $u5;
        android.os.Bundle $u6;
        androidx.loader.app.LoaderManager$LoaderCallbacks callback;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel info;
        boolean $u-1;
        android.os.Looper $u-1#4, $u-1#6;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $u-1#9;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#15;
        androidx.loader.content.Loader $u-1#18;
        androidx.lifecycle.LifecycleOwner $u1#25;
        java.lang.IllegalStateException info#28;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u5 := @parameter0: int;

        $u6 := @parameter1: android.os.Bundle;

        callback := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $u-1 != 0 goto label5;

        $u-1#4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $u-1#6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $u-1#4 != $u-1#6 goto label4;

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1#9 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($u5);

        $u-1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initLoader in ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u6);

        $u-1#15 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $u-1#15);

     label1:
        if $u-1#9 != null goto label2;

        $u-1#18 = specialinvoke this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)>($u5, $u6, callback, null);

        return $u-1#18;

     label2:
        $u-1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label3;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Re-using existing loader ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#9);

        $u-1#15 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $u-1#15);

     label3:
        $u1#25 = this.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        $u-1#18 = virtualinvoke $u-1#9.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)>($u1#25, callback);

        return $u-1#18;

     label4:
        info#28 = new java.lang.IllegalStateException;

        specialinvoke info#28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("initLoader must be called on the main thread");

        throw info#28;

     label5:
        info#28 = new java.lang.IllegalStateException;

        specialinvoke info#28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw info#28;
    }

    public void markForRedelivery()
    {
        androidx.loader.app.LoaderManagerImpl this;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $u0;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u0 = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $u0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>();

        return;
    }

    public androidx.loader.content.Loader restartLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl this;
        int $u4;
        android.os.Bundle $u5;
        androidx.loader.app.LoaderManager$LoaderCallbacks callback;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel info;
        boolean $u-1;
        android.os.Looper $u-1#4, $u-1#6;
        java.lang.StringBuilder info#9;
        java.lang.String $u-1#12;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $u-1#16;
        androidx.loader.content.Loader priorLoader;
        java.lang.IllegalStateException info#23;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        $u4 := @parameter0: int;

        $u5 := @parameter1: android.os.Bundle;

        callback := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $u-1 != 0 goto label4;

        $u-1#4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $u-1#6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $u-1#4 != $u-1#6 goto label3;

        $u-1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $u-1 == 0 goto label1;

        info#9 = new java.lang.StringBuilder;

        specialinvoke info#9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restartLoader in ");

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        virtualinvoke info#9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u-1#12 = virtualinvoke info#9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $u-1#12);

     label1:
        info = this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $u-1#16 = virtualinvoke info.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($u4);

        priorLoader = null;

        if $u-1#16 == null goto label2;

        priorLoader = virtualinvoke $u-1#16.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(0);

     label2:
        priorLoader = specialinvoke this.<androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)>($u4, $u5, callback, priorLoader);

        return priorLoader;

     label3:
        info#23 = new java.lang.IllegalStateException;

        specialinvoke info#23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("restartLoader must be called on the main thread");

        throw info#23;

     label4:
        info#23 = new java.lang.IllegalStateException;

        specialinvoke info#23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw info#23;
    }

    public java.lang.String toString()
    {
        androidx.loader.app.LoaderManagerImpl this;
        java.lang.StringBuilder sb;
        int $u-1;
        java.lang.String $u-1#5;
        androidx.lifecycle.LifecycleOwner $u1;

        this := @this: androidx.loader.app.LoaderManagerImpl;

        sb = new java.lang.StringBuilder;

        specialinvoke sb.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderManager{");

        $u-1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this);

        $u-1#5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u-1);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#5);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $u1 = this.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        staticinvoke <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($u1, sb);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $u-1#5 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1#5;
    }
}
