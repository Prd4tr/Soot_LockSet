public final class androidx.core.text.util.LinkifyCompat extends java.lang.Object
{
    private static final java.util.Comparator COMPARATOR;
    private static final java.lang.String[] EMPTY_STRING;

    static void <clinit>()
    {
        java.lang.String[] $u0;
        androidx.core.text.util.LinkifyCompat$1 $u0#3;

        $u0 = newarray (java.lang.String)[0];

        <androidx.core.text.util.LinkifyCompat: java.lang.String[] EMPTY_STRING> = $u0;

        $u0#3 = new androidx.core.text.util.LinkifyCompat$1;

        specialinvoke $u0#3.<androidx.core.text.util.LinkifyCompat$1: void <init>()>();

        <androidx.core.text.util.LinkifyCompat: java.util.Comparator COMPARATOR> = $u0#3;

        return;
    }

    private void <init>()
    {
        androidx.core.text.util.LinkifyCompat this;

        this := @this: androidx.core.text.util.LinkifyCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static void addLinkMovementMethod(android.widget.TextView)
    {
        android.widget.TextView $u2;
        android.text.method.MovementMethod $u-1;
        boolean $u1;

        $u2 := @parameter0: android.widget.TextView;

        $u-1 = virtualinvoke $u2.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        $u1 = $u-1 instanceof android.text.method.LinkMovementMethod;

        if $u1 != 0 goto label1;

        $u1 = virtualinvoke $u2.<android.widget.TextView: boolean getLinksClickable()>();

        if $u1 == 0 goto label1;

        $u-1 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke $u2.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($u-1);

     label1:
        return;
    }

    public static void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String)
    {
        android.widget.TextView $u7;
        java.util.regex.Pattern $u8;
        java.lang.String $u9;
        boolean $u-1;

        $u7 := @parameter0: android.widget.TextView;

        $u8 := @parameter1: java.util.regex.Pattern;

        $u9 := @parameter2: java.lang.String;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label1;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>($u7, $u8, $u9);

        return;

     label1:
        staticinvoke <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, null, null, null);

        return;
    }

    public static void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.widget.TextView $u7;
        java.util.regex.Pattern $u8;
        java.lang.String $u9;
        android.text.util.Linkify$MatchFilter $u10;
        android.text.util.Linkify$TransformFilter $u11;
        boolean $u-1;

        $u7 := @parameter0: android.widget.TextView;

        $u8 := @parameter1: java.util.regex.Pattern;

        $u9 := @parameter2: java.lang.String;

        $u10 := @parameter3: android.text.util.Linkify$MatchFilter;

        $u11 := @parameter4: android.text.util.Linkify$TransformFilter;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label1;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, $u10, $u11);

        return;

     label1:
        staticinvoke <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, null, $u10, $u11);

        return;
    }

    public static void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.widget.TextView $u7;
        java.util.regex.Pattern $u8;
        java.lang.String $u9;
        java.lang.String[] $u10;
        android.text.util.Linkify$MatchFilter $u11;
        android.text.util.Linkify$TransformFilter $u12;
        boolean $u-1;
        java.lang.CharSequence $u-1#3;
        android.text.SpannableString $u-1#5;

        $u7 := @parameter0: android.widget.TextView;

        $u8 := @parameter1: java.util.regex.Pattern;

        $u9 := @parameter2: java.lang.String;

        $u10 := @parameter3: java.lang.String[];

        $u11 := @parameter4: android.text.util.Linkify$MatchFilter;

        $u12 := @parameter5: android.text.util.Linkify$TransformFilter;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label1;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, $u10, $u11, $u12);

        return;

     label1:
        $u-1#3 = virtualinvoke $u7.<android.widget.TextView: java.lang.CharSequence getText()>();

        $u-1#5 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($u-1#3);

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u-1#5, $u8, $u9, $u10, $u11, $u12);

        if $u-1 == 0 goto label2;

        virtualinvoke $u7.<android.widget.TextView: void setText(java.lang.CharSequence)>($u-1#5);

        staticinvoke <androidx.core.text.util.LinkifyCompat: void addLinkMovementMethod(android.widget.TextView)>($u7);

     label2:
        return;
    }

    public static boolean addLinks(android.text.Spannable, int)
    {
        android.text.Spannable $u10;
        int $u11, $u-1#6;
        boolean $u-1;
        java.lang.Object[] $u-1#9;
        android.text.style.URLSpan[] old;
        android.text.style.URLSpan link;
        java.util.ArrayList i;
        java.util.regex.Pattern $u6;
        java.lang.String[] $u-1#23;
        android.text.util.Linkify$MatchFilter $u8;
        java.util.Iterator $u-1#41;
        java.lang.Object $u-1#45;
        androidx.core.text.util.LinkifyCompat$LinkSpec link#47;
        java.lang.String $u5;

        $u10 := @parameter0: android.text.Spannable;

        $u11 := @parameter1: int;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label01;

        $u-1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($u10, $u11);

        return $u-1;

     label01:
        if $u11 != 0 goto label02;

        return 0;

     label02:
        $u-1#6 = interfaceinvoke $u10.<android.text.Spannable: int length()>();

        $u-1#9 = interfaceinvoke $u10.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $u-1#6, class "Landroid/text/style/URLSpan;");

        old = (android.text.style.URLSpan[]) $u-1#9;

        $u-1#6 = lengthof old;

        $u-1#6 = $u-1#6 - 1;

     label03:
        if $u-1#6 < 0 goto label04;

        link = old[$u-1#6];

        interfaceinvoke $u10.<android.text.Spannable: void removeSpan(java.lang.Object)>(link);

        $u-1#6 = $u-1#6 + -1;

        goto label03;

     label04:
        $u-1#6 = $u11 & 4;

        if $u-1#6 == 0 goto label05;

        staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($u10, 4);

     label05:
        i = new java.util.ArrayList;

        specialinvoke i.<java.util.ArrayList: void <init>()>();

        $u-1#6 = $u11 & 1;

        if $u-1#6 == 0 goto label06;

        $u6 = <androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_WEB_URL>;

        $u-1#23 = newarray (java.lang.String)[3];

        $u-1#23[0] = "http://";

        $u-1#23[1] = "https://";

        $u-1#23[2] = "rtsp://";

        $u8 = <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter>;

        staticinvoke <androidx.core.text.util.LinkifyCompat: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(i, $u10, $u6, $u-1#23, $u8, null);

     label06:
        $u-1#6 = $u11 & 2;

        if $u-1#6 == 0 goto label07;

        $u6 = <androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS>;

        $u-1#23 = newarray (java.lang.String)[1];

        $u-1#23[0] = "mailto:";

        staticinvoke <androidx.core.text.util.LinkifyCompat: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(i, $u10, $u6, $u-1#23, null, null);

     label07:
        $u11 = $u11 & 8;

        if $u11 == 0 goto label08;

        staticinvoke <androidx.core.text.util.LinkifyCompat: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)>(i, $u10);

     label08:
        staticinvoke <androidx.core.text.util.LinkifyCompat: void pruneOverlaps(java.util.ArrayList,android.text.Spannable)>(i, $u10);

        $u11 = virtualinvoke i.<java.util.ArrayList: int size()>();

        if $u11 != 0 goto label09;

        return 0;

     label09:
        $u-1#41 = virtualinvoke i.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $u-1 = interfaceinvoke $u-1#41.<java.util.Iterator: boolean hasNext()>();

        if $u-1 == 0 goto label11;

        $u-1#45 = interfaceinvoke $u-1#41.<java.util.Iterator: java.lang.Object next()>();

        link#47 = (androidx.core.text.util.LinkifyCompat$LinkSpec) $u-1#45;

        link = link#47.<androidx.core.text.util.LinkifyCompat$LinkSpec: android.text.style.URLSpan frameworkAddedSpan>;

        if link != null goto label10;

        $u5 = link#47.<androidx.core.text.util.LinkifyCompat$LinkSpec: java.lang.String url>;

        $u11 = link#47.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        $u-1#6 = link#47.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        staticinvoke <androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>($u5, $u11, $u-1#6, $u10);

        goto label10;

     label11:
        return 1;
    }

    public static boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String)
    {
        android.text.Spannable $u7;
        java.util.regex.Pattern $u8;
        java.lang.String $u9;
        boolean $u-1;

        $u7 := @parameter0: android.text.Spannable;

        $u8 := @parameter1: java.util.regex.Pattern;

        $u9 := @parameter2: java.lang.String;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label1;

        $u-1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>($u7, $u8, $u9);

        return $u-1;

     label1:
        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, null, null, null);

        return $u-1;
    }

    public static boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.text.Spannable $u7;
        java.util.regex.Pattern $u8;
        java.lang.String $u9;
        android.text.util.Linkify$MatchFilter $u10;
        android.text.util.Linkify$TransformFilter $u11;
        boolean $u-1;

        $u7 := @parameter0: android.text.Spannable;

        $u8 := @parameter1: java.util.regex.Pattern;

        $u9 := @parameter2: java.lang.String;

        $u10 := @parameter3: android.text.util.Linkify$MatchFilter;

        $u11 := @parameter4: android.text.util.Linkify$TransformFilter;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label1;

        $u-1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, $u10, $u11);

        return $u-1;

     label1:
        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u7, $u8, $u9, null, $u10, $u11);

        return $u-1;
    }

    public static boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.text.Spannable $u8;
        java.util.regex.Pattern $u9;
        android.text.util.Linkify$MatchFilter $u12;
        android.text.util.Linkify$TransformFilter $u13;
        java.lang.String $u10;
        java.lang.String[] $u11, schemesCopy;
        boolean $u-1, $u-1#25;
        int index, scheme;
        java.util.Locale index#12;
        java.util.regex.Matcher $u-1#23;

        $u8 := @parameter0: android.text.Spannable;

        $u9 := @parameter1: java.util.regex.Pattern;

        $u10 := @parameter2: java.lang.String;

        $u11 := @parameter3: java.lang.String[];

        $u12 := @parameter4: android.text.util.Linkify$MatchFilter;

        $u13 := @parameter5: android.text.util.Linkify$TransformFilter;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label01;

        $u-1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($u8, $u9, $u10, $u11, $u12, $u13);

        return $u-1;

     label01:
        if $u10 != null goto label02;

        $u10 = "";

     label02:
        if $u11 == null goto label03;

        index = lengthof $u11;

        if index >= 1 goto label04;

     label03:
        $u11 = <androidx.core.text.util.LinkifyCompat: java.lang.String[] EMPTY_STRING>;

     label04:
        index = lengthof $u11;

        index = index + 1;

        schemesCopy = newarray (java.lang.String)[index];

        index#12 = <java.util.Locale: java.util.Locale ROOT>;

        $u10 = virtualinvoke $u10.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(index#12);

        schemesCopy[0] = $u10;

        index = 0;

     label05:
        scheme = lengthof $u11;

        if index >= scheme goto label08;

        $u10 = $u11[index];

        scheme = index + 1;

        if $u10 != null goto label06;

        $u10 = "";

        goto label07;

     label06:
        index#12 = <java.util.Locale: java.util.Locale ROOT>;

        $u10 = virtualinvoke $u10.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(index#12);

     label07:
        schemesCopy[scheme] = $u10;

        index = index + 1;

        goto label05;

     label08:
        $u-1 = 0;

        $u-1#23 = virtualinvoke $u9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($u8);

     label09:
        $u-1#25 = virtualinvoke $u-1#23.<java.util.regex.Matcher: boolean find()>();

        if $u-1#25 == 0 goto label11;

        index = virtualinvoke $u-1#23.<java.util.regex.Matcher: int start()>();

        scheme = virtualinvoke $u-1#23.<java.util.regex.Matcher: int end()>();

        $u-1#25 = 1;

        if $u12 == null goto label10;

        $u-1#25 = interfaceinvoke $u12.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>($u8, index, scheme);

     label10:
        if $u-1#25 == 0 goto label09;

        $u10 = virtualinvoke $u-1#23.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $u10 = staticinvoke <androidx.core.text.util.LinkifyCompat: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($u10, schemesCopy, $u-1#23, $u13);

        staticinvoke <androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>($u10, index, scheme, $u8);

        $u-1 = 1;

        goto label09;

     label11:
        return $u-1;
    }

    public static boolean addLinks(android.widget.TextView, int)
    {
        android.widget.TextView $u5;
        int $u6;
        boolean $u-1;
        java.lang.CharSequence $u-1#6;
        android.text.Spannable s;
        android.text.SpannableString $u-1#12;

        $u5 := @parameter0: android.widget.TextView;

        $u6 := @parameter1: int;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>();

        if $u-1 == 0 goto label1;

        $u-1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>($u5, $u6);

        return $u-1;

     label1:
        if $u6 != 0 goto label2;

        return 0;

     label2:
        $u-1#6 = virtualinvoke $u5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $u-1 = $u-1#6 instanceof android.text.Spannable;

        if $u-1 == 0 goto label4;

        s = (android.text.Spannable) $u-1#6;

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>(s, $u6);

        if $u-1 == 0 goto label3;

        staticinvoke <androidx.core.text.util.LinkifyCompat: void addLinkMovementMethod(android.widget.TextView)>($u5);

        return 1;

     label3:
        return 0;

     label4:
        $u-1#12 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($u-1#6);

        $u-1 = staticinvoke <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>($u-1#12, $u6);

        if $u-1 == 0 goto label5;

        staticinvoke <androidx.core.text.util.LinkifyCompat: void addLinkMovementMethod(android.widget.TextView)>($u5);

        virtualinvoke $u5.<android.widget.TextView: void setText(java.lang.CharSequence)>($u-1#12);

        return 1;

     label5:
        return 0;
    }

    private static void applyLink(java.lang.String, int, int, android.text.Spannable)
    {
        java.lang.String $u2;
        int $u3, $u4;
        android.text.Spannable $u5;
        android.text.style.URLSpan span;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: android.text.Spannable;

        span = new android.text.style.URLSpan;

        specialinvoke span.<android.text.style.URLSpan: void <init>(java.lang.String)>($u2);

        interfaceinvoke $u5.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(span, $u3, $u4, 33);

        return;
    }

    private static java.lang.String findAddress(java.lang.String)
    {
        java.lang.String $u2;
        int $u0;

        $u2 := @parameter0: java.lang.String;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 28 goto label1;

        $u2 = staticinvoke <android.webkit.WebView: java.lang.String findAddress(java.lang.String)>($u2);

        return $u2;

     label1:
        $u2 = staticinvoke <androidx.core.text.util.FindAddress: java.lang.String findAddress(java.lang.String)>($u2);

        return $u2;
    }

    private static void gatherLinks(java.util.ArrayList, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        java.util.ArrayList links;
        android.text.Spannable $u6;
        java.util.regex.Pattern $u7;
        java.lang.String[] $u8;
        android.text.util.Linkify$MatchFilter $u9;
        android.text.util.Linkify$TransformFilter $u10;
        java.util.regex.Matcher $u-1;
        boolean $u-1#2;
        int $u-1#4, $u-1#6;
        androidx.core.text.util.LinkifyCompat$LinkSpec spec;
        java.lang.String $u-1#11;

        links := @parameter0: java.util.ArrayList;

        $u6 := @parameter1: android.text.Spannable;

        $u7 := @parameter2: java.util.regex.Pattern;

        $u8 := @parameter3: java.lang.String[];

        $u9 := @parameter4: android.text.util.Linkify$MatchFilter;

        $u10 := @parameter5: android.text.util.Linkify$TransformFilter;

        $u-1 = virtualinvoke $u7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($u6);

     label1:
        $u-1#2 = virtualinvoke $u-1.<java.util.regex.Matcher: boolean find()>();

        if $u-1#2 == 0 goto label3;

        $u-1#4 = virtualinvoke $u-1.<java.util.regex.Matcher: int start()>();

        $u-1#6 = virtualinvoke $u-1.<java.util.regex.Matcher: int end()>();

        if $u9 == null goto label2;

        $u-1#2 = interfaceinvoke $u9.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>($u6, $u-1#4, $u-1#6);

        if $u-1#2 == 0 goto label1;

     label2:
        spec = new androidx.core.text.util.LinkifyCompat$LinkSpec;

        specialinvoke spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: void <init>()>();

        $u-1#11 = virtualinvoke $u-1.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $u-1#11 = staticinvoke <androidx.core.text.util.LinkifyCompat: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($u-1#11, $u8, $u-1, $u10);

        spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: java.lang.String url> = $u-1#11;

        spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start> = $u-1#4;

        spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end> = $u-1#6;

        virtualinvoke links.<java.util.ArrayList: boolean add(java.lang.Object)>(spec);

        goto label1;

     label3:
        return;
    }

    private static void gatherMapLinks(java.util.ArrayList, android.text.Spannable)
    {
        java.util.ArrayList links;
        android.text.Spannable $u11;
        androidx.core.text.util.LinkifyCompat$LinkSpec spec;
        int end, base, $u-1#6;
        java.lang.String $u-1, $u-1#4;
        java.lang.StringBuilder e;
        java.io.UnsupportedEncodingException e#21;
        java.lang.UnsupportedOperationException start;

        links := @parameter0: java.util.ArrayList;

        $u11 := @parameter1: android.text.Spannable;

        $u-1 = virtualinvoke $u11.<java.lang.Object: java.lang.String toString()>();

        base = 0;

     label01:
        $u-1#4 = staticinvoke <androidx.core.text.util.LinkifyCompat: java.lang.String findAddress(java.lang.String)>($u-1);

     label02:
        if $u-1#4 == null goto label17;

     label03:
        $u-1#6 = virtualinvoke $u-1.<java.lang.String: int indexOf(java.lang.String)>($u-1#4);

     label04:
        if $u-1#6 >= 0 goto label05;

        goto label17;

     label05:
        spec = new androidx.core.text.util.LinkifyCompat$LinkSpec;

     label06:
        specialinvoke spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: void <init>()>();

        end = virtualinvoke $u-1#4.<java.lang.String: int length()>();

     label07:
        end = $u-1#6 + end;

        $u-1#6 = base + $u-1#6;

        spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start> = $u-1#6;

        $u-1#6 = base + end;

        spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end> = $u-1#6;

     label08:
        $u-1 = virtualinvoke $u-1.<java.lang.String: java.lang.String substring(int)>(end);

     label09:
        base = base + end;

     label10:
        $u-1#4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($u-1#4, "UTF-8");

     label11:
        e = new java.lang.StringBuilder;

     label12:
        specialinvoke e.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke e.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo:0,0?q=");

        virtualinvoke e.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#4);

        $u-1#4 = virtualinvoke e.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        spec.<androidx.core.text.util.LinkifyCompat$LinkSpec: java.lang.String url> = $u-1#4;

     label14:
        virtualinvoke links.<java.util.ArrayList: boolean add(java.lang.Object)>(spec);

     label15:
        goto label01;

     label16:
        e#21 := @caughtexception;

        goto label01;

     label17:
        return;

     label18:
        start := @caughtexception;

        return;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label18;
        catch java.lang.UnsupportedOperationException from label03 to label04 with label18;
        catch java.lang.UnsupportedOperationException from label06 to label07 with label18;
        catch java.lang.UnsupportedOperationException from label08 to label09 with label18;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label16;
        catch java.lang.UnsupportedOperationException from label10 to label11 with label18;
        catch java.lang.UnsupportedOperationException from label12 to label13 with label18;
        catch java.lang.UnsupportedOperationException from label14 to label15 with label18;
    }

    private static java.lang.String makeUrl(java.lang.String, java.lang.String[], java.util.regex.Matcher, android.text.util.Linkify$TransformFilter)
    {
        java.lang.String[] $u9;
        java.util.regex.Matcher $u10;
        android.text.util.Linkify$TransformFilter $u11;
        java.lang.String $u8, $u3, $u0#11;
        boolean hasPrefix, $u-1;
        int i, $u0;
        java.lang.StringBuilder $u0#27;

        $u8 := @parameter0: java.lang.String;

        $u9 := @parameter1: java.lang.String[];

        $u10 := @parameter2: java.util.regex.Matcher;

        $u11 := @parameter3: android.text.util.Linkify$TransformFilter;

        if $u11 == null goto label1;

        $u8 = interfaceinvoke $u11.<android.text.util.Linkify$TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>($u10, $u8);

     label1:
        hasPrefix = 0;

        i = 0;

     label2:
        $u0 = lengthof $u9;

        if i >= $u0 goto label4;

        $u3 = $u9[i];

        $u0#11 = $u9[i];

        $u0 = virtualinvoke $u0#11.<java.lang.String: int length()>();

        $u-1 = virtualinvoke $u8.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, $u3, 0, $u0);

        if $u-1 == 0 goto label3;

        hasPrefix = 1;

        $u3 = $u9[i];

        $u0#11 = $u9[i];

        $u0 = virtualinvoke $u0#11.<java.lang.String: int length()>();

        $u-1 = virtualinvoke $u8.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(0, 0, $u3, 0, $u0);

        if $u-1 != 0 goto label4;

        $u0#27 = new java.lang.StringBuilder;

        specialinvoke $u0#27.<java.lang.StringBuilder: void <init>()>();

        $u3 = $u9[i];

        virtualinvoke $u0#27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u3);

        $u3 = $u9[i];

        i = virtualinvoke $u3.<java.lang.String: int length()>();

        $u8 = virtualinvoke $u8.<java.lang.String: java.lang.String substring(int)>(i);

        virtualinvoke $u0#27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u8);

        $u8 = virtualinvoke $u0#27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        i = i + 1;

        goto label2;

     label4:
        if hasPrefix != 0 goto label5;

        i = lengthof $u9;

        if i <= 0 goto label5;

        $u0#27 = new java.lang.StringBuilder;

        specialinvoke $u0#27.<java.lang.StringBuilder: void <init>()>();

        $u3 = $u9[0];

        virtualinvoke $u0#27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u3);

        virtualinvoke $u0#27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u8);

        $u8 = virtualinvoke $u0#27.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return $u8;
    }

    private static void pruneOverlaps(java.util.ArrayList, android.text.Spannable)
    {
        java.util.ArrayList links;
        android.text.Spannable $u10;
        int $u-1, spec, a#22, span, $u7, $u8;
        java.lang.Object[] $u-1#5;
        android.text.style.URLSpan[] urlSpans;
        androidx.core.text.util.LinkifyCompat$LinkSpec spec#10, b;
        android.text.style.URLSpan a;
        java.util.Comparator i;
        java.lang.Object $u-1#23;

        links := @parameter0: java.util.ArrayList;

        $u10 := @parameter1: android.text.Spannable;

        $u-1 = interfaceinvoke $u10.<android.text.Spannable: int length()>();

        $u-1#5 = interfaceinvoke $u10.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $u-1, class "Landroid/text/style/URLSpan;");

        urlSpans = (android.text.style.URLSpan[]) $u-1#5;

        $u-1 = 0;

     label1:
        spec = lengthof urlSpans;

        if $u-1 >= spec goto label2;

        spec#10 = new androidx.core.text.util.LinkifyCompat$LinkSpec;

        specialinvoke spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: void <init>()>();

        a = urlSpans[$u-1];

        spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: android.text.style.URLSpan frameworkAddedSpan> = a;

        a = urlSpans[$u-1];

        spec = interfaceinvoke $u10.<android.text.Spannable: int getSpanStart(java.lang.Object)>(a);

        spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start> = spec;

        a = urlSpans[$u-1];

        spec = interfaceinvoke $u10.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(a);

        spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end> = spec;

        virtualinvoke links.<java.util.ArrayList: boolean add(java.lang.Object)>(spec#10);

        $u-1 = $u-1 + 1;

        goto label1;

     label2:
        i = <androidx.core.text.util.LinkifyCompat: java.util.Comparator COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(links, i);

        $u-1 = virtualinvoke links.<java.util.ArrayList: int size()>();

        spec = 0;

     label3:
        a#22 = $u-1 + -1;

        if spec >= a#22 goto label9;

        $u-1#23 = virtualinvoke links.<java.util.ArrayList: java.lang.Object get(int)>(spec);

        spec#10 = (androidx.core.text.util.LinkifyCompat$LinkSpec) $u-1#23;

        a#22 = spec + 1;

        $u-1#23 = virtualinvoke links.<java.util.ArrayList: java.lang.Object get(int)>(a#22);

        b = (androidx.core.text.util.LinkifyCompat$LinkSpec) $u-1#23;

        a#22 = -1;

        span = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        $u7 = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        if span > $u7 goto label8;

        span = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        $u7 = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        if span <= $u7 goto label8;

        span = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        $u7 = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        if span > $u7 goto label4;

        a#22 = spec + 1;

        goto label6;

     label4:
        span = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        $u7 = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        span = span - $u7;

        $u7 = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        $u8 = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        $u7 = $u7 - $u8;

        if span <= $u7 goto label5;

        a#22 = spec + 1;

        goto label6;

     label5:
        span = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        $u7 = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        span = span - $u7;

        $u7 = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int end>;

        $u8 = b.<androidx.core.text.util.LinkifyCompat$LinkSpec: int start>;

        $u7 = $u7 - $u8;

        if span >= $u7 goto label6;

        a#22 = spec;

     label6:
        if a#22 == -1 goto label8;

        $u-1#23 = virtualinvoke links.<java.util.ArrayList: java.lang.Object get(int)>(a#22);

        spec#10 = (androidx.core.text.util.LinkifyCompat$LinkSpec) $u-1#23;

        a = spec#10.<androidx.core.text.util.LinkifyCompat$LinkSpec: android.text.style.URLSpan frameworkAddedSpan>;

        if a == null goto label7;

        interfaceinvoke $u10.<android.text.Spannable: void removeSpan(java.lang.Object)>(a);

     label7:
        virtualinvoke links.<java.util.ArrayList: java.lang.Object remove(int)>(a#22);

        $u-1 = $u-1 + -1;

        goto label3;

     label8:
        spec = spec + 1;

        goto label3;

     label9:
        return;
    }

    private static boolean shouldAddLinksFallbackToFramework()
    {
        int $u0;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 28 goto label1;

        return 1;

     label1:
        return 0;
    }
}
