public class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat extends java.lang.Object implements android.view.animation.Interpolator
{
    public static final double EPSILON;
    public static final int MAX_NUM_POINTS;
    private static final float PRECISION;
    private float[] mX;
    private float[] mY;

    public void <init>(android.content.Context, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        android.content.Context $u3;
        android.util.AttributeSet $u4;
        org.xmlpull.v1.XmlPullParser $u5;
        android.content.res.Resources $u-1;
        android.content.res.Resources$Theme $u-1#2;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: android.util.AttributeSet;

        $u5 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u-1 = virtualinvoke $u3.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#2 = virtualinvoke $u3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($u-1, $u-1#2, $u4, $u5);

        return;
    }

    public void <init>(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        android.content.res.Resources $u2;
        android.content.res.Resources$Theme $u3;
        android.util.AttributeSet $u4;
        org.xmlpull.v1.XmlPullParser $u5;
        android.content.res.TypedArray $u-1;
        int[] a;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u2 := @parameter0: android.content.res.Resources;

        $u3 := @parameter1: android.content.res.Resources$Theme;

        $u4 := @parameter2: android.util.AttributeSet;

        $u5 := @parameter3: org.xmlpull.v1.XmlPullParser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        a = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR>;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u2, $u3, $u4, a);

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>($u-1, $u5);

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void initCubic(float, float, float, float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        float $u9, $u10, $u11, $u12;
        android.graphics.Path path;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u9 := @parameter0: float;

        $u10 := @parameter1: float;

        $u11 := @parameter2: float;

        $u12 := @parameter3: float;

        path = new android.graphics.Path;

        specialinvoke path.<android.graphics.Path: void <init>()>();

        virtualinvoke path.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke path.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($u9, $u10, $u11, $u12, 1.0F, 1.0F);

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>(path);

        return;
    }

    private void initPath(android.graphics.Path)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        android.graphics.Path $u13;
        android.graphics.PathMeasure pathMeasure;
        float $u-1, numPoints, componentIndex1#19;
        int numPoints#5, i, componentIndex1;
        float[] position, componentIndex1#22;
        double i#30;
        byte componentIndex;
        java.lang.IllegalArgumentException distance;
        java.lang.StringBuilder $u9;
        java.lang.String $u-1#66;
        boolean $u-1#68;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u13 := @parameter0: android.graphics.Path;

        pathMeasure = new android.graphics.PathMeasure;

        specialinvoke pathMeasure.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($u13, 0);

        $u-1 = virtualinvoke pathMeasure.<android.graphics.PathMeasure: float getLength()>();

        numPoints = $u-1 / 0.002F;

        numPoints#5 = (int) numPoints;

        numPoints#5 = numPoints#5 + 1;

        numPoints#5 = staticinvoke <java.lang.Math: int min(int,int)>(3000, numPoints#5);

        if numPoints#5 <= 0 goto label8;

        position = newarray (float)[numPoints#5];

        this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX> = position;

        position = newarray (float)[numPoints#5];

        this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY> = position;

        position = newarray (float)[2];

        i = 0;

     label1:
        if i >= numPoints#5 goto label2;

        numPoints = (float) i;

        numPoints = numPoints * $u-1;

        componentIndex1 = numPoints#5 + -1;

        componentIndex1#19 = (float) componentIndex1;

        numPoints = numPoints / componentIndex1#19;

        virtualinvoke pathMeasure.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>(numPoints, position, null);

        componentIndex1#22 = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        numPoints = position[0];

        componentIndex1#22[i] = numPoints;

        componentIndex1#22 = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        numPoints = position[1];

        componentIndex1#22[i] = numPoints;

        i = i + 1;

        goto label1;

     label2:
        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $u-1 = position[0];

        $u-1 = staticinvoke <java.lang.Math: float abs(float)>($u-1);

        i#30 = (double) $u-1;

        componentIndex = i#30 cmpl 1.0E-5;

        if componentIndex > 0 goto label7;

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $u-1 = position[0];

        $u-1 = staticinvoke <java.lang.Math: float abs(float)>($u-1);

        i#30 = (double) $u-1;

        componentIndex = i#30 cmpl 1.0E-5;

        if componentIndex > 0 goto label7;

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        i = numPoints#5 + -1;

        $u-1 = position[i];

        $u-1 = $u-1 - 1.0F;

        $u-1 = staticinvoke <java.lang.Math: float abs(float)>($u-1);

        i#30 = (double) $u-1;

        componentIndex = i#30 cmpl 1.0E-5;

        if componentIndex > 0 goto label7;

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        i = numPoints#5 + -1;

        $u-1 = position[i];

        $u-1 = $u-1 - 1.0F;

        $u-1 = staticinvoke <java.lang.Math: float abs(float)>($u-1);

        i#30 = (double) $u-1;

        componentIndex = i#30 cmpl 1.0E-5;

        if componentIndex > 0 goto label7;

        $u-1 = 0.0F;

        i = 0;

        componentIndex1 = 0;

     label3:
        if componentIndex1 >= numPoints#5 goto label5;

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        numPoints = position[i];

        componentIndex = numPoints cmpg $u-1;

        if componentIndex < 0 goto label4;

        position[componentIndex1] = numPoints;

        $u-1 = numPoints;

        componentIndex1 = componentIndex1 + 1;

        i = i + 1;

        goto label3;

     label4:
        distance = new java.lang.IllegalArgumentException;

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path cannot loop back on itself, x :");

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(numPoints);

        $u-1#66 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke distance.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#66);

        throw distance;

     label5:
        $u-1#68 = virtualinvoke pathMeasure.<android.graphics.PathMeasure: boolean nextContour()>();

        if $u-1#68 != 0 goto label6;

        return;

     label6:
        distance = new java.lang.IllegalArgumentException;

        specialinvoke distance.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path should be continuous, can\'t have 2+ contours");

        throw distance;

     label7:
        distance = new java.lang.IllegalArgumentException;

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path must start at (0,0) and end at (1,1) start: ");

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $u-1 = position[0];

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u-1);

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $u-1 = position[0];

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u-1);

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end:");

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        i = numPoints#5 + -1;

        $u-1 = position[i];

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u-1);

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        position = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        numPoints#5 = numPoints#5 + -1;

        $u-1 = position[numPoints#5];

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u-1);

        $u-1#66 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke distance.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#66);

        throw distance;

     label8:
        distance = new java.lang.IllegalArgumentException;

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path has a invalid length ");

        virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u-1);

        $u-1#66 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke distance.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#66);

        goto label9;

     label9:
        throw distance;
    }

    private void initQuad(float, float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        float $u3, $u4;
        android.graphics.Path path;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u3 := @parameter0: float;

        $u4 := @parameter1: float;

        path = new android.graphics.Path;

        specialinvoke path.<android.graphics.Path: void <init>()>();

        virtualinvoke path.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke path.<android.graphics.Path: void quadTo(float,float,float,float)>($u3, $u4, 1.0F, 1.0F);

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>(path);

        return;
    }

    private void parseInterpolatorFromTypeArray(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        android.content.res.TypedArray $u9;
        org.xmlpull.v1.XmlPullParser $u10;
        boolean $u-1, $u-1#30;
        java.lang.String $u-1#5;
        android.graphics.Path $u-1#7;
        android.view.InflateException x2;
        java.lang.StringBuilder y2;
        float $u-1#22, $u-1#25, $u-1#32, $u-1#35;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u9 := @parameter0: android.content.res.TypedArray;

        $u10 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u10, "pathData");

        if $u-1 == 0 goto label2;

        $u-1#5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($u9, $u10, "pathData", 4);

        $u-1#7 = staticinvoke <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>($u-1#5);

        if $u-1#7 == null goto label1;

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($u-1#7);

        return;

     label1:
        x2 = new android.view.InflateException;

        y2 = new java.lang.StringBuilder;

        specialinvoke y2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke y2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The path is null, which is created from ");

        virtualinvoke y2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#5);

        $u-1#5 = virtualinvoke y2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke x2.<android.view.InflateException: void <init>(java.lang.String)>($u-1#5);

        throw x2;

     label2:
        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u10, "controlX1");

        if $u-1 == 0 goto label6;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u10, "controlY1");

        if $u-1 == 0 goto label5;

        $u-1#22 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u9, $u10, "controlX1", 0, 0.0F);

        $u-1#25 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u9, $u10, "controlY1", 1, 0.0F);

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u10, "controlX2");

        $u-1#30 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u10, "controlY2");

        if $u-1 != $u-1#30 goto label4;

        if $u-1 != 0 goto label3;

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)>($u-1#22, $u-1#25);

        return;

     label3:
        $u-1#32 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u9, $u10, "controlX2", 2, 0.0F);

        $u-1#35 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u9, $u10, "controlY2", 3, 0.0F);

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)>($u-1#22, $u-1#25, $u-1#32, $u-1#35);

        return;

     label4:
        x2 = new android.view.InflateException;

        specialinvoke x2.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires both controlX2 and controlY2 for cubic Beziers.");

        throw x2;

     label5:
        x2 = new android.view.InflateException;

        specialinvoke x2.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlY1 attribute");

        throw x2;

     label6:
        x2 = new android.view.InflateException;

        specialinvoke x2.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlX1 attribute");

        throw x2;
    }

    public float getInterpolation(float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat this;
        float $u9, endY, endY#18;
        byte startIndex;
        int startIndex#5, endIndex#7, midIndex;
        float[] endIndex;

        this := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $u9 := @parameter0: float;

        startIndex = $u9 cmpg 0.0F;

        if startIndex > 0 goto label1;

        return 0.0F;

     label1:
        startIndex = $u9 cmpl 1.0F;

        if startIndex < 0 goto label2;

        return 1.0F;

     label2:
        startIndex#5 = 0;

        endIndex = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        endIndex#7 = lengthof endIndex;

        endIndex#7 = endIndex#7 - 1;

     label3:
        midIndex = endIndex#7 - startIndex#5;

        if midIndex <= 1 goto label5;

        midIndex = startIndex#5 + endIndex#7;

        midIndex = midIndex / 2;

        endIndex = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        endY = endIndex[midIndex];

        startIndex = $u9 cmpg endY;

        if startIndex >= 0 goto label4;

        endIndex#7 = midIndex;

        goto label3;

     label4:
        startIndex#5 = midIndex;

        goto label3;

     label5:
        endIndex = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        endY = endIndex[endIndex#7];

        endY#18 = endIndex[startIndex#5];

        endY = endY - endY#18;

        startIndex = endY cmpl 0.0F;

        if startIndex != 0 goto label6;

        endIndex = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $u9 = endIndex[startIndex#5];

        return $u9;

     label6:
        endY#18 = endIndex[startIndex#5];

        $u9 = $u9 - endY#18;

        endY = $u9 / endY;

        endIndex = this.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $u9 = endIndex[startIndex#5];

        endY#18 = endIndex[endIndex#7];

        endY#18 = endY#18 - $u9;

        endY = endY#18 * endY;

        $u9 = endY + $u9;

        return $u9;
    }

    public static void <clinit>()
    {
        <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float PRECISION> = 0.002F;

        <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: int MAX_NUM_POINTS> = 3000;

        <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: double EPSILON> = 1.0E-5;

        return;
    }
}
