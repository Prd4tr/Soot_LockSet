class androidx.appcompat.widget.TooltipCompatHandler extends java.lang.Object implements android.view.View$OnLongClickListener, android.view.View$OnHoverListener, android.view.View$OnAttachStateChangeListener
{
    private static final long HOVER_HIDE_TIMEOUT_MS;
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS;
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS;
    private static final java.lang.String TAG;
    private static androidx.appcompat.widget.TooltipCompatHandler sActiveHandler;
    private static androidx.appcompat.widget.TooltipCompatHandler sPendingHandler;
    private final android.view.View mAnchor;
    private int mAnchorX;
    private int mAnchorY;
    private boolean mFromTouch;
    private final java.lang.Runnable mHideRunnable;
    private final int mHoverSlop;
    private androidx.appcompat.widget.TooltipPopup mPopup;
    private final java.lang.Runnable mShowRunnable;
    private final java.lang.CharSequence mTooltipText;

    private void <init>(android.view.View, java.lang.CharSequence)
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u2;
        java.lang.CharSequence $u3;
        androidx.appcompat.widget.TooltipCompatHandler$1 $u0;
        androidx.appcompat.widget.TooltipCompatHandler$2 $u0#2;
        android.content.Context $u-1;
        android.view.ViewConfiguration $u-1#5;
        int $u-1#7;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: java.lang.CharSequence;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new androidx.appcompat.widget.TooltipCompatHandler$1;

        specialinvoke $u0.<androidx.appcompat.widget.TooltipCompatHandler$1: void <init>(androidx.appcompat.widget.TooltipCompatHandler)>(this);

        this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable> = $u0;

        $u0#2 = new androidx.appcompat.widget.TooltipCompatHandler$2;

        specialinvoke $u0#2.<androidx.appcompat.widget.TooltipCompatHandler$2: void <init>(androidx.appcompat.widget.TooltipCompatHandler)>(this);

        this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable> = $u0#2;

        this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor> = $u2;

        this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText> = $u3;

        $u-1 = virtualinvoke $u2.<android.view.View: android.content.Context getContext()>();

        $u-1#5 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u-1);

        $u-1#7 = staticinvoke <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>($u-1#5);

        this.<androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop> = $u-1#7;

        specialinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()>();

        $u2 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $u2.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(this);

        $u2 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $u2.<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)>(this);

        return;
    }

    private void cancelPendingShow()
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u0;
        java.lang.Runnable $u1;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u0 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u1 = this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable>;

        virtualinvoke $u0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u1);

        return;
    }

    private void clearAnchorPos()
    {
        androidx.appcompat.widget.TooltipCompatHandler this;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX> = 2147483647;

        this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY> = 2147483647;

        return;
    }

    private void scheduleShow()
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u0;
        java.lang.Runnable $u1;
        int $u-1;
        long $u2;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u0 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u1 = this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable>;

        $u-1 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $u2 = (long) $u-1;

        virtualinvoke $u0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($u1, $u2);

        return;
    }

    private static void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
    {
        androidx.appcompat.widget.TooltipCompatHandler $u1, $u0;

        $u1 := @parameter0: androidx.appcompat.widget.TooltipCompatHandler;

        $u0 = <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler>;

        if $u0 == null goto label1;

        specialinvoke $u0.<androidx.appcompat.widget.TooltipCompatHandler: void cancelPendingShow()>();

     label1:
        <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler> = $u1;

        if $u1 == null goto label2;

        specialinvoke $u1.<androidx.appcompat.widget.TooltipCompatHandler: void scheduleShow()>();

     label2:
        return;
    }

    public static void setTooltipText(android.view.View, java.lang.CharSequence)
    {
        android.view.View $u3, $u2;
        java.lang.CharSequence $u4;
        boolean $u-1;
        androidx.appcompat.widget.TooltipCompatHandler $u0;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: java.lang.CharSequence;

        $u0 = <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler>;

        if $u0 == null goto label1;

        $u2 = $u0.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        if $u2 != $u3 goto label1;

        staticinvoke <androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)>(null);

     label1:
        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u4);

        if $u-1 == 0 goto label3;

        $u0 = <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler>;

        if $u0 == null goto label2;

        $u2 = $u0.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        if $u2 != $u3 goto label2;

        virtualinvoke $u0.<androidx.appcompat.widget.TooltipCompatHandler: void hide()>();

     label2:
        virtualinvoke $u3.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(null);

        virtualinvoke $u3.<android.view.View: void setLongClickable(boolean)>(0);

        virtualinvoke $u3.<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)>(null);

        return;

     label3:
        $u0 = new androidx.appcompat.widget.TooltipCompatHandler;

        specialinvoke $u0.<androidx.appcompat.widget.TooltipCompatHandler: void <init>(android.view.View,java.lang.CharSequence)>($u3, $u4);

        return;
    }

    private boolean updateAnchorPos(android.view.MotionEvent)
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.MotionEvent $u5;
        float $u-1;
        int newAnchorX, newAnchorY, $u2, $u3;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u5 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: float getX()>();

        newAnchorX = (int) $u-1;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: float getY()>();

        newAnchorY = (int) $u-1;

        $u2 = this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX>;

        $u2 = newAnchorX - $u2;

        $u2 = staticinvoke <java.lang.Math: int abs(int)>($u2);

        $u3 = this.<androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop>;

        if $u2 > $u3 goto label1;

        $u2 = this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY>;

        $u2 = newAnchorY - $u2;

        $u2 = staticinvoke <java.lang.Math: int abs(int)>($u2);

        $u3 = this.<androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop>;

        if $u2 > $u3 goto label1;

        return 0;

     label1:
        this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX> = newAnchorX;

        this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY> = newAnchorY;

        return 1;
    }

    void hide()
    {
        androidx.appcompat.widget.TooltipCompatHandler this, $u0;
        androidx.appcompat.widget.TooltipPopup $u0#3;
        android.view.View $u0#4;
        java.lang.Runnable $u1;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u0 = <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler>;

        if $u0 != this goto label2;

        <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler> = null;

        $u0#3 = this.<androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup>;

        if $u0#3 == null goto label1;

        virtualinvoke $u0#3.<androidx.appcompat.widget.TooltipPopup: void hide()>();

        this.<androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup> = null;

        specialinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()>();

        $u0#4 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $u0#4.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(this);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TooltipCompatHandler", "sActiveHandler.mPopup == null");

     label2:
        $u0 = <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler>;

        if $u0 != this goto label3;

        staticinvoke <androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)>(null);

     label3:
        $u0#4 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u1 = this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable>;

        virtualinvoke $u0#4.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u1);

        return;
    }

    public boolean onHover(android.view.View, android.view.MotionEvent)
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u5;
        android.view.MotionEvent $u6;
        androidx.appcompat.widget.TooltipPopup manager;
        boolean manager#2;
        android.content.Context $u-1;
        java.lang.Object $u-1#7;
        android.view.accessibility.AccessibilityManager manager#9;
        int $u-1#14;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: android.view.MotionEvent;

        manager = this.<androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup>;

        if manager == null goto label1;

        manager#2 = this.<androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch>;

        if manager#2 == 0 goto label1;

        return 0;

     label1:
        $u5 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u-1 = virtualinvoke $u5.<android.view.View: android.content.Context getContext()>();

        $u-1#7 = virtualinvoke $u-1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        manager#9 = (android.view.accessibility.AccessibilityManager) $u-1#7;

        manager#2 = virtualinvoke manager#9.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if manager#2 == 0 goto label2;

        manager#2 = virtualinvoke manager#9.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if manager#2 == 0 goto label2;

        return 0;

     label2:
        $u-1#14 = virtualinvoke $u6.<android.view.MotionEvent: int getAction()>();

        if $u-1#14 == 7 goto label4;

        if $u-1#14 == 10 goto label3;

        return 0;

     label3:
        specialinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()>();

        virtualinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: void hide()>();

        return 0;

     label4:
        $u5 = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        manager#2 = virtualinvoke $u5.<android.view.View: boolean isEnabled()>();

        if manager#2 == 0 goto label5;

        manager = this.<androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup>;

        if manager != null goto label5;

        manager#2 = specialinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: boolean updateAnchorPos(android.view.MotionEvent)>($u6);

        if manager#2 == 0 goto label5;

        staticinvoke <androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)>(this);

     label5:
        return 0;
    }

    public boolean onLongClick(android.view.View)
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u2;
        int $u-1;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u2 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u2.<android.view.View: int getWidth()>();

        $u-1 = $u-1 / 2;

        this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX> = $u-1;

        $u-1 = virtualinvoke $u2.<android.view.View: int getHeight()>();

        $u-1 = $u-1 / 2;

        this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY> = $u-1;

        virtualinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: void show(boolean)>(1);

        return 1;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u1;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u1 := @parameter0: android.view.View;

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        androidx.appcompat.widget.TooltipCompatHandler this;
        android.view.View $u1;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u1 := @parameter0: android.view.View;

        virtualinvoke this.<androidx.appcompat.widget.TooltipCompatHandler: void hide()>();

        return;
    }

    void show(boolean)
    {
        androidx.appcompat.widget.TooltipCompatHandler this, timeout#5;
        boolean $u8, $u-1;
        int $u4, $u3;
        java.lang.CharSequence $u6;
        android.view.View timeout;
        androidx.appcompat.widget.TooltipPopup $u1;
        android.content.Context $u-1#8;
        long timeout#14;
        java.lang.Runnable $u3#29;

        this := @this: androidx.appcompat.widget.TooltipCompatHandler;

        $u8 := @parameter0: boolean;

        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>(timeout);

        if $u-1 != 0 goto label1;

        return;

     label1:
        staticinvoke <androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)>(null);

        timeout#5 = <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler>;

        if timeout#5 == null goto label2;

        virtualinvoke timeout#5.<androidx.appcompat.widget.TooltipCompatHandler: void hide()>();

     label2:
        <androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler> = this;

        this.<androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch> = $u8;

        $u1 = new androidx.appcompat.widget.TooltipPopup;

        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u-1#8 = virtualinvoke timeout.<android.view.View: android.content.Context getContext()>();

        specialinvoke $u1.<androidx.appcompat.widget.TooltipPopup: void <init>(android.content.Context)>($u-1#8);

        this.<androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup> = $u1;

        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u3 = this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX>;

        $u4 = this.<androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY>;

        $u8 = this.<androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch>;

        $u6 = this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText>;

        virtualinvoke $u1.<androidx.appcompat.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)>(timeout, $u3, $u4, $u8, $u6);

        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke timeout.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(this);

        $u8 = this.<androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch>;

        if $u8 == 0 goto label3;

        timeout#14 = 2500L;

        goto label5;

     label3:
        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u4 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>(timeout);

        $u4 = $u4 & 1;

        if $u4 != 1 goto label4;

        $u4 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        timeout#14 = (long) $u4;

        timeout#14 = 3000L - timeout#14;

        goto label5;

     label4:
        $u4 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        timeout#14 = (long) $u4;

        timeout#14 = 15000L - timeout#14;

     label5:
        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u3#29 = this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable>;

        virtualinvoke timeout.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u3#29);

        timeout = this.<androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $u3#29 = this.<androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable>;

        virtualinvoke timeout.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($u3#29, timeout#14);

        return;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.TooltipCompatHandler: java.lang.String TAG> = "TooltipCompatHandler";

        <androidx.appcompat.widget.TooltipCompatHandler: long LONG_CLICK_HIDE_TIMEOUT_MS> = 2500L;

        <androidx.appcompat.widget.TooltipCompatHandler: long HOVER_HIDE_TIMEOUT_SHORT_MS> = 3000L;

        <androidx.appcompat.widget.TooltipCompatHandler: long HOVER_HIDE_TIMEOUT_MS> = 15000L;

        return;
    }
}
