public class androidx.drawerlayout.widget.DrawerLayout extends android.view.ViewGroup
{
    private static final boolean ALLOW_EDGE_LOCK;
    static final boolean CAN_HIDE_DESCENDANTS;
    private static final boolean CHILDREN_DISALLOW_INTERCEPT;
    private static final int DEFAULT_SCRIM_COLOR;
    private static final int DRAWER_ELEVATION;
    static final int[] LAYOUT_ATTRS;
    public static final int LOCK_MODE_LOCKED_CLOSED;
    public static final int LOCK_MODE_LOCKED_OPEN;
    public static final int LOCK_MODE_UNDEFINED;
    public static final int LOCK_MODE_UNLOCKED;
    private static final int MIN_DRAWER_MARGIN;
    private static final int MIN_FLING_VELOCITY;
    private static final int PEEK_DELAY;
    private static final boolean SET_DRAWER_SHADOW_FROM_ELEVATION;
    public static final int STATE_DRAGGING;
    public static final int STATE_IDLE;
    public static final int STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final int[] THEME_ATTRS;
    private static final float TOUCH_SLOP_SENSITIVITY;
    private final androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate;
    private android.graphics.Rect mChildHitRect;
    private android.graphics.Matrix mChildInvertedMatrix;
    private boolean mChildrenCanceledTouch;
    private boolean mDisallowInterceptRequested;
    private boolean mDrawStatusBarBackground;
    private float mDrawerElevation;
    private int mDrawerState;
    private boolean mFirstLayout;
    private boolean mInLayout;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private java.lang.Object mLastInsets;
    private final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback;
    private final androidx.customview.widget.ViewDragHelper mLeftDragger;
    private androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener;
    private java.util.List mListeners;
    private int mLockModeEnd;
    private int mLockModeLeft;
    private int mLockModeRight;
    private int mLockModeStart;
    private int mMinDrawerMargin;
    private final java.util.ArrayList mNonDrawerViews;
    private final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback;
    private final androidx.customview.widget.ViewDragHelper mRightDragger;
    private int mScrimColor;
    private float mScrimOpacity;
    private android.graphics.Paint mScrimPaint;
    private android.graphics.drawable.Drawable mShadowEnd;
    private android.graphics.drawable.Drawable mShadowLeft;
    private android.graphics.drawable.Drawable mShadowLeftResolved;
    private android.graphics.drawable.Drawable mShadowRight;
    private android.graphics.drawable.Drawable mShadowRightResolved;
    private android.graphics.drawable.Drawable mShadowStart;
    private android.graphics.drawable.Drawable mStatusBarBackground;
    private java.lang.CharSequence mTitleLeft;
    private java.lang.CharSequence mTitleRight;

    static void <clinit>()
    {
        boolean $u0, $u1#8;
        int[] $u1;
        int $u1#6;

        <androidx.drawerlayout.widget.DrawerLayout: float TOUCH_SLOP_SENSITIVITY> = 1.0F;

        <androidx.drawerlayout.widget.DrawerLayout: java.lang.String TAG> = "DrawerLayout";

        <androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING> = 2;

        <androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE> = 0;

        <androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING> = 1;

        <androidx.drawerlayout.widget.DrawerLayout: int PEEK_DELAY> = 160;

        <androidx.drawerlayout.widget.DrawerLayout: int MIN_FLING_VELOCITY> = 400;

        <androidx.drawerlayout.widget.DrawerLayout: int MIN_DRAWER_MARGIN> = 64;

        <androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED> = 0;

        <androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED> = 3;

        <androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN> = 2;

        <androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED> = 1;

        <androidx.drawerlayout.widget.DrawerLayout: int DRAWER_ELEVATION> = 10;

        <androidx.drawerlayout.widget.DrawerLayout: int DEFAULT_SCRIM_COLOR> = -1728053248;

        <androidx.drawerlayout.widget.DrawerLayout: boolean CHILDREN_DISALLOW_INTERCEPT> = 1;

        <androidx.drawerlayout.widget.DrawerLayout: boolean ALLOW_EDGE_LOCK> = 0;

        $u0 = 1;

        $u1 = newarray (int)[1];

        $u1[0] = 16843828;

        <androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS> = $u1;

        $u1 = newarray (int)[1];

        $u1[0] = 16842931;

        <androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS> = $u1;

        $u1#6 = <android.os.Build$VERSION: int SDK_INT>;

        if $u1#6 < 19 goto label1;

        $u1#8 = 1;

        goto label2;

     label1:
        $u1#8 = 0;

     label2:
        <androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS> = $u1#8;

        $u1#6 = <android.os.Build$VERSION: int SDK_INT>;

        if $u1#6 < 21 goto label3;

        goto label4;

     label3:
        $u0 = 0;

     label4:
        <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION> = $u0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.content.Context $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.content.Context $u8;
        android.util.AttributeSet $u9;
        int $u10;
        androidx.customview.widget.ViewDragHelper $u6;
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $u0;
        android.graphics.Paint $u0#3;
        android.content.res.Resources $u-1;
        android.util.DisplayMetrics $u-1#9;
        float density, minVel;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback $u5;
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate $u0#35;
        boolean $u-1#37;
        androidx.drawerlayout.widget.DrawerLayout$1 a;
        int[] a#43;
        android.content.res.TypedArray $u-1#44;
        android.graphics.drawable.Drawable $u-1#46;
        java.lang.Throwable $u0#48;
        java.util.ArrayList $u0#51;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u8 := @parameter0: android.content.Context;

        $u9 := @parameter1: android.util.AttributeSet;

        $u10 := @parameter2: int;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($u8, $u9, $u10);

        $u0 = new androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate;

        specialinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate> = $u0;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor> = -1728053248;

        $u0#3 = new android.graphics.Paint;

        specialinvoke $u0#3.<android.graphics.Paint: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint> = $u0#3;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 1;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft> = 3;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight> = 3;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart> = 3;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd> = 3;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart> = null;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd> = null;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft> = null;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight> = null;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDescendantFocusability(int)>(262144);

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.content.res.Resources getResources()>();

        $u-1#9 = virtualinvoke $u-1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        density = $u-1#9.<android.util.DisplayMetrics: float density>;

        minVel = 64.0F * density;

        minVel = minVel + 0.5F;

        $u10 = (int) minVel;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin> = $u10;

        minVel = 400.0F * density;

        $u5 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback;

        specialinvoke $u5.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void <init>(androidx.drawerlayout.widget.DrawerLayout,int)>(this, 3);

        this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback> = $u5;

        $u5 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback;

        specialinvoke $u5.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void <init>(androidx.drawerlayout.widget.DrawerLayout,int)>(this, 5);

        this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback> = $u5;

        $u5 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        $u6 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>(this, 1.0F, $u5);

        this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger> = $u6;

        virtualinvoke $u6.<androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(1);

        $u6 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $u6.<androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)>(minVel);

        $u5 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        $u6 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $u5.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void setDragger(androidx.customview.widget.ViewDragHelper)>($u6);

        $u5 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        $u6 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>(this, 1.0F, $u5);

        this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger> = $u6;

        virtualinvoke $u6.<androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(2);

        $u6 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $u6.<androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)>(minVel);

        $u5 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        $u6 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $u5.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void setDragger(androidx.customview.widget.ViewDragHelper)>($u6);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setFocusableInTouchMode(boolean)>(1);

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(this, 1);

        $u0#35 = new androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        specialinvoke $u0#35.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void <init>(androidx.drawerlayout.widget.DrawerLayout)>(this);

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(this, $u0#35);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setMotionEventSplittingEnabled(boolean)>(0);

        $u-1#37 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(this);

        if $u-1#37 == 0 goto label5;

        $u10 = <android.os.Build$VERSION: int SDK_INT>;

        if $u10 < 21 goto label4;

        a = new androidx.drawerlayout.widget.DrawerLayout$1;

        specialinvoke a.<androidx.drawerlayout.widget.DrawerLayout$1: void <init>(androidx.drawerlayout.widget.DrawerLayout)>(this);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>(a);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setSystemUiVisibility(int)>(1280);

        a#43 = <androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS>;

        $u-1#44 = virtualinvoke $u8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>(a#43);

     label1:
        $u-1#46 = virtualinvoke $u-1#44.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $u-1#46;

     label2:
        virtualinvoke $u-1#44.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label3:
        $u0#48 := @caughtexception;

        virtualinvoke $u-1#44.<android.content.res.TypedArray: void recycle()>();

        throw $u0#48;

     label4:
        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = null;

     label5:
        density = 10.0F * density;

        this.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation> = density;

        $u0#51 = new java.util.ArrayList;

        specialinvoke $u0#51.<java.util.ArrayList: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews> = $u0#51;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.MotionEvent $u7;
        android.view.View $u8;
        float $u4, $u5;
        android.graphics.Matrix $u-1;
        boolean $u-1#2;
        int $u-1#8, $u-1#10;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u7 := @parameter0: android.view.MotionEvent;

        $u8 := @parameter1: android.view.View;

        $u-1 = virtualinvoke $u8.<android.view.View: android.graphics.Matrix getMatrix()>();

        $u-1#2 = virtualinvoke $u-1.<android.graphics.Matrix: boolean isIdentity()>();

        if $u-1#2 != 0 goto label1;

        $u7 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View)>($u7, $u8);

        $u-1#2 = virtualinvoke $u8.<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>($u7);

        virtualinvoke $u7.<android.view.MotionEvent: void recycle()>();

        return $u-1#2;

     label1:
        $u-1#8 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getScrollX()>();

        $u-1#10 = virtualinvoke $u8.<android.view.View: int getLeft()>();

        $u-1#8 = $u-1#8 - $u-1#10;

        $u4 = (float) $u-1#8;

        $u-1#8 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getScrollY()>();

        $u-1#10 = virtualinvoke $u8.<android.view.View: int getTop()>();

        $u-1#8 = $u-1#8 - $u-1#10;

        $u5 = (float) $u-1#8;

        virtualinvoke $u7.<android.view.MotionEvent: void offsetLocation(float,float)>($u4, $u5);

        $u-1#2 = virtualinvoke $u8.<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>($u7);

        $u4 = neg $u4;

        $u5 = neg $u5;

        virtualinvoke $u7.<android.view.MotionEvent: void offsetLocation(float,float)>($u4, $u5);

        return $u-1#2;
    }

    private android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.MotionEvent $u6;
        android.view.View $u7;
        int $u-1, $u-1#3;
        float offsetX, offsetY;
        android.graphics.Matrix $u-1#15, $u4;
        boolean $u-1#16;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u6 := @parameter0: android.view.MotionEvent;

        $u7 := @parameter1: android.view.View;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getScrollX()>();

        $u-1#3 = virtualinvoke $u7.<android.view.View: int getLeft()>();

        $u-1 = $u-1 - $u-1#3;

        offsetX = (float) $u-1;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getScrollY()>();

        $u-1#3 = virtualinvoke $u7.<android.view.View: int getTop()>();

        $u-1 = $u-1 - $u-1#3;

        offsetY = (float) $u-1;

        $u6 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($u6);

        virtualinvoke $u6.<android.view.MotionEvent: void offsetLocation(float,float)>(offsetX, offsetY);

        $u-1#15 = virtualinvoke $u7.<android.view.View: android.graphics.Matrix getMatrix()>();

        $u-1#16 = virtualinvoke $u-1#15.<android.graphics.Matrix: boolean isIdentity()>();

        if $u-1#16 != 0 goto label2;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>;

        if $u4 != null goto label1;

        $u4 = new android.graphics.Matrix;

        specialinvoke $u4.<android.graphics.Matrix: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix> = $u4;

     label1:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>;

        virtualinvoke $u-1#15.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>($u4);

        $u-1#15 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>;

        virtualinvoke $u6.<android.view.MotionEvent: void transform(android.graphics.Matrix)>($u-1#15);

     label2:
        return $u6;
    }

    static java.lang.String gravityToString(int)
    {
        int $u2, $u0;
        java.lang.String $u-1;

        $u2 := @parameter0: int;

        $u0 = $u2 & 3;

        if $u0 != 3 goto label1;

        return "LEFT";

     label1:
        $u0 = $u2 & 5;

        if $u0 != 5 goto label2;

        return "RIGHT";

     label2:
        $u-1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u2);

        return $u-1;
    }

    private static boolean hasOpaqueBackground(android.view.View)
    {
        android.view.View $u4;
        android.graphics.drawable.Drawable $u-1;
        int $u-1#3;

        $u4 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u4.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if $u-1 == null goto label1;

        $u-1#3 = virtualinvoke $u-1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $u-1#3 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean hasPeekingDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u-1, i;
        android.view.View $u-1#3;
        android.view.ViewGroup$LayoutParams $u-1#5;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        boolean $u3;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#3 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#5 = virtualinvoke $u-1#3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#5;

        $u3 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking>;

        if $u3 == 0 goto label2;

        return 1;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean hasVisibleDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if $u-1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    static boolean includeChildForAccessibility(android.view.View)
    {
        android.view.View $u2;
        int $u-1;

        $u2 := @parameter0: android.view.View;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($u2);

        if $u-1 == 4 goto label1;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($u2);

        if $u-1 == 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isInBoundsOfChild(float, float, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        float $u4, $u5;
        android.view.View $u6;
        int $u1, $u2;
        boolean $u-1;
        android.graphics.Rect $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: float;

        $u5 := @parameter1: float;

        $u6 := @parameter2: android.view.View;

        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>;

        if $u0 != null goto label1;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect> = $u0;

     label1:
        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>;

        virtualinvoke $u6.<android.view.View: void getHitRect(android.graphics.Rect)>($u0);

        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>;

        $u1 = (int) $u4;

        $u2 = (int) $u5;

        $u-1 = virtualinvoke $u0.<android.graphics.Rect: boolean contains(int,int)>($u1, $u2);

        return $u-1;
    }

    private boolean mirror(android.graphics.drawable.Drawable, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.graphics.drawable.Drawable $u2;
        int $u3;
        boolean $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: int;

        if $u2 == null goto label2;

        $u-1 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>($u2);

        if $u-1 != 0 goto label1;

        goto label2;

     label1:
        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($u2, $u3);

        return 1;

     label2:
        return 0;
    }

    private android.graphics.drawable.Drawable resolveLeftShadow()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u-1;
        android.graphics.drawable.Drawable $u1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        if $u-1 != 0 goto label1;

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        if $u1 == null goto label2;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>($u1, $u-1);

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        return $u1;

     label1:
        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        if $u1 == null goto label2;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>($u1, $u-1);

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        return $u1;

     label2:
        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        return $u1;
    }

    private android.graphics.drawable.Drawable resolveRightShadow()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u-1;
        android.graphics.drawable.Drawable $u1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        if $u-1 != 0 goto label1;

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        if $u1 == null goto label2;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>($u1, $u-1);

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        return $u1;

     label1:
        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        if $u1 == null goto label2;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>($u1, $u-1);

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        return $u1;

     label2:
        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        return $u1;
    }

    private void resolveShadowDrawables()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean $u0;
        android.graphics.drawable.Drawable $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u0 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $u0 == 0 goto label1;

        return;

     label1:
        $u-1 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved> = $u-1;

        $u-1 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveRightShadow()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved> = $u-1;

        return;
    }

    private void updateChildrenImportantForAccessibility(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u5, $u-1#3;
        boolean $u6, $u-1#4;
        int $u-1, i;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: boolean;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label6;

        $u-1#3 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        if $u6 != 0 goto label2;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#3);

        if $u-1#4 == 0 goto label3;

     label2:
        if $u6 == 0 goto label4;

        if $u-1#3 != $u5 goto label4;

     label3:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($u-1#3, 1);

        goto label5;

     label4:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($u-1#3, 4);

     label5:
        i = i + 1;

        goto label1;

     label6:
        return;
    }

    public void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u2;
        java.util.List $u0;
        java.util.ArrayList $u0#2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: androidx.drawerlayout.widget.DrawerLayout$DrawerListener;

        if $u2 != null goto label1;

        return;

     label1:
        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $u0 != null goto label2;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners> = $u0#2;

     label2:
        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u2);

        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        java.util.ArrayList views, child1;
        int $u8, $u9, $u-1, i, $u-1#23;
        boolean isDrawerOpen, $u-1#10;
        android.view.View $u-1#8;
        java.lang.Object $u-1#20;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        views := @parameter0: java.util.ArrayList;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getDescendantFocusability()>();

        if $u-1 != 393216 goto label1;

        return;

     label1:
        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        isDrawerOpen = 0;

        i = 0;

     label2:
        if i >= $u-1 goto label5;

        $u-1#8 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#10 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#8);

        if $u-1#10 == 0 goto label3;

        $u-1#10 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)>($u-1#8);

        if $u-1#10 == 0 goto label4;

        isDrawerOpen = 1;

        virtualinvoke $u-1#8.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(views, $u8, $u9);

        goto label4;

     label3:
        child1 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        virtualinvoke child1.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#8);

     label4:
        i = i + 1;

        goto label2;

     label5:
        if isDrawerOpen != 0 goto label8;

        child1 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        $u-1 = virtualinvoke child1.<java.util.ArrayList: int size()>();

        i = 0;

     label6:
        if i >= $u-1 goto label8;

        child1 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        $u-1#20 = virtualinvoke child1.<java.util.ArrayList: java.lang.Object get(int)>(i);

        $u-1#8 = (android.view.View) $u-1#20;

        $u-1#23 = virtualinvoke $u-1#8.<android.view.View: int getVisibility()>();

        if $u-1#23 != 0 goto label7;

        virtualinvoke $u-1#8.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(views, $u8, $u9);

     label7:
        i = i + 1;

        goto label6;

     label8:
        views = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        virtualinvoke views.<java.util.ArrayList: void clear()>();

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u3, $u-1;
        int $u4;
        android.view.ViewGroup$LayoutParams $u5;
        boolean $u-1#2;
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $u1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u5 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke this.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($u3, $u4, $u5);

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()>();

        if $u-1 != null goto label2;

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u3);

        if $u-1#2 == 0 goto label1;

        goto label2;

     label1:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($u3, 1);

        goto label3;

     label2:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($u3, 4);

     label3:
        $u-1#2 = <androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>;

        if $u-1#2 != 0 goto label4;

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate>;

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>($u3, $u1);

     label4:
        return;
    }

    void cancelChildViewTouch()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean cancelEvent;
        long $u-1;
        android.view.MotionEvent $u-1#5;
        int $u-1#7, i;
        android.view.View $u-1#10;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        cancelEvent = this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch>;

        if cancelEvent != 0 goto label3;

        $u-1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u-1#5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($u-1, $u-1, 3, 0.0F, 0.0F, 0);

        $u-1#7 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1#7 goto label2;

        $u-1#10 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        virtualinvoke $u-1#10.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($u-1#5);

        i = i + 1;

        goto label1;

     label2:
        virtualinvoke $u-1#5.<android.view.MotionEvent: void recycle()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 1;

     label3:
        return;
    }

    boolean checkDrawerViewAbsoluteGravity(android.view.View, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u3;
        int $u4, $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>($u3);

        $u-1 = $u-1 & $u4;

        if $u-1 != $u4 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.ViewGroup$LayoutParams $u2;
        boolean $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u-1 = $u2 instanceof androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        if $u-1 == 0 goto label1;

        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($u2);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void closeDrawer(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)>($u2, 1);

        return;
    }

    public void closeDrawer(int, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u5;
        boolean $u6;
        java.lang.IllegalArgumentException $u1;
        android.view.View $u-1;
        java.lang.StringBuilder $u2;
        java.lang.String $u-1#4;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: int;

        $u6 := @parameter1: boolean;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($u5);

        if $u-1 == null goto label1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)>($u-1, $u6);

        return;

     label1:
        $u1 = new java.lang.IllegalArgumentException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No drawer view found with gravity ");

        $u-1#4 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)>($u5);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#4);

        $u-1#4 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#4);

        throw $u1;
    }

    public void closeDrawer(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.view.View;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)>($u2, 1);

        return;
    }

    public void closeDrawer(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u5;
        boolean $u6, $u-1;
        android.view.ViewGroup$LayoutParams $u-1#3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        int $u2, $u-1#19;
        androidx.customview.widget.ViewDragHelper $u1;
        java.lang.IllegalArgumentException lp#27;
        java.lang.StringBuilder $u1#28;
        java.lang.String $u-1#31;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: boolean;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u5);

        if $u-1 == 0 goto label5;

        $u-1#3 = virtualinvoke $u5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#3;

        $u-1 = this.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout>;

        if $u-1 == 0 goto label1;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen> = 0.0F;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 0;

        goto label4;

     label1:
        if $u6 == 0 goto label3;

        $u2 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $u2 = 4 | $u2;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = $u2;

        $u6 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u5, 3);

        if $u6 == 0 goto label2;

        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u2 = virtualinvoke $u5.<android.view.View: int getWidth()>();

        $u2 = neg $u2;

        $u-1#19 = virtualinvoke $u5.<android.view.View: int getTop()>();

        virtualinvoke $u1.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($u5, $u2, $u-1#19);

        goto label4;

     label2:
        $u1 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        $u-1#19 = virtualinvoke $u5.<android.view.View: int getTop()>();

        virtualinvoke $u1.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($u5, $u2, $u-1#19);

        goto label4;

     label3:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)>($u5, 0.0F);

        $u2 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)>($u2, 0, $u5);

        virtualinvoke $u5.<android.view.View: void setVisibility(int)>(4);

     label4:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;

     label5:
        lp#27 = new java.lang.IllegalArgumentException;

        $u1#28 = new java.lang.StringBuilder;

        specialinvoke $u1#28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $u1#28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        virtualinvoke $u1#28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sliding drawer");

        $u-1#31 = virtualinvoke $u1#28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke lp#27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#31);

        throw lp#27;
    }

    public void closeDrawers()
    {
        androidx.drawerlayout.widget.DrawerLayout this;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(0);

        return;
    }

    void closeDrawers(boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean $u10, needsInvalidate, $u-1#8;
        int $u-1, i, $u-1#11, $u-1#18;
        android.view.View $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1#5;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        androidx.customview.widget.ViewDragHelper $u6;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback i#30;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u10 := @parameter0: boolean;

        needsInvalidate = 0;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label6;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#5 = virtualinvoke $u-1#4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#5;

        $u-1#8 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#4);

        if $u-1#8 == 0 goto label5;

        if $u10 == 0 goto label2;

        $u-1#8 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking>;

        if $u-1#8 != 0 goto label2;

        goto label5;

     label2:
        $u-1#11 = virtualinvoke $u-1#4.<android.view.View: int getWidth()>();

        $u-1#8 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u-1#4, 3);

        if $u-1#8 == 0 goto label3;

        $u6 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u-1#11 = neg $u-1#11;

        $u-1#18 = virtualinvoke $u-1#4.<android.view.View: int getTop()>();

        $u-1#8 = virtualinvoke $u6.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($u-1#4, $u-1#11, $u-1#18);

        needsInvalidate = needsInvalidate | $u-1#8;

        goto label4;

     label3:
        $u6 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u-1#11 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        $u-1#18 = virtualinvoke $u-1#4.<android.view.View: int getTop()>();

        $u-1#8 = virtualinvoke $u6.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($u-1#4, $u-1#11, $u-1#18);

        needsInvalidate = needsInvalidate | $u-1#8;

     label4:
        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 0;

     label5:
        i = i + 1;

        goto label1;

     label6:
        i#30 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        virtualinvoke i#30.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        i#30 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        virtualinvoke i#30.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        if needsInvalidate == 0 goto label7;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

     label7:
        return;
    }

    public void computeScroll()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        androidx.customview.widget.ViewDragHelper $u4;
        int $u-1, i;
        float scrimOpacity, onscreen#9;
        android.view.View $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1#6;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams onscreen;
        boolean $u-1#13, $u-1#15;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        scrimOpacity = 0.0F;

        i = 0;

     label1:
        if i >= $u-1 goto label2;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#6 = virtualinvoke $u-1#4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        onscreen = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#6;

        onscreen#9 = onscreen.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        scrimOpacity = staticinvoke <java.lang.Math: float max(float,float)>(scrimOpacity, onscreen#9);

        i = i + 1;

        goto label1;

     label2:
        this.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity> = scrimOpacity;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u-1#13 = virtualinvoke $u4.<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u-1#15 = virtualinvoke $u4.<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        if $u-1#13 != 0 goto label3;

        if $u-1#15 == 0 goto label4;

     label3:
        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label4:
        return;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.MotionEvent $u7;
        int $u-1;
        float childrenCount, $u-1#14;
        byte childrenCount#9;
        android.view.View $u-1#16;
        boolean $u-1#17;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u7 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u7.<android.view.MotionEvent: int getSource()>();

        $u-1 = $u-1 & 2;

        if $u-1 == 0 goto label6;

        $u-1 = virtualinvoke $u7.<android.view.MotionEvent: int getAction()>();

        if $u-1 == 10 goto label6;

        childrenCount = this.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        childrenCount#9 = childrenCount cmpg 0.0F;

        if childrenCount#9 > 0 goto label1;

        goto label6;

     label1:
        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        if $u-1 == 0 goto label5;

        childrenCount = virtualinvoke $u7.<android.view.MotionEvent: float getX()>();

        $u-1#14 = virtualinvoke $u7.<android.view.MotionEvent: float getY()>();

        $u-1 = $u-1 + -1;

     label2:
        if $u-1 < 0 goto label5;

        $u-1#16 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>($u-1);

        $u-1#17 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isInBoundsOfChild(float,float,android.view.View)>(childrenCount, $u-1#14, $u-1#16);

        if $u-1#17 == 0 goto label4;

        $u-1#17 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>($u-1#16);

        if $u-1#17 == 0 goto label3;

        goto label4;

     label3:
        $u-1#17 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)>($u7, $u-1#16);

        if $u-1#17 == 0 goto label4;

        return 1;

     label4:
        $u-1 = $u-1 + -1;

        goto label2;

     label5:
        return 0;

     label6:
        $u-1#17 = specialinvoke this.<android.view.ViewGroup: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>($u7);

        return $u-1#17;
    }

    void dispatchOnDrawerClosed(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u6;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        int rootView;
        java.util.List listenerCount;
        java.lang.Object $u-1#13;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u4;
        boolean $u-1#16;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u6 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        rootView = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        rootView = rootView & 1;

        if rootView != 1 goto label3;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 0;

        listenerCount = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if listenerCount == null goto label2;

        rootView = interfaceinvoke listenerCount.<java.util.List: int size()>();

        rootView = rootView + -1;

     label1:
        if rootView < 0 goto label2;

        listenerCount = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $u-1#13 = interfaceinvoke listenerCount.<java.util.List: java.lang.Object get(int)>(rootView);

        $u4 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $u-1#13;

        interfaceinvoke $u4.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerClosed(android.view.View)>($u6);

        rootView = rootView + -1;

        goto label1;

     label2:
        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)>($u6, 0);

        $u-1#16 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean hasWindowFocus()>();

        if $u-1#16 == 0 goto label3;

        $u6 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getRootView()>();

        if $u6 == null goto label3;

        virtualinvoke $u6.<android.view.View: void sendAccessibilityEvent(int)>(32);

     label3:
        return;
    }

    void dispatchOnDrawerOpened(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u6;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        int listenerCount;
        java.util.List listenerCount#6;
        java.lang.Object $u-1#11;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u4;
        boolean $u-1#14;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u6 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        listenerCount = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        listenerCount = listenerCount & 1;

        if listenerCount != 0 goto label3;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 1;

        listenerCount#6 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if listenerCount#6 == null goto label2;

        listenerCount = interfaceinvoke listenerCount#6.<java.util.List: int size()>();

        listenerCount = listenerCount + -1;

     label1:
        if listenerCount < 0 goto label2;

        listenerCount#6 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $u-1#11 = interfaceinvoke listenerCount#6.<java.util.List: java.lang.Object get(int)>(listenerCount);

        $u4 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $u-1#11;

        interfaceinvoke $u4.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerOpened(android.view.View)>($u6);

        listenerCount = listenerCount + -1;

        goto label1;

     label2:
        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)>($u6, 1);

        $u-1#14 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean hasWindowFocus()>();

        if $u-1#14 == 0 goto label3;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void sendAccessibilityEvent(int)>(32);

     label3:
        return;
    }

    void dispatchOnDrawerSlide(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u4;
        float $u5;
        java.util.List listenerCount;
        int $u-1;
        java.lang.Object $u-1#6;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: float;

        listenerCount = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if listenerCount == null goto label2;

        $u-1 = interfaceinvoke listenerCount.<java.util.List: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label2;

        listenerCount = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $u-1#6 = interfaceinvoke listenerCount.<java.util.List: java.lang.Object get(int)>($u-1);

        $u2 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $u-1#6;

        interfaceinvoke $u2.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerSlide(android.view.View,float)>($u4, $u5);

        $u-1 = $u-1 + -1;

        goto label1;

     label2:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.graphics.Canvas $u20;
        android.view.View $u21, $u-1#11;
        long $u22;
        int $u-1, clipLeft, $u-1#4, clipRight, $u-1#6, i, $u-1#13;
        boolean $u-1#2, $u-1#15;
        float clipLeft#33, childRight, clipLeft#52;
        byte childCount;
        android.graphics.Paint clipLeft#47;
        android.graphics.drawable.Drawable clipLeft#61;
        androidx.customview.widget.ViewDragHelper v;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u20 := @parameter0: android.graphics.Canvas;

        $u21 := @parameter1: android.view.View;

        $u22 := @parameter2: long;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getHeight()>();

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>($u21);

        clipLeft = 0;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        clipRight = $u-1#4;

        $u-1#6 = virtualinvoke $u20.<android.graphics.Canvas: int save()>();

        if $u-1#2 == 0 goto label07;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label01:
        if i >= $u-1#4 goto label06;

        $u-1#11 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        if $u-1#11 == $u21 goto label05;

        $u-1#13 = virtualinvoke $u-1#11.<android.view.View: int getVisibility()>();

        if $u-1#13 != 0 goto label05;

        $u-1#15 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: boolean hasOpaqueBackground(android.view.View)>($u-1#11);

        if $u-1#15 == 0 goto label05;

        $u-1#15 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#11);

        if $u-1#15 == 0 goto label05;

        $u-1#13 = virtualinvoke $u-1#11.<android.view.View: int getHeight()>();

        if $u-1#13 >= $u-1 goto label02;

        goto label05;

     label02:
        $u-1#15 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u-1#11, 3);

        if $u-1#15 == 0 goto label04;

        $u-1#13 = virtualinvoke $u-1#11.<android.view.View: int getRight()>();

        if $u-1#13 <= clipLeft goto label03;

        clipLeft = $u-1#13;

     label03:
        goto label05;

     label04:
        $u-1#13 = virtualinvoke $u-1#11.<android.view.View: int getLeft()>();

        if $u-1#13 >= clipRight goto label05;

        clipRight = $u-1#13;

     label05:
        i = i + 1;

        goto label01;

     label06:
        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getHeight()>();

        virtualinvoke $u20.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(clipLeft, 0, clipRight, $u-1);

        goto label08;

     label07:
        clipLeft = 0;

        clipRight = $u-1#4;

     label08:
        $u-1#15 = specialinvoke this.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($u20, $u21, $u22);

        virtualinvoke $u20.<android.graphics.Canvas: void restoreToCount(int)>($u-1#6);

        clipLeft#33 = this.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        childCount = clipLeft#33 cmpl 0.0F;

        if childCount <= 0 goto label09;

        if $u-1#2 == 0 goto label09;

        $u-1#6 = this.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor>;

        $u-1 = -16777216 & $u-1#6;

        $u-1 = $u-1 >>> 24;

        childRight = (float) $u-1;

        clipLeft#33 = childRight * clipLeft#33;

        $u-1 = (int) clipLeft#33;

        $u-1 = $u-1 << 24;

        $u-1#6 = $u-1#6 & 16777215;

        $u-1#6 = $u-1 | $u-1#6;

        clipLeft#47 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke clipLeft#47.<android.graphics.Paint: void setColor(int)>($u-1#6);

        clipLeft#33 = (float) clipLeft;

        childRight = (float) clipRight;

        $u-1#6 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getHeight()>();

        clipLeft#52 = (float) $u-1#6;

        clipLeft#47 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke $u20.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(clipLeft#33, 0.0F, childRight, clipLeft#52, clipLeft#47);

        return $u-1#15;

     label09:
        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        if clipLeft#61 == null goto label10;

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u21, 3);

        if $u-1#2 == 0 goto label10;

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        clipLeft = virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $u-1#6 = virtualinvoke $u21.<android.view.View: int getRight()>();

        v = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        clipRight = virtualinvoke v.<androidx.customview.widget.ViewDragHelper: int getEdgeSize()>();

        clipLeft#33 = (float) $u-1#6;

        childRight = (float) clipRight;

        clipLeft#33 = clipLeft#33 / childRight;

        clipLeft#33 = staticinvoke <java.lang.Math: float min(float,float)>(clipLeft#33, 1.0F);

        clipLeft#33 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, clipLeft#33);

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        clipRight = virtualinvoke $u21.<android.view.View: int getTop()>();

        clipLeft = $u-1#6 + clipLeft;

        $u-1 = virtualinvoke $u21.<android.view.View: int getBottom()>();

        virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($u-1#6, clipRight, clipLeft, $u-1);

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        clipLeft#33 = 255.0F * clipLeft#33;

        $u-1#6 = (int) clipLeft#33;

        virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: void setAlpha(int)>($u-1#6);

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($u20);

        return $u-1#15;

     label10:
        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        if clipLeft#61 == null goto label11;

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u21, 5);

        if $u-1#2 == 0 goto label11;

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        clipRight = virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $u-1#6 = virtualinvoke $u21.<android.view.View: int getLeft()>();

        clipLeft = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        clipLeft = clipLeft - $u-1#6;

        v = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u-1 = virtualinvoke v.<androidx.customview.widget.ViewDragHelper: int getEdgeSize()>();

        clipLeft#33 = (float) clipLeft;

        childRight = (float) $u-1;

        clipLeft#33 = clipLeft#33 / childRight;

        clipLeft#33 = staticinvoke <java.lang.Math: float min(float,float)>(clipLeft#33, 1.0F);

        clipLeft#33 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, clipLeft#33);

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        clipRight = $u-1#6 - clipRight;

        clipLeft = virtualinvoke $u21.<android.view.View: int getTop()>();

        $u-1 = virtualinvoke $u21.<android.view.View: int getBottom()>();

        virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(clipRight, clipLeft, $u-1#6, $u-1);

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        clipLeft#33 = 255.0F * clipLeft#33;

        $u-1#6 = (int) clipLeft#33;

        virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: void setAlpha(int)>($u-1#6);

        clipLeft#61 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        virtualinvoke clipLeft#61.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($u20);

     label11:
        return $u-1#15;
    }

    android.view.View findDrawerWithGravity(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u7, $u5, $u-1, i;
        android.view.View $u-1#8;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u7 := @parameter0: int;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u7 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u7, $u-1);

        $u7 = $u7 & 7;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#8 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u5 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>($u-1#8);

        $u5 = $u5 & 7;

        if $u5 != $u7 goto label2;

        return $u-1#8;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;
    }

    android.view.View findOpenDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u-1, i, $u4;
        android.view.View $u-1#3;
        android.view.ViewGroup$LayoutParams $u-1#4;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams childLp;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#3 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#4 = virtualinvoke $u-1#3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        childLp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#4;

        $u4 = childLp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $u4 = $u4 & 1;

        if $u4 != 1 goto label2;

        return $u-1#3;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;
    }

    android.view.View findVisibleDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u-1, i;
        android.view.View $u-1#3;
        boolean $u-1#4;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#3 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#3);

        if $u-1#4 == 0 goto label2;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>($u-1#3);

        if $u-1#4 == 0 goto label2;

        return $u-1#3;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u0 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        specialinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        return $u0;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.util.AttributeSet $u3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $u0;
        android.content.Context $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.util.AttributeSet;

        $u0 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($u-1, $u3);

        return $u0;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.ViewGroup$LayoutParams $u3;
        boolean $u0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $u0#2, $u1;
        android.view.ViewGroup$MarginLayoutParams $u1#8;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = $u3 instanceof androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        if $u0 == 0 goto label1;

        $u0#2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $u1 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u3;

        specialinvoke $u0#2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams)>($u1);

        return $u0#2;

     label1:
        $u0 = $u3 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $u0 == 0 goto label2;

        $u0#2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $u1#8 = (android.view.ViewGroup$MarginLayoutParams) $u3;

        specialinvoke $u0#2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($u1#8);

        return $u0#2;

     label2:
        $u0#2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        specialinvoke $u0#2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($u3);

        return $u0#2;
    }

    public float getDrawerElevation()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean $u0;
        float ret0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u0 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $u0 == 0 goto label1;

        ret0 = this.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        return ret0;

     label1:
        return 0.0F;
    }

    public int getDrawerLockMode(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u4, $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: int;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        if $u4 == 3 goto label13;

        if $u4 == 5 goto label09;

        if $u4 == 8388611 goto label05;

        if $u4 == 8388613 goto label01;

        goto label17;

     label01:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        if $u4 == 3 goto label02;

        return $u4;

     label02:
        if $u-1 != 0 goto label03;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        goto label04;

     label03:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

     label04:
        if $u4 == 3 goto label17;

        return $u4;

     label05:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        if $u4 == 3 goto label06;

        return $u4;

     label06:
        if $u-1 != 0 goto label07;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        goto label08;

     label07:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

     label08:
        if $u4 == 3 goto label17;

        return $u4;

     label09:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        if $u4 == 3 goto label10;

        return $u4;

     label10:
        if $u-1 != 0 goto label11;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        goto label12;

     label11:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

     label12:
        if $u4 == 3 goto label17;

        return $u4;

     label13:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        if $u4 == 3 goto label14;

        return $u4;

     label14:
        if $u-1 != 0 goto label15;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        goto label16;

     label15:
        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

     label16:
        if $u4 == 3 goto label17;

        return $u4;

     label17:
        return 0;
    }

    public int getDrawerLockMode(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u4;
        boolean $u-1;
        android.view.ViewGroup$LayoutParams $u-1#3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams drawerGravity;
        int drawerGravity#6;
        java.lang.IllegalArgumentException drawerGravity#9;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#13;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: android.view.View;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u4);

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        drawerGravity = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#3;

        drawerGravity#6 = drawerGravity.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        drawerGravity#6 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)>(drawerGravity#6);

        return drawerGravity#6;

     label1:
        drawerGravity#9 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $u-1#13 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke drawerGravity#9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#13);

        throw drawerGravity#9;
    }

    public java.lang.CharSequence getDrawerTitle(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u3, $u-1;
        java.lang.CharSequence ret0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: int;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u3 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u3, $u-1);

        if $u3 != 3 goto label1;

        ret0 = this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft>;

        return ret0;

     label1:
        if $u3 != 5 goto label2;

        ret0 = this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight>;

        return ret0;

     label2:
        return null;
    }

    int getDrawerViewAbsoluteGravity(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u3;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams gravity;
        int gravity#4, $u-1#5;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        gravity = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        gravity#4 = gravity.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        $u-1#5 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        gravity#4 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(gravity#4, $u-1#5);

        return gravity#4;
    }

    float getDrawerViewOffset(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u2;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $u0;
        float ret0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u0 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        ret0 = $u0.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        return ret0;
    }

    public android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.graphics.drawable.Drawable ret0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        ret0 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        return ret0;
    }

    boolean isContentView(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u2;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $u0;
        int $u0#3;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u0 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        $u0#3 = $u0.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        if $u0#3 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDrawerOpen(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u3;
        android.view.View $u-1;
        boolean $u-1#2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($u3);

        if $u-1 == null goto label1;

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)>($u-1);

        return $u-1#2;

     label1:
        return 0;
    }

    public boolean isDrawerOpen(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u4;
        boolean $u-1;
        android.view.ViewGroup$LayoutParams $u-1#3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams drawerLp;
        int $u1;
        java.lang.IllegalArgumentException drawerLp#10;
        java.lang.StringBuilder $u1#11;
        java.lang.String $u-1#14;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: android.view.View;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u4);

        if $u-1 == 0 goto label2;

        $u-1#3 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        drawerLp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#3;

        $u1 = drawerLp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $u1 = $u1 & 1;

        if $u1 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        drawerLp#10 = new java.lang.IllegalArgumentException;

        $u1#11 = new java.lang.StringBuilder;

        specialinvoke $u1#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $u1#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        virtualinvoke $u1#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $u-1#14 = virtualinvoke $u1#11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke drawerLp#10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#14);

        throw drawerLp#10;
    }

    boolean isDrawerView(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u5;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams gravity;
        int gravity#4, $u-1#5;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        gravity = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        gravity#4 = gravity.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        $u-1#5 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($u5);

        gravity#4 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(gravity#4, $u-1#5);

        $u-1#5 = gravity#4 & 3;

        if $u-1#5 == 0 goto label1;

        return 1;

     label1:
        gravity#4 = gravity#4 & 5;

        if gravity#4 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isDrawerVisible(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u3;
        android.view.View $u-1;
        boolean $u-1#2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($u3);

        if $u-1 == null goto label1;

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>($u-1);

        return $u-1#2;

     label1:
        return 0;
    }

    public boolean isDrawerVisible(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u4;
        boolean $u-1;
        android.view.ViewGroup$LayoutParams $u-1#3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $u0;
        float $u0#6;
        byte $u0#8;
        java.lang.IllegalArgumentException $u0#11;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#15;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: android.view.View;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u4);

        if $u-1 == 0 goto label2;

        $u-1#3 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u0 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#3;

        $u0#6 = $u0.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $u0#8 = $u0#6 cmpl 0.0F;

        if $u0#8 <= 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $u0#11 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $u-1#15 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#15);

        throw $u0#11;
    }

    void moveDrawerToOffset(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u7;
        float $u8, $u-1, oldPos;
        int dx, $u-1#2;
        boolean $u-1#10;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: float;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>($u7);

        $u-1#2 = virtualinvoke $u7.<android.view.View: int getWidth()>();

        oldPos = (float) $u-1#2;

        $u-1 = oldPos * $u-1;

        dx = (int) $u-1;

        $u-1 = (float) $u-1#2;

        $u-1 = $u-1 * $u8;

        $u-1#2 = (int) $u-1;

        dx = $u-1#2 - dx;

        $u-1#10 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u7, 3);

        if $u-1#10 == 0 goto label1;

        goto label2;

     label1:
        dx = neg dx;

     label2:
        virtualinvoke $u7.<android.view.View: void offsetLeftAndRight(int)>(dx);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>($u7, $u8);

        return;
    }

    protected void onAttachedToWindow()
    {
        androidx.drawerlayout.widget.DrawerLayout this;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        specialinvoke this.<android.view.ViewGroup: void onAttachedToWindow()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.drawerlayout.widget.DrawerLayout this;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        specialinvoke this.<android.view.ViewGroup: void onDetachedFromWindow()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 1;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.graphics.Canvas $u5;
        boolean inset;
        android.graphics.drawable.Drawable inset#2;
        int inset#3, $u-1;
        java.lang.Object inset#5;
        android.view.WindowInsets inset#6;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: android.graphics.Canvas;

        specialinvoke this.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($u5);

        inset = this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground>;

        if inset == 0 goto label5;

        inset#2 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if inset#2 == null goto label5;

        inset#3 = <android.os.Build$VERSION: int SDK_INT>;

        if inset#3 < 21 goto label3;

        inset#5 = this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        if inset#5 == null goto label1;

        inset#6 = (android.view.WindowInsets) inset#5;

        inset#3 = virtualinvoke inset#6.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        goto label2;

     label1:
        inset#3 = 0;

     label2:
        goto label4;

     label3:
        inset#3 = 0;

     label4:
        if inset#3 <= 0 goto label5;

        inset#2 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        virtualinvoke inset#2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $u-1, inset#3);

        inset#2 = this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke inset#2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($u5);

     label5:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.MotionEvent $u11;
        int $u9, $u8;
        androidx.customview.widget.ViewDragHelper interceptForDrag;
        boolean $u-1, $u-1#6, $u-1#14;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback x;
        float $u-1#18, $u-1#20, child;
        byte child#24;
        android.view.View $u-1#27;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u11 := @parameter0: android.view.MotionEvent;

        $u9 = virtualinvoke $u11.<android.view.MotionEvent: int getActionMasked()>();

        interceptForDrag = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u-1 = virtualinvoke interceptForDrag.<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>($u11);

        interceptForDrag = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u-1#6 = virtualinvoke interceptForDrag.<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>($u11);

        $u-1 = $u-1 | $u-1#6;

        $u-1#6 = 0;

        if $u9 == 0 goto label3;

        if $u9 == 1 goto label2;

        if $u9 == 2 goto label1;

        if $u9 == 3 goto label2;

        goto label5;

     label1:
        interceptForDrag = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u-1#14 = virtualinvoke interceptForDrag.<androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)>(3);

        if $u-1#14 == 0 goto label5;

        x = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        virtualinvoke x.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        x = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        virtualinvoke x.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        goto label5;

     label2:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(1);

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        goto label5;

     label3:
        $u-1#18 = virtualinvoke $u11.<android.view.MotionEvent: float getX()>();

        $u-1#20 = virtualinvoke $u11.<android.view.MotionEvent: float getY()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX> = $u-1#18;

        this.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY> = $u-1#20;

        child = this.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        child#24 = child cmpl 0.0F;

        if child#24 <= 0 goto label4;

        interceptForDrag = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u8 = (int) $u-1#18;

        $u9 = (int) $u-1#20;

        $u-1#27 = virtualinvoke interceptForDrag.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($u8, $u9);

        if $u-1#27 == null goto label4;

        $u-1#14 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>($u-1#27);

        if $u-1#14 == 0 goto label4;

        $u-1#6 = 1;

     label4:
        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

     label5:
        if $u-1 != 0 goto label7;

        if $u-1#6 != 0 goto label7;

        $u-1 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean hasPeekingDrawer()>();

        if $u-1 != 0 goto label7;

        $u-1 = this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch>;

        if $u-1 == 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        return 1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2;
        android.view.KeyEvent $u3;
        boolean $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        $u3 := @parameter1: android.view.KeyEvent;

        if $u2 != 4 goto label1;

        $u-1 = specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean hasVisibleDrawer()>();

        if $u-1 == 0 goto label1;

        virtualinvoke $u3.<android.view.KeyEvent: void startTracking()>();

        return 1;

     label1:
        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean onKeyDown(int,android.view.KeyEvent)>($u2, $u3);

        return $u-1;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u3;
        android.view.KeyEvent $u4;
        android.view.View $u-1;
        boolean $u-1#8;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: int;

        $u4 := @parameter1: android.view.KeyEvent;

        if $u3 != 4 goto label3;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if $u-1 == null goto label1;

        $u3 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($u-1);

        if $u3 != 0 goto label1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()>();

     label1:
        if $u-1 == null goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $u-1#8 = specialinvoke this.<android.view.ViewGroup: boolean onKeyUp(int,android.view.KeyEvent)>($u3, $u4);

        return $u-1#8;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean $u17;
        int $u18, $u19, $u20, $u21, i, $u-1#5, childWidth, childHeight, $u-1#16, $u-1#20, $u14, $u15;
        android.view.View $u-1;
        android.view.ViewGroup$LayoutParams $u-1#8;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        float newOffset, changeOffset;
        byte changeOffset#48;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u17 := @parameter0: boolean;

        $u18 := @parameter1: int;

        $u19 := @parameter2: int;

        $u20 := @parameter3: int;

        $u21 := @parameter4: int;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout> = 1;

        $u18 = $u20 - $u18;

        $u20 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label01:
        if i >= $u20 goto label17;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#5 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u-1#5 != 8 goto label02;

        goto label16;

     label02:
        $u-1#8 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#8;

        $u17 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>($u-1);

        if $u17 == 0 goto label03;

        $u-1#5 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        childWidth = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        childHeight = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $u-1#16 = virtualinvoke $u-1.<android.view.View: int getMeasuredWidth()>();

        childHeight = childHeight + $u-1#16;

        $u-1#16 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $u-1#20 = virtualinvoke $u-1.<android.view.View: int getMeasuredHeight()>();

        $u-1#16 = $u-1#16 + $u-1#20;

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>($u-1#5, childWidth, childHeight, $u-1#16);

        goto label16;

     label03:
        childWidth = virtualinvoke $u-1.<android.view.View: int getMeasuredWidth()>();

        childHeight = virtualinvoke $u-1.<android.view.View: int getMeasuredHeight()>();

        $u17 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u-1, 3);

        if $u17 == 0 goto label04;

        $u-1#5 = neg childWidth;

        newOffset = (float) childWidth;

        changeOffset = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        newOffset = newOffset * changeOffset;

        $u-1#16 = (int) newOffset;

        $u-1#5 = $u-1#5 + $u-1#16;

        $u-1#16 = childWidth + $u-1#5;

        newOffset = (float) $u-1#16;

        changeOffset = (float) childWidth;

        newOffset = newOffset / changeOffset;

        goto label05;

     label04:
        newOffset = (float) childWidth;

        changeOffset = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        newOffset = newOffset * changeOffset;

        $u-1#5 = (int) newOffset;

        $u-1#5 = $u18 - $u-1#5;

        $u-1#16 = $u18 - $u-1#5;

        newOffset = (float) $u-1#16;

        changeOffset = (float) childWidth;

        newOffset = newOffset / changeOffset;

     label05:
        changeOffset = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        changeOffset#48 = newOffset cmpl changeOffset;

        if changeOffset#48 == 0 goto label06;

        $u17 = 1;

        goto label07;

     label06:
        $u17 = 0;

     label07:
        $u-1#16 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        $u-1#16 = $u-1#16 & 112;

        if $u-1#16 == 16 goto label09;

        if $u-1#16 == 80 goto label08;

        $u-1#16 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        childWidth = $u-1#5 + childWidth;

        $u-1#20 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        childHeight = $u-1#20 + childHeight;

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>($u-1#5, $u-1#16, childWidth, childHeight);

        goto label12;

     label08:
        childHeight = $u21 - $u19;

        $u-1#16 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $u-1#16 = childHeight - $u-1#16;

        $u-1#20 = virtualinvoke $u-1.<android.view.View: int getMeasuredHeight()>();

        $u-1#16 = $u-1#16 - $u-1#20;

        childWidth = $u-1#5 + childWidth;

        $u-1#20 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        childHeight = childHeight - $u-1#20;

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>($u-1#5, $u-1#16, childWidth, childHeight);

        goto label12;

     label09:
        $u-1#16 = $u21 - $u19;

        $u-1#20 = $u-1#16 - childHeight;

        $u-1#20 = $u-1#20 / 2;

        $u14 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        if $u-1#20 >= $u14 goto label10;

        $u-1#20 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        goto label11;

     label10:
        $u14 = $u-1#20 + childHeight;

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $u15 = $u-1#16 - $u15;

        if $u14 <= $u15 goto label11;

        $u-1#20 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $u-1#16 = $u-1#16 - $u-1#20;

        $u-1#20 = $u-1#16 - childHeight;

     label11:
        childWidth = $u-1#5 + childWidth;

        childHeight = $u-1#20 + childHeight;

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>($u-1#5, $u-1#20, childWidth, childHeight);

     label12:
        if $u17 == 0 goto label13;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>($u-1, newOffset);

     label13:
        newOffset = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        changeOffset#48 = newOffset cmpl 0.0F;

        if changeOffset#48 <= 0 goto label14;

        changeOffset#48 = 0;

        goto label15;

     label14:
        changeOffset#48 = 4;

     label15:
        $u-1#5 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u-1#5 == changeOffset#48 goto label16;

        virtualinvoke $u-1.<android.view.View: void setVisibility(int)>(changeOffset#48);

     label16:
        i = i + 1;

        goto label01;

     label17:
        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout> = 0;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this, $u0;
        int $u21, $u22, $u-1, $u-1#4, $u-1#6, $u-1#8, i, $u-1#24, $u15, $u-1#48;
        boolean $u-1#11, applyInsets#17, hasDrawerOnRightEdge, $u-1#38, cgrav#124;
        java.lang.Object applyInsets;
        android.view.View $u-1#23;
        android.view.ViewGroup$LayoutParams $u-1#32;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        android.view.WindowInsets wi;
        float $u-1#115, cgrav;
        byte widthMode;
        java.lang.IllegalStateException heightMode;
        java.lang.StringBuilder applyInsets#126;
        java.lang.String $u-1#128;
        java.lang.IllegalArgumentException applyInsets#163;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u21 := @parameter0: int;

        $u22 := @parameter1: int;

        $u0 = this;

        $u-1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u21);

        $u-1#4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u22);

        $u-1#6 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u21);

        $u-1#8 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u22);

        if $u-1 != 1073741824 goto label01;

        if $u-1#4 == 1073741824 goto label05;

     label01:
        $u-1#11 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isInEditMode()>();

        if $u-1#11 == 0 goto label30;

        if $u-1 != -2147483648 goto label02;

        goto label03;

     label02:
        if $u-1 != 0 goto label03;

        $u-1#6 = 300;

     label03:
        if $u-1#4 != -2147483648 goto label04;

        goto label05;

     label04:
        if $u-1#4 != 0 goto label05;

        $u-1#8 = 300;

     label05:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setMeasuredDimension(int,int)>($u-1#6, $u-1#8);

        applyInsets = this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        if applyInsets == null goto label06;

        $u-1#11 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(this);

        if $u-1#11 == 0 goto label06;

        applyInsets#17 = 1;

        goto label07;

     label06:
        applyInsets#17 = 0;

     label07:
        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u-1#11 = 0;

        hasDrawerOnRightEdge = 0;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label08:
        if i >= $u-1#4 goto label32;

        $u-1#23 = virtualinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#24 = virtualinvoke $u-1#23.<android.view.View: int getVisibility()>();

        if $u-1#24 != 8 goto label09;

        goto label18;

     label09:
        $u-1#32 = virtualinvoke $u-1#23.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#32;

        if applyInsets#17 == 0 goto label17;

        $u-1#24 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        $u-1#24 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u-1#24, $u-1);

        $u-1#38 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($u-1#23);

        if $u-1#38 == 0 goto label13;

        $u15 = <android.os.Build$VERSION: int SDK_INT>;

        if $u15 < 21 goto label12;

        applyInsets = $u0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        wi = (android.view.WindowInsets) applyInsets;

        if $u-1#24 != 3 goto label10;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $u15 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $u-1#48 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        wi = virtualinvoke wi.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($u-1#24, $u15, 0, $u-1#48);

        goto label11;

     label10:
        if $u-1#24 != 5 goto label11;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $u15 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $u-1#48 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        wi = virtualinvoke wi.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>(0, $u-1#24, $u15, $u-1#48);

     label11:
        virtualinvoke $u-1#23.<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>(wi);

        goto label17;

     label12:
        goto label17;

     label13:
        $u15 = <android.os.Build$VERSION: int SDK_INT>;

        if $u15 < 21 goto label16;

        applyInsets = $u0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        wi = (android.view.WindowInsets) applyInsets;

        if $u-1#24 != 3 goto label14;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $u15 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $u-1#48 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        wi = virtualinvoke wi.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($u-1#24, $u15, 0, $u-1#48);

        goto label15;

     label14:
        if $u-1#24 != 5 goto label15;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $u15 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $u-1#48 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        wi = virtualinvoke wi.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>(0, $u-1#24, $u15, $u-1#48);

     label15:
        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin> = $u-1#24;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin> = $u-1#24;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int rightMargin> = $u-1#24;

        $u-1#24 = virtualinvoke wi.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin> = $u-1#24;

        goto label17;

     label16:
        goto label17;

     label17:
        $u-1#38 = virtualinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>($u-1#23);

        if $u-1#38 == 0 goto label19;

        $u-1#24 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $u-1#24 = $u-1#6 - $u-1#24;

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int rightMargin>;

        $u-1#24 = $u-1#24 - $u15;

        $u-1#24 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u-1#24, 1073741824);

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $u15 = $u-1#8 - $u15;

        $u-1#48 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $u15 = $u15 - $u-1#48;

        $u15 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u15, 1073741824);

        virtualinvoke $u-1#23.<android.view.View: void measure(int,int)>($u-1#24, $u15);

     label18:
        goto label28;

     label19:
        $u-1#38 = virtualinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#23);

        if $u-1#38 == 0 goto label29;

        $u-1#38 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $u-1#38 == 0 goto label20;

        $u-1#115 = staticinvoke <androidx.core.view.ViewCompat: float getElevation(android.view.View)>($u-1#23);

        cgrav = $u0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        widthMode = $u-1#115 cmpl cgrav;

        if widthMode == 0 goto label20;

        staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>($u-1#23, cgrav);

     label20:
        $u-1#24 = virtualinvoke $u0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>($u-1#23);

        $u-1#24 = $u-1#24 & 7;

        if $u-1#24 != 3 goto label21;

        $u-1#38 = 1;

        goto label22;

     label21:
        $u-1#38 = 0;

     label22:
        cgrav#124 = $u-1#38;

        if $u-1#38 == 0 goto label23;

        if $u-1#11 != 0 goto label24;

     label23:
        if cgrav#124 != 0 goto label25;

        if hasDrawerOnRightEdge != 0 goto label24;

        goto label25;

     label24:
        heightMode = new java.lang.IllegalStateException;

        applyInsets#126 = new java.lang.StringBuilder;

        specialinvoke applyInsets#126.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child drawer has absolute gravity ");

        $u-1#128 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)>($u-1#24);

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#128);

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this ");

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrawerLayout");

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already has a ");

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drawer view along that edge");

        $u-1#128 = virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke heightMode.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#128);

        throw heightMode;

     label25:
        if cgrav#124 == 0 goto label26;

        $u-1#11 = 1;

        goto label27;

     label26:
        hasDrawerOnRightEdge = 1;

     label27:
        $u-1#24 = $u0.<androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin>;

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $u-1#24 = $u-1#24 + $u15;

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int rightMargin>;

        $u-1#24 = $u-1#24 + $u15;

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int width>;

        $u-1#24 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: int getChildMeasureSpec(int,int,int)>($u21, $u-1#24, $u15);

        $u15 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $u-1#48 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $u15 = $u15 + $u-1#48;

        $u-1#48 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int height>;

        $u15 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: int getChildMeasureSpec(int,int,int)>($u22, $u15, $u-1#48);

        virtualinvoke $u-1#23.<android.view.View: void measure(int,int)>($u-1#24, $u15);

     label28:
        i = i + 1;

        $u0 = this;

        goto label08;

     label29:
        heightMode = new java.lang.IllegalStateException;

        applyInsets#126 = new java.lang.StringBuilder;

        specialinvoke applyInsets#126.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#23);

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a valid layout_gravity - must be Gravity.LEFT, ");

        virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Gravity.RIGHT or Gravity.NO_GRAVITY");

        $u-1#128 = virtualinvoke applyInsets#126.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke heightMode.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#128);

        throw heightMode;

     label30:
        applyInsets#163 = new java.lang.IllegalArgumentException;

        specialinvoke applyInsets#163.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DrawerLayout must be measured with MeasureSpec.EXACTLY.");

        goto label31;

     label31:
        throw applyInsets#163;

     label32:
        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.os.Parcelable $u5;
        boolean ss;
        androidx.drawerlayout.widget.DrawerLayout$SavedState ss#3;
        int toOpen;
        android.view.View $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: android.os.Parcelable;

        ss = $u5 instanceof androidx.drawerlayout.widget.DrawerLayout$SavedState;

        if ss != 0 goto label1;

        specialinvoke this.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($u5);

        return;

     label1:
        ss#3 = (androidx.drawerlayout.widget.DrawerLayout$SavedState) $u5;

        $u5 = virtualinvoke ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke this.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($u5);

        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity>;

        if toOpen == 0 goto label2;

        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity>;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(toOpen);

        if $u-1 == null goto label2;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)>($u-1);

     label2:
        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft>;

        if toOpen == 3 goto label3;

        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(toOpen, 3);

     label3:
        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight>;

        if toOpen == 3 goto label4;

        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(toOpen, 5);

     label4:
        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart>;

        if toOpen == 3 goto label5;

        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(toOpen, 8388611);

     label5:
        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd>;

        if toOpen == 3 goto label6;

        toOpen = ss#3.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(toOpen, 8388613);

     label6:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u1 := @parameter0: int;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        androidx.drawerlayout.widget.DrawerLayout$SavedState ss;
        int $u9, $u-1#2, i;
        android.os.Parcelable $u-1;
        android.view.View $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1#5;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        boolean isClosedAndOpening, isOpenedAndNotClosing;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u-1 = specialinvoke this.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        ss = new androidx.drawerlayout.widget.DrawerLayout$SavedState;

        specialinvoke ss.<androidx.drawerlayout.widget.DrawerLayout$SavedState: void <init>(android.os.Parcelable)>($u-1);

        $u-1#2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i = 0;

     label1:
        if i >= $u-1#2 goto label7;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#5 = virtualinvoke $u-1#4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#5;

        $u9 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        isClosedAndOpening = 0;

        if $u9 != 1 goto label2;

        isOpenedAndNotClosing = 1;

        goto label3;

     label2:
        isOpenedAndNotClosing = 0;

     label3:
        $u9 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        if $u9 != 2 goto label4;

        isClosedAndOpening = 1;

     label4:
        if isOpenedAndNotClosing != 0 goto label6;

        if isClosedAndOpening == 0 goto label5;

        goto label6;

     label5:
        i = i + 1;

        goto label1;

     label6:
        $u-1#2 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        ss.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity> = $u-1#2;

     label7:
        $u-1#2 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        ss.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft> = $u-1#2;

        $u-1#2 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        ss.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight> = $u-1#2;

        $u-1#2 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        ss.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart> = $u-1#2;

        $u-1#2 = this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        ss.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd> = $u-1#2;

        return ss;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.MotionEvent $u15;
        androidx.customview.widget.ViewDragHelper action;
        int $u-1, dy;
        boolean y, peekingOnly, $u-1#18;
        float $u-1#8, $u-1#10, dx;
        android.view.View $u-1#16;
        byte openDrawer;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u15 := @parameter0: android.view.MotionEvent;

        action = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke action.<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>($u15);

        action = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke action.<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>($u15);

        $u-1 = virtualinvoke $u15.<android.view.MotionEvent: int getAction()>();

        $u-1 = $u-1 & 255;

        if $u-1 == 0 goto label6;

        y = 1;

        if $u-1 == 1 goto label2;

        if $u-1 == 3 goto label1;

        return 1;

     label1:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(1);

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        return 1;

     label2:
        $u-1#8 = virtualinvoke $u15.<android.view.MotionEvent: float getX()>();

        $u-1#10 = virtualinvoke $u15.<android.view.MotionEvent: float getY()>();

        peekingOnly = 1;

        action = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u-1 = (int) $u-1#8;

        dy = (int) $u-1#10;

        $u-1#16 = virtualinvoke action.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($u-1, dy);

        if $u-1#16 == null goto label5;

        $u-1#18 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>($u-1#16);

        if $u-1#18 == 0 goto label5;

        dx = this.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX>;

        $u-1#8 = $u-1#8 - dx;

        dx = this.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY>;

        $u-1#10 = $u-1#10 - dx;

        action = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u-1 = virtualinvoke action.<androidx.customview.widget.ViewDragHelper: int getTouchSlop()>();

        $u-1#8 = $u-1#8 * $u-1#8;

        $u-1#10 = $u-1#10 * $u-1#10;

        $u-1#10 = $u-1#8 + $u-1#10;

        $u-1 = $u-1 * $u-1;

        $u-1#8 = (float) $u-1;

        openDrawer = $u-1#10 cmpg $u-1#8;

        if openDrawer >= 0 goto label5;

        $u-1#16 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()>();

        if $u-1#16 == null goto label5;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($u-1#16);

        if $u-1 != 2 goto label3;

        goto label4;

     label3:
        y = 0;

     label4:
        peekingOnly = y;

     label5:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(peekingOnly);

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        return 1;

     label6:
        $u-1#10 = virtualinvoke $u15.<android.view.MotionEvent: float getX()>();

        $u-1#8 = virtualinvoke $u15.<android.view.MotionEvent: float getY()>();

        this.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX> = $u-1#10;

        this.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY> = $u-1#8;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        return 1;
    }

    public void openDrawer(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)>($u2, 1);

        return;
    }

    public void openDrawer(int, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u5;
        boolean $u6;
        java.lang.IllegalArgumentException $u1;
        android.view.View $u-1;
        java.lang.StringBuilder $u2;
        java.lang.String $u-1#4;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: int;

        $u6 := @parameter1: boolean;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($u5);

        if $u-1 == null goto label1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)>($u-1, $u6);

        return;

     label1:
        $u1 = new java.lang.IllegalArgumentException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No drawer view found with gravity ");

        $u-1#4 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)>($u5);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#4);

        $u-1#4 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#4);

        throw $u1;
    }

    public void openDrawer(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: android.view.View;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)>($u2, 1);

        return;
    }

    public void openDrawer(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u5;
        boolean $u6, $u-1;
        android.view.ViewGroup$LayoutParams $u-1#3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        int $u2, $u-1#21;
        androidx.customview.widget.ViewDragHelper $u2#15;
        java.lang.IllegalArgumentException lp#27;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#31;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: boolean;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u5);

        if $u-1 == 0 goto label5;

        $u-1#3 = virtualinvoke $u5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#3;

        $u-1 = this.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout>;

        if $u-1 == 0 goto label1;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen> = 1.0F;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 1;

        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)>($u5, 1);

        goto label4;

     label1:
        if $u6 == 0 goto label3;

        $u2 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $u2 = $u2 | 2;

        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = $u2;

        $u6 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($u5, 3);

        if $u6 == 0 goto label2;

        $u2#15 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u2 = virtualinvoke $u5.<android.view.View: int getTop()>();

        virtualinvoke $u2#15.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($u5, 0, $u2);

        goto label4;

     label2:
        $u2#15 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u2 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        $u-1#21 = virtualinvoke $u5.<android.view.View: int getWidth()>();

        $u2 = $u2 - $u-1#21;

        $u-1#21 = virtualinvoke $u5.<android.view.View: int getTop()>();

        virtualinvoke $u2#15.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($u5, $u2, $u-1#21);

        goto label4;

     label3:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)>($u5, 1.0F);

        $u2 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)>($u2, 0, $u5);

        virtualinvoke $u5.<android.view.View: void setVisibility(int)>(0);

     label4:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;

     label5:
        lp#27 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sliding drawer");

        $u-1#31 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke lp#27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#31);

        throw lp#27;
    }

    public void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u2;
        java.util.List $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: androidx.drawerlayout.widget.DrawerLayout$DrawerListener;

        if $u2 != null goto label1;

        return;

     label1:
        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $u0 != null goto label2;

        return;

     label2:
        interfaceinvoke $u0.<java.util.List: boolean remove(java.lang.Object)>($u2);

        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: boolean;

        specialinvoke this.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>($u2);

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested> = $u2;

        if $u2 == 0 goto label1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(1);

     label1:
        return;
    }

    public void requestLayout()
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        boolean $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout>;

        if $u0 != 0 goto label1;

        specialinvoke this.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setChildInsets(java.lang.Object, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        java.lang.Object $u2;
        boolean $u3;
        android.graphics.drawable.Drawable $u-1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: java.lang.Object;

        $u3 := @parameter1: boolean;

        this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets> = $u2;

        this.<androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground> = $u3;

        if $u3 != 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getBackground()>();

        if $u-1 != null goto label1;

        $u3 = 1;

        goto label2;

     label1:
        $u3 = 0;

     label2:
        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setWillNotDraw(boolean)>($u3);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void requestLayout()>();

        return;
    }

    public void setDrawerElevation(float)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        float $u4;
        int i, $u-1;
        android.view.View $u-1#4;
        boolean $u-1#6;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: float;

        this.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation> = $u4;

        i = 0;

     label1:
        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        if i >= $u-1 goto label3;

        $u-1#4 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i);

        $u-1#6 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u-1#4);

        if $u-1#6 == 0 goto label2;

        $u4 = this.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>($u-1#4, $u4);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    public void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u2, $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: androidx.drawerlayout.widget.DrawerLayout$DrawerListener;

        $u0 = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener>;

        if $u0 == null goto label1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>($u0);

     label1:
        if $u2 == null goto label2;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>($u2);

     label2:
        this.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener> = $u2;

        return;
    }

    public void setDrawerLockMode(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($u2, 3);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($u2, 5);

        return;
    }

    public void setDrawerLockMode(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u4, $u5, $u-1;
        androidx.customview.widget.ViewDragHelper helper;
        android.view.View $u-1#12;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u-1 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u5, $u-1);

        if $u5 == 3 goto label04;

        if $u5 == 5 goto label03;

        if $u5 == 8388611 goto label02;

        if $u5 == 8388613 goto label01;

        goto label05;

     label01:
        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd> = $u4;

        goto label05;

     label02:
        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart> = $u4;

        goto label05;

     label03:
        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight> = $u4;

        goto label05;

     label04:
        this.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft> = $u4;

     label05:
        if $u4 == 0 goto label08;

        if $u-1 != 3 goto label06;

        helper = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        goto label07;

     label06:
        helper = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

     label07:
        virtualinvoke helper.<androidx.customview.widget.ViewDragHelper: void cancel()>();

     label08:
        if $u4 == 1 goto label10;

        if $u4 == 2 goto label09;

        return;

     label09:
        $u-1#12 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($u-1);

        if $u-1#12 == null goto label11;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)>($u-1#12);

        return;

     label10:
        $u-1#12 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($u-1);

        if $u-1#12 == null goto label11;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)>($u-1#12);

     label11:
        return;
    }

    public void setDrawerLockMode(int, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u4, gravity#6;
        android.view.View $u5;
        boolean $u-1;
        android.view.ViewGroup$LayoutParams $u-1#3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams gravity;
        java.lang.IllegalArgumentException gravity#7;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#12;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u4 := @parameter0: int;

        $u5 := @parameter1: android.view.View;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($u5);

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke $u5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        gravity = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#3;

        gravity#6 = gravity.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($u4, gravity#6);

        return;

     label1:
        gravity#7 = new java.lang.IllegalArgumentException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a ");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drawer with appropriate layout_gravity");

        $u-1#12 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke gravity#7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#12);

        throw gravity#7;
    }

    public void setDrawerShadow(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2, $u3;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u-1#3;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.content.Context getContext()>();

        $u-1#3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u-1, $u2);

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>($u-1#3, $u3);

        return;
    }

    public void setDrawerShadow(android.graphics.drawable.Drawable, int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.graphics.drawable.Drawable $u3;
        int $u4, $u1;
        boolean $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.graphics.drawable.Drawable;

        $u4 := @parameter1: int;

        $u0 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $u0 == 0 goto label1;

        return;

     label1:
        $u1 = $u4 & 8388611;

        if $u1 != 8388611 goto label2;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart> = $u3;

        goto label5;

     label2:
        $u1 = $u4 & 8388613;

        if $u1 != 8388613 goto label3;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd> = $u3;

        goto label5;

     label3:
        $u1 = $u4 & 3;

        if $u1 != 3 goto label4;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft> = $u3;

        goto label5;

     label4:
        $u4 = $u4 & 5;

        if $u4 != 5 goto label6;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight> = $u3;

     label5:
        specialinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>();

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

     label6:
        return;
    }

    public void setDrawerTitle(int, java.lang.CharSequence)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u3, $u-1;
        java.lang.CharSequence $u4;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: int;

        $u4 := @parameter1: java.lang.CharSequence;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u3 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u3, $u-1);

        if $u3 != 3 goto label1;

        this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft> = $u4;

        return;

     label1:
        if $u3 != 5 goto label2;

        this.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight> = $u4;

     label2:
        return;
    }

    void setDrawerViewOffset(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.view.View $u3;
        float $u4, $u1;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        byte $u1#4;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: float;

        $u-1 = virtualinvoke $u3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1;

        $u1 = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $u1#4 = $u4 cmpl $u1;

        if $u1#4 != 0 goto label1;

        return;

     label1:
        lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen> = $u4;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)>($u3, $u4);

        return;
    }

    public void setScrimColor(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u1 := @parameter0: int;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor> = $u1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setStatusBarBackground(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u-1#3;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        if $u2 == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: android.content.Context getContext()>();

        $u-1#3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u-1, $u2);

        goto label2;

     label1:
        $u-1#3 = null;

     label2:
        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $u-1#3;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        android.graphics.drawable.Drawable $u1;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u1 := @parameter0: android.graphics.drawable.Drawable;

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $u1;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setStatusBarBackgroundColor(int)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u2;
        android.graphics.drawable.ColorDrawable $u0;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u2 := @parameter0: int;

        $u0 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $u0.<android.graphics.drawable.ColorDrawable: void <init>(int)>($u2);

        this.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $u0;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    void updateDrawerState(int, int, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout this;
        int $u7, $u8, $u-1;
        android.view.View $u9;
        androidx.customview.widget.ViewDragHelper leftState;
        byte state, i#15;
        android.view.ViewGroup$LayoutParams $u-1#10;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams lp;
        float i;
        java.util.List lp#20;
        java.lang.Object $u-1#25;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $u5;

        this := @this: androidx.drawerlayout.widget.DrawerLayout;

        $u7 := @parameter0: int;

        $u8 := @parameter1: int;

        $u9 := @parameter2: android.view.View;

        leftState = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $u7 = virtualinvoke leftState.<androidx.customview.widget.ViewDragHelper: int getViewDragState()>();

        leftState = this.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $u-1 = virtualinvoke leftState.<androidx.customview.widget.ViewDragHelper: int getViewDragState()>();

        if $u7 == 1 goto label4;

        if $u-1 != 1 goto label1;

        goto label4;

     label1:
        if $u7 == 2 goto label3;

        if $u-1 != 2 goto label2;

        goto label3;

     label2:
        state = 0;

        goto label5;

     label3:
        state = 2;

        goto label5;

     label4:
        state = 1;

     label5:
        if $u9 == null goto label7;

        if $u8 != 0 goto label7;

        $u-1#10 = virtualinvoke $u9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $u-1#10;

        i = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        i#15 = i cmpl 0.0F;

        if i#15 != 0 goto label6;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)>($u9);

        goto label7;

     label6:
        i = lp.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        i#15 = i cmpl 1.0F;

        if i#15 != 0 goto label7;

        virtualinvoke this.<androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)>($u9);

     label7:
        $u7 = this.<androidx.drawerlayout.widget.DrawerLayout: int mDrawerState>;

        if state == $u7 goto label9;

        this.<androidx.drawerlayout.widget.DrawerLayout: int mDrawerState> = state;

        lp#20 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if lp#20 == null goto label9;

        $u7 = interfaceinvoke lp#20.<java.util.List: int size()>();

        $u7 = $u7 + -1;

     label8:
        if $u7 < 0 goto label9;

        lp#20 = this.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $u-1#25 = interfaceinvoke lp#20.<java.util.List: java.lang.Object get(int)>($u7);

        $u5 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $u-1#25;

        interfaceinvoke $u5.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerStateChanged(int)>(state);

        $u7 = $u7 + -1;

        goto label8;

     label9:
        return;
    }
}
