class androidx.arch.core.executor.DefaultTaskExecutor$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private static final java.lang.String THREAD_NAME_STEM;
    private final java.util.concurrent.atomic.AtomicInteger mThreadId;
    final androidx.arch.core.executor.DefaultTaskExecutor this$0;

    void <init>(androidx.arch.core.executor.DefaultTaskExecutor)
    {
        androidx.arch.core.executor.DefaultTaskExecutor$1 this;
        androidx.arch.core.executor.DefaultTaskExecutor $u3;
        java.util.concurrent.atomic.AtomicInteger $u0;

        this := @this: androidx.arch.core.executor.DefaultTaskExecutor$1;

        $u3 := @parameter0: androidx.arch.core.executor.DefaultTaskExecutor;

        this.<androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0> = $u3;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $u0.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        this.<androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId> = $u0;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        androidx.arch.core.executor.DefaultTaskExecutor$1 this;
        java.lang.Runnable $u5;
        java.lang.Thread t;
        java.lang.Object[] $u1;
        java.util.concurrent.atomic.AtomicInteger $u2;
        int $u-1;
        java.lang.Integer $u-1#6;
        java.lang.String $u-1#9;

        this := @this: androidx.arch.core.executor.DefaultTaskExecutor$1;

        $u5 := @parameter0: java.lang.Runnable;

        t = new java.lang.Thread;

        specialinvoke t.<java.lang.Thread: void <init>(java.lang.Runnable)>($u5);

        $u1 = newarray (java.lang.Object)[1];

        $u2 = this.<androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId>;

        $u-1 = virtualinvoke $u2.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $u-1#6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u-1);

        $u1[0] = $u-1#6;

        $u-1#9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("arch_disk_io_%d", $u1);

        virtualinvoke t.<java.lang.Thread: void setName(java.lang.String)>($u-1#9);

        return t;
    }

    public static void <clinit>()
    {
        <androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.String THREAD_NAME_STEM> = "arch_disk_io_%d";

        return;
    }
}
