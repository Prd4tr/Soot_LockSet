public class androidx.appcompat.view.menu.ActionMenuItemView extends androidx.appcompat.widget.AppCompatTextView implements androidx.appcompat.view.menu.MenuView$ItemView, android.view.View$OnClickListener, androidx.appcompat.widget.ActionMenuView$ActionMenuChildView
{
    private static final int MAX_ICON_SIZE;
    private static final java.lang.String TAG;
    private boolean mAllowTextWithIcon;
    private boolean mExpandedFormat;
    private androidx.appcompat.widget.ForwardingListener mForwardingListener;
    private android.graphics.drawable.Drawable mIcon;
    androidx.appcompat.view.menu.MenuItemImpl mItemData;
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker;
    private int mMaxIconSize;
    private int mMinWidth;
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback;
    private int mSavedPaddingLeft;
    private java.lang.CharSequence mTitle;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.content.Context $u2;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.content.Context $u7;
        android.util.AttributeSet $u8;
        int $u9;
        android.content.res.Resources $u-1;
        boolean $u-1#2;
        int[] a;
        android.content.res.TypedArray $u-1#5;
        android.util.DisplayMetrics $u-1#10;
        float density;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u7 := @parameter0: android.content.Context;

        $u8 := @parameter1: android.util.AttributeSet;

        $u9 := @parameter2: int;

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($u7, $u8, $u9);

        $u-1 = virtualinvoke $u7.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#2 = specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()>();

        this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon> = $u-1#2;

        a = <androidx.appcompat.R$styleable: int[] ActionMenuItemView>;

        $u-1#5 = virtualinvoke $u7.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($u8, a, $u9, 0);

        $u9 = <androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth>;

        $u9 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u9, 0);

        this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth> = $u9;

        virtualinvoke $u-1#5.<android.content.res.TypedArray: void recycle()>();

        $u-1#10 = virtualinvoke $u-1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        density = $u-1#10.<android.util.DisplayMetrics: float density>;

        density = 32.0F * density;

        density = density + 0.5F;

        $u9 = (int) density;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize> = $u9;

        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setOnClickListener(android.view.View$OnClickListener)>(this);

        this.<androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft> = -1;

        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setSaveEnabled(boolean)>(0);

        return;
    }

    private boolean shouldAllowTextWithIcon()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        int widthDp, heightDp;
        android.content.Context $u-1;
        android.content.res.Resources $u-1#3;
        android.content.res.Configuration $u-1#5;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u-1 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#5 = virtualinvoke $u-1#3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        widthDp = $u-1#5.<android.content.res.Configuration: int screenWidthDp>;

        heightDp = $u-1#5.<android.content.res.Configuration: int screenHeightDp>;

        if widthDp >= 480 goto label3;

        if widthDp < 640 goto label1;

        if heightDp >= 480 goto label3;

     label1:
        widthDp = $u-1#5.<android.content.res.Configuration: int orientation>;

        if widthDp != 2 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private void updateTextButtonVisibility()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        java.lang.CharSequence visible, contentDescription#14;
        boolean $u-1, $u1, $u-1#8;
        android.graphics.drawable.Drawable contentDescription;
        androidx.appcompat.view.menu.MenuItemImpl contentDescription#7;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        visible = this.<androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(visible);

        $u1 = 1;

        $u-1 = $u-1 ^ 1;

        contentDescription = this.<androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        if contentDescription == null goto label03;

        contentDescription#7 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        $u-1#8 = virtualinvoke contentDescription#7.<androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()>();

        if $u-1#8 == 0 goto label02;

        $u-1#8 = this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon>;

        if $u-1#8 != 0 goto label01;

        $u-1#8 = this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat>;

        if $u-1#8 == 0 goto label02;

     label01:
        goto label03;

     label02:
        $u1 = 0;

        goto label03;

     label03:
        $u1 = $u-1 & $u1;

        visible = null;

        if $u1 == 0 goto label04;

        contentDescription#14 = this.<androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

        goto label05;

     label04:
        contentDescription#14 = null;

     label05:
        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setText(java.lang.CharSequence)>(contentDescription#14);

        contentDescription#7 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        contentDescription#14 = virtualinvoke contentDescription#7.<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()>();

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(contentDescription#14);

        if $u-1 == 0 goto label08;

        if $u1 == 0 goto label06;

        contentDescription#14 = null;

        goto label07;

     label06:
        contentDescription#7 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        contentDescription#14 = virtualinvoke contentDescription#7.<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

     label07:
        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setContentDescription(java.lang.CharSequence)>(contentDescription#14);

        goto label09;

     label08:
        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setContentDescription(java.lang.CharSequence)>(contentDescription#14);

     label09:
        contentDescription#7 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        contentDescription#14 = virtualinvoke contentDescription#7.<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()>();

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(contentDescription#14);

        if $u-1 == 0 goto label12;

        if $u1 == 0 goto label10;

        goto label11;

     label10:
        contentDescription#7 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        visible = virtualinvoke contentDescription#7.<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

     label11:
        staticinvoke <androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>(this, visible);

        return;

     label12:
        staticinvoke <androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>(this, contentDescription#14);

        return;
    }

    public androidx.appcompat.view.menu.MenuItemImpl getItemData()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        androidx.appcompat.view.menu.MenuItemImpl ret0;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        ret0 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        return ret0;
    }

    public boolean hasText()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        java.lang.CharSequence $u-1;
        boolean $u-1#3;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u-1 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getText()>();

        $u-1#3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u-1);

        $u-1#3 = $u-1#3 ^ 1;

        return $u-1#3;
    }

    public void initialize(androidx.appcompat.view.menu.MenuItemImpl, int)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        androidx.appcompat.view.menu.MenuItemImpl $u2;
        int $u3;
        android.graphics.drawable.Drawable $u-1;
        java.lang.CharSequence $u-1#3;
        boolean $u-1#7;
        byte $u0;
        androidx.appcompat.widget.ForwardingListener $u0#14;
        androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener $u0#15;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: androidx.appcompat.view.menu.MenuItemImpl;

        $u3 := @parameter1: int;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData> = $u2;

        $u-1 = virtualinvoke $u2.<androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($u-1);

        $u-1#3 = virtualinvoke $u2.<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)>(this);

        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>($u-1#3);

        $u3 = virtualinvoke $u2.<androidx.appcompat.view.menu.MenuItemImpl: int getItemId()>();

        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setId(int)>($u3);

        $u-1#7 = virtualinvoke $u2.<androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()>();

        if $u-1#7 == 0 goto label1;

        $u0 = 0;

        goto label2;

     label1:
        $u0 = 8;

     label2:
        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setVisibility(int)>($u0);

        $u-1#7 = virtualinvoke $u2.<androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()>();

        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setEnabled(boolean)>($u-1#7);

        $u-1#7 = virtualinvoke $u2.<androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $u-1#7 == 0 goto label3;

        $u0#14 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener>;

        if $u0#14 != null goto label3;

        $u0#15 = new androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener;

        specialinvoke $u0#15.<androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: void <init>(androidx.appcompat.view.menu.ActionMenuItemView)>(this);

        this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener> = $u0#15;

     label3:
        return;
    }

    public boolean needsDividerAfter()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        boolean $u-1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u-1 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()>();

        return $u-1;
    }

    public boolean needsDividerBefore()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        boolean $u-1;
        androidx.appcompat.view.menu.MenuItemImpl $u0;
        android.graphics.drawable.Drawable $u-1#4;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u-1 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()>();

        if $u-1 == 0 goto label1;

        $u0 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        $u-1#4 = virtualinvoke $u0.<androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        if $u-1#4 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onClick(android.view.View)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.view.View $u3;
        androidx.appcompat.view.menu.MenuBuilder$ItemInvoker $u0;
        androidx.appcompat.view.menu.MenuItemImpl $u1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u3 := @parameter0: android.view.View;

        $u0 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker>;

        if $u0 == null goto label1;

        $u1 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        interfaceinvoke $u0.<androidx.appcompat.view.menu.MenuBuilder$ItemInvoker: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)>($u1);

     label1:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.content.res.Configuration $u2;
        boolean $u-1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: android.content.res.Configuration;

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void onConfigurationChanged(android.content.res.Configuration)>($u2);

        $u-1 = specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()>();

        this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon> = $u-1;

        specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        int $u12, $u13, widthMode, $u-1#3, $u-1#5, $u-1#7;
        boolean $u-1;
        android.graphics.drawable.Drawable w;
        android.graphics.Rect $u-1#27;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u12 := @parameter0: int;

        $u13 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()>();

        if $u-1 == 0 goto label1;

        widthMode = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft>;

        if widthMode < 0 goto label1;

        $u-1#3 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getPaddingTop()>();

        $u-1#5 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getPaddingRight()>();

        $u-1#7 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getPaddingBottom()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void setPadding(int,int,int,int)>(widthMode, $u-1#3, $u-1#5, $u-1#7);

     label1:
        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)>($u12, $u13);

        widthMode = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u12);

        $u-1#3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u12);

        $u12 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getMeasuredWidth()>();

        if widthMode != -2147483648 goto label2;

        $u-1#5 = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth>;

        $u-1#3 = staticinvoke <java.lang.Math: int min(int,int)>($u-1#3, $u-1#5);

        goto label3;

     label2:
        $u-1#3 = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth>;

     label3:
        if widthMode == 1073741824 goto label4;

        widthMode = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth>;

        if widthMode <= 0 goto label4;

        if $u12 >= $u-1#3 goto label4;

        $u12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u-1#3, 1073741824);

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)>($u12, $u13);

     label4:
        if $u-1 != 0 goto label5;

        w = this.<androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        if w == null goto label5;

        $u12 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getMeasuredWidth()>();

        w = this.<androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        $u-1#27 = virtualinvoke w.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $u13 = virtualinvoke $u-1#27.<android.graphics.Rect: int width()>();

        $u12 = $u12 - $u13;

        $u12 = $u12 / 2;

        $u13 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getPaddingTop()>();

        widthMode = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getPaddingRight()>();

        $u-1#3 = virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: int getPaddingBottom()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void setPadding(int,int,int,int)>($u12, $u13, widthMode, $u-1#3);

     label5:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.os.Parcelable $u2;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: android.os.Parcelable;

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void onRestoreInstanceState(android.os.Parcelable)>(null);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.view.MotionEvent $u2;
        androidx.appcompat.view.menu.MenuItemImpl $u0;
        boolean $u-1;
        androidx.appcompat.widget.ForwardingListener $u0#4;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: android.view.MotionEvent;

        $u0 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $u-1 == 0 goto label1;

        $u0#4 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener>;

        if $u0#4 == null goto label1;

        $u-1 = virtualinvoke $u0#4.<androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(this, $u2);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: boolean onTouchEvent(android.view.MotionEvent)>($u2);

        return $u-1;
    }

    public boolean prefersCondensedTitle()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        return 1;
    }

    public void setCheckable(boolean)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        boolean $u1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: boolean;

        return;
    }

    public void setChecked(boolean)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        boolean $u1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: boolean;

        return;
    }

    public void setExpandedFormat(boolean)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        boolean $u2, $u0;
        androidx.appcompat.view.menu.MenuItemImpl $u0#2;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat>;

        if $u0 == $u2 goto label1;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat> = $u2;

        $u0#2 = this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData>;

        if $u0#2 == null goto label1;

        virtualinvoke $u0#2.<androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()>();

     label1:
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        android.graphics.drawable.Drawable $u5;
        int $u-1, width, $u-1#3, height, scale;
        float scale#6, $u3;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u5 := @parameter0: android.graphics.drawable.Drawable;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon> = $u5;

        if $u5 == null goto label3;

        $u-1 = virtualinvoke $u5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        width = $u-1;

        $u-1#3 = virtualinvoke $u5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        height = $u-1#3;

        scale = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize>;

        if $u-1 <= scale goto label1;

        scale#6 = (float) scale;

        $u3 = (float) $u-1;

        scale#6 = scale#6 / $u3;

        width = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $u3 = (float) $u-1#3;

        scale#6 = $u3 * scale#6;

        height = (int) scale#6;

     label1:
        $u-1 = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize>;

        if height <= $u-1 goto label2;

        scale#6 = (float) $u-1;

        $u3 = (float) height;

        scale#6 = scale#6 / $u3;

        height = this.<androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $u3 = (float) width;

        scale#6 = $u3 * scale#6;

        width = (int) scale#6;

     label2:
        virtualinvoke $u5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, width, height);

     label3:
        virtualinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u5, null, null, null);

        specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        androidx.appcompat.view.menu.MenuBuilder$ItemInvoker $u1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker> = $u1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        int $u1, $u2, $u3, $u4;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft> = $u1;

        specialinvoke this.<androidx.appcompat.widget.AppCompatTextView: void setPadding(int,int,int,int)>($u1, $u2, $u3, $u4);

        return;
    }

    public void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback $u1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback> = $u1;

        return;
    }

    public void setShortcut(boolean, char)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        boolean $u1;
        char $u2;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: boolean;

        $u2 := @parameter1: char;

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;
        java.lang.CharSequence $u1;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        $u1 := @parameter0: java.lang.CharSequence;

        this.<androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle> = $u1;

        specialinvoke this.<androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public boolean showsIcon()
    {
        androidx.appcompat.view.menu.ActionMenuItemView this;

        this := @this: androidx.appcompat.view.menu.ActionMenuItemView;

        return 1;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.view.menu.ActionMenuItemView: java.lang.String TAG> = "ActionMenuItemView";

        <androidx.appcompat.view.menu.ActionMenuItemView: int MAX_ICON_SIZE> = 32;

        return;
    }
}
