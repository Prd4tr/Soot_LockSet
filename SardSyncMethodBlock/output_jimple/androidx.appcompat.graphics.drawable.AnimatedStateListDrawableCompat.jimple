public class androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat extends androidx.appcompat.graphics.drawable.StateListDrawable implements androidx.core.graphics.drawable.TintAwareDrawable
{
    private static final java.lang.String ELEMENT_ITEM;
    private static final java.lang.String ELEMENT_TRANSITION;
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR;
    private static final java.lang.String LOGTAG;
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR;
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID;
    private boolean mMutated;
    private androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState;
    private androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition;
    private int mTransitionFromIndex;
    private int mTransitionToIndex;

    static void <clinit>()
    {
        java.lang.String $u-1;
        java.lang.Class $u0;

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String TRANSITION_MISSING_FROM_TO_ID> = ": <transition> tag requires \'fromId\' & \'toId\' attributes";

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR> = ": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable";

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ITEM_MISSING_DRAWABLE_ERROR> = ": <item> tag requires a \'drawable\' attribute or child tag defining a drawable";

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ELEMENT_TRANSITION> = "transition";

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ELEMENT_ITEM> = "item";

        $u0 = class "Landroidx/appcompat/graphics/drawable/AnimatedStateListDrawableCompat;";

        $u-1 = virtualinvoke $u0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG> = $u-1;

        return;
    }

    public void <init>()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>(null, null);

        return;
    }

    void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState, android.content.res.Resources)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u3, newState;
        android.content.res.Resources $u4;
        int[] $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u3 := @parameter0: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        $u4 := @parameter1: android.content.res.Resources;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)>(null);

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = -1;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = -1;

        newState = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        specialinvoke newState.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>($u3, this, $u4);

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>(newState);

        $u-1 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>();

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($u-1);

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>();

        return;
    }

    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context, int, android.content.res.Resources$Theme)
    {
        android.content.Context $u7;
        int $u8;
        android.content.res.Resources$Theme $u9;
        android.content.res.Resources $u-1;
        android.content.res.XmlResourceParser $u-1#4;
        android.util.AttributeSet $u-1#6;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat $u-1#11;
        org.xmlpull.v1.XmlPullParserException $u4;
        java.io.IOException res;
        java.lang.String parser;

        $u7 := @parameter0: android.content.Context;

        $u8 := @parameter1: int;

        $u9 := @parameter2: android.content.res.Resources$Theme;

     label01:
        $u-1 = virtualinvoke $u7.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#4 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($u8);

        $u-1#6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($u-1#4);

     label02:
        $u8 = interfaceinvoke $u-1#4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label03:
        if $u8 == 2 goto label04;

        if $u8 == 1 goto label04;

        goto label02;

     label04:
        if $u8 != 2 goto label07;

     label05:
        $u-1#11 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u7, $u-1, $u-1#4, $u-1#6, $u9);

     label06:
        return $u-1#11;

     label07:
        $u4 = new org.xmlpull.v1.XmlPullParserException;

     label08:
        specialinvoke $u4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

     label09:
        throw $u4;

     label10:
        res := @caughtexception;

        parser = <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(parser, "parser error", res);

        goto label12;

     label11:
        $u4 := @caughtexception;

        parser = <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(parser, "parser error", $u4);

     label12:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label03 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label10 with label11;
        catch java.io.IOException from label01 to label03 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context $u8;
        android.content.res.Resources $u9;
        org.xmlpull.v1.XmlPullParser $u10;
        android.util.AttributeSet $u11;
        android.content.res.Resources$Theme $u12;
        java.lang.String $u-1, $u-1#10;
        boolean $u-1#3;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat asl;
        org.xmlpull.v1.XmlPullParserException asl#8;
        java.lang.StringBuilder $u2;

        $u8 := @parameter0: android.content.Context;

        $u9 := @parameter1: android.content.res.Resources;

        $u10 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u11 := @parameter3: android.util.AttributeSet;

        $u12 := @parameter4: android.content.res.Resources$Theme;

        $u-1 = interfaceinvoke $u10.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#3 = virtualinvoke $u-1.<java.lang.String: boolean equals(java.lang.Object)>("animated-selector");

        if $u-1#3 == 0 goto label1;

        asl = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke asl.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>()>();

        virtualinvoke asl.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u8, $u9, $u10, $u11, $u12);

        return asl;

     label1:
        asl#8 = new org.xmlpull.v1.XmlPullParserException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $u-1#10 = interfaceinvoke $u10.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#10);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid animated-selector tag ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke asl#8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1);

        throw asl#8;
    }

    private void inflateChildElements(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.Context $u7;
        android.content.res.Resources $u8;
        org.xmlpull.v1.XmlPullParser $u9;
        android.util.AttributeSet $u10;
        android.content.res.Resources$Theme $u11;
        int $u-1, $u-1#4, $u-1#6;
        java.lang.String $u-1#10;
        boolean $u-1#13;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u7 := @parameter0: android.content.Context;

        $u8 := @parameter1: android.content.res.Resources;

        $u9 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u10 := @parameter3: android.util.AttributeSet;

        $u11 := @parameter4: android.content.res.Resources$Theme;

        $u-1 = interfaceinvoke $u9.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $u-1 = $u-1 + 1;

     label1:
        $u-1#4 = interfaceinvoke $u9.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $u-1#4 == 1 goto label6;

        $u-1#6 = interfaceinvoke $u9.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $u-1#6 >= $u-1 goto label2;

        if $u-1#4 == 3 goto label6;

     label2:
        if $u-1#4 == 2 goto label3;

        goto label1;

     label3:
        if $u-1#6 <= $u-1 goto label4;

        goto label1;

     label4:
        $u-1#10 = interfaceinvoke $u9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#13 = virtualinvoke $u-1#10.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $u-1#13 == 0 goto label5;

        specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u7, $u8, $u9, $u10, $u11);

        goto label1;

     label5:
        $u-1#10 = interfaceinvoke $u9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#13 = virtualinvoke $u-1#10.<java.lang.String: boolean equals(java.lang.Object)>("transition");

        if $u-1#13 == 0 goto label1;

        specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u7, $u8, $u9, $u10, $u11);

        goto label1;

     label6:
        return;
    }

    private void init()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int[] $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>();

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($u-1);

        return;
    }

    private int parseItem(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.Context $u11;
        android.content.res.Resources $u12;
        org.xmlpull.v1.XmlPullParser $u13;
        android.util.AttributeSet $u14;
        android.content.res.Resources$Theme $u15;
        int[] a;
        android.content.res.TypedArray $u-1;
        int keyframeId, drawableId;
        android.graphics.drawable.Drawable dr;
        androidx.appcompat.widget.ResourceManagerInternal $u-1#13;
        java.lang.String $u-1#24;
        boolean $u-1#27;
        org.xmlpull.v1.XmlPullParserException $u6;
        java.lang.StringBuilder $u8;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u5;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u11 := @parameter0: android.content.Context;

        $u12 := @parameter1: android.content.res.Resources;

        $u13 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u14 := @parameter3: android.util.AttributeSet;

        $u15 := @parameter4: android.content.res.Resources$Theme;

        a = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem>;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u12, $u15, $u14, a);

        keyframeId = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id>;

        keyframeId = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>(keyframeId, 0);

        dr = null;

        drawableId = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable>;

        drawableId = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>(drawableId, -1);

        if drawableId <= 0 goto label1;

        $u-1#13 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>();

        dr = virtualinvoke $u-1#13.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u11, drawableId);

     label1:
        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        a = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] extractStateSet(android.util.AttributeSet)>($u14);

        if dr != null goto label7;

     label2:
        drawableId = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: int next()>();

        if drawableId != 4 goto label3;

        goto label2;

     label3:
        if drawableId != 2 goto label6;

        $u-1#24 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#27 = virtualinvoke $u-1#24.<java.lang.String: boolean equals(java.lang.Object)>("vector");

        if $u-1#27 == 0 goto label4;

        dr = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u12, $u13, $u14, $u15);

        goto label7;

     label4:
        drawableId = <android.os.Build$VERSION: int SDK_INT>;

        if drawableId < 21 goto label5;

        dr = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u12, $u13, $u14, $u15);

        goto label7;

     label5:
        dr = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($u12, $u13, $u14);

        goto label7;

     label6:
        $u6 = new org.xmlpull.v1.XmlPullParserException;

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $u-1#24 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#24);

        virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $u-1#24 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1#24);

        throw $u6;

     label7:
        if dr == null goto label8;

        $u5 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        keyframeId = virtualinvoke $u5.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>(a, dr, keyframeId);

        return keyframeId;

     label8:
        $u6 = new org.xmlpull.v1.XmlPullParserException;

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $u-1#24 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#24);

        virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $u-1#24 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1#24);

        goto label9;

     label9:
        throw $u6;
    }

    private int parseTransition(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.Context $u16;
        android.content.res.Resources $u17;
        org.xmlpull.v1.XmlPullParser $u18;
        android.util.AttributeSet $u19;
        android.content.res.Resources$Theme $u20;
        int[] a;
        android.content.res.TypedArray $u-1;
        int fromId, toId, drawableId;
        android.graphics.drawable.Drawable dr;
        androidx.appcompat.widget.ResourceManagerInternal $u-1#15;
        boolean $u-1#22, $u-1#33;
        java.lang.String $u-1#30;
        org.xmlpull.v1.XmlPullParserException $u5;
        java.lang.StringBuilder $u12;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u11;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u16 := @parameter0: android.content.Context;

        $u17 := @parameter1: android.content.res.Resources;

        $u18 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u19 := @parameter3: android.util.AttributeSet;

        $u20 := @parameter4: android.content.res.Resources$Theme;

        a = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition>;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u17, $u20, $u19, a);

        fromId = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId>;

        fromId = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>(fromId, -1);

        toId = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId>;

        toId = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>(toId, -1);

        dr = null;

        drawableId = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable>;

        drawableId = virtualinvoke $u-1.<android.content.res.TypedArray: int getResourceId(int,int)>(drawableId, -1);

        if drawableId <= 0 goto label01;

        $u-1#15 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>();

        dr = virtualinvoke $u-1#15.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u16, drawableId);

        goto label01;

     label01:
        drawableId = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible>;

        $u-1#22 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(drawableId, 0);

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        if dr != null goto label07;

     label02:
        drawableId = interfaceinvoke $u18.<org.xmlpull.v1.XmlPullParser: int next()>();

        if drawableId != 4 goto label03;

        goto label02;

     label03:
        if drawableId != 2 goto label06;

        $u-1#30 = interfaceinvoke $u18.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#33 = virtualinvoke $u-1#30.<java.lang.String: boolean equals(java.lang.Object)>("animated-vector");

        if $u-1#33 == 0 goto label04;

        dr = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u16, $u17, $u18, $u19, $u20);

        goto label07;

     label04:
        drawableId = <android.os.Build$VERSION: int SDK_INT>;

        if drawableId < 21 goto label05;

        dr = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u17, $u18, $u19, $u20);

        goto label07;

     label05:
        dr = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($u17, $u18, $u19);

        goto label07;

     label06:
        $u5 = new org.xmlpull.v1.XmlPullParserException;

        $u12 = new java.lang.StringBuilder;

        specialinvoke $u12.<java.lang.StringBuilder: void <init>()>();

        $u-1#30 = interfaceinvoke $u18.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#30);

        virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $u-1#30 = virtualinvoke $u12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1#30);

        throw $u5;

     label07:
        if dr == null goto label09;

        if fromId == -1 goto label08;

        if toId == -1 goto label08;

        $u11 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        fromId = virtualinvoke $u11.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>(fromId, toId, dr, $u-1#22);

        return fromId;

     label08:
        $u5 = new org.xmlpull.v1.XmlPullParserException;

        $u12 = new java.lang.StringBuilder;

        specialinvoke $u12.<java.lang.StringBuilder: void <init>()>();

        $u-1#30 = interfaceinvoke $u18.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#30);

        virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires \'fromId\' & \'toId\' attributes");

        $u-1#30 = virtualinvoke $u12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1#30);

        throw $u5;

     label09:
        $u5 = new org.xmlpull.v1.XmlPullParserException;

        $u12 = new java.lang.StringBuilder;

        specialinvoke $u12.<java.lang.StringBuilder: void <init>()>();

        $u-1#30 = interfaceinvoke $u18.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#30);

        virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $u-1#30 = virtualinvoke $u12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1#30);

        goto label10;

     label10:
        throw $u5;
    }

    private boolean selectTransition(int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u13, fromIndex, $u-1#11, $u-1#12, $u-1#14;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition currentTransition;
        boolean $u-1, $u10;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState state;
        android.graphics.drawable.Drawable $u-1#16;
        android.graphics.drawable.AnimationDrawable $u11;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $u10#26;
        android.graphics.drawable.Animatable $u10#29;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition $u0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition $u1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition $u2;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u13 := @parameter0: int;

        currentTransition = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        if currentTransition == null goto label03;

        fromIndex = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>;

        if $u13 != fromIndex goto label01;

        return 1;

     label01:
        fromIndex = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex>;

        if $u13 != fromIndex goto label02;

        $u-1 = virtualinvoke currentTransition.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()>();

        if $u-1 == 0 goto label02;

        virtualinvoke currentTransition.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()>();

        fromIndex = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex>;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = fromIndex;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = $u13;

        return 1;

     label02:
        fromIndex = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>;

        virtualinvoke currentTransition.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>();

        goto label04;

     label03:
        fromIndex = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getCurrentIndex()>();

     label04:
        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition> = null;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = -1;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = -1;

        state = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        $u-1#11 = virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>(fromIndex);

        $u-1#12 = virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>($u13);

        if $u-1#12 == 0 goto label10;

        if $u-1#11 != 0 goto label05;

        return 0;

     label05:
        $u-1#14 = virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)>($u-1#11, $u-1#12);

        if $u-1#14 >= 0 goto label06;

        return 0;

     label06:
        $u-1 = virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)>($u-1#11, $u-1#12);

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($u-1#14);

        $u-1#16 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>();

        $u10 = $u-1#16 instanceof android.graphics.drawable.AnimationDrawable;

        if $u10 == 0 goto label07;

        $u10 = virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)>($u-1#11, $u-1#12);

        $u0 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition;

        $u11 = (android.graphics.drawable.AnimationDrawable) $u-1#16;

        specialinvoke $u0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)>($u11, $u10, $u-1);

        currentTransition = $u0;

        goto label09;

     label07:
        $u-1 = $u-1#16 instanceof androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;

        if $u-1 == 0 goto label08;

        $u1 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition;

        currentTransition = $u1;

        $u10#26 = (androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) $u-1#16;

        specialinvoke $u1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)>($u10#26);

        goto label09;

     label08:
        $u-1 = $u-1#16 instanceof android.graphics.drawable.Animatable;

        if $u-1 == 0 goto label10;

        $u2 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition;

        currentTransition = $u2;

        $u10#29 = (android.graphics.drawable.Animatable) $u-1#16;

        specialinvoke $u2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void <init>(android.graphics.drawable.Animatable)>($u10#29);

     label09:
        virtualinvoke currentTransition.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>();

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition> = currentTransition;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = fromIndex;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = $u13;

        return 1;

     label10:
        return 0;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.res.TypedArray $u4;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState state;
        int $u1, $u-1;
        boolean $u2;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u4 := @parameter0: android.content.res.TypedArray;

        state = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        $u1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u1 < 21 goto label1;

        $u1 = state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mChangingConfigurations>;

        $u-1 = virtualinvoke $u4.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $u1 = $u1 | $u-1;

        state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mChangingConfigurations> = $u1;

     label1:
        $u1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding>;

        $u2 = state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean mVariablePadding>;

        $u2 = virtualinvoke $u4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u1, $u2);

        virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setVariablePadding(boolean)>($u2);

        $u1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize>;

        $u2 = state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean mConstantSize>;

        $u2 = virtualinvoke $u4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u1, $u2);

        virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setConstantSize(boolean)>($u2);

        $u1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration>;

        $u-1 = state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mEnterFadeDuration>;

        $u1 = virtualinvoke $u4.<android.content.res.TypedArray: int getInt(int,int)>($u1, $u-1);

        virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setEnterFadeDuration(int)>($u1);

        $u1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration>;

        $u-1 = state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mExitFadeDuration>;

        $u1 = virtualinvoke $u4.<android.content.res.TypedArray: int getInt(int,int)>($u1, $u-1);

        virtualinvoke state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setExitFadeDuration(int)>($u1);

        $u1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither>;

        $u2 = state.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean mDither>;

        $u2 = virtualinvoke $u4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u1, $u2);

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>($u2);

        return;
    }

    public volatile void addState(int[], android.graphics.drawable.Drawable)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int[] $u1;
        android.graphics.drawable.Drawable $u2;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: int[];

        $u2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($u1, $u2);

        return;
    }

    public void addState(int[], android.graphics.drawable.Drawable, int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int[] $u3;
        android.graphics.drawable.Drawable $u4;
        int $u5;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u0;
        java.lang.IllegalArgumentException $u0#3;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u3 := @parameter0: int[];

        $u4 := @parameter1: android.graphics.drawable.Drawable;

        $u5 := @parameter2: int;

        if $u4 == null goto label1;

        $u0 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        virtualinvoke $u0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>($u3, $u4, $u5);

        $u3 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>();

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($u3);

        return;

     label1:
        $u0#3 = new java.lang.IllegalArgumentException;

        specialinvoke $u0#3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Drawable must not be null");

        throw $u0#3;
    }

    public void addTransition(int, int, android.graphics.drawable.Drawable, boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u3, $u4;
        android.graphics.drawable.Drawable transition;
        boolean $u6;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u0;
        java.lang.IllegalArgumentException $u0#2;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        transition := @parameter2: android.graphics.drawable.Drawable;

        $u6 := @parameter3: boolean;

        if transition == null goto label1;

        $u0 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        virtualinvoke $u0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>($u3, $u4, transition, $u6);

        return;

     label1:
        $u0#2 = new java.lang.IllegalArgumentException;

        specialinvoke $u0#2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Transition drawable must not be null");

        throw $u0#2;
    }

    public volatile void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.res.Resources$Theme $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)>($u1);

        return;
    }

    public volatile boolean canApplyTheme()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean canApplyTheme()>();

        return $u-1;
    }

    void clearMutated()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void clearMutated()>();

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated> = 0;

        return;
    }

    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u0, $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u0 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        $u1 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        specialinvoke $u0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>($u1, this, null);

        return $u0;
    }

    volatile androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()>();

        return $u-1;
    }

    volatile androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()>();

        return $u-1;
    }

    public volatile void draw(android.graphics.Canvas)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.Canvas $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.Canvas;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void draw(android.graphics.Canvas)>($u1);

        return;
    }

    public volatile int getAlpha()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getAlpha()>();

        return $u-1;
    }

    public volatile int getChangingConfigurations()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getChangingConfigurations()>();

        return $u-1;
    }

    public volatile android.graphics.drawable.Drawable getCurrent()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.drawable.Drawable $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        return $u-1;
    }

    public volatile void getHotspotBounds(android.graphics.Rect)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.Rect $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.Rect;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void getHotspotBounds(android.graphics.Rect)>($u1);

        return;
    }

    public volatile int getIntrinsicHeight()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getIntrinsicHeight()>();

        return $u-1;
    }

    public volatile int getIntrinsicWidth()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getIntrinsicWidth()>();

        return $u-1;
    }

    public volatile int getMinimumHeight()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getMinimumHeight()>();

        return $u-1;
    }

    public volatile int getMinimumWidth()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getMinimumWidth()>();

        return $u-1;
    }

    public volatile int getOpacity()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: int getOpacity()>();

        return $u-1;
    }

    public volatile void getOutline(android.graphics.Outline)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.Outline $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.Outline;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void getOutline(android.graphics.Outline)>($u1);

        return;
    }

    public volatile boolean getPadding(android.graphics.Rect)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u-1;
        android.graphics.Rect $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.Rect;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean getPadding(android.graphics.Rect)>($u1);

        return $u-1;
    }

    public void inflate(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.Context $u4;
        android.content.res.Resources $u5;
        org.xmlpull.v1.XmlPullParser $u6;
        android.util.AttributeSet $u7;
        android.content.res.Resources$Theme $u8;
        int[] a;
        android.content.res.TypedArray $u-1;
        int $u1;
        boolean $u-1#5;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.content.res.Resources;

        $u6 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u7 := @parameter3: android.util.AttributeSet;

        $u8 := @parameter4: android.content.res.Resources$Theme;

        a = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat>;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u5, $u8, $u7, a);

        $u1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible>;

        $u-1#5 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u1, 1);

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>($u-1#5, 1);

        specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)>($u-1);

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateDensity(android.content.res.Resources)>($u5);

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u4, $u5, $u6, $u7, $u8);

        specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()>();

        return;
    }

    public volatile void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.drawable.Drawable $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>($u1);

        return;
    }

    public volatile boolean isAutoMirrored()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u-1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean isAutoMirrored()>();

        return $u-1;
    }

    public boolean isStateful()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        return 1;
    }

    public void jumpToCurrentState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition $u0;
        int $u0#3;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void jumpToCurrentState()>();

        $u0 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>();

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition> = null;

        $u0#3 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>;

        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($u0#3);

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = -1;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = -1;

     label1:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.drawable.Drawable $u-1;
        boolean $u0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u0#3;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u0 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated>;

        if $u0 != 0 goto label1;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>();

        if $u-1 != this goto label1;

        $u0#3 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        virtualinvoke $u0#3.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()>();

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated> = 1;

     label1:
        return this;
    }

    public volatile boolean onLayoutDirectionChanged(int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u-1;
        int $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: int;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean onLayoutDirectionChanged(int)>($u1);

        return $u-1;
    }

    protected boolean onStateChange(int[])
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int[] $u5;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState targetIndex;
        int $u-1, $u-1#4;
        boolean $u-1#6, $u-1#12;
        android.graphics.drawable.Drawable $u-1#11;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u5 := @parameter0: int[];

        targetIndex = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        $u-1 = virtualinvoke targetIndex.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])>($u5);

        $u-1#4 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getCurrentIndex()>();

        if $u-1 == $u-1#4 goto label2;

        $u-1#6 = specialinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)>($u-1);

        if $u-1#6 != 0 goto label1;

        $u-1#6 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($u-1);

        if $u-1#6 == 0 goto label2;

     label1:
        $u-1#6 = 1;

        goto label3;

     label2:
        $u-1#6 = 0;

     label3:
        $u-1#11 = virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>();

        if $u-1#11 == null goto label4;

        $u-1#12 = virtualinvoke $u-1#11.<android.graphics.drawable.Drawable: boolean setState(int[])>($u5);

        $u-1#6 = $u-1#6 | $u-1#12;

     label4:
        return $u-1#6;
    }

    public volatile void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.drawable.Drawable $u1;
        java.lang.Runnable $u2;
        long $u3;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.drawable.Drawable;

        $u2 := @parameter1: java.lang.Runnable;

        $u3 := @parameter2: long;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>($u1, $u2, $u3);

        return;
    }

    public volatile void setAlpha(int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: int;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setAlpha(int)>($u1);

        return;
    }

    public volatile void setAutoMirrored(boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: boolean;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setAutoMirrored(boolean)>($u1);

        return;
    }

    public volatile void setColorFilter(android.graphics.ColorFilter)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.ColorFilter $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.ColorFilter;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setColorFilter(android.graphics.ColorFilter)>($u1);

        return;
    }

    void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $u2;
        boolean $u0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $u0#3;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u2 := @parameter0: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($u2);

        $u0 = $u2 instanceof androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        if $u0 == 0 goto label1;

        $u0#3 = (androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState) $u2;

        this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState> = $u0#3;

     label1:
        return;
    }

    public volatile void setDither(boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: boolean;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setDither(boolean)>($u1);

        return;
    }

    public volatile void setEnterFadeDuration(int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: int;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setEnterFadeDuration(int)>($u1);

        return;
    }

    public volatile void setExitFadeDuration(int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: int;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setExitFadeDuration(int)>($u1);

        return;
    }

    public volatile void setHotspot(float, float)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        float $u1, $u2;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: float;

        $u2 := @parameter1: float;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setHotspot(float,float)>($u1, $u2);

        return;
    }

    public volatile void setHotspotBounds(int, int, int, int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        int $u1, $u2, $u3, $u4;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setHotspotBounds(int,int,int,int)>($u1, $u2, $u3, $u4);

        return;
    }

    public volatile void setTintList(android.content.res.ColorStateList)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.content.res.ColorStateList $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.content.res.ColorStateList;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setTintList(android.content.res.ColorStateList)>($u1);

        return;
    }

    public volatile void setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.PorterDuff$Mode $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.PorterDuff$Mode;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($u1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        boolean $u3, $u4, $u-1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition $u1;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u3 := @parameter0: boolean;

        $u4 := @parameter1: boolean;

        $u-1 = specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean setVisible(boolean,boolean)>($u3, $u4);

        $u1 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        if $u1 == null goto label3;

        if $u-1 != 0 goto label1;

        if $u4 == 0 goto label3;

     label1:
        if $u3 == 0 goto label2;

        $u1 = this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        virtualinvoke $u1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>();

        return $u-1;

     label2:
        virtualinvoke this.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>();

     label3:
        return $u-1;
    }

    public volatile void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat this;
        android.graphics.drawable.Drawable $u1;
        java.lang.Runnable $u2;

        this := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $u1 := @parameter0: android.graphics.drawable.Drawable;

        $u2 := @parameter1: java.lang.Runnable;

        specialinvoke this.<androidx.appcompat.graphics.drawable.StateListDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>($u1, $u2);

        return;
    }
}
