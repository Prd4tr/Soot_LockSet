public abstract class androidx.loader.content.AsyncTaskLoader extends androidx.loader.content.Loader
{
    static final boolean DEBUG;
    static final java.lang.String TAG;
    volatile androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask;
    private final java.util.concurrent.Executor mExecutor;
    android.os.Handler mHandler;
    long mLastLoadCompleteTime;
    volatile androidx.loader.content.AsyncTaskLoader$LoadTask mTask;
    long mUpdateThrottle;

    public void <init>(android.content.Context)
    {
        androidx.loader.content.AsyncTaskLoader this;
        android.content.Context $u2;
        java.util.concurrent.Executor $u0;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        $u2 := @parameter0: android.content.Context;

        $u0 = <androidx.loader.content.ModernAsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        specialinvoke this.<androidx.loader.content.AsyncTaskLoader: void <init>(android.content.Context,java.util.concurrent.Executor)>($u2, $u0);

        return;
    }

    private void <init>(android.content.Context, java.util.concurrent.Executor)
    {
        androidx.loader.content.AsyncTaskLoader this;
        android.content.Context $u3;
        java.util.concurrent.Executor $u4;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: java.util.concurrent.Executor;

        specialinvoke this.<androidx.loader.content.Loader: void <init>(android.content.Context)>($u3);

        this.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime> = -10000L;

        this.<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor> = $u4;

        return;
    }

    public void cancelLoadInBackground()
    {
        androidx.loader.content.AsyncTaskLoader this;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        return;
    }

    void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask, java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader this;
        androidx.loader.content.AsyncTaskLoader$LoadTask task, $u0;
        java.lang.Object data;
        long $u-1;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        task := @parameter0: androidx.loader.content.AsyncTaskLoader$LoadTask;

        data := @parameter1: java.lang.Object;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>(data);

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $u0 != task goto label1;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void rollbackContentChanged()>();

        $u-1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        this.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime> = $u-1;

        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask> = null;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void deliverCancellation()>();

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>();

     label1:
        return;
    }

    void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask, java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader this;
        androidx.loader.content.AsyncTaskLoader$LoadTask task, $u0;
        java.lang.Object data;
        boolean $u-1;
        long $u-1#4;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        task := @parameter0: androidx.loader.content.AsyncTaskLoader$LoadTask;

        data := @parameter1: java.lang.Object;

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if $u0 == task goto label1;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(task, data);

        return;

     label1:
        $u-1 = virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: boolean isAbandoned()>();

        if $u-1 == 0 goto label2;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>(data);

        return;

     label2:
        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void commitContentChanged()>();

        $u-1#4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        this.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime> = $u-1#4;

        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>(data);

        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.content.AsyncTaskLoader this;
        java.lang.String $u6;
        java.io.FileDescriptor $u7;
        java.io.PrintWriter $u8;
        java.lang.String[] $u9;
        byte $u4;
        long $u-1, $u0#16;
        androidx.loader.content.AsyncTaskLoader$LoadTask $u0;
        boolean $u0#5;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        $u6 := @parameter0: java.lang.String;

        $u7 := @parameter1: java.io.FileDescriptor;

        $u8 := @parameter2: java.io.PrintWriter;

        $u9 := @parameter3: java.lang.String[];

        specialinvoke this.<androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($u6, $u7, $u8, $u9);

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if $u0 == null goto label1;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("mTask=");

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.Object)>($u0);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(" waiting=");

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $u0#5 = $u0.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(boolean)>($u0#5);

     label1:
        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $u0 == null goto label2;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("mCancellingTask=");

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.Object)>($u0);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(" waiting=");

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        $u0#5 = $u0.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        virtualinvoke $u8.<java.io.PrintWriter: void println(boolean)>($u0#5);

     label2:
        $u-1 = this.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $u4 = $u-1 cmp 0L;

        if $u4 == 0 goto label3;

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>($u6);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>("mUpdateThrottle=");

        $u-1 = this.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        staticinvoke <androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($u-1, $u8);

        virtualinvoke $u8.<java.io.PrintWriter: void print(java.lang.String)>(" mLastLoadCompleteTime=");

        $u0#16 = this.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $u-1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <androidx.core.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($u0#16, $u-1, $u8);

        virtualinvoke $u8.<java.io.PrintWriter: void println()>();

     label3:
        return;
    }

    void executePendingTask()
    {
        androidx.loader.content.AsyncTaskLoader this;
        long $u6, $u2, $u4#14;
        androidx.loader.content.AsyncTaskLoader$LoadTask now;
        boolean now#4;
        android.os.Handler now#7;
        byte $u4;
        java.util.concurrent.Executor $u1;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if now != null goto label3;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if now == null goto label3;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        now#4 = now.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        if now#4 == 0 goto label1;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        now.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        now#7 = this.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke now#7.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(now);

     label1:
        $u6 = this.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $u4 = $u6 cmp 0L;

        if $u4 <= 0 goto label2;

        $u6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u2 = this.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $u4#14 = this.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $u2 = $u2 + $u4#14;

        $u4 = $u6 cmp $u2;

        if $u4 >= 0 goto label2;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        now.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 1;

        now#7 = this.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $u2 = this.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $u6 = this.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $u6 = $u2 + $u6;

        virtualinvoke now#7.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>(now, $u6);

        return;

     label2:
        now = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $u1 = this.<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor>;

        virtualinvoke now.<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($u1, null);

     label3:
        return;
    }

    public boolean isLoadInBackgroundCanceled()
    {
        androidx.loader.content.AsyncTaskLoader this;
        androidx.loader.content.AsyncTaskLoader$LoadTask $u0;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        $u0 = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $u0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract java.lang.Object loadInBackground();

    protected boolean onCancelLoad()
    {
        androidx.loader.content.AsyncTaskLoader this;
        boolean $u-1;
        androidx.loader.content.AsyncTaskLoader$LoadTask cancelled;
        android.os.Handler cancelled#9;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if cancelled == null goto label6;

        $u-1 = this.<androidx.loader.content.AsyncTaskLoader: boolean mStarted>;

        if $u-1 != 0 goto label1;

        this.<androidx.loader.content.AsyncTaskLoader: boolean mContentChanged> = 1;

     label1:
        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if cancelled == null goto label3;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $u-1 = cancelled.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        if $u-1 == 0 goto label2;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        cancelled.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        cancelled#9 = this.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke cancelled#9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(cancelled);

     label2:
        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        return 0;

     label3:
        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $u-1 = cancelled.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        if $u-1 == 0 goto label4;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        cancelled.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        cancelled#9 = this.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke cancelled#9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(cancelled);

        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        return 0;

     label4:
        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $u-1 = virtualinvoke cancelled.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean cancel(boolean)>(0);

        if $u-1 == 0 goto label5;

        cancelled = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask> = cancelled;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()>();

     label5:
        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        return $u-1;

     label6:
        return 0;
    }

    public void onCanceled(java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader this;
        java.lang.Object data;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        data := @parameter0: java.lang.Object;

        return;
    }

    protected void onForceLoad()
    {
        androidx.loader.content.AsyncTaskLoader this;
        androidx.loader.content.AsyncTaskLoader$LoadTask $u0;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        specialinvoke this.<androidx.loader.content.Loader: void onForceLoad()>();

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: boolean cancelLoad()>();

        $u0 = new androidx.loader.content.AsyncTaskLoader$LoadTask;

        specialinvoke $u0.<androidx.loader.content.AsyncTaskLoader$LoadTask: void <init>(androidx.loader.content.AsyncTaskLoader)>(this);

        this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = $u0;

        virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>();

        return;
    }

    protected java.lang.Object onLoadInBackground()
    {
        androidx.loader.content.AsyncTaskLoader this;
        java.lang.Object $u-1;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        $u-1 = virtualinvoke this.<androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()>();

        return $u-1;
    }

    public void setUpdateThrottle(long)
    {
        androidx.loader.content.AsyncTaskLoader this;
        long $u4;
        byte $u2;
        android.os.Handler $u0;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        $u4 := @parameter0: long;

        this.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle> = $u4;

        $u2 = $u4 cmp 0L;

        if $u2 == 0 goto label1;

        $u0 = new android.os.Handler;

        specialinvoke $u0.<android.os.Handler: void <init>()>();

        this.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler> = $u0;

     label1:
        return;
    }

    public void waitForLoader()
    {
        androidx.loader.content.AsyncTaskLoader this;
        androidx.loader.content.AsyncTaskLoader$LoadTask task;

        this := @this: androidx.loader.content.AsyncTaskLoader;

        task = this.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if task == null goto label1;

        virtualinvoke task.<androidx.loader.content.AsyncTaskLoader$LoadTask: void waitForLoader()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <androidx.loader.content.AsyncTaskLoader: java.lang.String TAG> = "AsyncTaskLoader";

        <androidx.loader.content.AsyncTaskLoader: boolean DEBUG> = 0;

        return;
    }
}
