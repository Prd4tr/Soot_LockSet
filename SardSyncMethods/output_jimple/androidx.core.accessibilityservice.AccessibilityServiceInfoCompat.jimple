public final class androidx.core.accessibilityservice.AccessibilityServiceInfoCompat extends java.lang.Object
{
    public static final int CAPABILITY_CAN_FILTER_KEY_EVENTS;
    public static final int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY;
    public static final int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION;
    public static final int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT;
    public static final int FEEDBACK_ALL_MASK;
    public static final int FEEDBACK_BRAILLE;
    public static final int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS;
    public static final int FLAG_REPORT_VIEW_IDS;
    public static final int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY;
    public static final int FLAG_REQUEST_FILTER_KEY_EVENTS;
    public static final int FLAG_REQUEST_TOUCH_EXPLORATION_MODE;

    private void <init>()
    {
        androidx.core.accessibilityservice.AccessibilityServiceInfoCompat this;

        this := @this: androidx.core.accessibilityservice.AccessibilityServiceInfoCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String capabilityToString(int)
    {
        int $u1;

        $u1 := @parameter0: int;

        if $u1 == 1 goto label4;

        if $u1 == 2 goto label3;

        if $u1 == 4 goto label2;

        if $u1 == 8 goto label1;

        return "UNKNOWN";

     label1:
        return "CAPABILITY_CAN_FILTER_KEY_EVENTS";

     label2:
        return "CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY";

     label3:
        return "CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION";

     label4:
        return "CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT";
    }

    public static java.lang.String feedbackTypeToString(int)
    {
        java.lang.StringBuilder builder;
        int $u4, $u-1, $u3;
        java.lang.String $u-1#21;

        $u4 := @parameter0: int;

        builder = new java.lang.StringBuilder;

        specialinvoke builder.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

     label1:
        if $u4 <= 0 goto label8;

        $u-1 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>($u4);

        $u-1 = 1 << $u-1;

        $u3 = $u-1 ^ -1;

        $u4 = $u4 & $u3;

        $u3 = virtualinvoke builder.<java.lang.StringBuilder: int length()>();

        if $u3 <= 1 goto label2;

        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        if $u-1 == 1 goto label7;

        if $u-1 == 2 goto label6;

        if $u-1 == 4 goto label5;

        if $u-1 == 8 goto label4;

        if $u-1 == 16 goto label3;

        goto label1;

     label3:
        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FEEDBACK_GENERIC");

        goto label1;

     label4:
        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FEEDBACK_VISUAL");

        goto label1;

     label5:
        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FEEDBACK_AUDIBLE");

        goto label1;

     label6:
        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FEEDBACK_HAPTIC");

        goto label1;

     label7:
        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FEEDBACK_SPOKEN");

        goto label1;

     label8:
        virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $u-1#21 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1#21;
    }

    public static java.lang.String flagToString(int)
    {
        int $u1;

        $u1 := @parameter0: int;

        if $u1 == 1 goto label6;

        if $u1 == 2 goto label5;

        if $u1 == 4 goto label4;

        if $u1 == 8 goto label3;

        if $u1 == 16 goto label2;

        if $u1 == 32 goto label1;

        return null;

     label1:
        return "FLAG_REQUEST_FILTER_KEY_EVENTS";

     label2:
        return "FLAG_REPORT_VIEW_IDS";

     label3:
        return "FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY";

     label4:
        return "FLAG_REQUEST_TOUCH_EXPLORATION_MODE";

     label5:
        return "FLAG_INCLUDE_NOT_IMPORTANT_VIEWS";

     label6:
        return "DEFAULT";
    }

    public static int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
    {
        android.accessibilityservice.AccessibilityServiceInfo $u2;
        int $u0;
        boolean $u-1;

        $u2 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 18 goto label1;

        $u0 = virtualinvoke $u2.<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>();

        return $u0;

     label1:
        $u-1 = virtualinvoke $u2.<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>();

        if $u-1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo, android.content.pm.PackageManager)
    {
        android.accessibilityservice.AccessibilityServiceInfo $u2;
        android.content.pm.PackageManager $u3;
        int $u0;
        java.lang.String $u-1;

        $u2 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        $u3 := @parameter1: android.content.pm.PackageManager;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 16 goto label1;

        $u-1 = virtualinvoke $u2.<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>($u3);

        return $u-1;

     label1:
        $u-1 = virtualinvoke $u2.<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>();

        return $u-1;
    }

    public static void <clinit>()
    {
        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_TOUCH_EXPLORATION_MODE> = 4;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_FILTER_KEY_EVENTS> = 32;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY> = 8;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REPORT_VIEW_IDS> = 16;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS> = 2;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_BRAILLE> = 32;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_ALL_MASK> = -1;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT> = 1;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION> = 2;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY> = 4;

        <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_FILTER_KEY_EVENTS> = 8;

        return;
    }
}
