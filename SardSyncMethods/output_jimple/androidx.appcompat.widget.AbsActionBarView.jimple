abstract class androidx.appcompat.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final int FADE_DURATION;
    protected androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter;
    protected int mContentHeight;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    protected androidx.appcompat.widget.ActionMenuView mMenuView;
    protected final android.content.Context mPopupContext;
    protected final androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener;
    protected androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim;

    void <init>(android.content.Context)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.content.Context $u2;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.appcompat.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<androidx.appcompat.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.content.Context $u5;
        android.util.AttributeSet $u6;
        int $u7;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener tv;
        android.util.TypedValue tv#2;
        android.content.res.Resources$Theme $u-1;
        boolean $u-1#6;
        android.view.ContextThemeWrapper $u1;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u5 := @parameter0: android.content.Context;

        $u6 := @parameter1: android.util.AttributeSet;

        $u7 := @parameter2: int;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($u5, $u6, $u7);

        tv = new androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener;

        specialinvoke tv.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void <init>(androidx.appcompat.widget.AbsActionBarView)>(this);

        this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener> = tv;

        tv#2 = new android.util.TypedValue;

        specialinvoke tv#2.<android.util.TypedValue: void <init>()>();

        $u-1 = virtualinvoke $u5.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u7 = <androidx.appcompat.R$attr: int actionBarPopupTheme>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($u7, tv#2, 1);

        if $u-1#6 == 0 goto label1;

        $u7 = tv#2.<android.util.TypedValue: int resourceId>;

        if $u7 == 0 goto label1;

        $u1 = new android.view.ContextThemeWrapper;

        $u7 = tv#2.<android.util.TypedValue: int resourceId>;

        specialinvoke $u1.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($u5, $u7);

        this.<androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext> = $u1;

        return;

     label1:
        this.<androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext> = $u5;

        return;
    }

    static void access$001(androidx.appcompat.widget.AbsActionBarView, int)
    {
        androidx.appcompat.widget.AbsActionBarView $u0;
        int $u1;

        $u0 := @parameter0: androidx.appcompat.widget.AbsActionBarView;

        $u1 := @parameter1: int;

        specialinvoke $u0.<android.view.ViewGroup: void setVisibility(int)>($u1);

        return;
    }

    static void access$101(androidx.appcompat.widget.AbsActionBarView, int)
    {
        androidx.appcompat.widget.AbsActionBarView $u0;
        int $u1;

        $u0 := @parameter0: androidx.appcompat.widget.AbsActionBarView;

        $u1 := @parameter1: int;

        specialinvoke $u0.<android.view.ViewGroup: void setVisibility(int)>($u1);

        return;
    }

    protected static int next(int, int, boolean)
    {
        int $u1, $u2;
        boolean $u3;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: boolean;

        if $u3 == 0 goto label1;

        $u1 = $u1 - $u2;

        return $u1;

     label1:
        $u1 = $u1 + $u2;

        return $u1;
    }

    public void animateToVisibility(int)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        int $u3;
        androidx.core.view.ViewPropertyAnimatorCompat $u-1;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u3 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>($u3, 200L);

        virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: void start()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        boolean $u-1;
        int $u-1#3;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: boolean isOverflowReserved()>();

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        if $u-1#3 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    public int getAnimatedVisibility()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        int $u-1;
        androidx.core.view.ViewPropertyAnimatorCompat $u0;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $u0#2;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $u0 == null goto label1;

        $u0#2 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $u-1 = $u0#2.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;

        return $u-1;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        return $u-1;
    }

    public int getContentHeight()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        int ret0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        ret0 = this.<androidx.appcompat.widget.AbsActionBarView: int mContentHeight>;

        return ret0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $u-1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();

        return $u-1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $u-1;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowReserved()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.view.View $u2;
        int $u4, $u5, $u3, $u-1;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u-1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u3, -2147483648);

        virtualinvoke $u2.<android.view.View: void measure(int,int)>($u-1, $u4);

        $u4 = virtualinvoke $u2.<android.view.View: int getMeasuredWidth()>();

        $u3 = $u3 - $u4;

        $u3 = $u3 - $u5;

        $u3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u3);

        return $u3;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.content.res.Configuration $u6;
        int $u2;
        android.content.Context $u-1;
        int[] $u1;
        android.content.res.TypedArray $u-1#4;
        androidx.appcompat.widget.ActionMenuPresenter $u1#9;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u6 := @parameter0: android.content.res.Configuration;

        specialinvoke this.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($u6);

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: android.content.Context getContext()>();

        $u1 = <androidx.appcompat.R$styleable: int[] ActionBar>;

        $u2 = <androidx.appcompat.R$attr: int actionBarStyle>;

        $u-1#4 = virtualinvoke $u-1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $u1, $u2, 0);

        $u2 = <androidx.appcompat.R$styleable: int ActionBar_height>;

        $u2 = virtualinvoke $u-1#4.<android.content.res.TypedArray: int getLayoutDimension(int,int)>($u2, 0);

        virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)>($u2);

        virtualinvoke $u-1#4.<android.content.res.TypedArray: void recycle()>();

        $u1#9 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u1#9 == null goto label1;

        virtualinvoke $u1#9.<androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>($u6);

     label1:
        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.view.MotionEvent $u6;
        int $u-1;
        boolean handled;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u6 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u6.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1 != 9 goto label1;

        this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label1:
        handled = this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover>;

        if handled != 0 goto label2;

        handled = specialinvoke this.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>($u6);

        if $u-1 != 9 goto label2;

        if handled != 0 goto label2;

        this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover> = 1;

     label2:
        if $u-1 == 10 goto label3;

        if $u-1 != 3 goto label4;

     label3:
        this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.view.MotionEvent $u5;
        int $u-1;
        boolean handled;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u5 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1 != 0 goto label1;

        this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label1:
        handled = this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch>;

        if handled != 0 goto label2;

        handled = specialinvoke this.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($u5);

        if $u-1 != 0 goto label2;

        if handled != 0 goto label2;

        this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch> = 1;

     label2:
        if $u-1 == 1 goto label3;

        if $u-1 != 3 goto label4;

     label3:
        this.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        android.view.View $u6;
        int $u7, $u8, $u9, $u-1, $u-1#2;
        boolean $u10;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u6 := @parameter0: android.view.View;

        $u7 := @parameter1: int;

        $u8 := @parameter2: int;

        $u9 := @parameter3: int;

        $u10 := @parameter4: boolean;

        $u-1 = virtualinvoke $u6.<android.view.View: int getMeasuredWidth()>();

        $u-1#2 = virtualinvoke $u6.<android.view.View: int getMeasuredHeight()>();

        $u9 = $u9 - $u-1#2;

        $u9 = $u9 / 2;

        $u8 = $u9 + $u8;

        if $u10 == 0 goto label1;

        $u9 = $u7 - $u-1;

        $u-1#2 = $u8 + $u-1#2;

        virtualinvoke $u6.<android.view.View: void layout(int,int,int,int)>($u9, $u8, $u7, $u-1#2);

        goto label2;

     label1:
        $u9 = $u7 + $u-1;

        $u-1#2 = $u8 + $u-1#2;

        virtualinvoke $u6.<android.view.View: void layout(int,int,int,int)>($u7, $u8, $u9, $u-1#2);

     label2:
        if $u10 == 0 goto label3;

        $u7 = neg $u-1;

        return $u7;

     label3:
        return $u-1;
    }

    public void postShowOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        androidx.appcompat.widget.AbsActionBarView$1 $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = new androidx.appcompat.widget.AbsActionBarView$1;

        specialinvoke $u0.<androidx.appcompat.widget.AbsActionBarView$1: void <init>(androidx.appcompat.widget.AbsActionBarView)>(this);

        virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($u0);

        return;
    }

    public void setContentHeight(int)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        int $u1;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.widget.AbsActionBarView: int mContentHeight> = $u1;

        virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: void requestLayout()>();

        return;
    }

    public void setVisibility(int)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        int $u2, $u-1;
        androidx.core.view.ViewPropertyAnimatorCompat $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        if $u2 == $u-1 goto label2;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        specialinvoke this.<android.view.ViewGroup: void setVisibility(int)>($u2);

     label2:
        return;
    }

    public androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int, long)
    {
        androidx.appcompat.widget.AbsActionBarView this;
        int $u3, $u-1;
        long $u4;
        androidx.core.view.ViewPropertyAnimatorCompat anim;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $u1;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u3 := @parameter0: int;

        $u4 := @parameter1: long;

        anim = this.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if anim == null goto label1;

        virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        if $u3 != 0 goto label3;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        if $u-1 == 0 goto label2;

        virtualinvoke this.<androidx.appcompat.widget.AbsActionBarView: void setAlpha(float)>(0.0F);

     label2:
        anim = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(this);

        anim = virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)>($u4);

        $u1 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $u1 = virtualinvoke $u1.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)>(anim, $u3);

        virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>($u1);

        return anim;

     label3:
        anim = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(this);

        anim = virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)>($u4);

        $u1 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $u1 = virtualinvoke $u1.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)>(anim, $u3);

        virtualinvoke anim.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>($u1);

        return anim;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.AbsActionBarView;

        $u0 = this.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $u-1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.AbsActionBarView: int FADE_DURATION> = 200;

        return;
    }
}
