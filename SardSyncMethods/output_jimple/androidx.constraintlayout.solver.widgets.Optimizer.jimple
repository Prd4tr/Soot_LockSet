public class androidx.constraintlayout.solver.widgets.Optimizer extends java.lang.Object
{
    static final int FLAG_CHAIN_DANGLING;
    static final int FLAG_RECOMPUTE_BOUNDS;
    static final int FLAG_USE_OPTIMIZE;
    public static final int OPTIMIZATION_BARRIER;
    public static final int OPTIMIZATION_CHAIN;
    public static final int OPTIMIZATION_DIMENSIONS;
    public static final int OPTIMIZATION_DIRECT;
    public static final int OPTIMIZATION_ENGINE;
    public static final int OPTIMIZATION_GRAPH;
    public static final int OPTIMIZATION_GRAPH_WRAP;
    public static final int OPTIMIZATION_GROUPS;
    public static final int OPTIMIZATION_NONE;
    public static final int OPTIMIZATION_RATIO;
    public static final int OPTIMIZATION_STANDARD;
    static boolean[] flags;

    static void <clinit>()
    {
        boolean[] $u0;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_STANDARD> = 263;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_RATIO> = 16;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_NONE> = 0;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GROUPS> = 32;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GRAPH_WRAP> = 128;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GRAPH> = 64;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_ENGINE> = 256;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIRECT> = 1;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIMENSIONS> = 8;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_CHAIN> = 4;

        <androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_BARRIER> = 2;

        <androidx.constraintlayout.solver.widgets.Optimizer: int FLAG_USE_OPTIMIZE> = 0;

        <androidx.constraintlayout.solver.widgets.Optimizer: int FLAG_RECOMPUTE_BOUNDS> = 2;

        <androidx.constraintlayout.solver.widgets.Optimizer: int FLAG_CHAIN_DANGLING> = 1;

        $u0 = newarray (boolean)[3];

        <androidx.constraintlayout.solver.widgets.Optimizer: boolean[] flags> = $u0;

        return;
    }

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.Optimizer this;

        this := @this: androidx.constraintlayout.solver.widgets.Optimizer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    static void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer, androidx.constraintlayout.solver.LinearSystem, androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u5;
        androidx.constraintlayout.solver.LinearSystem $u6;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u7;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] left;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour left#4, $u2;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor left#9, $u4;
        int left#10, $u-1, $u2#14;
        androidx.constraintlayout.solver.SolverVariable $u-1#18;

        $u5 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u6 := @parameter1: androidx.constraintlayout.solver.LinearSystem;

        $u7 := @parameter2: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mHorizontalResolution> = -1;

        $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mVerticalResolution> = -1;

        left = $u5.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        left#4 = left[0];

        $u2 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if left#4 == $u2 goto label1;

        left = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        left#4 = left[0];

        $u2 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        if left#4 != $u2 goto label1;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        left#10 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        $u-1 = virtualinvoke $u5.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u2#14 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        $u-1 = $u-1 - $u2#14;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u4 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1#18 = virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($u4);

        left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1#18;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u4 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1#18 = virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($u4);

        left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1#18;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1#18 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($u-1#18, left#10);

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1#18 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($u-1#18, $u-1);

        $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mHorizontalResolution> = 2;

        virtualinvoke $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimension(int,int)>(left#10, $u-1);

     label1:
        left = $u5.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        left#4 = left[1];

        $u2 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if left#4 == $u2 goto label4;

        left = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        left#4 = left[1];

        $u2 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        if left#4 != $u2 goto label4;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        left#10 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        $u-1 = virtualinvoke $u5.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u2#14 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        $u-1 = $u-1 - $u2#14;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u4 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1#18 = virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($u4);

        left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1#18;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u4 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1#18 = virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($u4);

        left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1#18;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1#18 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($u-1#18, left#10);

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1#18 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($u-1#18, $u-1);

        $u2#14 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mBaselineDistance>;

        if $u2#14 > 0 goto label2;

        $u2#14 = virtualinvoke $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u2#14 != 8 goto label3;

     label2:
        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        $u4 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        $u-1#18 = virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($u4);

        left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $u-1#18;

        left#9 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        $u-1#18 = left#9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        $u2#14 = $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mBaselineDistance>;

        $u2#14 = $u2#14 + left#10;

        virtualinvoke $u6.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($u-1#18, $u2#14);

     label3:
        $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mVerticalResolution> = 2;

        virtualinvoke $u7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimension(int,int)>(left#10, $u-1);

     label4:
        return;
    }

    public static final boolean enabled(int, int)
    {
        int $u1, $u2;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u1 = $u1 & $u2;

        if $u1 != $u2 goto label1;

        return 1;

     label1:
        return 0;
    }
}
