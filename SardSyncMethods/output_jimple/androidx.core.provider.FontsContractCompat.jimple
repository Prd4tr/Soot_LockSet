public class androidx.core.provider.FontsContractCompat extends java.lang.Object
{
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS;
    public static final java.lang.String PARCEL_FONT_RESULTS;
    static final int RESULT_CODE_PROVIDER_NOT_FOUND;
    static final int RESULT_CODE_WRONG_CERTIFICATES;
    private static final androidx.core.provider.SelfDestructiveThread sBackgroundThread;
    private static final java.util.Comparator sByteArrayComparator;
    static final java.lang.Object sLock;
    static final androidx.collection.SimpleArrayMap sPendingReplies;
    static final androidx.collection.LruCache sTypefaceCache;

    static void <clinit>()
    {
        androidx.collection.LruCache $u0;
        androidx.core.provider.SelfDestructiveThread $u0#3;
        java.lang.Object $u0#5;
        androidx.collection.SimpleArrayMap $u0#6;
        androidx.core.provider.FontsContractCompat$5 $u0#7;

        <androidx.core.provider.FontsContractCompat: int RESULT_CODE_WRONG_CERTIFICATES> = -2;

        <androidx.core.provider.FontsContractCompat: int RESULT_CODE_PROVIDER_NOT_FOUND> = -1;

        <androidx.core.provider.FontsContractCompat: java.lang.String PARCEL_FONT_RESULTS> = "font_results";

        <androidx.core.provider.FontsContractCompat: int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS> = 10000;

        $u0 = new androidx.collection.LruCache;

        specialinvoke $u0.<androidx.collection.LruCache: void <init>(int)>(16);

        <androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache> = $u0;

        $u0#3 = new androidx.core.provider.SelfDestructiveThread;

        specialinvoke $u0#3.<androidx.core.provider.SelfDestructiveThread: void <init>(java.lang.String,int,int)>("fonts", 10, 10000);

        <androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread> = $u0#3;

        $u0#5 = new java.lang.Object;

        specialinvoke $u0#5.<java.lang.Object: void <init>()>();

        <androidx.core.provider.FontsContractCompat: java.lang.Object sLock> = $u0#5;

        $u0#6 = new androidx.collection.SimpleArrayMap;

        specialinvoke $u0#6.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies> = $u0#6;

        $u0#7 = new androidx.core.provider.FontsContractCompat$5;

        specialinvoke $u0#7.<androidx.core.provider.FontsContractCompat$5: void <init>()>();

        <androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator> = $u0#7;

        return;
    }

    private void <init>()
    {
        androidx.core.provider.FontsContractCompat this;

        this := @this: androidx.core.provider.FontsContractCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Typeface buildTypeface(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[])
    {
        android.content.Context $u1;
        android.os.CancellationSignal $u2;
        androidx.core.provider.FontsContractCompat$FontInfo[] $u3;
        android.graphics.Typeface $u-1;

        $u1 := @parameter0: android.content.Context;

        $u2 := @parameter1: android.os.CancellationSignal;

        $u3 := @parameter2: androidx.core.provider.FontsContractCompat$FontInfo[];

        $u-1 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>($u1, $u2, $u3, 0);

        return $u-1;
    }

    private static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    {
        android.content.pm.Signature[] $u3;
        java.util.ArrayList shas;
        byte[] $u-1;
        int i, $u2;
        android.content.pm.Signature $u2#3;

        $u3 := @parameter0: android.content.pm.Signature[];

        shas = new java.util.ArrayList;

        specialinvoke shas.<java.util.ArrayList: void <init>()>();

        i = 0;

     label1:
        $u2 = lengthof $u3;

        if i >= $u2 goto label2;

        $u2#3 = $u3[i];

        $u-1 = virtualinvoke $u2#3.<android.content.pm.Signature: byte[] toByteArray()>();

        interfaceinvoke shas.<java.util.List: boolean add(java.lang.Object)>($u-1);

        i = i + 1;

        goto label1;

     label2:
        return shas;
    }

    private static boolean equalsByteArrayList(java.util.List, java.util.List)
    {
        java.util.List signatures, requestSignatures;
        int $u-1, $u-1#3;
        java.lang.Object $u-1#8;
        byte[] $u1, $u3;
        boolean $u-1#14;

        signatures := @parameter0: java.util.List;

        requestSignatures := @parameter1: java.util.List;

        $u-1 = interfaceinvoke signatures.<java.util.List: int size()>();

        $u-1#3 = interfaceinvoke requestSignatures.<java.util.List: int size()>();

        if $u-1 == $u-1#3 goto label1;

        return 0;

     label1:
        $u-1 = 0;

     label2:
        $u-1#3 = interfaceinvoke signatures.<java.util.List: int size()>();

        if $u-1 >= $u-1#3 goto label4;

        $u-1#8 = interfaceinvoke signatures.<java.util.List: java.lang.Object get(int)>($u-1);

        $u1 = (byte[]) $u-1#8;

        $u-1#8 = interfaceinvoke requestSignatures.<java.util.List: java.lang.Object get(int)>($u-1);

        $u3 = (byte[]) $u-1#8;

        $u-1#14 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($u1, $u3);

        if $u-1#14 != 0 goto label3;

        return 0;

     label3:
        $u-1 = $u-1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontRequest) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context $u4;
        android.os.CancellationSignal $u5;
        androidx.core.provider.FontRequest $u6;
        android.content.pm.PackageManager $u-1;
        android.content.res.Resources $u-1#3;
        android.content.pm.ProviderInfo $u-1#5;
        androidx.core.provider.FontsContractCompat$FontFamilyResult fonts;
        java.lang.String fonts#10;
        androidx.core.provider.FontsContractCompat$FontInfo[] $u-1#11;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.os.CancellationSignal;

        $u6 := @parameter2: androidx.core.provider.FontRequest;

        $u-1 = virtualinvoke $u4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $u-1#3 = virtualinvoke $u4.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#5 = staticinvoke <androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>($u-1, $u6, $u-1#3);

        if $u-1#5 != null goto label1;

        fonts = new androidx.core.provider.FontsContractCompat$FontFamilyResult;

        specialinvoke fonts.<androidx.core.provider.FontsContractCompat$FontFamilyResult: void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])>(1, null);

        return fonts;

     label1:
        fonts#10 = $u-1#5.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $u-1#11 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)>($u4, $u6, fonts#10, $u5);

        fonts = new androidx.core.provider.FontsContractCompat$FontFamilyResult;

        specialinvoke fonts.<androidx.core.provider.FontsContractCompat$FontFamilyResult: void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])>(0, $u-1#11);

        return fonts;
    }

    private static java.util.List getCertificates(androidx.core.provider.FontRequest, android.content.res.Resources)
    {
        androidx.core.provider.FontRequest $u2;
        android.content.res.Resources $u3;
        java.util.List $u-1;
        int $u-1#5;

        $u2 := @parameter0: androidx.core.provider.FontRequest;

        $u3 := @parameter1: android.content.res.Resources;

        $u-1 = virtualinvoke $u2.<androidx.core.provider.FontRequest: java.util.List getCertificates()>();

        if $u-1 == null goto label1;

        $u-1 = virtualinvoke $u2.<androidx.core.provider.FontRequest: java.util.List getCertificates()>();

        return $u-1;

     label1:
        $u-1#5 = virtualinvoke $u2.<androidx.core.provider.FontRequest: int getCertificatesArrayResId()>();

        $u-1 = staticinvoke <androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>($u3, $u-1#5);

        return $u-1;
    }

    static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context, androidx.core.provider.FontRequest, java.lang.String, android.os.CancellationSignal)
    {
        android.content.Context $u22;
        androidx.core.provider.FontRequest $u23;
        java.lang.String $u24;
        android.os.CancellationSignal $u25;
        java.util.ArrayList cursor, idColumnIndex;
        android.net.Uri$Builder cursor#3;
        android.net.Uri $u-1, $u-1#18, $u-1#97;
        android.database.Cursor cursor1, $u-1#42;
        int cursor#21, $u-1#70, $u-1#73, $u-1#76, $u-1#79, $u-1#82, $u-1#87, $u-1#90, $u-1#104, $u-1#108;
        android.content.ContentResolver $u-1#24;
        java.lang.String[] $u-1#33, italicColumnIndex;
        boolean $u-1#84;
        long $u-1#93;
        androidx.core.provider.FontsContractCompat$FontInfo $u9;
        androidx.core.provider.FontsContractCompat$FontInfo[] cursor#116;
        java.lang.Object[] $u-1#117;
        java.lang.Throwable cursor#120;

        $u22 := @parameter0: android.content.Context;

        $u23 := @parameter1: androidx.core.provider.FontRequest;

        $u24 := @parameter2: java.lang.String;

        $u25 := @parameter3: android.os.CancellationSignal;

        cursor = new java.util.ArrayList;

        specialinvoke cursor.<java.util.ArrayList: void <init>()>();

        cursor#3 = new android.net.Uri$Builder;

        specialinvoke cursor#3.<android.net.Uri$Builder: void <init>()>();

        cursor#3 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        cursor#3 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($u24);

        $u-1 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri build()>();

        cursor#3 = new android.net.Uri$Builder;

        specialinvoke cursor#3.<android.net.Uri$Builder: void <init>()>();

        cursor#3 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        cursor#3 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($u24);

        cursor#3 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("file");

        $u-1#18 = virtualinvoke cursor#3.<android.net.Uri$Builder: android.net.Uri build()>();

        cursor1 = null;

     label01:
        cursor#21 = <android.os.Build$VERSION: int SDK_INT>;

     label02:
        if cursor#21 <= 16 goto label05;

     label03:
        $u-1#24 = virtualinvoke $u22.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $u-1#33 = newarray (java.lang.String)[7];

        $u-1#33[0] = "_id";

        $u-1#33[1] = "file_id";

        $u-1#33[2] = "font_ttc_index";

        $u-1#33[3] = "font_variation_settings";

        $u-1#33[4] = "font_weight";

        $u-1#33[5] = "font_italic";

        $u-1#33[6] = "result_code";

        italicColumnIndex = newarray (java.lang.String)[1];

        $u24 = virtualinvoke $u23.<androidx.core.provider.FontRequest: java.lang.String getQuery()>();

        italicColumnIndex[0] = $u24;

        $u-1#42 = virtualinvoke $u-1#24.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>($u-1, $u-1#33, "query = ?", italicColumnIndex, null, $u25);

     label04:
        cursor1 = $u-1#42;

        goto label07;

     label05:
        $u-1#24 = virtualinvoke $u22.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $u-1#33 = newarray (java.lang.String)[7];

        $u-1#33[0] = "_id";

        $u-1#33[1] = "file_id";

        $u-1#33[2] = "font_ttc_index";

        $u-1#33[3] = "font_variation_settings";

        $u-1#33[4] = "font_weight";

        $u-1#33[5] = "font_italic";

        $u-1#33[6] = "result_code";

        italicColumnIndex = newarray (java.lang.String)[1];

        $u24 = virtualinvoke $u23.<androidx.core.provider.FontRequest: java.lang.String getQuery()>();

        italicColumnIndex[0] = $u24;

        $u-1#42 = virtualinvoke $u-1#24.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($u-1, $u-1#33, "query = ?", italicColumnIndex, null);

     label06:
        cursor1 = $u-1#42;

     label07:
        if cursor1 == null goto label36;

     label08:
        cursor#21 = interfaceinvoke cursor1.<android.database.Cursor: int getCount()>();

     label09:
        if cursor#21 <= 0 goto label36;

     label10:
        cursor#21 = interfaceinvoke cursor1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("result_code");

        idColumnIndex = new java.util.ArrayList;

        specialinvoke idColumnIndex.<java.util.ArrayList: void <init>()>();

     label11:
        cursor = idColumnIndex;

     label12:
        $u-1#70 = interfaceinvoke cursor1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $u-1#73 = interfaceinvoke cursor1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("file_id");

        $u-1#76 = interfaceinvoke cursor1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_ttc_index");

        $u-1#79 = interfaceinvoke cursor1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_weight");

        $u-1#82 = interfaceinvoke cursor1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_italic");

     label13:
        $u-1#84 = interfaceinvoke cursor1.<android.database.Cursor: boolean moveToNext()>();

     label14:
        if $u-1#84 == 0 goto label36;

        if cursor#21 == -1 goto label17;

     label15:
        $u-1#87 = interfaceinvoke cursor1.<android.database.Cursor: int getInt(int)>(cursor#21);

     label16:
        goto label18;

     label17:
        $u-1#87 = 0;

     label18:
        if $u-1#76 == -1 goto label21;

     label19:
        $u-1#90 = interfaceinvoke cursor1.<android.database.Cursor: int getInt(int)>($u-1#76);

     label20:
        goto label22;

     label21:
        $u-1#90 = 0;

     label22:
        if $u-1#73 != -1 goto label25;

     label23:
        $u-1#93 = interfaceinvoke cursor1.<android.database.Cursor: long getLong(int)>($u-1#70);

        $u-1#97 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($u-1, $u-1#93);

     label24:
        goto label26;

     label25:
        $u-1#93 = interfaceinvoke cursor1.<android.database.Cursor: long getLong(int)>($u-1#73);

        $u-1#97 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($u-1#18, $u-1#93);

     label26:
        if $u-1#79 == -1 goto label29;

     label27:
        $u-1#104 = interfaceinvoke cursor1.<android.database.Cursor: int getInt(int)>($u-1#79);

     label28:
        goto label30;

     label29:
        $u-1#104 = 400;

     label30:
        if $u-1#82 == -1 goto label33;

     label31:
        $u-1#108 = interfaceinvoke cursor1.<android.database.Cursor: int getInt(int)>($u-1#82);

     label32:
        if $u-1#108 != 1 goto label33;

        $u-1#84 = 1;

        goto label34;

     label33:
        $u-1#84 = 0;

     label34:
        $u9 = new androidx.core.provider.FontsContractCompat$FontInfo;

        specialinvoke $u9.<androidx.core.provider.FontsContractCompat$FontInfo: void <init>(android.net.Uri,int,int,boolean,int)>($u-1#97, $u-1#90, $u-1#104, $u-1#84, $u-1#87);

        virtualinvoke idColumnIndex.<java.util.ArrayList: boolean add(java.lang.Object)>($u9);

     label35:
        goto label13;

     label36:
        if cursor1 == null goto label37;

        interfaceinvoke cursor1.<android.database.Cursor: void close()>();

     label37:
        cursor#116 = newarray (androidx.core.provider.FontsContractCompat$FontInfo)[0];

        $u-1#117 = virtualinvoke cursor.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(cursor#116);

        cursor#116 = (androidx.core.provider.FontsContractCompat$FontInfo[]) $u-1#117;

        return cursor#116;

     label38:
        cursor#120 := @caughtexception;

        if cursor1 == null goto label39;

        interfaceinvoke cursor1.<android.database.Cursor: void close()>();

     label39:
        goto label40;

     label40:
        throw cursor#120;

        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Throwable from label05 to label06 with label38;
        catch java.lang.Throwable from label08 to label09 with label38;
        catch java.lang.Throwable from label10 to label11 with label38;
        catch java.lang.Throwable from label12 to label14 with label38;
        catch java.lang.Throwable from label15 to label16 with label38;
        catch java.lang.Throwable from label19 to label20 with label38;
        catch java.lang.Throwable from label23 to label24 with label38;
        catch java.lang.Throwable from label25 to label26 with label38;
        catch java.lang.Throwable from label27 to label28 with label38;
        catch java.lang.Throwable from label31 to label32 with label38;
        catch java.lang.Throwable from label34 to label35 with label38;
    }

    static androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context, androidx.core.provider.FontRequest, int)
    {
        android.content.Context $u5;
        androidx.core.provider.FontRequest $u6;
        int $u7, $u-1#4;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $u-1;
        byte $u3;
        androidx.core.provider.FontsContractCompat$FontInfo[] $u-1#7;
        android.graphics.Typeface $u-1#9;
        androidx.core.provider.FontsContractCompat$TypefaceResult resultCode;
        android.content.pm.PackageManager$NameNotFoundException result;

        $u5 := @parameter0: android.content.Context;

        $u6 := @parameter1: androidx.core.provider.FontRequest;

        $u7 := @parameter2: int;

     label1:
        $u-1 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)>($u5, null, $u6);

     label2:
        $u-1#4 = virtualinvoke $u-1.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        $u3 = -3;

        if $u-1#4 != 0 goto label4;

        $u-1#7 = virtualinvoke $u-1.<androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()>();

        $u-1#9 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>($u5, null, $u-1#7, $u7);

        resultCode = new androidx.core.provider.FontsContractCompat$TypefaceResult;

        if $u-1#9 == null goto label3;

        $u3 = 0;

        goto label3;

     label3:
        specialinvoke resultCode.<androidx.core.provider.FontsContractCompat$TypefaceResult: void <init>(android.graphics.Typeface,int)>($u-1#9, $u3);

        return resultCode;

     label4:
        $u7 = virtualinvoke $u-1.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        if $u7 != 1 goto label5;

        $u3 = -2;

        goto label5;

     label5:
        resultCode = new androidx.core.provider.FontsContractCompat$TypefaceResult;

        specialinvoke resultCode.<androidx.core.provider.FontsContractCompat$TypefaceResult: void <init>(android.graphics.Typeface,int)>(null, $u3);

        return resultCode;

     label6:
        result := @caughtexception;

        resultCode = new androidx.core.provider.FontsContractCompat$TypefaceResult;

        specialinvoke resultCode.<androidx.core.provider.FontsContractCompat$TypefaceResult: void <init>(android.graphics.Typeface,int)>(null, -1);

        return resultCode;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
    }

    public static android.graphics.Typeface getFontSync(android.content.Context, androidx.core.provider.FontRequest, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean, int, int)
    {
        android.content.Context $u8;
        androidx.core.provider.FontRequest $u9;
        androidx.core.content.res.ResourcesCompat$FontCallback $u10;
        android.os.Handler $u11;
        boolean $u12;
        int $u13, $u14;
        java.lang.StringBuilder id;
        java.lang.String $u-1;
        androidx.collection.LruCache cached;
        java.lang.Object $u-1#8, $u-1#29;
        android.graphics.Typeface cached#10;
        androidx.core.provider.FontsContractCompat$TypefaceResult $u-1#12;
        androidx.core.provider.FontsContractCompat$1 typefaceResult;
        androidx.core.provider.SelfDestructiveThread e;
        java.lang.InterruptedException e#25;
        androidx.core.provider.FontsContractCompat$2 e#26;
        androidx.collection.SimpleArrayMap pendingReplies;
        java.util.ArrayList pendingReplies#31;
        androidx.core.provider.FontsContractCompat$3 pendingReplies#36;
        java.lang.Throwable $u3;

        $u8 := @parameter0: android.content.Context;

        $u9 := @parameter1: androidx.core.provider.FontRequest;

        $u10 := @parameter2: androidx.core.content.res.ResourcesCompat$FontCallback;

        $u11 := @parameter3: android.os.Handler;

        $u12 := @parameter4: boolean;

        $u13 := @parameter5: int;

        $u14 := @parameter6: int;

        id = new java.lang.StringBuilder;

        specialinvoke id.<java.lang.StringBuilder: void <init>()>();

        $u-1 = virtualinvoke $u9.<androidx.core.provider.FontRequest: java.lang.String getIdentifier()>();

        virtualinvoke id.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke id.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke id.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u14);

        $u-1 = virtualinvoke id.<java.lang.StringBuilder: java.lang.String toString()>();

        cached = <androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache>;

        $u-1#8 = virtualinvoke cached.<androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>($u-1);

        cached#10 = (android.graphics.Typeface) $u-1#8;

        if cached#10 == null goto label01;

        if $u10 == null goto label20;

        virtualinvoke $u10.<androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)>(cached#10);

        return cached#10;

     label01:
        if $u12 == 0 goto label04;

        if $u13 != -1 goto label04;

        $u-1#12 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>($u8, $u9, $u14);

        if $u10 == null goto label03;

        $u13 = $u-1#12.<androidx.core.provider.FontsContractCompat$TypefaceResult: int mResult>;

        if $u13 != 0 goto label02;

        cached#10 = $u-1#12.<androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface>;

        virtualinvoke $u10.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>(cached#10, $u11);

        goto label03;

     label02:
        $u13 = $u-1#12.<androidx.core.provider.FontsContractCompat$TypefaceResult: int mResult>;

        virtualinvoke $u10.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>($u13, $u11);

     label03:
        cached#10 = $u-1#12.<androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface>;

        return cached#10;

     label04:
        typefaceResult = new androidx.core.provider.FontsContractCompat$1;

        specialinvoke typefaceResult.<androidx.core.provider.FontsContractCompat$1: void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String)>($u8, $u9, $u14, $u-1);

        if $u12 == 0 goto label08;

        e = <androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread>;

     label05:
        $u-1#8 = virtualinvoke e.<androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)>(typefaceResult, $u13);

     label06:
        $u-1#12 = (androidx.core.provider.FontsContractCompat$TypefaceResult) $u-1#8;

        cached#10 = $u-1#12.<androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface>;

        return cached#10;

     label07:
        e#25 := @caughtexception;

        return null;

     label08:
        if $u10 != null goto label09;

        e#26 = null;

        goto label10;

     label09:
        e#26 = new androidx.core.provider.FontsContractCompat$2;

        specialinvoke e#26.<androidx.core.provider.FontsContractCompat$2: void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)>($u10, $u11);

     label10:
        $u-1#8 = <androidx.core.provider.FontsContractCompat: java.lang.Object sLock>;

        entermonitor $u-1#8;

     label11:
        pendingReplies = <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies>;

        $u-1#29 = virtualinvoke pendingReplies.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($u-1);

        pendingReplies#31 = (java.util.ArrayList) $u-1#29;

        if pendingReplies#31 == null goto label14;

        if e#26 == null goto label12;

        virtualinvoke pendingReplies#31.<java.util.ArrayList: boolean add(java.lang.Object)>(e#26);

     label12:
        exitmonitor $u-1#8;

     label13:
        return null;

     label14:
        if e#26 == null goto label15;

        pendingReplies#31 = new java.util.ArrayList;

        specialinvoke pendingReplies#31.<java.util.ArrayList: void <init>()>();

        virtualinvoke pendingReplies#31.<java.util.ArrayList: boolean add(java.lang.Object)>(e#26);

        pendingReplies = <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies>;

        virtualinvoke pendingReplies.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u-1, pendingReplies#31);

     label15:
        exitmonitor $u-1#8;

     label16:
        e = <androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread>;

        pendingReplies#36 = new androidx.core.provider.FontsContractCompat$3;

        specialinvoke pendingReplies#36.<androidx.core.provider.FontsContractCompat$3: void <init>(java.lang.String)>($u-1);

        virtualinvoke e.<androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)>(typefaceResult, pendingReplies#36);

        return null;

     label17:
        $u3 := @caughtexception;

     label18:
        exitmonitor $u-1#8;

     label19:
        throw $u3;

     label20:
        return cached#10;

        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label11 to label13 with label17;
        catch java.lang.Throwable from label14 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager, androidx.core.provider.FontRequest, android.content.res.Resources) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager $u8;
        androidx.core.provider.FontRequest $u9;
        android.content.res.Resources $u10;
        java.lang.String $u-1, packageInfo, $u-1#6;
        android.content.pm.ProviderInfo $u-1#3;
        boolean $u-1#8;
        android.content.pm.PackageInfo $u-1#12;
        android.content.pm.Signature[] signatures;
        java.util.List $u-1#15, $u-1#18;
        java.util.Comparator requestCertificatesList;
        int i, $u-1#21;
        java.util.ArrayList requestSignatures;
        java.lang.Object $u-1#24;
        java.util.Collection $u7;
        android.content.pm.PackageManager$NameNotFoundException packageInfo#31;
        java.lang.StringBuilder signatures#32;

        $u8 := @parameter0: android.content.pm.PackageManager;

        $u9 := @parameter1: androidx.core.provider.FontRequest;

        $u10 := @parameter2: android.content.res.Resources;

        $u-1 = virtualinvoke $u9.<androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()>();

        $u-1#3 = virtualinvoke $u8.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($u-1, 0);

        if $u-1#3 == null goto label5;

        packageInfo = $u-1#3.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $u-1#6 = virtualinvoke $u9.<androidx.core.provider.FontRequest: java.lang.String getProviderPackage()>();

        $u-1#8 = virtualinvoke packageInfo.<java.lang.String: boolean equals(java.lang.Object)>($u-1#6);

        if $u-1#8 == 0 goto label4;

        $u-1 = $u-1#3.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $u-1#12 = virtualinvoke $u8.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($u-1, 64);

        signatures = $u-1#12.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $u-1#15 = staticinvoke <androidx.core.provider.FontsContractCompat: java.util.List convertToByteArrayList(android.content.pm.Signature[])>(signatures);

        requestCertificatesList = <androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($u-1#15, requestCertificatesList);

        $u-1#18 = staticinvoke <androidx.core.provider.FontsContractCompat: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)>($u9, $u10);

        i = 0;

     label1:
        $u-1#21 = interfaceinvoke $u-1#18.<java.util.List: int size()>();

        if i >= $u-1#21 goto label3;

        requestSignatures = new java.util.ArrayList;

        $u-1#24 = interfaceinvoke $u-1#18.<java.util.List: java.lang.Object get(int)>(i);

        $u7 = (java.util.Collection) $u-1#24;

        specialinvoke requestSignatures.<java.util.ArrayList: void <init>(java.util.Collection)>($u7);

        requestCertificatesList = <androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(requestSignatures, requestCertificatesList);

        $u-1#8 = staticinvoke <androidx.core.provider.FontsContractCompat: boolean equalsByteArrayList(java.util.List,java.util.List)>($u-1#15, requestSignatures);

        if $u-1#8 == 0 goto label2;

        return $u-1#3;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;

     label4:
        packageInfo#31 = new android.content.pm.PackageManager$NameNotFoundException;

        signatures#32 = new java.lang.StringBuilder;

        specialinvoke signatures#32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found content provider ");

        virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but package was not ");

        $u-1 = virtualinvoke $u9.<androidx.core.provider.FontRequest: java.lang.String getProviderPackage()>();

        virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke packageInfo#31.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($u-1);

        throw packageInfo#31;

     label5:
        packageInfo#31 = new android.content.pm.PackageManager$NameNotFoundException;

        signatures#32 = new java.lang.StringBuilder;

        specialinvoke signatures#32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package found for authority: ");

        virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke signatures#32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke packageInfo#31.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($u-1);

        goto label6;

     label6:
        throw packageInfo#31;
    }

    public static java.util.Map prepareFontData(android.content.Context, androidx.core.provider.FontsContractCompat$FontInfo[], android.os.CancellationSignal)
    {
        android.content.Context $u6;
        androidx.core.provider.FontsContractCompat$FontInfo[] $u7;
        android.os.CancellationSignal $u8;
        java.util.HashMap out;
        androidx.core.provider.FontsContractCompat$FontInfo font;
        int $u1, $u2, $u-1;
        android.net.Uri $u-1#5;
        boolean $u-1#7;
        java.nio.ByteBuffer $u-1#9;
        java.util.Map $u-1#11;

        $u6 := @parameter0: android.content.Context;

        $u7 := @parameter1: androidx.core.provider.FontsContractCompat$FontInfo[];

        $u8 := @parameter2: android.os.CancellationSignal;

        out = new java.util.HashMap;

        specialinvoke out.<java.util.HashMap: void <init>()>();

        $u1 = lengthof $u7;

        $u2 = 0;

     label1:
        if $u2 >= $u1 goto label5;

        font = $u7[$u2];

        $u-1 = virtualinvoke font.<androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()>();

        if $u-1 == 0 goto label2;

        goto label4;

     label2:
        $u-1#5 = virtualinvoke font.<androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        $u-1#7 = virtualinvoke out.<java.util.HashMap: boolean containsKey(java.lang.Object)>($u-1#5);

        if $u-1#7 == 0 goto label3;

        goto label4;

     label3:
        $u-1#9 = staticinvoke <androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)>($u6, $u8, $u-1#5);

        virtualinvoke out.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u-1#5, $u-1#9);

     label4:
        $u2 = $u2 + 1;

        goto label1;

     label5:
        $u-1#11 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(out);

        return $u-1#11;
    }

    public static void requestFont(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.FontsContractCompat$FontRequestCallback, android.os.Handler)
    {
        android.content.Context $u1;
        androidx.core.provider.FontRequest $u2;
        androidx.core.provider.FontsContractCompat$FontRequestCallback $u3;
        android.os.Handler $u4;

        $u1 := @parameter0: android.content.Context;

        $u2 := @parameter1: androidx.core.provider.FontRequest;

        $u3 := @parameter2: androidx.core.provider.FontsContractCompat$FontRequestCallback;

        $u4 := @parameter3: android.os.Handler;

        $u1 = virtualinvoke $u1.<android.content.Context: android.content.Context getApplicationContext()>();

        staticinvoke <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>($u1, $u2, $u3, $u4);

        return;
    }

    private static void requestFontInternal(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.FontsContractCompat$FontRequestCallback, android.os.Handler)
    {
        android.content.Context $u2;
        androidx.core.provider.FontRequest $u3;
        androidx.core.provider.FontsContractCompat$FontRequestCallback $u4;
        android.os.Handler $u5, callerThreadHandler;
        androidx.core.provider.FontsContractCompat$4 $u1;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: androidx.core.provider.FontRequest;

        $u4 := @parameter2: androidx.core.provider.FontsContractCompat$FontRequestCallback;

        $u5 := @parameter3: android.os.Handler;

        callerThreadHandler = new android.os.Handler;

        specialinvoke callerThreadHandler.<android.os.Handler: void <init>()>();

        $u1 = new androidx.core.provider.FontsContractCompat$4;

        specialinvoke $u1.<androidx.core.provider.FontsContractCompat$4: void <init>(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)>($u2, $u3, callerThreadHandler, $u4);

        virtualinvoke $u5.<android.os.Handler: boolean post(java.lang.Runnable)>($u1);

        return;
    }

    public static void resetCache()
    {
        androidx.collection.LruCache $u0;

        $u0 = <androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache>;

        virtualinvoke $u0.<androidx.collection.LruCache: void evictAll()>();

        return;
    }
}
