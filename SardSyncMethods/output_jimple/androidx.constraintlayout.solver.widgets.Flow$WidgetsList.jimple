class androidx.constraintlayout.solver.widgets.Flow$WidgetsList extends java.lang.Object
{
    private androidx.constraintlayout.solver.widgets.ConstraintWidget biggest;
    int biggestDimension;
    private androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom;
    private int mCount;
    private int mHeight;
    private androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft;
    private int mMax;
    private int mNbMatchConstraintsWidgets;
    private int mOrientation;
    private int mPaddingBottom;
    private int mPaddingLeft;
    private int mPaddingRight;
    private int mPaddingTop;
    private androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight;
    private int mStartIndex;
    private androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop;
    private int mWidth;
    final androidx.constraintlayout.solver.widgets.Flow this$0;

    public void <init>(androidx.constraintlayout.solver.widgets.Flow, int, androidx.constraintlayout.solver.widgets.ConstraintAnchor, androidx.constraintlayout.solver.widgets.ConstraintAnchor, androidx.constraintlayout.solver.widgets.ConstraintAnchor, androidx.constraintlayout.solver.widgets.ConstraintAnchor, int)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int $u4, $u9;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor $u5, $u6, $u7, $u8;
        androidx.constraintlayout.solver.widgets.Flow $u3;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u3 := @parameter0: androidx.constraintlayout.solver.widgets.Flow;

        $u4 := @parameter1: int;

        $u5 := @parameter2: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u6 := @parameter3: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u7 := @parameter4: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u8 := @parameter5: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u9 := @parameter6: int;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0> = $u3;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = null;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation> = $u4;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft> = $u5;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop> = $u6;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight> = $u7;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom> = $u8;

        $u4 = virtualinvoke $u3.<androidx.constraintlayout.solver.widgets.Flow: int getPaddingLeft()>();

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft> = $u4;

        $u4 = virtualinvoke $u3.<androidx.constraintlayout.solver.widgets.Flow: int getPaddingTop()>();

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop> = $u4;

        $u4 = virtualinvoke $u3.<androidx.constraintlayout.solver.widgets.Flow: int getPaddingRight()>();

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight> = $u4;

        $u4 = virtualinvoke $u3.<androidx.constraintlayout.solver.widgets.Flow: int getPaddingBottom()>();

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom> = $u4;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax> = $u9;

        return;
    }

    static androidx.constraintlayout.solver.widgets.ConstraintWidget access$2000(androidx.constraintlayout.solver.widgets.Flow$WidgetsList)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList $u1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget ret0;

        $u1 := @parameter0: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        ret0 = $u1.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        return ret0;
    }

    private void recomputeDimensions()
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int count, i, widget, $u-1, $u-1#23, $u-1#45;
        androidx.constraintlayout.solver.widgets.Flow width;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u-1#11;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget#15, gap1;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = null;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = 0;

        count = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount>;

        i = 0;

     label01:
        if i >= count goto label10;

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        widget = widget + i;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>(width);

        if widget < $u-1 goto label02;

        return;

     label02:
        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#11 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>(width);

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        widget = widget + i;

        widget#15 = $u-1#11[widget];

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation>;

        if widget != 0 goto label06;

        widget = virtualinvoke widget#15.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()>();

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$000(androidx.constraintlayout.solver.widgets.Flow)>(width);

        $u-1#23 = virtualinvoke widget#15.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#23 != 8 goto label03;

        $u-1 = 0;

     label03:
        $u-1#23 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth>;

        widget = widget + $u-1;

        widget = $u-1#23 + widget;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = widget;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        widget = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$300(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width, widget#15, widget);

        gap1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        if gap1 == null goto label04;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension>;

        if $u-1 >= widget goto label05;

     label04:
        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = widget#15;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = widget;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = widget;

     label05:
        goto label09;

     label06:
        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        widget = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$200(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width, widget#15, widget);

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$300(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width, widget#15, $u-1);

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#23 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$100(androidx.constraintlayout.solver.widgets.Flow)>(width);

        $u-1#45 = virtualinvoke widget#15.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#45 != 8 goto label07;

        $u-1#23 = 0;

     label07:
        $u-1#45 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight>;

        $u-1 = $u-1 + $u-1#23;

        $u-1 = $u-1#45 + $u-1;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = $u-1;

        gap1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        if gap1 == null goto label08;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension>;

        if $u-1 >= widget goto label09;

     label08:
        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = widget#15;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = widget;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = widget;

     label09:
        i = i + 1;

        goto label01;

     label10:
        return;
    }

    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u6, gap1#24;
        int width, $u-1#13, $u-1#15, $u-1#42;
        androidx.constraintlayout.solver.widgets.Flow width#3;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $u-1, gap1;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u6 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation>;

        if width != 0 goto label5;

        width#3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        width = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$200(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width#3, $u6, width);

        $u-1 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        gap1 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $u-1 != gap1 goto label1;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets>;

        width = width + 1;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets> = width;

        width = 0;

     label1:
        width#3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#13 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$000(androidx.constraintlayout.solver.widgets.Flow)>(width#3);

        $u-1#15 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#15 != 8 goto label2;

        $u-1#13 = 0;

     label2:
        $u-1#15 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth>;

        width = width + $u-1#13;

        width = $u-1#15 + width;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = width;

        width#3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        width = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$300(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width#3, $u6, width);

        gap1#24 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        if gap1#24 == null goto label3;

        $u-1#13 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension>;

        if $u-1#13 >= width goto label4;

     label3:
        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = $u6;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = width;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = width;

     label4:
        goto label9;

     label5:
        width#3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        width = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$200(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width#3, $u6, width);

        width#3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#13 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax>;

        $u-1#13 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$300(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(width#3, $u6, $u-1#13);

        $u-1 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        gap1 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $u-1 != gap1 goto label6;

        $u-1#13 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets>;

        $u-1#13 = $u-1#13 + 1;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets> = $u-1#13;

        $u-1#13 = 0;

     label6:
        width#3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#15 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$100(androidx.constraintlayout.solver.widgets.Flow)>(width#3);

        $u-1#42 = virtualinvoke $u6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#42 != 8 goto label7;

        $u-1#15 = 0;

     label7:
        $u-1#42 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight>;

        $u-1#13 = $u-1#13 + $u-1#15;

        $u-1#13 = $u-1#42 + $u-1#13;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = $u-1#13;

        gap1#24 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        if gap1#24 == null goto label8;

        $u-1#13 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension>;

        if $u-1#13 >= width goto label9;

     label8:
        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = $u6;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = width;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = width;

     label9:
        width = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount>;

        width = width + 1;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount> = width;

        return;
    }

    public void clear()
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int biggestDimension> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest> = null;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount> = 0;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets> = 0;

        return;
    }

    public void createConstraints(boolean, int, boolean)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        boolean $u17, $u19, singleChain#15, $u-1#58;
        int $u18, count, i, widget, $u-1, index, widget1, $u-1#24;
        androidx.constraintlayout.solver.widgets.Flow singleChain;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u-1#8;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget#12, index#36, bottom#50, i#73;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor bottom, i2;
        float $u-1#97;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u17 := @parameter0: boolean;

        $u18 := @parameter1: int;

        $u19 := @parameter2: boolean;

        count = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount>;

        i = 0;

     label01:
        if i >= count goto label04;

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        widget = widget + i;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if widget < $u-1 goto label02;

        goto label04;

     label02:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#8 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        widget = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        widget = widget + i;

        widget#12 = $u-1#8[widget];

        if widget#12 == null goto label03;

        virtualinvoke widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchors()>();

     label03:
        i = i + 1;

        goto label01;

     label04:
        if count == 0 goto label62;

        widget#12 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        if widget#12 != null goto label05;

        return;

     label05:
        if $u19 == 0 goto label06;

        if $u18 != 0 goto label06;

        singleChain#15 = 1;

        goto label07;

     label06:
        singleChain#15 = 0;

     label07:
        i = -1;

        widget = -1;

        $u-1 = 0;

     label08:
        if $u-1 >= count goto label13;

        index = $u-1;

        if $u17 == 0 goto label09;

        index = count + -1;

        index = index - $u-1;

     label09:
        widget1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        widget1 = widget1 + index;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#24 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if widget1 < $u-1#24 goto label10;

        goto label13;

     label10:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#8 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        widget1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        index = widget1 + index;

        widget#12 = $u-1#8[index];

        index = virtualinvoke widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if index != 0 goto label12;

        if i != -1 goto label11;

        i = $u-1;

     label11:
        widget = $u-1;

     label12:
        $u-1 = $u-1 + 1;

        goto label08;

     label13:
        widget#12 = null;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation>;

        if $u-1 != 0 goto label38;

        index#36 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$600(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        virtualinvoke index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)>($u-1);

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop>;

        if $u18 <= 0 goto label14;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$100(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        $u-1 = $u-1 + index;

     label14:
        bottom = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        if $u19 == 0 goto label15;

        bottom = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

     label15:
        if $u18 <= 0 goto label16;

        bottom = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        bottom#50 = bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

     label16:
        bottom#50 = index#36;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u18 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$700(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if $u18 != 3 goto label21;

        $u-1#58 = virtualinvoke index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $u-1#58 != 0 goto label21;

        $u18 = 0;

     label17:
        if $u18 >= count goto label21;

        $u-1 = $u18;

        if $u17 == 0 goto label18;

        $u-1 = count + -1;

        $u-1 = $u-1 - $u18;

     label18:
        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        index = index + $u-1;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        widget1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if index < widget1 goto label19;

        goto label21;

     label19:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#8 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        $u-1 = index + $u-1;

        i#73 = $u-1#8[$u-1];

        $u-1#58 = virtualinvoke i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $u-1#58 == 0 goto label20;

        bottom#50 = i#73;

        goto label21;

     label20:
        $u18 = $u18 + 1;

        goto label17;

     label21:
        $u18 = 0;

     label22:
        if $u18 >= count goto label37;

        $u-1 = $u18;

        if $u17 == 0 goto label23;

        $u-1 = count + -1;

        $u-1 = $u-1 - $u18;

     label23:
        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        index = index + $u-1;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        widget1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if index < widget1 goto label24;

        goto label37;

     label24:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#8 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        index = index + $u-1;

        i#73 = $u-1#8[index];

        if $u18 != 0 goto label25;

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft>;

        virtualinvoke i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(bottom, i2, index);

     label25:
        if $u-1 != 0 goto label28;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$800(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#97 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: float access$900(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        if index != 0 goto label26;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1000(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if index == -1 goto label26;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1000(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#97 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: float access$1100(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        goto label27;

     label26:
        if $u19 == 0 goto label27;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1200(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if index == -1 goto label27;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1200(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#97 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: float access$1300(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

     label27:
        virtualinvoke i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)>($u-1);

        virtualinvoke i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalBiasPercent(float)>($u-1#97);

     label28:
        $u-1 = count + -1;

        if $u18 != $u-1 goto label29;

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight>;

        virtualinvoke i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(bottom, i2, $u-1);

     label29:
        if widget#12 == null goto label31;

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$000(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        if $u18 != i goto label30;

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setGoneMargin(int)>($u-1);

     label30:
        bottom = widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        $u-1 = widget + 1;

        if $u18 != $u-1 goto label31;

        bottom = widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setGoneMargin(int)>($u-1);

     label31:
        if i#73 == index#36 goto label36;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$700(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if $u-1 != 3 goto label32;

        $u-1#58 = virtualinvoke bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $u-1#58 == 0 goto label32;

        if i#73 == bottom#50 goto label32;

        $u-1#58 = virtualinvoke i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $u-1#58 == 0 goto label32;

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        i2 = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label36;

     label32:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$700(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if $u-1 == 0 goto label35;

        if $u-1 == 1 goto label34;

        if singleChain#15 == 0 goto label33;

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        goto label36;

     label33:
        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label36;

     label34:
        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label36;

     label35:
        bottom = i#73.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

     label36:
        widget#12 = i#73;

        $u18 = $u18 + 1;

        goto label22;

     label37:
        return;

     label38:
        index#36 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintWidget biggest>;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$800(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        virtualinvoke index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)>($u-1);

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft>;

        if $u18 <= 0 goto label39;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$000(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        $u-1 = $u-1 + index;

     label39:
        if $u17 == 0 goto label41;

        bottom = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        if $u19 == 0 goto label40;

        bottom = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

     label40:
        if $u18 <= 0 goto label43;

        bottom = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        bottom#50 = bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label43;

     label41:
        bottom = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        if $u19 == 0 goto label42;

        bottom = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

     label42:
        if $u18 <= 0 goto label43;

        bottom = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        bottom#50 = bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner>;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

     label43:
        $u18 = 0;

     label44:
        if $u18 >= count goto label62;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        $u-1 = $u-1 + $u18;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if $u-1 < index goto label45;

        return;

     label45:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#8 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        $u-1 = $u-1 + $u18;

        bottom#50 = $u-1#8[$u-1];

        if $u18 != 0 goto label48;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop>;

        virtualinvoke bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(bottom, i2, $u-1);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$600(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#97 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: float access$1400(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        index = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        if index != 0 goto label46;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if index == -1 goto label46;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1500(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#97 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: float access$1600(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        goto label47;

     label46:
        if $u19 == 0 goto label47;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        index = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1700(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if index == -1 goto label47;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1700(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#97 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: float access$1800(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

     label47:
        virtualinvoke bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)>($u-1);

        virtualinvoke bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalBiasPercent(float)>($u-1#97);

     label48:
        $u-1 = count + -1;

        if $u18 != $u-1 goto label49;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom>;

        virtualinvoke bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(bottom, i2, $u-1);

     label49:
        if widget#12 == null goto label51;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i2 = widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$100(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        if $u18 != i goto label50;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setGoneMargin(int)>($u-1);

     label50:
        bottom = widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        i2 = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        $u-1 = widget + 1;

        if $u18 != $u-1 goto label51;

        bottom = widget#12.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setGoneMargin(int)>($u-1);

     label51:
        if bottom#50 == index#36 goto label61;

        if $u17 == 0 goto label56;

        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1900(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if $u-1 == 0 goto label54;

        if $u-1 == 1 goto label53;

        if $u-1 == 2 goto label52;

        goto label55;

     label52:
        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label55;

     label53:
        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label55;

     label54:
        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

     label55:
        goto label61;

     label56:
        singleChain = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$1900(androidx.constraintlayout.solver.widgets.Flow)>(singleChain);

        if $u-1 == 0 goto label60;

        if $u-1 == 1 goto label59;

        if $u-1 == 2 goto label57;

        goto label61;

     label57:
        if singleChain#15 == 0 goto label58;

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, $u-1);

        goto label61;

     label58:
        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label61;

     label59:
        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label61;

     label60:
        bottom = bottom#50.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i2 = index#36.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        virtualinvoke bottom.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(i2, 0);

        goto label61;

     label61:
        widget#12 = bottom#50;

        $u18 = $u18 + 1;

        goto label44;

     label62:
        return;
    }

    public int getHeight()
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int $u-1, $u0;
        androidx.constraintlayout.solver.widgets.Flow $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation>;

        if $u-1 != 1 goto label1;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$100(androidx.constraintlayout.solver.widgets.Flow)>($u1);

        $u-1 = $u0 - $u-1;

        return $u-1;

     label1:
        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mHeight>;

        return $u-1;
    }

    public int getWidth()
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int $u-1, $u0;
        androidx.constraintlayout.solver.widgets.Flow $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation>;

        if $u-1 != 0 goto label1;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$000(androidx.constraintlayout.solver.widgets.Flow)>($u1);

        $u-1 = $u0 - $u-1;

        return $u-1;

     label1:
        $u-1 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mWidth>;

        return $u-1;
    }

    public void measureMatchConstraints(int)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int $u11, count, widgetSize, $u2, $u-1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;
        androidx.constraintlayout.solver.widgets.Flow $u3;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $u-1#11;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $u-1#16, $u3#18;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u11 := @parameter0: int;

        widgetSize = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mNbMatchConstraintsWidgets>;

        if widgetSize != 0 goto label1;

        return;

     label1:
        count = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mCount>;

        $u11 = $u11 / widgetSize;

        widgetSize = 0;

     label2:
        if widgetSize >= count goto label6;

        $u2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        $u2 = $u2 + widgetSize;

        $u3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: int access$400(androidx.constraintlayout.solver.widgets.Flow)>($u3);

        if $u2 < $u-1 goto label3;

        goto label6;

     label3:
        $u3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#11 = staticinvoke <androidx.constraintlayout.solver.widgets.Flow: androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow)>($u3);

        $u2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex>;

        $u2 = $u2 + widgetSize;

        widget = $u-1#11[$u2];

        $u2 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation>;

        if $u2 != 0 goto label4;

        if widget == null goto label5;

        $u-1#16 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $u3#18 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $u-1#16 != $u3#18 goto label5;

        $u2 = widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        if $u2 != 0 goto label5;

        $u3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#16 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $u3#18 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        $u2 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()>();

        virtualinvoke $u3.<androidx.constraintlayout.solver.widgets.Flow: void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int)>(widget, $u-1#16, $u11, $u3#18, $u2);

        goto label5;

     label4:
        if widget == null goto label5;

        $u-1#16 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        $u3#18 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $u-1#16 != $u3#18 goto label5;

        $u2 = widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        if $u2 != 0 goto label5;

        $u3 = this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.Flow this$0>;

        $u-1#16 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $u2 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()>();

        $u3#18 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke $u3.<androidx.constraintlayout.solver.widgets.Flow: void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int)>(widget, $u-1#16, $u2, $u3#18, $u11);

     label5:
        widgetSize = widgetSize + 1;

        goto label2;

     label6:
        specialinvoke this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: void recomputeDimensions()>();

        return;
    }

    public void setStartIndex(int)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u1 := @parameter0: int;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mStartIndex> = $u1;

        return;
    }

    public void setup(int, androidx.constraintlayout.solver.widgets.ConstraintAnchor, androidx.constraintlayout.solver.widgets.ConstraintAnchor, androidx.constraintlayout.solver.widgets.ConstraintAnchor, androidx.constraintlayout.solver.widgets.ConstraintAnchor, int, int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.Flow$WidgetsList this;
        int $u1, $u6, $u7, $u8, $u9, $u10;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor $u2, $u3, $u4, $u5;

        this := @this: androidx.constraintlayout.solver.widgets.Flow$WidgetsList;

        $u1 := @parameter0: int;

        $u2 := @parameter1: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u3 := @parameter2: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u4 := @parameter3: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u5 := @parameter4: androidx.constraintlayout.solver.widgets.ConstraintAnchor;

        $u6 := @parameter5: int;

        $u7 := @parameter6: int;

        $u8 := @parameter7: int;

        $u9 := @parameter8: int;

        $u10 := @parameter9: int;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mOrientation> = $u1;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft> = $u2;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop> = $u3;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight> = $u4;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom> = $u5;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingLeft> = $u6;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingTop> = $u7;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingRight> = $u8;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mPaddingBottom> = $u9;

        this.<androidx.constraintlayout.solver.widgets.Flow$WidgetsList: int mMax> = $u10;

        return;
    }
}
