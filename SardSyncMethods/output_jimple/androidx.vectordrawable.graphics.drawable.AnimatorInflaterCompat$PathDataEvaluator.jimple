class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator extends java.lang.Object implements android.animation.TypeEvaluator
{
    private androidx.core.graphics.PathParser$PathDataNode[] mNodeArray;

    void <init>()
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator this;

        this := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator this;
        androidx.core.graphics.PathParser$PathDataNode[] $u1;

        this := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $u1 := @parameter0: androidx.core.graphics.PathParser$PathDataNode[];

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray> = $u1;

        return;
    }

    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator this;
        androidx.core.graphics.PathParser$PathDataNode[] $u-1, $u3#5;
        float $u1;
        java.lang.Object $u2, $u3;

        this := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $u1 := @parameter0: float;

        $u2 := @parameter1: java.lang.Object;

        $u3 := @parameter2: java.lang.Object;

        $u-1 = (androidx.core.graphics.PathParser$PathDataNode[]) $u2;

        $u3#5 = (androidx.core.graphics.PathParser$PathDataNode[]) $u3;

        $u-1 = virtualinvoke this.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($u1, $u-1, $u3#5);

        return $u-1;
    }

    public androidx.core.graphics.PathParser$PathDataNode[] evaluate(float, androidx.core.graphics.PathParser$PathDataNode[], androidx.core.graphics.PathParser$PathDataNode[])
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator this;
        float $u5;
        androidx.core.graphics.PathParser$PathDataNode[] $u6, $u7, i;
        androidx.core.graphics.PathParser$PathDataNode $u2, $u3, $u1#11;
        boolean $u-1;
        int i#8, $u1;
        java.lang.IllegalArgumentException i#13;

        this := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $u5 := @parameter0: float;

        $u6 := @parameter1: androidx.core.graphics.PathParser$PathDataNode[];

        $u7 := @parameter2: androidx.core.graphics.PathParser$PathDataNode[];

        $u-1 = staticinvoke <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($u6, $u7);

        if $u-1 == 0 goto label4;

        i = this.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray>;

        $u-1 = staticinvoke <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>(i, $u6);

        if $u-1 != 0 goto label1;

        i = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>($u6);

        this.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray> = i;

     label1:
        i#8 = 0;

     label2:
        $u1 = lengthof $u6;

        if i#8 >= $u1 goto label3;

        i = this.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray>;

        $u1#11 = i[i#8];

        $u2 = $u6[i#8];

        $u3 = $u7[i#8];

        virtualinvoke $u1#11.<androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)>($u2, $u3, $u5);

        i#8 = i#8 + 1;

        goto label2;

     label3:
        $u6 = this.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray>;

        return $u6;

     label4:
        i#13 = new java.lang.IllegalArgumentException;

        specialinvoke i#13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t interpolate between two incompatible pathData");

        goto label5;

     label5:
        throw i#13;
    }
}
