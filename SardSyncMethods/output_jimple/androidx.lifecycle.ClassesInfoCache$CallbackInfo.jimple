class androidx.lifecycle.ClassesInfoCache$CallbackInfo extends java.lang.Object
{
    final java.util.Map mEventToHandlers;
    final java.util.Map mHandlerToEvent;

    void <init>(java.util.Map)
    {
        androidx.lifecycle.ClassesInfoCache$CallbackInfo this;
        java.util.Map handlerToEvent;
        java.util.HashMap $u0;
        java.util.Set $u-1;
        java.util.Iterator $u-1#4;
        boolean $u-1#6;
        java.lang.Object $u-1#8;
        java.util.Map$Entry entry;
        androidx.lifecycle.Lifecycle$Event event;
        java.util.List methodReferences;
        java.util.ArrayList $u4;

        this := @this: androidx.lifecycle.ClassesInfoCache$CallbackInfo;

        handlerToEvent := @parameter0: java.util.Map;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent> = handlerToEvent;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        this.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers> = $u0;

        $u-1 = interfaceinvoke handlerToEvent.<java.util.Map: java.util.Set entrySet()>();

        $u-1#4 = interfaceinvoke $u-1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $u-1#6 = interfaceinvoke $u-1#4.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label3;

        $u-1#8 = interfaceinvoke $u-1#4.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $u-1#8;

        $u-1#8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        event = (androidx.lifecycle.Lifecycle$Event) $u-1#8;

        handlerToEvent = this.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers>;

        $u-1#8 = interfaceinvoke handlerToEvent.<java.util.Map: java.lang.Object get(java.lang.Object)>(event);

        methodReferences = (java.util.List) $u-1#8;

        if methodReferences != null goto label2;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        methodReferences = $u4;

        handlerToEvent = this.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers>;

        interfaceinvoke handlerToEvent.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(event, $u4);

     label2:
        $u-1#8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke methodReferences.<java.util.List: boolean add(java.lang.Object)>($u-1#8);

        goto label1;

     label3:
        return;
    }

    private static void invokeMethodsForEvent(java.util.List, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event, java.lang.Object)
    {
        java.util.List handlers;
        androidx.lifecycle.LifecycleOwner $u3;
        androidx.lifecycle.Lifecycle$Event $u4;
        java.lang.Object $u5, $u-1#4;
        int $u-1;
        androidx.lifecycle.ClassesInfoCache$MethodReference $u1;

        handlers := @parameter0: java.util.List;

        $u3 := @parameter1: androidx.lifecycle.LifecycleOwner;

        $u4 := @parameter2: androidx.lifecycle.Lifecycle$Event;

        $u5 := @parameter3: java.lang.Object;

        if handlers == null goto label2;

        $u-1 = interfaceinvoke handlers.<java.util.List: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label2;

        $u-1#4 = interfaceinvoke handlers.<java.util.List: java.lang.Object get(int)>($u-1);

        $u1 = (androidx.lifecycle.ClassesInfoCache$MethodReference) $u-1#4;

        virtualinvoke $u1.<androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>($u3, $u4, $u5);

        $u-1 = $u-1 + -1;

        goto label1;

     label2:
        return;
    }

    void invokeCallbacks(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event, java.lang.Object)
    {
        androidx.lifecycle.ClassesInfoCache$CallbackInfo this;
        androidx.lifecycle.LifecycleOwner $u3;
        androidx.lifecycle.Lifecycle$Event $u4, $u1;
        java.lang.Object $u5, $u-1;
        java.util.Map $u0;
        java.util.List $u0#4;

        this := @this: androidx.lifecycle.ClassesInfoCache$CallbackInfo;

        $u3 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $u4 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $u5 := @parameter2: java.lang.Object;

        $u0 = this.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers>;

        $u-1 = interfaceinvoke $u0.<java.util.Map: java.lang.Object get(java.lang.Object)>($u4);

        $u0#4 = (java.util.List) $u-1;

        staticinvoke <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>($u0#4, $u3, $u4, $u5);

        $u0 = this.<androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers>;

        $u1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY>;

        $u-1 = interfaceinvoke $u0.<java.util.Map: java.lang.Object get(java.lang.Object)>($u1);

        $u0#4 = (java.util.List) $u-1;

        staticinvoke <androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>($u0#4, $u3, $u4, $u5);

        return;
    }
}
