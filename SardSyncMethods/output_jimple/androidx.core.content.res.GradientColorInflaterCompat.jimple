final class androidx.core.content.res.GradientColorInflaterCompat extends java.lang.Object
{
    private static final int TILE_MODE_CLAMP;
    private static final int TILE_MODE_MIRROR;
    private static final int TILE_MODE_REPEAT;

    private void <init>()
    {
        androidx.core.content.res.GradientColorInflaterCompat this;

        this := @this: androidx.core.content.res.GradientColorInflaterCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops, int, int, boolean, int)
    {
        androidx.core.content.res.GradientColorInflaterCompat$ColorStops $u1;
        int $u2, $u3, $u5;
        boolean $u4;

        $u1 := @parameter0: androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: boolean;

        $u5 := @parameter4: int;

        if $u1 == null goto label1;

        return $u1;

     label1:
        if $u4 == 0 goto label2;

        $u1 = new androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $u1.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)>($u2, $u5, $u3);

        return $u1;

     label2:
        $u1 = new androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $u1.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)>($u2, $u3);

        return $u1;
    }

    static android.graphics.Shader createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $u4;
        org.xmlpull.v1.XmlPullParser $u5;
        android.content.res.Resources$Theme $u6;
        android.util.AttributeSet $u-1;
        int $u-1#2;
        android.graphics.Shader $u-1#6;
        org.xmlpull.v1.XmlPullParserException $u1;

        $u4 := @parameter0: android.content.res.Resources;

        $u5 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u6 := @parameter2: android.content.res.Resources$Theme;

        $u-1 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($u5);

     label1:
        $u-1#2 = interfaceinvoke $u5.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $u-1#2 == 2 goto label2;

        if $u-1#2 == 1 goto label2;

        goto label1;

     label2:
        if $u-1#2 != 2 goto label3;

        $u-1#6 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u4, $u5, $u-1, $u6);

        return $u-1#6;

     label3:
        $u1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $u1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        goto label4;

     label4:
        throw $u1;
    }

    static android.graphics.Shader createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources $u31;
        org.xmlpull.v1.XmlPullParser $u32;
        android.util.AttributeSet $u33;
        android.content.res.Resources$Theme $u34;
        java.lang.String $u-1, $u-1#113;
        boolean $u-1#4;
        int[] a;
        android.content.res.TypedArray $u-1#10;
        int startX, $u9, centerColor, $u9#50, $u9#54, $u9#58;
        float $u-1#15, $u-1#19, $u-1#23, $u-1#26, $u-1#29, $u-1#33, $u-1#61;
        androidx.core.content.res.GradientColorInflaterCompat$ColorStops $u-1#62;
        android.graphics.LinearGradient $u19;
        float[] $u9#70;
        android.graphics.Shader$TileMode $u-1#71;
        android.graphics.SweepGradient $u9#91;
        byte $u9#101;
        android.graphics.RadialGradient $u9#102;
        org.xmlpull.v1.XmlPullParserException $u9#109;
        java.lang.StringBuilder a#112;

        $u31 := @parameter0: android.content.res.Resources;

        $u32 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u33 := @parameter2: android.util.AttributeSet;

        $u34 := @parameter3: android.content.res.Resources$Theme;

        $u-1 = interfaceinvoke $u32.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#4 = virtualinvoke $u-1.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $u-1#4 == 0 goto label4;

        a = <androidx.core.R$styleable: int[] GradientColor>;

        $u-1#10 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u31, $u34, $u33, a);

        startX = <androidx.core.R$styleable: int GradientColor_android_startX>;

        $u-1#15 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "startX", startX, 0.0F);

        startX = <androidx.core.R$styleable: int GradientColor_android_startY>;

        $u-1#19 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "startY", startX, 0.0F);

        startX = <androidx.core.R$styleable: int GradientColor_android_endX>;

        $u-1#23 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "endX", startX, 0.0F);

        startX = <androidx.core.R$styleable: int GradientColor_android_endY>;

        $u-1#26 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "endY", startX, 0.0F);

        startX = <androidx.core.R$styleable: int GradientColor_android_centerX>;

        $u-1#29 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "centerX", startX, 0.0F);

        startX = <androidx.core.R$styleable: int GradientColor_android_centerY>;

        $u-1#33 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "centerY", startX, 0.0F);

        startX = <androidx.core.R$styleable: int GradientColor_android_type>;

        startX = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($u-1#10, $u32, "type", startX, 0);

        $u9 = <androidx.core.R$styleable: int GradientColor_android_startColor>;

        $u9 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($u-1#10, $u32, "startColor", $u9, 0);

        $u-1#4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u32, "centerColor");

        centerColor = <androidx.core.R$styleable: int GradientColor_android_centerColor>;

        centerColor = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($u-1#10, $u32, "centerColor", centerColor, 0);

        $u9#50 = <androidx.core.R$styleable: int GradientColor_android_endColor>;

        $u9#50 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($u-1#10, $u32, "endColor", $u9#50, 0);

        $u9#54 = <androidx.core.R$styleable: int GradientColor_android_tileMode>;

        $u9#54 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($u-1#10, $u32, "tileMode", $u9#54, 0);

        $u9#58 = <androidx.core.R$styleable: int GradientColor_android_gradientRadius>;

        $u-1#61 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($u-1#10, $u32, "gradientRadius", $u9#58, 0.0F);

        virtualinvoke $u-1#10.<android.content.res.TypedArray: void recycle()>();

        $u-1#62 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u31, $u32, $u33, $u34);

        $u-1#62 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)>($u-1#62, $u9, $u9#50, $u-1#4, centerColor);

        if startX == 1 goto label2;

        if startX == 2 goto label1;

        $u19 = new android.graphics.LinearGradient;

        a = $u-1#62.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $u9#70 = $u-1#62.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        $u-1#71 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>($u9#54);

        specialinvoke $u19.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($u-1#15, $u-1#19, $u-1#23, $u-1#26, a, $u9#70, $u-1#71);

        return $u19;

     label1:
        $u9#91 = new android.graphics.SweepGradient;

        a = $u-1#62.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $u9#70 = $u-1#62.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        specialinvoke $u9#91.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($u-1#29, $u-1#33, a, $u9#70);

        return $u9#91;

     label2:
        $u9#101 = $u-1#61 cmpg 0.0F;

        if $u9#101 <= 0 goto label3;

        $u9#102 = new android.graphics.RadialGradient;

        a = $u-1#62.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $u9#70 = $u-1#62.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        $u-1#71 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>($u9#54);

        specialinvoke $u9#102.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($u-1#29, $u-1#33, $u-1#61, a, $u9#70, $u-1#71);

        return $u9#102;

     label3:
        $u9#109 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $u9#109.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("<gradient> tag requires \'gradientRadius\' attribute with radial type");

        throw $u9#109;

     label4:
        $u9#109 = new org.xmlpull.v1.XmlPullParserException;

        a#112 = new java.lang.StringBuilder;

        specialinvoke a#112.<java.lang.StringBuilder: void <init>()>();

        $u-1#113 = interfaceinvoke $u32.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke a#112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#113);

        virtualinvoke a#112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid gradient color tag ");

        virtualinvoke a#112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u-1 = virtualinvoke a#112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u9#109.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1);

        throw $u9#109;
    }

    private static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $u12;
        org.xmlpull.v1.XmlPullParser $u13;
        android.util.AttributeSet $u14;
        android.content.res.Resources$Theme $u15;
        java.util.ArrayList offsets, a;
        int $u-1, $u-1#8, $u-1#10;
        java.lang.String $u-1#14;
        boolean $u-1#17, $u-1#26;
        int[] a#19;
        android.content.res.TypedArray $u-1#20;
        float $u-1#34;
        java.lang.Integer $u-1#36;
        java.lang.Float $u-1#38;
        org.xmlpull.v1.XmlPullParserException $u1;
        java.lang.StringBuilder color;
        androidx.core.content.res.GradientColorInflaterCompat$ColorStops $u1#49;

        $u12 := @parameter0: android.content.res.Resources;

        $u13 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u14 := @parameter2: android.util.AttributeSet;

        $u15 := @parameter3: android.content.res.Resources$Theme;

        $u-1 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $u-1 = $u-1 + 1;

        offsets = new java.util.ArrayList;

        specialinvoke offsets.<java.util.ArrayList: void <init>(int)>(20);

        a = new java.util.ArrayList;

        specialinvoke a.<java.util.ArrayList: void <init>(int)>(20);

     label1:
        $u-1#8 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $u-1#8 == 1 goto label6;

        $u-1#10 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $u-1#10 >= $u-1 goto label2;

        if $u-1#8 == 3 goto label6;

     label2:
        if $u-1#8 == 2 goto label3;

        goto label1;

     label3:
        if $u-1#10 > $u-1 goto label1;

        $u-1#14 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $u-1#17 = virtualinvoke $u-1#14.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $u-1#17 != 0 goto label4;

        goto label1;

     label4:
        a#19 = <androidx.core.R$styleable: int[] GradientColorItem>;

        $u-1#20 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($u12, $u15, $u14, a#19);

        $u-1#8 = <androidx.core.R$styleable: int GradientColorItem_android_color>;

        $u-1#17 = virtualinvoke $u-1#20.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#8);

        $u-1#8 = <androidx.core.R$styleable: int GradientColorItem_android_offset>;

        $u-1#26 = virtualinvoke $u-1#20.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#8);

        if $u-1#17 == 0 goto label5;

        if $u-1#26 == 0 goto label5;

        $u-1#8 = <androidx.core.R$styleable: int GradientColorItem_android_color>;

        $u-1#8 = virtualinvoke $u-1#20.<android.content.res.TypedArray: int getColor(int,int)>($u-1#8, 0);

        $u-1#10 = <androidx.core.R$styleable: int GradientColorItem_android_offset>;

        $u-1#34 = virtualinvoke $u-1#20.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.0F);

        virtualinvoke $u-1#20.<android.content.res.TypedArray: void recycle()>();

        $u-1#36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u-1#8);

        interfaceinvoke a.<java.util.List: boolean add(java.lang.Object)>($u-1#36);

        $u-1#38 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($u-1#34);

        interfaceinvoke offsets.<java.util.List: boolean add(java.lang.Object)>($u-1#38);

        goto label1;

     label5:
        $u1 = new org.xmlpull.v1.XmlPullParserException;

        color = new java.lang.StringBuilder;

        specialinvoke color.<java.lang.StringBuilder: void <init>()>();

        $u-1#14 = interfaceinvoke $u13.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke color.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#14);

        virtualinvoke color.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'color\' attribute and a \'offset\' attribute!");

        $u-1#14 = virtualinvoke color.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($u-1#14);

        throw $u1;

     label6:
        $u-1 = interfaceinvoke a.<java.util.List: int size()>();

        if $u-1 <= 0 goto label7;

        $u1#49 = new androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $u1#49.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)>(a, offsets);

        return $u1#49;

     label7:
        return null;
    }

    private static android.graphics.Shader$TileMode parseTileMode(int)
    {
        int $u1;
        android.graphics.Shader$TileMode ret0;

        $u1 := @parameter0: int;

        if $u1 == 1 goto label2;

        if $u1 == 2 goto label1;

        ret0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        return ret0;

     label1:
        ret0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        return ret0;

     label2:
        ret0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        return ret0;
    }

    public static void <clinit>()
    {
        <androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_REPEAT> = 1;

        <androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_MIRROR> = 2;

        <androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_CLAMP> = 0;

        return;
    }
}
