class androidx.appcompat.app.TwilightCalculator extends java.lang.Object
{
    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT;
    private static final float C1;
    private static final float C2;
    private static final float C3;
    public static final int DAY;
    private static final float DEGREES_TO_RADIANS;
    private static final float J0;
    public static final int NIGHT;
    private static final float OBLIQUITY;
    private static final long UTC_2000;
    private static androidx.appcompat.app.TwilightCalculator sInstance;
    public int state;
    public long sunrise;
    public long sunset;

    void <init>()
    {
        androidx.appcompat.app.TwilightCalculator this;

        this := @this: androidx.appcompat.app.TwilightCalculator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.appcompat.app.TwilightCalculator getInstance()
    {
        androidx.appcompat.app.TwilightCalculator $u0;

        $u0 = <androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance>;

        if $u0 != null goto label1;

        $u0 = new androidx.appcompat.app.TwilightCalculator;

        specialinvoke $u0.<androidx.appcompat.app.TwilightCalculator: void <init>()>();

        <androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance> = $u0;

     label1:
        $u0 = <androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance>;

        return $u0;
    }

    public void calculateTwilight(long, double, double)
    {
        androidx.appcompat.app.TwilightCalculator this;
        long $u30, daysSince2000;
        double $u32, $u34, trueAnomaly, solarLng, $u-1, $u-1#79;
        float daysSince2000#3, daysSince2000#5, solarLng#18;
        byte $u27;

        this := @this: androidx.appcompat.app.TwilightCalculator;

        $u30 := @parameter0: long;

        $u32 := @parameter1: double;

        $u34 := @parameter2: double;

        daysSince2000 = $u30 - 946728000000L;

        daysSince2000#3 = (float) daysSince2000;

        daysSince2000#5 = daysSince2000#3 / 8.64E7F;

        daysSince2000#3 = 0.01720197F * daysSince2000#5;

        daysSince2000#3 = daysSince2000#3 + 6.24006F;

        trueAnomaly = (double) daysSince2000#3;

        solarLng = (double) daysSince2000#3;

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(solarLng);

        solarLng = solarLng * 0.03341960161924362;

        staticinvoke <java.lang.Double: boolean isNaN(double)>(trueAnomaly);

        trueAnomaly = trueAnomaly + solarLng;

        solarLng#18 = 2.0F * daysSince2000#3;

        solarLng = (double) solarLng#18;

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(solarLng);

        solarLng = solarLng * 3.4906598739326E-4;

        trueAnomaly = trueAnomaly + solarLng;

        solarLng#18 = 3.0F * daysSince2000#3;

        solarLng = (double) solarLng#18;

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(solarLng);

        solarLng = solarLng * 5.236000106378924E-6;

        trueAnomaly = trueAnomaly + solarLng;

        trueAnomaly = 1.796593063 + trueAnomaly;

        trueAnomaly = trueAnomaly + 3.141592653589793;

        $u34 = neg $u34;

        $u34 = $u34 / 360.0;

        daysSince2000#5 = daysSince2000#5 - 9.0E-4F;

        solarLng = (double) daysSince2000#5;

        staticinvoke <java.lang.Double: boolean isNaN(double)>(solarLng);

        solarLng = solarLng - $u34;

        daysSince2000 = staticinvoke <java.lang.Math: long round(double)>(solarLng);

        daysSince2000#5 = (float) daysSince2000;

        daysSince2000#5 = 9.0E-4F + daysSince2000#5;

        solarLng = (double) daysSince2000#5;

        staticinvoke <java.lang.Double: boolean isNaN(double)>(solarLng);

        $u34 = solarLng + $u34;

        solarLng = (double) daysSince2000#3;

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(solarLng);

        solarLng = solarLng * 0.0053;

        $u34 = $u34 + solarLng;

        solarLng = 2.0 * trueAnomaly;

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(solarLng);

        solarLng = solarLng * -0.0069;

        $u34 = $u34 + solarLng;

        trueAnomaly = staticinvoke <java.lang.Math: double sin(double)>(trueAnomaly);

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(0.4092797040939331);

        trueAnomaly = trueAnomaly * solarLng;

        trueAnomaly = staticinvoke <java.lang.Math: double asin(double)>(trueAnomaly);

        $u32 = 0.01745329238474369 * $u32;

        solarLng = staticinvoke <java.lang.Math: double sin(double)>(-0.10471975803375244);

        $u-1 = staticinvoke <java.lang.Math: double sin(double)>($u32);

        $u-1#79 = staticinvoke <java.lang.Math: double sin(double)>(trueAnomaly);

        $u-1 = $u-1 * $u-1#79;

        solarLng = solarLng - $u-1;

        $u32 = staticinvoke <java.lang.Math: double cos(double)>($u32);

        trueAnomaly = staticinvoke <java.lang.Math: double cos(double)>(trueAnomaly);

        $u32 = $u32 * trueAnomaly;

        $u32 = solarLng / $u32;

        $u27 = $u32 cmpl 1.0;

        if $u27 < 0 goto label1;

        this.<androidx.appcompat.app.TwilightCalculator: int state> = 1;

        this.<androidx.appcompat.app.TwilightCalculator: long sunset> = -1L;

        this.<androidx.appcompat.app.TwilightCalculator: long sunrise> = -1L;

        return;

     label1:
        $u27 = $u32 cmpg -1.0;

        if $u27 > 0 goto label2;

        this.<androidx.appcompat.app.TwilightCalculator: int state> = 0;

        this.<androidx.appcompat.app.TwilightCalculator: long sunset> = -1L;

        this.<androidx.appcompat.app.TwilightCalculator: long sunrise> = -1L;

        return;

     label2:
        $u32 = staticinvoke <java.lang.Math: double acos(double)>($u32);

        $u32 = $u32 / 6.283185307179586;

        daysSince2000#3 = (float) $u32;

        $u32 = (double) daysSince2000#3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u32);

        $u32 = $u32 + $u34;

        $u32 = $u32 * 8.64E7;

        daysSince2000 = staticinvoke <java.lang.Math: long round(double)>($u32);

        daysSince2000 = daysSince2000 + 946728000000L;

        this.<androidx.appcompat.app.TwilightCalculator: long sunset> = daysSince2000;

        $u32 = (double) daysSince2000#3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($u32);

        $u32 = $u34 - $u32;

        $u32 = $u32 * 8.64E7;

        daysSince2000 = staticinvoke <java.lang.Math: long round(double)>($u32);

        daysSince2000 = daysSince2000 + 946728000000L;

        this.<androidx.appcompat.app.TwilightCalculator: long sunrise> = daysSince2000;

        $u27 = daysSince2000 cmp $u30;

        if $u27 >= 0 goto label3;

        daysSince2000 = this.<androidx.appcompat.app.TwilightCalculator: long sunset>;

        $u27 = daysSince2000 cmp $u30;

        if $u27 <= 0 goto label3;

        this.<androidx.appcompat.app.TwilightCalculator: int state> = 0;

        return;

     label3:
        this.<androidx.appcompat.app.TwilightCalculator: int state> = 1;

        return;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.app.TwilightCalculator: long UTC_2000> = 946728000000L;

        <androidx.appcompat.app.TwilightCalculator: float OBLIQUITY> = 0.4092797F;

        <androidx.appcompat.app.TwilightCalculator: int NIGHT> = 1;

        <androidx.appcompat.app.TwilightCalculator: float J0> = 9.0E-4F;

        <androidx.appcompat.app.TwilightCalculator: float DEGREES_TO_RADIANS> = 0.017453292F;

        <androidx.appcompat.app.TwilightCalculator: int DAY> = 0;

        <androidx.appcompat.app.TwilightCalculator: float C3> = 5.236E-6F;

        <androidx.appcompat.app.TwilightCalculator: float C2> = 3.49066E-4F;

        <androidx.appcompat.app.TwilightCalculator: float C1> = 0.0334196F;

        <androidx.appcompat.app.TwilightCalculator: float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT> = -0.10471976F;

        return;
    }
}
