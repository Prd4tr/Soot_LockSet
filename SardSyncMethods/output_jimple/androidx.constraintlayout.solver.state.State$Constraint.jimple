public final enum class androidx.constraintlayout.solver.state.State$Constraint extends java.lang.Enum
{
    private static final androidx.constraintlayout.solver.state.State$Constraint[] $VALUES;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint BASELINE_TO_BASELINE;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint BOTTOM_TO_BOTTOM;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint BOTTOM_TO_TOP;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint CENTER_HORIZONTALLY;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint CENTER_VERTICALLY;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint END_TO_END;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint END_TO_START;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint LEFT_TO_LEFT;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint LEFT_TO_RIGHT;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint RIGHT_TO_LEFT;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint RIGHT_TO_RIGHT;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint START_TO_END;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint START_TO_START;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint TOP_TO_BOTTOM;
    public static final enum androidx.constraintlayout.solver.state.State$Constraint TOP_TO_TOP;

    static void <clinit>()
    {
        androidx.constraintlayout.solver.state.State$Constraint $u16, $u0;
        androidx.constraintlayout.solver.state.State$Constraint[] $u1;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("LEFT_TO_LEFT", 0);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint LEFT_TO_LEFT> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("LEFT_TO_RIGHT", 1);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint LEFT_TO_RIGHT> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("RIGHT_TO_LEFT", 2);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint RIGHT_TO_LEFT> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("RIGHT_TO_RIGHT", 3);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint RIGHT_TO_RIGHT> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("START_TO_START", 4);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint START_TO_START> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("START_TO_END", 5);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint START_TO_END> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("END_TO_START", 6);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint END_TO_START> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("END_TO_END", 7);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint END_TO_END> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("TOP_TO_TOP", 8);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint TOP_TO_TOP> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("TOP_TO_BOTTOM", 9);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint TOP_TO_BOTTOM> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("BOTTOM_TO_TOP", 10);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint BOTTOM_TO_TOP> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("BOTTOM_TO_BOTTOM", 11);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint BOTTOM_TO_BOTTOM> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("BASELINE_TO_BASELINE", 12);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint BASELINE_TO_BASELINE> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("CENTER_HORIZONTALLY", 13);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint CENTER_HORIZONTALLY> = $u0;

        $u0 = new androidx.constraintlayout.solver.state.State$Constraint;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.State$Constraint: void <init>(java.lang.String,int)>("CENTER_VERTICALLY", 14);

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint CENTER_VERTICALLY> = $u0;

        $u1 = newarray (androidx.constraintlayout.solver.state.State$Constraint)[15];

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint LEFT_TO_LEFT>;

        $u1[0] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint LEFT_TO_RIGHT>;

        $u1[1] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint RIGHT_TO_LEFT>;

        $u1[2] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint RIGHT_TO_RIGHT>;

        $u1[3] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint START_TO_START>;

        $u1[4] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint START_TO_END>;

        $u1[5] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint END_TO_START>;

        $u1[6] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint END_TO_END>;

        $u1[7] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint TOP_TO_TOP>;

        $u1[8] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint TOP_TO_BOTTOM>;

        $u1[9] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint BOTTOM_TO_TOP>;

        $u1[10] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint BOTTOM_TO_BOTTOM>;

        $u1[11] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint BASELINE_TO_BASELINE>;

        $u1[12] = $u16;

        $u16 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint CENTER_HORIZONTALLY>;

        $u1[13] = $u16;

        $u1[14] = $u0;

        <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint[] $VALUES> = $u1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.constraintlayout.solver.state.State$Constraint this;
        java.lang.String $u1;
        int $u2;

        this := @this: androidx.constraintlayout.solver.state.State$Constraint;

        $u1 := @parameter0: java.lang.String;

        $u2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>($u1, $u2);

        return;
    }

    public static androidx.constraintlayout.solver.state.State$Constraint valueOf(java.lang.String)
    {
        java.lang.String $u1;
        java.lang.Enum $u-1;
        androidx.constraintlayout.solver.state.State$Constraint $u0;

        $u1 := @parameter0: java.lang.String;

        $u-1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/constraintlayout/solver/state/State$Constraint;", $u1);

        $u0 = (androidx.constraintlayout.solver.state.State$Constraint) $u-1;

        return $u0;
    }

    public static androidx.constraintlayout.solver.state.State$Constraint[] values()
    {
        java.lang.Object $u-1;
        androidx.constraintlayout.solver.state.State$Constraint[] $u0;

        $u0 = <androidx.constraintlayout.solver.state.State$Constraint: androidx.constraintlayout.solver.state.State$Constraint[] $VALUES>;

        $u-1 = virtualinvoke $u0.<java.lang.Object: java.lang.Object clone()>();

        $u0 = (androidx.constraintlayout.solver.state.State$Constraint[]) $u-1;

        return $u0;
    }
}
