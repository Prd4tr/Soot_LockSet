public class androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer extends androidx.constraintlayout.solver.widgets.WidgetContainer
{
    private static final boolean DEBUG;
    static final boolean DEBUG_GRAPH;
    private static final boolean DEBUG_LAYOUT;
    private static final int MAX_ITERATIONS;
    androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure mBasicMeasureSolver;
    int mDebugSolverPassCount;
    public androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph;
    public boolean mGroupsWrapOptimized;
    private boolean mHeightMeasuredTooSmall;
    androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray;
    int mHorizontalChainsSize;
    public boolean mHorizontalWrapOptimized;
    private boolean mIsRtl;
    protected androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer mMeasurer;
    public androidx.constraintlayout.solver.Metrics mMetrics;
    private int mOptimizationLevel;
    int mPaddingBottom;
    int mPaddingLeft;
    int mPaddingRight;
    int mPaddingTop;
    public boolean mSkipSolver;
    protected androidx.constraintlayout.solver.LinearSystem mSystem;
    androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray;
    int mVerticalChainsSize;
    public boolean mVerticalWrapOptimized;
    private boolean mWidthMeasuredTooSmall;
    public int mWrapFixedHeight;
    public int mWrapFixedWidth;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.ChainHead[] $u2;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure $u0;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0#2;
        androidx.constraintlayout.solver.LinearSystem $u1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.WidgetContainer: void <init>()>();

        $u0 = new androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure;

        specialinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $u0;

        $u0#2 = new androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph;

        specialinvoke $u0#2.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph> = $u0#2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $u1 = new androidx.constraintlayout.solver.LinearSystem;

        specialinvoke $u1.<androidx.constraintlayout.solver.LinearSystem: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem> = $u1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $u2 = newarray (androidx.constraintlayout.solver.widgets.ChainHead)[4];

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray> = $u2;

        $u2 = newarray (androidx.constraintlayout.solver.widgets.ChainHead)[4];

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray> = $u2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        return;
    }

    public void <init>(int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int $u4, $u5;
        androidx.constraintlayout.solver.widgets.ChainHead[] $u2;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure $u0;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0#2;
        androidx.constraintlayout.solver.LinearSystem $u1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.WidgetContainer: void <init>(int,int)>($u4, $u5);

        $u0 = new androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure;

        specialinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $u0;

        $u0#2 = new androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph;

        specialinvoke $u0#2.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph> = $u0#2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $u1 = new androidx.constraintlayout.solver.LinearSystem;

        specialinvoke $u1.<androidx.constraintlayout.solver.LinearSystem: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem> = $u1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $u2 = newarray (androidx.constraintlayout.solver.widgets.ChainHead)[4];

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray> = $u2;

        $u2 = newarray (androidx.constraintlayout.solver.widgets.ChainHead)[4];

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray> = $u2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        return;
    }

    public void <init>(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int $u4, $u5, $u6, $u7;
        androidx.constraintlayout.solver.widgets.ChainHead[] $u2;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure $u0;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0#2;
        androidx.constraintlayout.solver.LinearSystem $u1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        $u6 := @parameter2: int;

        $u7 := @parameter3: int;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.WidgetContainer: void <init>(int,int,int,int)>($u4, $u5, $u6, $u7);

        $u0 = new androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure;

        specialinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $u0;

        $u0#2 = new androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph;

        specialinvoke $u0#2.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph> = $u0#2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $u1 = new androidx.constraintlayout.solver.LinearSystem;

        specialinvoke $u1.<androidx.constraintlayout.solver.LinearSystem: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem> = $u1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $u2 = newarray (androidx.constraintlayout.solver.widgets.ChainHead)[4];

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray> = $u2;

        $u2 = newarray (androidx.constraintlayout.solver.widgets.ChainHead)[4];

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray> = $u2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        return;
    }

    private void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u6;
        int $u0, $u2;
        androidx.constraintlayout.solver.widgets.ChainHead[] $u1;
        java.lang.Object[] $u-1;
        androidx.constraintlayout.solver.widgets.ChainHead $u2#12;
        boolean $u-1#13;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u6 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        $u0 = $u0 + 1;

        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray>;

        $u2 = lengthof $u1;

        if $u0 < $u2 goto label1;

        $u0 = lengthof $u1;

        $u0 = $u0 * 2;

        $u-1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($u1, $u0);

        $u1 = (androidx.constraintlayout.solver.widgets.ChainHead[]) $u-1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray> = $u1;

     label1:
        $u1 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray>;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        $u2#12 = new androidx.constraintlayout.solver.widgets.ChainHead;

        $u-1#13 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        specialinvoke $u2#12.<androidx.constraintlayout.solver.widgets.ChainHead: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean)>($u6, 0, $u-1#13);

        $u1[$u0] = $u2#12;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        $u0 = $u0 + 1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = $u0;

        return;
    }

    private void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u6;
        int $u0, $u3;
        androidx.constraintlayout.solver.widgets.ChainHead[] $u2;
        java.lang.Object[] $u-1;
        androidx.constraintlayout.solver.widgets.ChainHead $u3#12;
        boolean $u-1#13;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u6 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        $u0 = $u0 + 1;

        $u2 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray>;

        $u3 = lengthof $u2;

        if $u0 < $u3 goto label1;

        $u0 = lengthof $u2;

        $u0 = $u0 * 2;

        $u-1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($u2, $u0);

        $u2 = (androidx.constraintlayout.solver.widgets.ChainHead[]) $u-1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray> = $u2;

     label1:
        $u2 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray>;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        $u3#12 = new androidx.constraintlayout.solver.widgets.ChainHead;

        $u-1#13 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        specialinvoke $u3#12.<androidx.constraintlayout.solver.widgets.ChainHead: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean)>($u6, 1, $u-1#13);

        $u2[$u0] = $u3#12;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        $u0 = $u0 + 1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = $u0;

        return;
    }

    private void resetChains()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        return;
    }

    void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u3;
        int $u4;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u3 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u4 := @parameter1: int;

        if $u4 != 0 goto label1;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u3);

        return;

     label1:
        if $u4 != 1 goto label2;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u3);

     label2:
        return;
    }

    public boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.LinearSystem $u10;
        java.util.ArrayList count;
        int $u-1, i;
        boolean hasBarriers, $u3;
        java.lang.Object $u-1#8;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;
        androidx.constraintlayout.solver.widgets.Barrier horizontalBehaviour;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] horizontalBehaviour#33;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour horizontalBehaviour#34, verticalBehaviour, $u8;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u10 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($u10);

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: int size()>();

        hasBarriers = 0;

        i = 0;

     label01:
        if i >= $u-1 goto label03;

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#8 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#8;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setInBarrier(int,boolean)>(0, 0);

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setInBarrier(int,boolean)>(1, 0);

        $u3 = widget instanceof androidx.constraintlayout.solver.widgets.Barrier;

        if $u3 == 0 goto label02;

        hasBarriers = 1;

     label02:
        i = i + 1;

        goto label01;

     label03:
        if hasBarriers == 0 goto label06;

        i = 0;

     label04:
        if i >= $u-1 goto label06;

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#8 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#8;

        hasBarriers = widget instanceof androidx.constraintlayout.solver.widgets.Barrier;

        if hasBarriers == 0 goto label05;

        horizontalBehaviour = (androidx.constraintlayout.solver.widgets.Barrier) widget;

        virtualinvoke horizontalBehaviour.<androidx.constraintlayout.solver.widgets.Barrier: void markWidgets()>();

     label05:
        i = i + 1;

        goto label04;

     label06:
        i = 0;

     label07:
        if i >= $u-1 goto label09;

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#8 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#8;

        hasBarriers = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean addFirst()>();

        if hasBarriers == 0 goto label08;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($u10);

     label08:
        i = i + 1;

        goto label07;

     label09:
        i = 0;

     label10:
        if i >= $u-1 goto label17;

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#8 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#8;

        hasBarriers = widget instanceof androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        if hasBarriers == 0 goto label15;

        horizontalBehaviour#33 = widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        horizontalBehaviour#34 = horizontalBehaviour#33[0];

        horizontalBehaviour#33 = widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        verticalBehaviour = horizontalBehaviour#33[1];

        $u8 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if horizontalBehaviour#34 != $u8 goto label11;

        $u8 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u8);

     label11:
        $u8 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if verticalBehaviour != $u8 goto label12;

        $u8 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u8);

     label12:
        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($u10);

        $u8 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if horizontalBehaviour#34 != $u8 goto label13;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>(horizontalBehaviour#34);

     label13:
        horizontalBehaviour#34 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if verticalBehaviour != horizontalBehaviour#34 goto label14;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>(verticalBehaviour);

     label14:
        goto label16;

     label15:
        staticinvoke <androidx.constraintlayout.solver.widgets.Optimizer: void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget)>(this, $u10, widget);

        hasBarriers = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean addFirst()>();

        if hasBarriers != 0 goto label16;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($u10);

     label16:
        i = i + 1;

        goto label10;

     label17:
        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        if $u-1 <= 0 goto label18;

        staticinvoke <androidx.constraintlayout.solver.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int)>(this, $u10, 0);

     label18:
        $u-1 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        if $u-1 <= 0 goto label19;

        staticinvoke <androidx.constraintlayout.solver.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int)>(this, $u10, 1);

     label19:
        return 1;
    }

    public void defineTerminalWidgets()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $u-1, $u-1#2;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $u-1#2 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void defineTerminalWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u-1, $u-1#2);

        return;
    }

    public boolean directMeasure(boolean)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean $u2;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $u2 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: boolean directMeasure(boolean)>($u2);

        return $u2;
    }

    public boolean directMeasureSetup(boolean)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean $u2;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $u2 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: boolean directMeasureSetup(boolean)>($u2);

        return $u2;
    }

    public boolean directMeasureWithOrientation(boolean, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean $u2;
        int $u3;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: boolean;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $u2 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: boolean directMeasureWithOrientation(boolean,int)>($u2, $u3);

        return $u2;
    }

    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.Metrics $u2;
        androidx.constraintlayout.solver.LinearSystem $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: androidx.constraintlayout.solver.Metrics;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.Metrics mMetrics> = $u2;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.LinearSystem: void fillMetrics(androidx.constraintlayout.solver.Metrics)>($u2);

        return;
    }

    public java.util.ArrayList getHorizontalGuidelines()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        java.util.ArrayList guidelines, mChildrenSize;
        int i, $u-1, $u-1#12;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;
        boolean guideline;
        androidx.constraintlayout.solver.widgets.Guideline guideline#11;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        guidelines = new java.util.ArrayList;

        specialinvoke guidelines.<java.util.ArrayList: void <init>()>();

        i = 0;

        mChildrenSize = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1 = virtualinvoke mChildrenSize.<java.util.ArrayList: int size()>();

     label1:
        if i >= $u-1 goto label3;

        mChildrenSize = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#6 = virtualinvoke mChildrenSize.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#6;

        guideline = widget instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if guideline == 0 goto label2;

        guideline#11 = (androidx.constraintlayout.solver.widgets.Guideline) widget;

        $u-1#12 = virtualinvoke guideline#11.<androidx.constraintlayout.solver.widgets.Guideline: int getOrientation()>();

        if $u-1#12 != 0 goto label2;

        virtualinvoke guidelines.<java.util.ArrayList: boolean add(java.lang.Object)>(guideline#11);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return guidelines;
    }

    public androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer getMeasurer()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer mMeasurer>;

        return ret0;
    }

    public int getOptimizationLevel()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        return ret0;
    }

    public androidx.constraintlayout.solver.LinearSystem getSystem()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.LinearSystem ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        return ret0;
    }

    public java.lang.String getType()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        return "ConstraintLayout";
    }

    public java.util.ArrayList getVerticalGuidelines()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        java.util.ArrayList guidelines, mChildrenSize;
        int i, $u-1, $u-1#12;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;
        boolean guideline;
        androidx.constraintlayout.solver.widgets.Guideline guideline#11;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        guidelines = new java.util.ArrayList;

        specialinvoke guidelines.<java.util.ArrayList: void <init>()>();

        i = 0;

        mChildrenSize = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1 = virtualinvoke mChildrenSize.<java.util.ArrayList: int size()>();

     label1:
        if i >= $u-1 goto label3;

        mChildrenSize = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#6 = virtualinvoke mChildrenSize.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#6;

        guideline = widget instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if guideline == 0 goto label2;

        guideline#11 = (androidx.constraintlayout.solver.widgets.Guideline) widget;

        $u-1#12 = virtualinvoke guideline#11.<androidx.constraintlayout.solver.widgets.Guideline: int getOrientation()>();

        if $u-1#12 != 1 goto label2;

        virtualinvoke guidelines.<java.util.ArrayList: boolean add(java.lang.Object)>(guideline#11);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return guidelines;
    }

    public boolean handlesInternalConstraints()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        return 0;
    }

    public void invalidateGraph()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void invalidateGraph()>();

        return;
    }

    public void invalidateMeasures()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void invalidateMeasures()>();

        return;
    }

    public boolean isHeightMeasuredTooSmall()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall>;

        return ret0;
    }

    public boolean isRtl()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mIsRtl>;

        return ret0;
    }

    public boolean isWidthMeasuredTooSmall()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean ret0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        ret0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall>;

        return ret0;
    }

    public void layout()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        java.util.ArrayList allChildren, count#33;
        int $u-1, $u-1#5, wrap_override#18, i, wrap_override#51, widget#82, i#84, wrap_override#90, $u-1#91;
        boolean $u-1#9, widget2, i#45, $u-1#59;
        androidx.constraintlayout.solver.LinearSystem wrap_override;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] originalVerticalDimensionBehaviour;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour originalVerticalDimensionBehaviour#22, originalHorizontalDimensionBehaviour, $u-1#26, count;
        java.lang.Object $u-1#39;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget1;
        androidx.constraintlayout.solver.widgets.WidgetContainer widget2#44;
        java.lang.Exception wrap_override#62;
        java.io.PrintStream maxY;
        java.lang.StringBuilder widget2#64;
        java.lang.String $u-1#66;
        boolean[] widget;
        androidx.constraintlayout.solver.Cache $u-1#170;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mX> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mY> = 0;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1);

        $u-1#5 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        $u-1#5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#5);

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        $u-1#9 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(64);

        if $u-1#9 != 0 goto label02;

        $u-1#9 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(128);

        if $u-1#9 == 0 goto label01;

        goto label02;

     label01:
        $u-1#9 = 0;

        goto label03;

     label02:
        $u-1#9 = 1;

     label03:
        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        wrap_override.<androidx.constraintlayout.solver.LinearSystem: boolean graphOptimizer> = 0;

        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        wrap_override.<androidx.constraintlayout.solver.LinearSystem: boolean newgraphOptimizer> = 0;

        wrap_override#18 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        if wrap_override#18 == 0 goto label04;

        if $u-1#9 == 0 goto label04;

        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        wrap_override.<androidx.constraintlayout.solver.LinearSystem: boolean newgraphOptimizer> = 1;

     label04:
        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        originalVerticalDimensionBehaviour#22 = originalVerticalDimensionBehaviour[1];

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        originalHorizontalDimensionBehaviour = originalVerticalDimensionBehaviour[0];

        allChildren = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#26 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        count = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $u-1#26 == count goto label06;

        $u-1#26 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        count = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $u-1#26 != count goto label05;

        goto label06;

     label05:
        $u-1#9 = 0;

        goto label07;

     label06:
        $u-1#9 = 1;

     label07:
        specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void resetChains()>();

        count#33 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        wrap_override#18 = virtualinvoke count#33.<java.util.ArrayList: int size()>();

        i = 0;

     label08:
        if i >= wrap_override#18 goto label10;

        count#33 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#39 = virtualinvoke count#33.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget1 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#39;

        widget2 = widget1 instanceof androidx.constraintlayout.solver.widgets.WidgetContainer;

        if widget2 == 0 goto label09;

        widget2#44 = (androidx.constraintlayout.solver.widgets.WidgetContainer) widget1;

        virtualinvoke widget2#44.<androidx.constraintlayout.solver.widgets.WidgetContainer: void layout()>();

     label09:
        i = i + 1;

        goto label08;

     label10:
        i#45 = 1;

        widget2 = 0;

        i = 0;

     label11:
        if i#45 == 0 goto label36;

        i = i + 1;

     label12:
        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke wrap_override.<androidx.constraintlayout.solver.LinearSystem: void reset()>();

        specialinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void resetChains()>();

        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void createObjectVariables(androidx.constraintlayout.solver.LinearSystem)>(wrap_override);

     label13:
        wrap_override#51 = 0;

     label14:
        if wrap_override#51 >= wrap_override#18 goto label17;

     label15:
        count#33 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#39 = virtualinvoke count#33.<java.util.ArrayList: java.lang.Object get(int)>(wrap_override#51);

        widget1 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#39;

        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke widget1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void createObjectVariables(androidx.constraintlayout.solver.LinearSystem)>(wrap_override);

     label16:
        wrap_override#51 = wrap_override#51 + 1;

        goto label14;

     label17:
        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        $u-1#59 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem)>(wrap_override);

     label18:
        i#45 = $u-1#59;

        if $u-1#59 == 0 goto label20;

     label19:
        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke wrap_override.<androidx.constraintlayout.solver.LinearSystem: void minimize()>();

     label20:
        goto label22;

     label21:
        wrap_override#62 := @caughtexception;

        virtualinvoke wrap_override#62.<java.lang.Exception: void printStackTrace()>();

        maxY = <java.lang.System: java.io.PrintStream out>;

        widget2#64 = new java.lang.StringBuilder;

        specialinvoke widget2#64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke widget2#64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EXCEPTION : ");

        virtualinvoke widget2#64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(wrap_override#62);

        $u-1#66 = virtualinvoke widget2#64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke maxY.<java.io.PrintStream: void println(java.lang.String)>($u-1#66);

     label22:
        if i#45 == 0 goto label23;

        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        widget = <androidx.constraintlayout.solver.widgets.Optimizer: boolean[] flags>;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])>(wrap_override, widget);

        goto label25;

     label23:
        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>(wrap_override);

        wrap_override#51 = 0;

     label24:
        if wrap_override#51 >= wrap_override#18 goto label25;

        count#33 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#39 = virtualinvoke count#33.<java.util.ArrayList: java.lang.Object get(int)>(wrap_override#51);

        widget1 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#39;

        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke widget1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>(wrap_override);

        wrap_override#51 = wrap_override#51 + 1;

        goto label24;

     label25:
        i#45 = 0;

        if $u-1#9 == 0 goto label29;

        if i >= 8 goto label29;

        widget = <androidx.constraintlayout.solver.widgets.Optimizer: boolean[] flags>;

        $u-1#59 = widget[2];

        if $u-1#59 == 0 goto label29;

        widget#82 = 0;

        wrap_override#51 = 0;

        i#84 = 0;

     label26:
        if i#84 >= wrap_override#18 goto label27;

        count#33 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#39 = virtualinvoke count#33.<java.util.ArrayList: java.lang.Object get(int)>(i#84);

        widget1 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#39;

        wrap_override#90 = widget1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mX>;

        $u-1#91 = virtualinvoke widget1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()>();

        wrap_override#90 = wrap_override#90 + $u-1#91;

        widget#82 = staticinvoke <java.lang.Math: int max(int,int)>(widget#82, wrap_override#90);

        wrap_override#90 = widget1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mY>;

        $u-1#91 = virtualinvoke widget1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()>();

        wrap_override#90 = wrap_override#90 + $u-1#91;

        wrap_override#51 = staticinvoke <java.lang.Math: int max(int,int)>(wrap_override#51, wrap_override#90);

        i#84 = i#84 + 1;

        goto label26;

     label27:
        i#84 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mMinWidth>;

        widget#82 = staticinvoke <java.lang.Math: int max(int,int)>(i#84, widget#82);

        i#84 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mMinHeight>;

        wrap_override#51 = staticinvoke <java.lang.Math: int max(int,int)>(i#84, wrap_override#51);

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if originalHorizontalDimensionBehaviour != $u-1#26 goto label28;

        i#84 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        if i#84 >= widget#82 goto label28;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>(widget#82);

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        originalVerticalDimensionBehaviour[0] = $u-1#26;

        widget2 = 1;

        i#45 = 1;

     label28:
        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if originalVerticalDimensionBehaviour#22 != $u-1#26 goto label30;

        widget#82 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if widget#82 >= wrap_override#51 goto label30;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>(wrap_override#51);

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        originalVerticalDimensionBehaviour[1] = $u-1#26;

        widget2 = 1;

        i#45 = 1;

        goto label30;

     label29:
        i#45 = 0;

     label30:
        wrap_override#51 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mMinWidth>;

        widget#82 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        wrap_override#51 = staticinvoke <java.lang.Math: int max(int,int)>(wrap_override#51, widget#82);

        widget#82 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        if wrap_override#51 <= widget#82 goto label31;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>(wrap_override#51);

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        originalVerticalDimensionBehaviour[0] = $u-1#26;

        widget2 = 1;

        i#45 = 1;

     label31:
        wrap_override#51 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mMinHeight>;

        widget#82 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        wrap_override#51 = staticinvoke <java.lang.Math: int max(int,int)>(wrap_override#51, widget#82);

        widget#82 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if wrap_override#51 <= widget#82 goto label32;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>(wrap_override#51);

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        originalVerticalDimensionBehaviour[1] = $u-1#26;

        widget2 = 1;

        i#45 = 1;

     label32:
        if widget2 != 0 goto label35;

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = originalVerticalDimensionBehaviour[0];

        count = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $u-1#26 != count goto label33;

        if $u-1 <= 0 goto label33;

        wrap_override#51 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        if wrap_override#51 <= $u-1 goto label33;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 1;

        widget2 = 1;

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        originalVerticalDimensionBehaviour[0] = $u-1#26;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>($u-1);

        i#45 = 1;

     label33:
        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = originalVerticalDimensionBehaviour[1];

        count = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $u-1#26 != count goto label34;

        if $u-1#5 <= 0 goto label34;

        wrap_override#51 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if wrap_override#51 <= $u-1#5 goto label34;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 1;

        widget2 = 1;

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $u-1#26 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        originalVerticalDimensionBehaviour[1] = $u-1#26;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>($u-1#5);

        i#45 = 1;

        goto label35;

     label34:
        goto label35;

     label35:
        goto label11;

     label36:
        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren> = allChildren;

        if widget2 == 0 goto label37;

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        originalVerticalDimensionBehaviour[0] = originalHorizontalDimensionBehaviour;

        originalVerticalDimensionBehaviour = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        originalVerticalDimensionBehaviour[1] = originalVerticalDimensionBehaviour#22;

     label37:
        wrap_override = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        $u-1#170 = virtualinvoke wrap_override.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Cache getCache()>();

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void resetSolverVariables(androidx.constraintlayout.solver.Cache)>($u-1#170);

        return;

        catch java.lang.Exception from label12 to label13 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public long measure(int, int, int, int, int, int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int $u15, $u16, $u17, $u18, $u19, $u20, $u21, $u22, $u23;
        long $u-1;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u15 := @parameter0: int;

        $u16 := @parameter1: int;

        $u17 := @parameter2: int;

        $u18 := @parameter3: int;

        $u19 := @parameter4: int;

        $u20 := @parameter5: int;

        $u21 := @parameter6: int;

        $u22 := @parameter7: int;

        $u23 := @parameter8: int;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingLeft> = $u22;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingTop> = $u23;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure mBasicMeasureSolver>;

        $u-1 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure: long solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int)>(this, $u15, $u22, $u23, $u16, $u17, $u18, $u19, $u20, $u21);

        return $u-1;
    }

    public boolean optimizeFor(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int $u2, $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        $u0 = $u0 & $u2;

        if $u0 != $u2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.LinearSystem $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.LinearSystem: void reset()>();

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingLeft> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingRight> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingTop> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingBottom> = 0;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.WidgetContainer: void reset()>();

        return;
    }

    public void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer $u2;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = $u2;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph mDependencyGraph>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer)>($u2);

        return;
    }

    public void setOptimizationLevel(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int $u2;
        boolean $u-1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u2 := @parameter0: int;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = $u2;

        $u-1 = staticinvoke <androidx.constraintlayout.solver.widgets.Optimizer: boolean enabled(int,int)>($u2, 256);

        <androidx.constraintlayout.solver.LinearSystem: boolean OPTIMIZED_ENGINE> = $u-1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        int $u1, $u2, $u3, $u4;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingLeft> = $u1;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingTop> = $u2;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingRight> = $u3;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mPaddingBottom> = $u4;

        return;
    }

    public void setRtl(boolean)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean $u1;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u1 := @parameter0: boolean;

        this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mIsRtl> = $u1;

        return;
    }

    public void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem, boolean[])
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.LinearSystem $u4;
        boolean[] $u5;
        java.util.ArrayList count;
        int $u-1, i;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u4 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $u5 := @parameter1: boolean[];

        $u5[2] = 0;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>($u4);

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: int size()>();

        i = 0;

     label1:
        if i >= $u-1 goto label2;

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#6;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>($u4);

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public void updateFromRuns(boolean, boolean)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        boolean $u4, $u5;
        java.util.ArrayList count;
        int $u-1, i;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u4 := @parameter0: boolean;

        $u5 := @parameter1: boolean;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.WidgetContainer: void updateFromRuns(boolean,boolean)>($u4, $u5);

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: int size()>();

        i = 0;

     label1:
        if i >= $u-1 goto label2;

        count = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        widget = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#6;

        virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateFromRuns(boolean,boolean)>($u4, $u5);

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public void updateHierarchy()
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer this;
        androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure $u0;

        this := @this: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u0 = this.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure mBasicMeasureSolver>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure: void updateHierarchy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)>(this);

        return;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int MAX_ITERATIONS> = 8;

        <androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean DEBUG_LAYOUT> = 0;

        <androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean DEBUG_GRAPH> = 0;

        <androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean DEBUG> = 0;

        return;
    }
}
