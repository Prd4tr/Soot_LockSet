final class androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask extends android.os.AsyncTask
{
    final androidx.appcompat.widget.ActivityChooserModel this$0;

    void <init>(androidx.appcompat.widget.ActivityChooserModel)
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask this;
        androidx.appcompat.widget.ActivityChooserModel $u1;

        this := @this: androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        $u1 := @parameter0: androidx.appcompat.widget.ActivityChooserModel;

        this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0> = $u1;

        specialinvoke this.<android.os.AsyncTask: void <init>()>();

        return;
    }

    public volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask this;
        java.lang.Void $u-1;
        java.lang.Object[] $u1;

        this := @this: androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        $u1 := @parameter0: java.lang.Object[];

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: java.lang.Void doInBackground(java.lang.Object[])>($u1);

        return $u-1;
    }

    public transient java.lang.Void doInBackground(java.lang.Object[])
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask this;
        java.lang.Object[] $u18;
        java.lang.Object historicalRecords;
        java.util.List historicalRecords#6;
        java.lang.String historyFileName, $u-1#28;
        androidx.appcompat.widget.ActivityChooserModel serializer;
        android.content.Context serializer#11;
        java.io.FileOutputStream $u-1;
        org.xmlpull.v1.XmlSerializer $u-1#15;
        java.lang.Boolean $u-1#18;
        int $u-1#20, i;
        androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord record;
        android.content.ComponentName $u15;
        long $u4;
        float historicalRecords#36;
        java.io.IOException ioe, ioe#71, ioe#74;
        java.lang.IllegalStateException ioe#42;
        java.lang.IllegalArgumentException ioe#43;
        java.lang.Throwable ioe#44, ioe#72;
        java.lang.StringBuilder $u4#49;
        java.io.FileNotFoundException ioe#75;

        this := @this: androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        $u18 := @parameter0: java.lang.Object[];

        historicalRecords = $u18[0];

        historicalRecords#6 = (java.util.List) historicalRecords;

        historicalRecords = $u18[1];

        historyFileName = (java.lang.String) historicalRecords;

        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        serializer#11 = serializer.<androidx.appcompat.widget.ActivityChooserModel: android.content.Context mContext>;

     label01:
        $u-1 = virtualinvoke serializer#11.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>(historyFileName, 0);

     label02:
        $u-1#15 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label03:
        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($u-1, null);

        $u-1#18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $u-1#18);

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "historical-records");

        $u-1#20 = interfaceinvoke historicalRecords#6.<java.util.List: int size()>();

     label04:
        i = 0;

     label05:
        if i >= $u-1#20 goto label16;

     label06:
        historicalRecords = interfaceinvoke historicalRecords#6.<java.util.List: java.lang.Object remove(int)>(0);

     label07:
        record = (androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) historicalRecords;

     label08:
        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "historical-record");

     label09:
        $u15 = record.<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: android.content.ComponentName activity>;

     label10:
        $u-1#28 = virtualinvoke $u15.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "activity", $u-1#28);

     label11:
        $u4 = record.<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: long time>;

     label12:
        $u-1#28 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($u4);

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "time", $u-1#28);

     label13:
        historicalRecords#36 = record.<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: float weight>;

     label14:
        $u-1#28 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(historicalRecords#36);

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "weight", $u-1#28);

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "historical-record");

     label15:
        i = i + 1;

        goto label05;

     label16:
        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "historical-records");

        interfaceinvoke $u-1#15.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label17:
        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        serializer.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $u-1 == null goto label40;

     label18:
        virtualinvoke $u-1.<java.io.FileOutputStream: void close()>();

     label19:
        goto label38;

     label20:
        ioe := @caughtexception;

        goto label25;

     label21:
        ioe#42 := @caughtexception;

        goto label30;

     label22:
        ioe#43 := @caughtexception;

        goto label35;

     label23:
        ioe#44 := @caughtexception;

        goto label42;

     label24:
        ioe := @caughtexception;

     label25:
        $u-1#28 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $u4#49 = new java.lang.StringBuilder;

        specialinvoke $u4#49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        historyFileName = serializer.<androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(historyFileName);

        historyFileName = virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($u-1#28, historyFileName, ioe);

     label26:
        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        serializer.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $u-1 == null goto label48;

     label27:
        virtualinvoke $u-1.<java.io.FileOutputStream: void close()>();

     label28:
        goto label38;

     label29:
        ioe#42 := @caughtexception;

     label30:
        $u-1#28 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $u4#49 = new java.lang.StringBuilder;

        specialinvoke $u4#49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        historyFileName = serializer.<androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(historyFileName);

        historyFileName = virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($u-1#28, historyFileName, ioe#42);

     label31:
        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        serializer.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $u-1 == null goto label48;

     label32:
        virtualinvoke $u-1.<java.io.FileOutputStream: void close()>();

     label33:
        goto label38;

     label34:
        ioe#43 := @caughtexception;

     label35:
        $u-1#28 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $u4#49 = new java.lang.StringBuilder;

        specialinvoke $u4#49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        historyFileName = serializer.<androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(historyFileName);

        historyFileName = virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($u-1#28, historyFileName, ioe#43);

     label36:
        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        serializer.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $u-1 == null goto label48;

     label37:
        virtualinvoke $u-1.<java.io.FileOutputStream: void close()>();

     label38:
        return null;

     label39:
        ioe#71 := @caughtexception;

        goto label38;

     label40:
        return null;

     label41:
        ioe#72 := @caughtexception;

        ioe#44 = ioe#72;

     label42:
        serializer = this.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        serializer.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $u-1 == null goto label46;

     label43:
        virtualinvoke $u-1.<java.io.FileOutputStream: void close()>();

     label44:
        goto label46;

     label45:
        ioe#74 := @caughtexception;

     label46:
        throw ioe#44;

     label47:
        ioe#75 := @caughtexception;

        $u-1#28 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $u4#49 = new java.lang.StringBuilder;

        specialinvoke $u4#49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(historyFileName);

        historyFileName = virtualinvoke $u4#49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($u-1#28, historyFileName, ioe#75);

     label48:
        return null;

        catch java.io.FileNotFoundException from label01 to label02 with label47;
        catch java.lang.IllegalArgumentException from label03 to label04 with label34;
        catch java.lang.IllegalArgumentException from label06 to label07 with label34;
        catch java.lang.IllegalArgumentException from label08 to label09 with label34;
        catch java.lang.IllegalArgumentException from label10 to label11 with label34;
        catch java.lang.IllegalStateException from label03 to label04 with label29;
        catch java.lang.IllegalStateException from label06 to label07 with label29;
        catch java.lang.IllegalStateException from label08 to label09 with label29;
        catch java.lang.IllegalStateException from label10 to label11 with label29;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label11 with label23;
        catch java.lang.IllegalArgumentException from label12 to label13 with label22;
        catch java.lang.IllegalArgumentException from label14 to label15 with label22;
        catch java.lang.IllegalArgumentException from label16 to label17 with label22;
        catch java.lang.IllegalStateException from label12 to label13 with label21;
        catch java.lang.IllegalStateException from label14 to label15 with label21;
        catch java.lang.IllegalStateException from label16 to label17 with label21;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.lang.Throwable from label11 to label15 with label41;
        catch java.lang.Throwable from label16 to label17 with label41;
        catch java.io.IOException from label18 to label19 with label39;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.io.IOException from label27 to label28 with label39;
        catch java.lang.Throwable from label30 to label31 with label41;
        catch java.io.IOException from label32 to label33 with label39;
        catch java.lang.Throwable from label35 to label36 with label41;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.io.IOException from label43 to label44 with label45;
    }
}
