public class androidx.constraintlayout.solver.widgets.analyzer.ChainRun extends androidx.constraintlayout.solver.widgets.analyzer.WidgetRun
{
    private int chainStyle;
    java.util.ArrayList widgets;

    public void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget, int)
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u2;
        int $u3;
        java.util.ArrayList $u0;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        $u2 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u3 := @parameter1: int;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u2);

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets> = $u0;

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation> = $u3;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: void build()>();

        return;
    }

    private void build()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget current, $u-1;
        int previous;
        java.util.ArrayList next;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun $u-1#9;
        java.util.Iterator $u-1#22;
        boolean $u-1#24;
        java.lang.Object $u-1#27;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer isInRtl;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        current = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        $u-1 = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int)>(previous);

     label01:
        if $u-1 == null goto label02;

        current = $u-1;

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        $u-1 = virtualinvoke $u-1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int)>(previous);

        goto label01;

     label02:
        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget> = current;

        next = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        $u-1#9 = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int)>(previous);

        virtualinvoke next.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#9);

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        current = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int)>(previous);

     label03:
        if current == null goto label04;

        next = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        $u-1#9 = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int)>(previous);

        virtualinvoke next.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#9);

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        current = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int)>(previous);

        goto label03;

     label04:
        next = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#22 = virtualinvoke next.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $u-1#24 = interfaceinvoke $u-1#22.<java.util.Iterator: boolean hasNext()>();

        if $u-1#24 == 0 goto label07;

        $u-1#27 = interfaceinvoke $u-1#22.<java.util.Iterator: java.lang.Object next()>();

        $u-1#9 = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#27;

        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if previous != 0 goto label06;

        current = $u-1#9.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.analyzer.ChainRun horizontalChainRun> = this;

        goto label05;

     label06:
        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if previous != 1 goto label05;

        current = $u-1#9.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.analyzer.ChainRun verticalChainRun> = this;

        goto label05;

     label07:
        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if previous != 0 goto label08;

        current = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        current = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        isInRtl = (androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) current;

        $u-1#24 = virtualinvoke isInRtl.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        if $u-1#24 == 0 goto label08;

        $u-1#24 = 1;

        goto label09;

     label08:
        $u-1#24 = 0;

     label09:
        if $u-1#24 == 0 goto label10;

        next = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        previous = virtualinvoke next.<java.util.ArrayList: int size()>();

        if previous <= 1 goto label10;

        next = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        previous = virtualinvoke next.<java.util.ArrayList: int size()>();

        previous = previous - 1;

        $u-1#27 = virtualinvoke next.<java.util.ArrayList: java.lang.Object get(int)>(previous);

        $u-1#9 = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#27;

        current = $u-1#9.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget> = current;

     label10:
        previous = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if previous != 0 goto label11;

        current = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        previous = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHorizontalChainStyle()>();

        goto label12;

     label11:
        current = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        previous = virtualinvoke current.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVerticalChainStyle()>();

     label12:
        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int chainStyle> = previous;

        return;
    }

    private androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        int i, $u-1;
        java.util.ArrayList run;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run#8;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u2;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        i = 0;

     label1:
        run = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke run.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label3;

        run = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#6 = virtualinvoke run.<java.util.ArrayList: java.lang.Object get(int)>(i);

        run#8 = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        $u2 = run#8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1 = virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1 == 8 goto label2;

        $u2 = run#8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        return $u2;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return null;
    }

    private androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        java.util.ArrayList i;
        int $u-1, $u-1#10;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u2;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        i = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke i.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label3;

        i = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#6 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        $u2 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#10 = virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#10 == 8 goto label2;

        $u2 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        return $u2;

     label2:
        $u-1 = $u-1 + -1;

        goto label1;

     label3:
        return null;
    }

    void apply()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        java.util.ArrayList count;
        java.util.Iterator $u-1;
        boolean $u-1#4;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;
        int $u-1#10;
        androidx.constraintlayout.solver.widgets.ConstraintWidget firstWidget, lastWidget;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor run#26, endAnchor;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode $u-1#28, endMargin;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $u-1#4 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u-1#4 == 0 goto label02;

        $u-1#6 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        virtualinvoke run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: void apply()>();

        goto label01;

     label02:
        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#10 = virtualinvoke count.<java.util.ArrayList: int size()>();

        if $u-1#10 >= 1 goto label03;

        return;

     label03:
        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(0);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        firstWidget = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#10 = $u-1#10 + -1;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1#10);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        lastWidget = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#10 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if $u-1#10 != 0 goto label08;

        run#26 = firstWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        endAnchor = lastWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1#28 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(run#26, 0);

        $u-1#10 = virtualinvoke run#26.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

        firstWidget = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()>();

        if firstWidget == null goto label04;

        run#26 = firstWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $u-1#10 = virtualinvoke run#26.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

     label04:
        if $u-1#28 == null goto label05;

        endMargin = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int)>(endMargin, $u-1#28, $u-1#10);

     label05:
        $u-1#28 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(endAnchor, 0);

        $u-1#10 = virtualinvoke endAnchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

        firstWidget = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()>();

        if firstWidget == null goto label06;

        endAnchor = firstWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $u-1#10 = virtualinvoke endAnchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

     label06:
        if $u-1#28 == null goto label07;

        endMargin = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#10 = neg $u-1#10;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int)>(endMargin, $u-1#28, $u-1#10);

     label07:
        goto label12;

     label08:
        run#26 = firstWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        endAnchor = lastWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1#28 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(run#26, 1);

        $u-1#10 = virtualinvoke run#26.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

        firstWidget = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()>();

        if firstWidget == null goto label09;

        run#26 = firstWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $u-1#10 = virtualinvoke run#26.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

     label09:
        if $u-1#28 == null goto label10;

        endMargin = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int)>(endMargin, $u-1#28, $u-1#10);

     label10:
        $u-1#28 = virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>(endAnchor, 1);

        $u-1#10 = virtualinvoke endAnchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

        firstWidget = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()>();

        if firstWidget == null goto label11;

        endAnchor = firstWidget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $u-1#10 = virtualinvoke endAnchor.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()>();

     label11:
        if $u-1#28 == null goto label12;

        endMargin = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#10 = neg $u-1#10;

        virtualinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int)>(endMargin, $u-1#28, $u-1#10);

     label12:
        $u-1#28 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1#28.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.Dependency updateDelegate> = this;

        $u-1#28 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#28.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.Dependency updateDelegate> = this;

        return;
    }

    public void applyToWidget()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        int i, $u-1;
        java.util.ArrayList run;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run#8;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        i = 0;

     label1:
        run = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke run.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label2;

        run = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#6 = virtualinvoke run.<java.util.ArrayList: java.lang.Object get(int)>(i);

        run#8 = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        virtualinvoke run#8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: void applyToWidget()>();

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    void clear()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        java.util.ArrayList $u0;
        java.util.Iterator $u-1;
        boolean $u-1#5;
        java.lang.Object $u-1#7;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.RunGroup runGroup> = null;

        $u0 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $u-1#5 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u-1#5 == 0 goto label2;

        $u-1#7 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#7;

        virtualinvoke run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: void clear()>();

        goto label1;

     label2:
        return;
    }

    public long getWrapDimension()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        java.util.ArrayList count;
        int $u-1, i, $u5#11;
        long wrapDimension, $u5#12;
        java.lang.Object $u-1#7;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode $u5;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: int size()>();

        wrapDimension = 0L;

        i = 0;

     label1:
        if i >= $u-1 goto label2;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#7 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#7;

        $u5 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u5#11 = $u5.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u5#12 = (long) $u5#11;

        wrapDimension = wrapDimension + $u5#12;

        $u5#12 = virtualinvoke run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: long getWrapDimension()>();

        wrapDimension = wrapDimension + $u5#12;

        $u5 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u5#11 = $u5.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u5#12 = (long) $u5#11;

        wrapDimension = wrapDimension + $u5#12;

        i = i + 1;

        goto label1;

     label2:
        return wrapDimension;
    }

    void reset()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode $u0;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        $u0 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: boolean resolved> = 0;

        $u0 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u0.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: boolean resolved> = 0;

        return;
    }

    boolean supportsWrapComputation()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        java.util.ArrayList count;
        int $u-1, i;
        java.lang.Object $u-1#6;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;
        boolean $u-1#9;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: int size()>();

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#6;

        $u-1#9 = virtualinvoke run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: boolean supportsWrapComputation()>();

        if $u-1#9 != 0 goto label2;

        return 0;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return 1;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this;
        java.lang.StringBuilder log;
        int $u1;
        java.lang.String $u1#4;
        java.util.ArrayList $u1#7;
        java.util.Iterator $u-1;
        boolean $u-1#10;
        java.lang.Object $u-1#12;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        log = new java.lang.StringBuilder;

        specialinvoke log.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChainRun ");

        $u1 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if $u1 != 0 goto label1;

        $u1#4 = "horizontal : ";

        goto label2;

     label1:
        $u1#4 = "vertical : ";

     label2:
        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u1#4);

        $u1#4 = virtualinvoke log.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1#7 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke $u1#7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $u-1#10 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label4;

        $u-1#12 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#12;

        log = new java.lang.StringBuilder;

        specialinvoke log.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u1#4);

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $u1#4 = virtualinvoke log.<java.lang.StringBuilder: java.lang.String toString()>();

        log = new java.lang.StringBuilder;

        specialinvoke log.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u1#4);

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(run);

        $u1#4 = virtualinvoke log.<java.lang.StringBuilder: java.lang.String toString()>();

        log = new java.lang.StringBuilder;

        specialinvoke log.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u1#4);

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $u1#4 = virtualinvoke log.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label4:
        return $u1#4;
    }

    public void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency)
    {
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun this, $u0;
        androidx.constraintlayout.solver.widgets.analyzer.Dependency $u27;
        byte $u18;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode parent;
        boolean parent#3, distance, dimension#67;
        androidx.constraintlayout.solver.widgets.ConstraintWidget parent#6;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer distance#12;
        int distance#15, size, distance#18, size#19, numMatchConstraints, numVisibleWidgets, i, $u-1#34, $u-1#43, $u-1#53, dimension#63, run#116, dimension#151, size#155, weights#157, run#173;
        float weights, parent#85, dimension1#113;
        java.util.ArrayList count;
        java.lang.Object $u-1;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run;
        androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour dimension, parent#61;
        androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun dimension#65;
        androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun parent#72;
        float[] dimension#82;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        $u27 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.Dependency;

        $u0 = this;

        parent = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        parent#3 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: boolean resolved>;

        if parent#3 == 0 goto label114;

        parent = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        parent#3 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: boolean resolved>;

        if parent#3 != 0 goto label001;

        return;

     label001:
        parent#6 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        parent#6 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        parent#3 = 0;

        if parent#6 == null goto label002;

        distance = parent#6 instanceof androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        if distance == 0 goto label002;

        distance#12 = (androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) parent#6;

        parent#3 = virtualinvoke distance#12.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()>();

     label002:
        parent = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        distance#15 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int value>;

        parent = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        size = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int value>;

        distance#18 = distance#15 - size;

        size#19 = 0;

        numMatchConstraints = 0;

        weights = 0.0F;

        numVisibleWidgets = 0;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        distance#15 = virtualinvoke count.<java.util.ArrayList: int size()>();

        size = -1;

        i = 0;

     label003:
        if i >= distance#15 goto label005;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(i);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#34 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#34 != 8 goto label004;

        i = i + 1;

        goto label003;

     label004:
        size = i;

     label005:
        i = -1;

        $u-1#34 = distance#15 + -1;

     label006:
        if $u-1#34 < 0 goto label008;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1#34);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#43 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#43 != 8 goto label007;

        $u-1#34 = $u-1#34 + -1;

        goto label006;

     label007:
        i = $u-1#34;

     label008:
        $u-1#34 = 0;

     label009:
        if $u-1#34 >= 2 goto label025;

        $u-1#43 = 0;

     label010:
        if $u-1#43 >= distance#15 goto label023;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1#43);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#53 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#53 != 8 goto label011;

        goto label022;

     label011:
        numVisibleWidgets = numVisibleWidgets + 1;

        if $u-1#43 <= 0 goto label012;

        if $u-1#43 < size goto label012;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1#53 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        size#19 = size#19 + $u-1#53;

     label012:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        $u-1#53 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int value>;

        dimension = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour dimensionBehavior>;

        parent#61 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if dimension == parent#61 goto label013;

        distance = 1;

        goto label014;

     label013:
        distance = 0;

     label014:
        if distance == 0 goto label016;

        dimension#63 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if dimension#63 != 0 goto label015;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#65 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun horizontalRun>;

        dimension1 = dimension#65.<androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        dimension#67 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: boolean resolved>;

        if dimension#67 != 0 goto label015;

        return;

     label015:
        dimension#63 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if dimension#63 != 1 goto label018;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        parent#72 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun verticalRun>;

        dimension1 = parent#72.<androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        dimension#67 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: boolean resolved>;

        if dimension#67 != 0 goto label018;

        return;

     label016:
        dimension#63 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: int matchConstraintsType>;

        if dimension#63 != 1 goto label017;

        if $u-1#34 != 0 goto label017;

        distance = 1;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        $u-1#53 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int wrapValue>;

        numMatchConstraints = numMatchConstraints + 1;

        goto label018;

     label017:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        dimension#67 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: boolean resolved>;

        if dimension#67 == 0 goto label018;

        distance = 1;

        goto label018;

     label018:
        if distance != 0 goto label020;

        numMatchConstraints = numMatchConstraints + 1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#82 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: float[] mWeight>;

        $u-1#53 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        parent#85 = dimension#82[$u-1#53];

        $u18 = parent#85 cmpl 0.0F;

        if $u18 < 0 goto label019;

        weights = weights + parent#85;

     label019:
        goto label021;

     label020:
        size#19 = size#19 + $u-1#53;

     label021:
        $u-1#53 = distance#15 + -1;

        if $u-1#43 >= $u-1#53 goto label022;

        if $u-1#43 >= i goto label022;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#53 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#53 = neg $u-1#53;

        size#19 = size#19 + $u-1#53;

     label022:
        $u-1#43 = $u-1#43 + 1;

        goto label010;

     label023:
        if size#19 < distance#18 goto label025;

        if numMatchConstraints != 0 goto label024;

        goto label025;

     label024:
        numVisibleWidgets = 0;

        numMatchConstraints = 0;

        size#19 = 0;

        weights = 0.0F;

        $u-1#34 = $u-1#34 + 1;

        goto label009;

     label025:
        parent = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1#53 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int value>;

        if parent#3 == 0 goto label026;

        parent = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#53 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int value>;

     label026:
        if size#19 <= distance#18 goto label028;

        if parent#3 == 0 goto label027;

        $u-1#34 = size#19 - distance#18;

        parent#85 = (float) $u-1#34;

        parent#85 = parent#85 / 2.0F;

        parent#85 = parent#85 + 0.5F;

        $u-1#34 = (int) parent#85;

        $u-1#53 = $u-1#53 + $u-1#34;

        goto label028;

     label027:
        $u-1#34 = size#19 - distance#18;

        parent#85 = (float) $u-1#34;

        parent#85 = parent#85 / 2.0F;

        parent#85 = parent#85 + 0.5F;

        $u-1#34 = (int) parent#85;

        $u-1#53 = $u-1#53 - $u-1#34;

     label028:
        if numMatchConstraints <= 0 goto label049;

        $u-1#34 = distance#18 - size#19;

        parent#85 = (float) $u-1#34;

        dimension1#113 = (float) numMatchConstraints;

        parent#85 = parent#85 / dimension1#113;

        parent#85 = parent#85 + 0.5F;

        run#116 = (int) parent#85;

        $u-1#34 = 0;

        $u-1#43 = 0;

     label029:
        if $u-1#43 >= distance#15 goto label041;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1#43);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#63 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if dimension#63 != 8 goto label030;

        goto label040;

     label030:
        dimension = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour dimensionBehavior>;

        parent#61 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if dimension != parent#61 goto label040;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        distance = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: boolean resolved>;

        if distance != 0 goto label040;

        dimension#63 = run#116;

        $u18 = weights cmpl 0.0F;

        if $u18 <= 0 goto label031;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#82 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: float[] mWeight>;

        dimension#63 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        parent#85 = dimension#82[dimension#63];

        dimension#63 = distance#18 - size#19;

        dimension1#113 = (float) dimension#63;

        parent#85 = dimension1#113 * parent#85;

        parent#85 = parent#85 / weights;

        parent#85 = parent#85 + 0.5F;

        dimension#63 = (int) parent#85;

        goto label031;

     label031:
        dimension#151 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if dimension#151 != 0 goto label036;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#151 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMatchConstraintMaxWidth>;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        size#155 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMatchConstraintMinWidth>;

        weights#157 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: int matchConstraintsType>;

        if weights#157 != 1 goto label032;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        weights#157 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int wrapValue>;

        weights#157 = staticinvoke <java.lang.Math: int min(int,int)>(dimension#63, weights#157);

        goto label033;

     label032:
        weights#157 = dimension#63;

     label033:
        size#155 = staticinvoke <java.lang.Math: int max(int,int)>(size#155, weights#157);

        weights#157 = size#155;

        if dimension#151 <= 0 goto label034;

        weights#157 = staticinvoke <java.lang.Math: int min(int,int)>(dimension#151, size#155);

     label034:
        if weights#157 == dimension#63 goto label035;

        $u-1#34 = $u-1#34 + 1;

        dimension#63 = weights#157;

     label035:
        goto label039;

     label036:
        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#151 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMatchConstraintMaxHeight>;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        size#155 = parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMatchConstraintMinHeight>;

        weights#157 = dimension#63;

        run#173 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: int matchConstraintsType>;

        if run#173 != 1 goto label037;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        weights#157 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int wrapValue>;

        weights#157 = staticinvoke <java.lang.Math: int min(int,int)>(dimension#63, weights#157);

     label037:
        size#155 = staticinvoke <java.lang.Math: int max(int,int)>(size#155, weights#157);

        weights#157 = size#155;

        if dimension#151 <= 0 goto label038;

        weights#157 = staticinvoke <java.lang.Math: int min(int,int)>(dimension#151, size#155);

     label038:
        if weights#157 == dimension#63 goto label039;

        $u-1#34 = $u-1#34 + 1;

        dimension#63 = weights#157;

     label039:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        virtualinvoke dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: void resolve(int)>(dimension#63);

        goto label040;

     label040:
        $u-1#43 = $u-1#43 + 1;

        goto label029;

     label041:
        $u-1#43 = $u-1#53;

        if $u-1#34 <= 0 goto label047;

        numMatchConstraints = numMatchConstraints - $u-1#34;

        size#19 = 0;

        $u-1#53 = 0;

     label042:
        if $u-1#53 >= distance#15 goto label046;

        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1#53);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        dimension#63 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if dimension#63 != 8 goto label043;

        goto label045;

     label043:
        if $u-1#53 <= 0 goto label044;

        if $u-1#53 < size goto label044;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        dimension#63 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        size#19 = size#19 + dimension#63;

     label044:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        dimension#63 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int value>;

        size#19 = size#19 + dimension#63;

        dimension#63 = distance#15 + -1;

        if $u-1#53 >= dimension#63 goto label045;

        if $u-1#53 >= i goto label045;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        dimension#63 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        dimension#63 = neg dimension#63;

        size#19 = size#19 + dimension#63;

     label045:
        $u-1#53 = $u-1#53 + 1;

        goto label042;

     label046:
        goto label047;

     label047:
        $u-1#53 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int chainStyle>;

        if $u-1#53 != 2 goto label048;

        if $u-1#34 != 0 goto label048;

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int chainStyle> = 0;

     label048:
        goto label050;

     label049:
        $u-1#43 = $u-1#53;

     label050:
        if size#19 <= distance#18 goto label051;

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int chainStyle> = 2;

        goto label051;

     label051:
        if numVisibleWidgets <= 0 goto label052;

        if numMatchConstraints != 0 goto label052;

        if size != i goto label052;

        this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int chainStyle> = 2;

     label052:
        $u-1#34 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int chainStyle>;

        if $u-1#34 != 1 goto label073;

        $u-1#34 = 0;

        if numVisibleWidgets <= 1 goto label053;

        distance#18 = distance#18 - size#19;

        numVisibleWidgets = numVisibleWidgets + -1;

        $u-1#34 = distance#18 / numVisibleWidgets;

        goto label054;

     label053:
        if numVisibleWidgets != 1 goto label054;

        numVisibleWidgets = distance#18 - size#19;

        $u-1#34 = numVisibleWidgets / 2;

     label054:
        if numMatchConstraints <= 0 goto label055;

        $u-1#34 = 0;

     label055:
        numMatchConstraints = 0;

        numVisibleWidgets = $u-1#43;

     label056:
        if numMatchConstraints >= distance#15 goto label072;

        distance#18 = numMatchConstraints;

        if parent#3 == 0 goto label057;

        distance#18 = numMatchConstraints + 1;

        distance#18 = distance#15 - distance#18;

     label057:
        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(distance#18);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        distance#18 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if distance#18 != 8 goto label058;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numVisibleWidgets);

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numVisibleWidgets);

        distance#18 = $u-1#34;

        goto label071;

     label058:
        if numMatchConstraints <= 0 goto label060;

        if parent#3 == 0 goto label059;

        numVisibleWidgets = numVisibleWidgets - $u-1#34;

        goto label060;

     label059:
        numVisibleWidgets = numVisibleWidgets + $u-1#34;

     label060:
        if numMatchConstraints <= 0 goto label062;

        if numMatchConstraints < size goto label062;

        if parent#3 == 0 goto label061;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        distance#18 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        numVisibleWidgets = numVisibleWidgets - distance#18;

        goto label062;

     label061:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        distance#18 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        numVisibleWidgets = numVisibleWidgets + distance#18;

     label062:
        if parent#3 == 0 goto label063;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numVisibleWidgets);

        goto label064;

     label063:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numVisibleWidgets);

     label064:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        size#19 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int value>;

        dimension = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour dimensionBehavior>;

        distance#18 = $u-1#34;

        parent#61 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if dimension != parent#61 goto label065;

        $u-1#34 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: int matchConstraintsType>;

        if $u-1#34 != 1 goto label065;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        size#19 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int wrapValue>;

     label065:
        if parent#3 == 0 goto label066;

        numVisibleWidgets = numVisibleWidgets - size#19;

        goto label067;

     label066:
        numVisibleWidgets = numVisibleWidgets + size#19;

     label067:
        if parent#3 == 0 goto label068;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numVisibleWidgets);

        goto label069;

     label068:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numVisibleWidgets);

     label069:
        run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: boolean resolved> = 1;

        $u-1#34 = distance#15 + -1;

        if numMatchConstraints >= $u-1#34 goto label071;

        if numMatchConstraints >= i goto label071;

        if parent#3 == 0 goto label070;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#34 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#34 = neg $u-1#34;

        numVisibleWidgets = numVisibleWidgets - $u-1#34;

        goto label071;

     label070:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#34 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#34 = neg $u-1#34;

        numVisibleWidgets = numVisibleWidgets + $u-1#34;

     label071:
        numMatchConstraints = numMatchConstraints + 1;

        $u-1#34 = distance#18;

        goto label056;

     label072:
        return;

     label073:
        if $u-1#34 != 0 goto label092;

        distance#18 = distance#18 - size#19;

        numVisibleWidgets = numVisibleWidgets + 1;

        numVisibleWidgets = distance#18 / numVisibleWidgets;

        if numMatchConstraints <= 0 goto label074;

        numVisibleWidgets = 0;

     label074:
        numMatchConstraints = 0;

        distance#18 = $u-1#43;

     label075:
        if numMatchConstraints >= distance#15 goto label091;

        $u-1#34 = numMatchConstraints;

        if parent#3 == 0 goto label076;

        $u-1#34 = numMatchConstraints + 1;

        $u-1#34 = distance#15 - $u-1#34;

     label076:
        count = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1#34);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#34 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $u-1#34 != 8 goto label077;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(distance#18);

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(distance#18);

        goto label090;

     label077:
        if parent#3 == 0 goto label078;

        distance#18 = distance#18 - numVisibleWidgets;

        goto label079;

     label078:
        distance#18 = distance#18 + numVisibleWidgets;

     label079:
        if numMatchConstraints <= 0 goto label081;

        if numMatchConstraints < size goto label081;

        if parent#3 == 0 goto label080;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1#34 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        distance#18 = distance#18 - $u-1#34;

        goto label081;

     label080:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1#34 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        distance#18 = distance#18 + $u-1#34;

     label081:
        if parent#3 == 0 goto label082;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(distance#18);

        goto label083;

     label082:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(distance#18);

     label083:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        $u-1#34 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int value>;

        dimension = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour dimensionBehavior>;

        parent#61 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if dimension != parent#61 goto label084;

        size#19 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: int matchConstraintsType>;

        if size#19 != 1 goto label084;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        size#19 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int wrapValue>;

        $u-1#34 = staticinvoke <java.lang.Math: int min(int,int)>($u-1#34, size#19);

     label084:
        if parent#3 == 0 goto label085;

        distance#18 = distance#18 - $u-1#34;

        goto label086;

     label085:
        distance#18 = distance#18 + $u-1#34;

     label086:
        if parent#3 == 0 goto label087;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(distance#18);

        goto label088;

     label087:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(distance#18);

     label088:
        $u-1#34 = distance#15 + -1;

        if numMatchConstraints >= $u-1#34 goto label090;

        if numMatchConstraints >= i goto label090;

        if parent#3 == 0 goto label089;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#34 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#34 = neg $u-1#34;

        distance#18 = distance#18 - $u-1#34;

        goto label090;

     label089:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#34 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#34 = neg $u-1#34;

        distance#18 = distance#18 + $u-1#34;

     label090:
        numMatchConstraints = numMatchConstraints + 1;

        goto label075;

     label091:
        return;

     label092:
        if $u-1#34 != 2 goto label114;

        numVisibleWidgets = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if numVisibleWidgets != 0 goto label093;

        parent#6 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        weights = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: float getHorizontalBiasPercent()>();

        goto label094;

     label093:
        parent#6 = this.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        weights = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: float getVerticalBiasPercent()>();

     label094:
        if parent#3 == 0 goto label095;

        weights = 1.0F - weights;

     label095:
        numVisibleWidgets = distance#18 - size#19;

        parent#85 = (float) numVisibleWidgets;

        weights = parent#85 * weights;

        weights = weights + 0.5F;

        numVisibleWidgets = (int) weights;

        if numVisibleWidgets < 0 goto label096;

        if numMatchConstraints <= 0 goto label097;

     label096:
        numVisibleWidgets = 0;

     label097:
        if parent#3 == 0 goto label098;

        numMatchConstraints = $u-1#43 - numVisibleWidgets;

        goto label099;

     label098:
        numMatchConstraints = $u-1#43 + numVisibleWidgets;

     label099:
        numVisibleWidgets = 0;

     label100:
        if numVisibleWidgets >= distance#15 goto label114;

        distance#18 = numVisibleWidgets;

        if parent#3 == 0 goto label101;

        distance#18 = numVisibleWidgets + 1;

        distance#18 = distance#15 - distance#18;

     label101:
        count = $u0.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>(distance#18);

        run = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1;

        parent#6 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        distance#18 = virtualinvoke parent#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if distance#18 != 8 goto label102;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numMatchConstraints);

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numMatchConstraints);

        goto label113;

     label102:
        if numVisibleWidgets <= 0 goto label104;

        if numVisibleWidgets < size goto label104;

        if parent#3 == 0 goto label103;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        distance#18 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        numMatchConstraints = numMatchConstraints - distance#18;

        goto label104;

     label103:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        distance#18 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        numMatchConstraints = numMatchConstraints + distance#18;

     label104:
        if parent#3 == 0 goto label105;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numMatchConstraints);

        goto label106;

     label105:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numMatchConstraints);

     label106:
        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        distance#18 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int value>;

        dimension = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour dimensionBehavior>;

        parent#61 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if dimension != parent#61 goto label107;

        $u-1#34 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: int matchConstraintsType>;

        if $u-1#34 != 1 goto label107;

        dimension1 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency dimension>;

        distance#18 = dimension1.<androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency: int wrapValue>;

        goto label107;

     label107:
        if parent#3 == 0 goto label108;

        numMatchConstraints = numMatchConstraints - distance#18;

        goto label109;

     label108:
        numMatchConstraints = numMatchConstraints + distance#18;

     label109:
        if parent#3 == 0 goto label110;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numMatchConstraints);

        goto label111;

     label110:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        virtualinvoke parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: void resolve(int)>(numMatchConstraints);

     label111:
        distance#18 = distance#15 + -1;

        if numVisibleWidgets >= distance#18 goto label113;

        if numVisibleWidgets >= i goto label113;

        if parent#3 == 0 goto label112;

        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        distance#18 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        distance#18 = neg distance#18;

        numMatchConstraints = numMatchConstraints - distance#18;

        goto label113;

     label112:
        parent = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        distance#18 = parent.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        distance#18 = neg distance#18;

        numMatchConstraints = numMatchConstraints + distance#18;

     label113:
        numVisibleWidgets = numVisibleWidgets + 1;

        $u0 = this;

        goto label100;

     label114:
        return;
    }
}
