public abstract class androidx.lifecycle.ViewModel extends java.lang.Object
{
    private final java.util.Map mBagOfTags;
    private volatile boolean mCleared;

    public void <init>()
    {
        androidx.lifecycle.ViewModel this;
        java.util.HashMap $u0;

        this := @this: androidx.lifecycle.ViewModel;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags> = $u0;

        this.<androidx.lifecycle.ViewModel: boolean mCleared> = 0;

        return;
    }

    private static void closeWithRuntimeException(java.lang.Object)
    {
        java.lang.Object $u2;
        java.lang.RuntimeException $u1;
        boolean e;
        java.io.Closeable e#3;
        java.io.IOException e#4;

        $u2 := @parameter0: java.lang.Object;

        e = $u2 instanceof java.io.Closeable;

        if e == 0 goto label4;

        e#3 = (java.io.Closeable) $u2;

     label1:
        interfaceinvoke e#3.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        e#4 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e#4);

        throw $u1;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    final void clear()
    {
        androidx.lifecycle.ViewModel this;
        java.util.Map $u0, $u1;
        java.util.Collection $u-1;
        java.util.Iterator $u-1#6;
        boolean $u-1#8;
        java.lang.Object $u-1#10;
        java.lang.Throwable $u1#12;

        this := @this: androidx.lifecycle.ViewModel;

        this.<androidx.lifecycle.ViewModel: boolean mCleared> = 1;

        $u0 = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        if $u0 == null goto label7;

        entermonitor $u0;

     label1:
        $u1 = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $u-1 = interfaceinvoke $u1.<java.util.Map: java.util.Collection values()>();

        $u-1#6 = interfaceinvoke $u-1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $u-1#8 = interfaceinvoke $u-1#6.<java.util.Iterator: boolean hasNext()>();

        if $u-1#8 == 0 goto label3;

        $u-1#10 = interfaceinvoke $u-1#6.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>($u-1#10);

        goto label2;

     label3:
        exitmonitor $u0;

     label4:
        goto label7;

     label5:
        $u1#12 := @caughtexception;

        exitmonitor $u0;

     label6:
        throw $u1#12;

     label7:
        virtualinvoke this.<androidx.lifecycle.ViewModel: void onCleared()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    java.lang.Object getTag(java.lang.String)
    {
        androidx.lifecycle.ViewModel this;
        java.lang.String $u3;
        java.util.Map $u0, $u1;
        java.lang.Object $u-1;
        java.lang.Throwable $u1#3;

        this := @this: androidx.lifecycle.ViewModel;

        $u3 := @parameter0: java.lang.String;

        $u0 = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        entermonitor $u0;

     label1:
        $u1 = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $u-1 = interfaceinvoke $u1.<java.util.Map: java.lang.Object get(java.lang.Object)>($u3);

        exitmonitor $u0;

     label2:
        return $u-1;

     label3:
        $u1#3 := @caughtexception;

        exitmonitor $u0;

     label4:
        throw $u1#3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void onCleared()
    {
        androidx.lifecycle.ViewModel this;

        this := @this: androidx.lifecycle.ViewModel;

        return;
    }

    java.lang.Object setTagIfAbsent(java.lang.String, java.lang.Object)
    {
        androidx.lifecycle.ViewModel this;
        java.lang.String $u4;
        java.lang.Object newValue, $u-1;
        java.util.Map result, previous;
        boolean $u2;
        java.lang.Throwable previous#7;

        this := @this: androidx.lifecycle.ViewModel;

        $u4 := @parameter0: java.lang.String;

        newValue := @parameter1: java.lang.Object;

        result = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        entermonitor result;

     label1:
        previous = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $u-1 = interfaceinvoke previous.<java.util.Map: java.lang.Object get(java.lang.Object)>($u4);

        if $u-1 != null goto label2;

        previous = this.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        interfaceinvoke previous.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($u4, newValue);

     label2:
        exitmonitor result;

     label3:
        if $u-1 != null goto label4;

        goto label5;

     label4:
        newValue = $u-1;

     label5:
        $u2 = this.<androidx.lifecycle.ViewModel: boolean mCleared>;

        if $u2 == 0 goto label9;

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>(newValue);

        return newValue;

     label6:
        previous#7 := @caughtexception;

     label7:
        exitmonitor result;

     label8:
        throw previous#7;

     label9:
        return newValue;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
