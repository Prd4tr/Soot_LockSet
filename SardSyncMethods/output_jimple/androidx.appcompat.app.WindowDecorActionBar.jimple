public class androidx.appcompat.app.WindowDecorActionBar extends androidx.appcompat.app.ActionBar implements androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
{
    private static final long FADE_IN_DURATION_MS;
    private static final long FADE_OUT_DURATION_MS;
    private static final int INVALID_POSITION;
    private static final java.lang.String TAG;
    private static final android.view.animation.Interpolator sHideInterpolator;
    private static final android.view.animation.Interpolator sShowInterpolator;
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode;
    private android.app.Activity mActivity;
    androidx.appcompat.widget.ActionBarContainer mContainerView;
    boolean mContentAnimations;
    android.view.View mContentView;
    android.content.Context mContext;
    androidx.appcompat.widget.ActionBarContextView mContextView;
    private int mCurWindowVisibility;
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim;
    androidx.appcompat.widget.DecorToolbar mDecorToolbar;
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode;
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback;
    private boolean mDisplayHomeAsUpSet;
    private boolean mHasEmbeddedTabs;
    boolean mHiddenByApp;
    boolean mHiddenBySystem;
    final androidx.core.view.ViewPropertyAnimatorListener mHideListener;
    boolean mHideOnContentScroll;
    private boolean mLastMenuVisibility;
    private java.util.ArrayList mMenuVisibilityListeners;
    private boolean mNowShowing;
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout;
    private int mSavedTabPosition;
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab;
    private boolean mShowHideAnimationEnabled;
    final androidx.core.view.ViewPropertyAnimatorListener mShowListener;
    private boolean mShowingForMode;
    androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView;
    private java.util.ArrayList mTabs;
    private android.content.Context mThemedContext;
    final androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener;

    static void <clinit>()
    {
        android.view.animation.AccelerateInterpolator $u0;
        android.view.animation.DecelerateInterpolator $u0#2;

        <androidx.appcompat.app.WindowDecorActionBar: java.lang.String TAG> = "WindowDecorActionBar";

        <androidx.appcompat.app.WindowDecorActionBar: int INVALID_POSITION> = -1;

        <androidx.appcompat.app.WindowDecorActionBar: long FADE_OUT_DURATION_MS> = 100L;

        <androidx.appcompat.app.WindowDecorActionBar: long FADE_IN_DURATION_MS> = 200L;

        $u0 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $u0.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator> = $u0;

        $u0#2 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $u0#2.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator> = $u0#2;

        return;
    }

    public void <init>(android.app.Activity, boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.app.Activity $u4;
        boolean $u5;
        java.util.ArrayList window;
        androidx.appcompat.app.WindowDecorActionBar$1 window#6;
        androidx.appcompat.app.WindowDecorActionBar$2 window#7;
        androidx.appcompat.app.WindowDecorActionBar$3 window#8;
        android.view.Window $u-1;
        android.view.View $u-1#11;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: android.app.Activity;

        $u5 := @parameter1: boolean;

        specialinvoke this.<androidx.appcompat.app.ActionBar: void <init>()>();

        window = new java.util.ArrayList;

        specialinvoke window.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs> = window;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        window = new java.util.ArrayList;

        specialinvoke window.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = window;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        window#6 = new androidx.appcompat.app.WindowDecorActionBar$1;

        specialinvoke window#6.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener> = window#6;

        window#7 = new androidx.appcompat.app.WindowDecorActionBar$2;

        specialinvoke window#7.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener> = window#7;

        window#8 = new androidx.appcompat.app.WindowDecorActionBar$3;

        specialinvoke window#8.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = window#8;

        this.<androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity> = $u4;

        $u-1 = virtualinvoke $u4.<android.app.Activity: android.view.Window getWindow()>();

        $u-1#11 = virtualinvoke $u-1.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($u-1#11);

        if $u5 != 0 goto label1;

        $u-1#11 = virtualinvoke $u-1#11.<android.view.View: android.view.View findViewById(int)>(16908290);

        this.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView> = $u-1#11;

     label1:
        return;
    }

    public void <init>(android.app.Dialog)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.app.Dialog $u2;
        java.util.ArrayList $u0;
        androidx.appcompat.app.WindowDecorActionBar$1 $u0#6;
        androidx.appcompat.app.WindowDecorActionBar$2 $u0#7;
        androidx.appcompat.app.WindowDecorActionBar$3 $u0#8;
        android.view.Window $u-1;
        android.view.View $u-1#11;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.app.Dialog;

        specialinvoke this.<androidx.appcompat.app.ActionBar: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $u0;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $u0;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $u0#6 = new androidx.appcompat.app.WindowDecorActionBar$1;

        specialinvoke $u0#6.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener> = $u0#6;

        $u0#7 = new androidx.appcompat.app.WindowDecorActionBar$2;

        specialinvoke $u0#7.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener> = $u0#7;

        $u0#8 = new androidx.appcompat.app.WindowDecorActionBar$3;

        specialinvoke $u0#8.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $u0#8;

        $u-1 = virtualinvoke $u2.<android.app.Dialog: android.view.Window getWindow()>();

        $u-1#11 = virtualinvoke $u-1.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($u-1#11);

        return;
    }

    public void <init>(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.view.View $u2;
        java.util.ArrayList $u0;
        androidx.appcompat.app.WindowDecorActionBar$1 $u0#6;
        androidx.appcompat.app.WindowDecorActionBar$2 $u0#7;
        androidx.appcompat.app.WindowDecorActionBar$3 $u0#8;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.view.View;

        specialinvoke this.<androidx.appcompat.app.ActionBar: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $u0;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $u0;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $u0#6 = new androidx.appcompat.app.WindowDecorActionBar$1;

        specialinvoke $u0#6.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener> = $u0#6;

        $u0#7 = new androidx.appcompat.app.WindowDecorActionBar$2;

        specialinvoke $u0#7.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener> = $u0#7;

        $u0#8 = new androidx.appcompat.app.WindowDecorActionBar$3;

        specialinvoke $u0#8.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $u0#8;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($u2);

        return;
    }

    static boolean checkShowingFlags(boolean, boolean, boolean)
    {
        boolean $u1, $u2, $u3;

        $u1 := @parameter0: boolean;

        $u2 := @parameter1: boolean;

        $u3 := @parameter2: boolean;

        if $u3 == 0 goto label1;

        return 1;

     label1:
        if $u1 != 0 goto label3;

        if $u2 == 0 goto label2;

        goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private void cleanupTabs()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $u0;
        java.util.ArrayList $u0#3;
        androidx.appcompat.widget.ScrollingTabContainerView $u0#4;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $u0 == null goto label1;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>(null);

     label1:
        $u0#3 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke $u0#3.<java.util.ArrayList: void clear()>();

        $u0#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $u0#4 == null goto label2;

        virtualinvoke $u0#4.<androidx.appcompat.widget.ScrollingTabContainerView: void removeAllTabs()>();

     label2:
        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        return;
    }

    private void configureTab(androidx.appcompat.app.ActionBar$Tab, int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u6;
        int $u7, $u-1#6;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl tabi;
        androidx.appcompat.app.ActionBar$TabListener $u-1;
        java.util.ArrayList count;
        java.lang.Object $u-1#10;
        java.lang.IllegalStateException count#13;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u6 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u7 := @parameter1: int;

        tabi = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $u6;

        $u-1 = virtualinvoke tabi.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        if $u-1 == null goto label3;

        virtualinvoke tabi.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($u7);

        count = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke count.<java.util.ArrayList: void add(int,java.lang.Object)>($u7, tabi);

        count = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: int size()>();

        $u7 = $u7 + 1;

     label1:
        if $u7 >= $u-1#6 goto label2;

        count = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#10 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u7);

        tabi = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $u-1#10;

        virtualinvoke tabi.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($u7);

        $u7 = $u7 + 1;

        goto label1;

     label2:
        return;

     label3:
        count#13 = new java.lang.IllegalStateException;

        specialinvoke count#13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action Bar Tab must have a Callback");

        goto label4;

     label4:
        throw count#13;
    }

    private void ensureTabsExist()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1;
        androidx.appcompat.widget.ScrollingTabContainerView tabScroller;
        android.content.Context $u1;
        boolean $u1#4;
        androidx.appcompat.widget.DecorToolbar $u1#5;
        androidx.appcompat.widget.ActionBarOverlayLayout $u1#7;
        androidx.appcompat.widget.ActionBarContainer $u1#9;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        tabScroller = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if tabScroller == null goto label1;

        return;

     label1:
        tabScroller = new androidx.appcompat.widget.ScrollingTabContainerView;

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke tabScroller.<androidx.appcompat.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($u1);

        $u1#4 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $u1#4 == 0 goto label2;

        virtualinvoke tabScroller.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $u1#5 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u1#5.<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>(tabScroller);

        goto label5;

     label2:
        $u-1 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>();

        if $u-1 != 2 goto label3;

        virtualinvoke tabScroller.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $u1#7 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $u1#7 == null goto label4;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($u1#7);

        goto label4;

     label3:
        virtualinvoke tabScroller.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label4:
        $u1#9 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $u1#9.<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)>(tabScroller);

     label5:
        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView> = tabScroller;

        return;
    }

    private androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.view.View $u4;
        boolean $u0;
        androidx.appcompat.widget.DecorToolbar $u0#3;
        androidx.appcompat.widget.Toolbar $u0#6;
        java.lang.IllegalStateException $u0#9;
        java.lang.StringBuilder $u1;
        java.lang.Class $u-1;
        java.lang.String $u-1#14;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: android.view.View;

        $u0 = $u4 instanceof androidx.appcompat.widget.DecorToolbar;

        if $u0 == 0 goto label1;

        $u0#3 = (androidx.appcompat.widget.DecorToolbar) $u4;

        return $u0#3;

     label1:
        $u0 = $u4 instanceof androidx.appcompat.widget.Toolbar;

        if $u0 == 0 goto label2;

        $u0#6 = (androidx.appcompat.widget.Toolbar) $u4;

        $u0#3 = virtualinvoke $u0#6.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()>();

        return $u0#3;

     label2:
        $u0#9 = new java.lang.IllegalStateException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        if $u4 == null goto label3;

        $u-1 = virtualinvoke $u4.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#14 = virtualinvoke $u-1.<java.lang.Class: java.lang.String getSimpleName()>();

        goto label4;

     label3:
        $u-1#14 = "null";

     label4:
        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#14);

        $u-1#14 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#14);

        throw $u0#9;
    }

    private void hideForActionMode()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.widget.ActionBarOverlayLayout $u1;
        boolean $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $u0 == 0 goto label2;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode> = 0;

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $u1 == null goto label1;

        virtualinvoke $u1.<androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(0);

     label1:
        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void init(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.view.View $u10, $u-1;
        int[] $u7;
        int $u8;
        androidx.appcompat.widget.ActionBarOverlayLayout current;
        androidx.appcompat.widget.DecorToolbar $u-1#8;
        androidx.appcompat.widget.ActionBarContextView current#13;
        androidx.appcompat.widget.ActionBarContainer current#17;
        android.content.Context $u-1#20;
        boolean homeAsUp, $u-1#32;
        androidx.appcompat.view.ActionBarPolicy $u-1#30;
        android.content.res.TypedArray $u-1#39;
        float $u3;
        java.lang.IllegalStateException current#48;
        java.lang.StringBuilder homeAsUp#49;
        java.lang.Class $u-1#50;
        java.lang.String $u-1#52;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u10 := @parameter0: android.view.View;

        $u8 = <androidx.appcompat.R$id: int decor_content_parent>;

        $u-1 = virtualinvoke $u10.<android.view.View: android.view.View findViewById(int)>($u8);

        current = (androidx.appcompat.widget.ActionBarOverlayLayout) $u-1;

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout> = current;

        if current == null goto label01;

        virtualinvoke current.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)>(this);

     label01:
        $u8 = <androidx.appcompat.R$id: int action_bar>;

        $u-1 = virtualinvoke $u10.<android.view.View: android.view.View findViewById(int)>($u8);

        $u-1#8 = specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)>($u-1);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar> = $u-1#8;

        $u8 = <androidx.appcompat.R$id: int action_context_bar>;

        $u-1 = virtualinvoke $u10.<android.view.View: android.view.View findViewById(int)>($u8);

        current#13 = (androidx.appcompat.widget.ActionBarContextView) $u-1;

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView> = current#13;

        $u8 = <androidx.appcompat.R$id: int action_bar_container>;

        $u10 = virtualinvoke $u10.<android.view.View: android.view.View findViewById(int)>($u8);

        current#17 = (androidx.appcompat.widget.ActionBarContainer) $u10;

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView> = current#17;

        $u-1#8 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $u-1#8 == null goto label10;

        current#13 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        if current#13 == null goto label10;

        if current#17 == null goto label10;

        $u-1#20 = interfaceinvoke $u-1#8.<androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext> = $u-1#20;

        $u-1#8 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u8 = interfaceinvoke $u-1#8.<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>();

        $u8 = $u8 & 4;

        if $u8 == 0 goto label02;

        homeAsUp = 1;

        goto label03;

     label02:
        homeAsUp = 0;

     label03:
        if homeAsUp == 0 goto label04;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label04:
        $u-1#20 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $u-1#30 = staticinvoke <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>($u-1#20);

        $u-1#32 = virtualinvoke $u-1#30.<androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>();

        if $u-1#32 != 0 goto label06;

        if homeAsUp == 0 goto label05;

        goto label06;

     label05:
        homeAsUp = 0;

        goto label07;

     label06:
        homeAsUp = 1;

     label07:
        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>(homeAsUp);

        homeAsUp = virtualinvoke $u-1#30.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>(homeAsUp);

        $u-1#20 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $u7 = <androidx.appcompat.R$styleable: int[] ActionBar>;

        $u8 = <androidx.appcompat.R$attr: int actionBarStyle>;

        $u-1#39 = virtualinvoke $u-1#20.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $u7, $u8, 0);

        $u8 = <androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll>;

        homeAsUp = virtualinvoke $u-1#39.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u8, 0);

        if homeAsUp == 0 goto label08;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>(1);

     label08:
        $u8 = <androidx.appcompat.R$styleable: int ActionBar_elevation>;

        $u8 = virtualinvoke $u-1#39.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u8, 0);

        if $u8 == 0 goto label09;

        $u3 = (float) $u8;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)>($u3);

     label09:
        virtualinvoke $u-1#39.<android.content.res.TypedArray: void recycle()>();

        return;

     label10:
        current#48 = new java.lang.IllegalStateException;

        homeAsUp#49 = new java.lang.StringBuilder;

        specialinvoke homeAsUp#49.<java.lang.StringBuilder: void <init>()>();

        $u-1#50 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#52 = virtualinvoke $u-1#50.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke homeAsUp#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#52);

        virtualinvoke homeAsUp#49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with a compatible window decor layout");

        $u-1#52 = virtualinvoke homeAsUp#49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke current#48.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#52);

        throw current#48;
    }

    private void setHasEmbeddedTabs(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u6, isInTabMode#11, $u4;
        int $u-1;
        androidx.appcompat.widget.DecorToolbar $u1;
        androidx.appcompat.widget.ActionBarContainer isInTabMode;
        androidx.appcompat.widget.ScrollingTabContainerView $u1#4;
        androidx.appcompat.widget.ActionBarOverlayLayout $u1#13;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u6 := @parameter0: boolean;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs> = $u6;

        if $u6 != 0 goto label01;

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u1.<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>(null);

        isInTabMode = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $u1#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke isInTabMode.<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)>($u1#4);

        goto label02;

     label01:
        isInTabMode = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke isInTabMode.<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)>(null);

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u1#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        interfaceinvoke $u1.<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>($u1#4);

     label02:
        $u-1 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>();

        $u6 = 1;

        if $u-1 != 2 goto label03;

        isInTabMode#11 = 1;

        goto label04;

     label03:
        isInTabMode#11 = 0;

     label04:
        $u1#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $u1#4 == null goto label06;

        if isInTabMode#11 == 0 goto label05;

        virtualinvoke $u1#4.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $u1#13 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $u1#13 == null goto label06;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($u1#13);

        goto label06;

     label05:
        virtualinvoke $u1#4.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label06:
        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $u4 != 0 goto label07;

        if isInTabMode#11 == 0 goto label07;

        $u4 = 1;

        goto label08;

     label07:
        $u4 = 0;

     label08:
        interfaceinvoke $u1.<androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)>($u4);

        $u1#13 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $u4 != 0 goto label09;

        if isInTabMode#11 == 0 goto label09;

        goto label10;

     label09:
        $u6 = 0;

     label10:
        virtualinvoke $u1#13.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($u6);

        return;
    }

    private boolean shouldAnimateContextView()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u-1;
        androidx.appcompat.widget.ActionBarContainer $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>($u0);

        return $u-1;
    }

    private void showForActionMode()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.widget.ActionBarOverlayLayout $u1;
        boolean $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $u0 != 0 goto label2;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode> = 1;

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $u1 == null goto label1;

        virtualinvoke $u1.<androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(1);

     label1:
        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void updateVisibility(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u4, $u2, shown, $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: boolean;

        shown = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp>;

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode>;

        $u2 = staticinvoke <androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>(shown, $u1, $u2);

        if $u2 == 0 goto label1;

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing>;

        if $u2 != 0 goto label2;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)>($u4);

        return;

     label1:
        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing>;

        if $u2 == 0 goto label2;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 0;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)>($u4);

     label2:
        return;
    }

    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $u2;
        java.util.ArrayList $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$OnMenuVisibilityListener;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $u0.<java.util.ArrayList: boolean add(java.lang.Object)>($u2);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u2;
        boolean $u-1;
        java.util.ArrayList $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)>($u2, $u-1);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u2;
        int $u3;
        boolean $u-1;
        java.util.ArrayList $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)>($u2, $u3, $u-1);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, int, boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u2;
        int $u3;
        boolean $u4;
        androidx.appcompat.widget.ScrollingTabContainerView $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u3 := @parameter1: int;

        $u4 := @parameter2: boolean;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()>();

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $u0.<androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)>($u2, $u3, $u4);

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void configureTab(androidx.appcompat.app.ActionBar$Tab,int)>($u2, $u3);

        if $u4 == 0 goto label1;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($u2);

     label1:
        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u2;
        boolean $u3;
        int $u-1;
        androidx.appcompat.widget.ScrollingTabContainerView $u0;
        java.util.ArrayList $u0#2;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u3 := @parameter1: boolean;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()>();

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $u0.<androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)>($u2, $u3);

        $u0#2 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1 = virtualinvoke $u0#2.<java.util.ArrayList: int size()>();

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void configureTab(androidx.appcompat.app.ActionBar$Tab,int)>($u2, $u-1);

        if $u3 == 0 goto label1;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($u2);

     label1:
        return;
    }

    public void animateToMode(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u9, $u-1;
        androidx.appcompat.widget.DecorToolbar fadeOut;
        androidx.core.view.ViewPropertyAnimatorCompat $u-1#6, $u-1#9;
        androidx.appcompat.widget.ActionBarContextView fadeIn;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet set;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u9 := @parameter0: boolean;

        if $u9 == 0 goto label1;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()>();

        goto label2;

     label1:
        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()>();

     label2:
        $u-1 = specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()>();

        if $u-1 == 0 goto label5;

        if $u9 == 0 goto label3;

        fadeOut = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1#6 = interfaceinvoke fadeOut.<androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(4, 100L);

        fadeIn = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        $u-1#9 = virtualinvoke fadeIn.<androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(0, 200L);

        goto label4;

     label3:
        fadeOut = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1#9 = interfaceinvoke fadeOut.<androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(0, 200L);

        fadeIn = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        $u-1#6 = virtualinvoke fadeIn.<androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(8, 100L);

     label4:
        set = new androidx.appcompat.view.ViewPropertyAnimatorCompatSet;

        specialinvoke set.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        virtualinvoke set.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)>($u-1#6, $u-1#9);

        virtualinvoke set.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()>();

        return;

     label5:
        if $u9 == 0 goto label6;

        fadeOut = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke fadeOut.<androidx.appcompat.widget.DecorToolbar: void setVisibility(int)>(4);

        fadeIn = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke fadeIn.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        return;

     label6:
        fadeOut = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke fadeOut.<androidx.appcompat.widget.DecorToolbar: void setVisibility(int)>(0);

        fadeIn = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke fadeIn.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(8);

        return;
    }

    public boolean collapseActionView()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $u0 == null goto label1;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean hasExpandedActionView()>();

        if $u-1 == 0 goto label1;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void collapseActionView()>();

        return 1;

     label1:
        return 0;
    }

    void completeDeferredDestroyActionMode()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.view.ActionMode $u1;
        androidx.appcompat.view.ActionMode$Callback $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        if $u0 == null goto label1;

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode>;

        interfaceinvoke $u0.<androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)>($u1);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode> = null;

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback> = null;

     label1:
        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u4, count;
        java.util.ArrayList count#2;
        int $u-1, i;
        java.lang.Object $u-1#7;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $u2;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: boolean;

        count = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility>;

        if $u4 != count goto label1;

        return;

     label1:
        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility> = $u4;

        count#2 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $u-1 = virtualinvoke count#2.<java.util.ArrayList: int size()>();

        i = 0;

     label2:
        if i >= $u-1 goto label3;

        count#2 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $u-1#7 = virtualinvoke count#2.<java.util.ArrayList: java.lang.Object get(int)>(i);

        $u2 = (androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) $u-1#7;

        interfaceinvoke $u2.<androidx.appcompat.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>($u4);

        i = i + 1;

        goto label2;

     label3:
        return;
    }

    public void doHide(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u6, anim#3;
        androidx.appcompat.widget.ActionBarContainer $u4;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet anim;
        int anim#2;
        float endingY, a;
        int[] topLeft;
        androidx.core.view.ViewPropertyAnimatorCompat $u-1;
        androidx.core.view.ViewPropertyAnimatorUpdateListener topLeft#23;
        android.view.View topLeft#25;
        android.view.animation.Interpolator topLeft#30;
        androidx.core.view.ViewPropertyAnimatorListener topLeft#32;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u6 := @parameter0: boolean;

        anim = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if anim == null goto label1;

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        anim#2 = this.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if anim#2 != 0 goto label5;

        anim#3 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if anim#3 != 0 goto label2;

        if $u6 == 0 goto label5;

     label2:
        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $u4.<androidx.appcompat.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $u4.<androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)>(1);

        anim = new androidx.appcompat.view.ViewPropertyAnimatorCompatSet;

        specialinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        anim#2 = virtualinvoke $u4.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        anim#2 = neg anim#2;

        endingY = (float) anim#2;

        if $u6 == 0 goto label3;

        topLeft = newarray (int)[2];

        topLeft[0] = 0;

        topLeft[1] = 0;

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $u4.<androidx.appcompat.widget.ActionBarContainer: void getLocationInWindow(int[])>(topLeft);

        anim#2 = topLeft[1];

        a = (float) anim#2;

        endingY = endingY - a;

     label3:
        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($u4);

        $u-1 = virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>(endingY);

        topLeft#23 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;

        virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)>(topLeft#23);

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($u-1);

        $u6 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $u6 == 0 goto label4;

        topLeft#25 = this.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        if topLeft#25 == null goto label4;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(topLeft#25);

        $u-1 = virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>(endingY);

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($u-1);

     label4:
        topLeft#30 = <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator>;

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>(topLeft#30);

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);

        topLeft#32 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener>;

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)>(topLeft#32);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = anim;

        virtualinvoke anim.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()>();

        return;

     label5:
        topLeft#32 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener>;

        interfaceinvoke topLeft#32.<androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);

        return;
    }

    public void doShow(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u7, startingY#6;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet startingY;
        androidx.appcompat.widget.ActionBarContainer startingY#2;
        int startingY#4;
        float startingY#12, a;
        int[] topLeft;
        androidx.core.view.ViewPropertyAnimatorCompat $u-1;
        androidx.core.view.ViewPropertyAnimatorUpdateListener $u4;
        android.view.View $u4#28;
        android.view.animation.Interpolator $u1;
        androidx.core.view.ViewPropertyAnimatorListener $u1#36;
        androidx.appcompat.widget.ActionBarOverlayLayout startingY#44;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u7 := @parameter0: boolean;

        startingY = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if startingY == null goto label1;

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)>(0);

        startingY#4 = this.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if startingY#4 != 0 goto label5;

        startingY#6 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if startingY#6 != 0 goto label2;

        if $u7 == 0 goto label5;

     label2:
        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        startingY#4 = virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        startingY#4 = neg startingY#4;

        startingY#12 = (float) startingY#4;

        if $u7 == 0 goto label3;

        topLeft = newarray (int)[2];

        topLeft[0] = 0;

        topLeft[1] = 0;

        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: void getLocationInWindow(int[])>(topLeft);

        startingY#4 = topLeft[1];

        a = (float) startingY#4;

        startingY#12 = startingY#12 - a;

     label3:
        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>(startingY#12);

        startingY = new androidx.appcompat.view.ViewPropertyAnimatorCompatSet;

        specialinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(startingY#2);

        $u-1 = virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;

        virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)>($u4);

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($u-1);

        $u7 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $u7 == 0 goto label4;

        $u4#28 = this.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        if $u4#28 == null goto label4;

        virtualinvoke $u4#28.<android.view.View: void setTranslationY(float)>(startingY#12);

        $u4#28 = this.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($u4#28);

        $u-1 = virtualinvoke $u-1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($u-1);

     label4:
        $u1 = <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator>;

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($u1);

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);

        $u1#36 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener>;

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)>($u1#36);

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = startingY;

        virtualinvoke startingY.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()>();

        goto label7;

     label5:
        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        startingY#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke startingY#2.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $u7 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $u7 == 0 goto label6;

        $u4#28 = this.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        if $u4#28 == null goto label6;

        virtualinvoke $u4#28.<android.view.View: void setTranslationY(float)>(0.0F);

     label6:
        $u1#36 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener>;

        interfaceinvoke $u1#36.<androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);

     label7:
        startingY#44 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if startingY#44 == null goto label8;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(startingY#44);

     label8:
        return;
    }

    public void enableContentAnimations(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u1 := @parameter0: boolean;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = $u1;

        return;
    }

    public android.view.View getCustomView()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.view.View $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: android.view.View getCustomView()>();

        return $u-1;
    }

    public int getDisplayOptions()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>();

        return $u-1;
    }

    public float getElevation()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        float $u-1;
        androidx.appcompat.widget.ActionBarContainer $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: float getElevation(android.view.View)>($u0);

        return $u-1;
    }

    public int getHeight()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1;
        androidx.appcompat.widget.ActionBarContainer $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        return $u-1;
    }

    public int getHideOffset()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1;
        androidx.appcompat.widget.ActionBarOverlayLayout $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();

        return $u-1;
    }

    public int getNavigationItemCount()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.widget.DecorToolbar $u0;
        int $u-1;
        java.util.ArrayList $u0#7;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $u-1 == 1 goto label2;

        if $u-1 == 2 goto label1;

        return 0;

     label1:
        $u0#7 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1 = virtualinvoke $u0#7.<java.util.ArrayList: int size()>();

        return $u-1;

     label2:
        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getDropdownItemCount()>();

        return $u-1;
    }

    public int getNavigationMode()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        return $u-1;
    }

    public int getSelectedNavigationIndex()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.widget.DecorToolbar $u0;
        int $u-1;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $u0#7;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $u-1 == 1 goto label2;

        if $u-1 == 2 goto label1;

        return -1;

     label1:
        $u0#7 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $u0#7 == null goto label3;

        $u-1 = virtualinvoke $u0#7.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()>();

        return $u-1;

     label2:
        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getDropdownSelectedPosition()>();

        return $u-1;

     label3:
        return -1;
    }

    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl ret0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        ret0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        return ret0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        java.lang.CharSequence $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getSubtitle()>();

        return $u-1;
    }

    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        java.lang.Object $u-1;
        java.util.ArrayList $u0;
        androidx.appcompat.app.ActionBar$Tab $u0#3;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: java.lang.Object get(int)>($u2);

        $u0#3 = (androidx.appcompat.app.ActionBar$Tab) $u-1;

        return $u0#3;
    }

    public int getTabCount()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1;
        java.util.ArrayList $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1 = virtualinvoke $u0.<java.util.ArrayList: int size()>();

        return $u-1;
    }

    public android.content.Context getThemedContext()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.content.Context $u4;
        android.content.res.Resources$Theme $u-1;
        android.util.TypedValue outValue;
        int targetThemeRes;
        android.view.ContextThemeWrapper $u3;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        if $u4 != null goto label2;

        outValue = new android.util.TypedValue;

        specialinvoke outValue.<android.util.TypedValue: void <init>()>();

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $u-1 = virtualinvoke $u4.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        targetThemeRes = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(targetThemeRes, outValue, 1);

        targetThemeRes = outValue.<android.util.TypedValue: int resourceId>;

        if targetThemeRes == 0 goto label1;

        $u3 = new android.view.ContextThemeWrapper;

        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke $u3.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($u4, targetThemeRes);

        this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext> = $u3;

        goto label2;

     label1:
        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext> = $u4;

     label2:
        $u4 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        return $u4;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        java.lang.CharSequence $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()>();

        return $u-1;
    }

    public boolean hasIcon()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean hasIcon()>();

        return $u-1;
    }

    public boolean hasLogo()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean hasLogo()>();

        return $u-1;
    }

    public void hide()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp>;

        if $u0 != 0 goto label1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp> = 1;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void hideForSystem()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $u0 != 0 goto label1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem> = 1;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u-1;
        androidx.appcompat.widget.ActionBarOverlayLayout $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()>();

        return $u-1;
    }

    public boolean isShowing()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u-1, $u-1#3;
        boolean $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: int getHeight()>();

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing>;

        if $u1 == 0 goto label2;

        if $u-1 == 0 goto label1;

        $u-1#3 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: int getHideOffset()>();

        if $u-1#3 >= $u-1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $u0 == null goto label1;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean isTitleTruncated()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public androidx.appcompat.app.ActionBar$Tab newTab()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = new androidx.appcompat.app.WindowDecorActionBar$TabImpl;

        specialinvoke $u0.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void <init>(androidx.appcompat.app.WindowDecorActionBar)>(this);

        return $u0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.content.res.Configuration $u2;
        android.content.Context $u0;
        androidx.appcompat.view.ActionBarPolicy $u-1;
        boolean $u-1#4;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.content.res.Configuration;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $u-1 = staticinvoke <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>($u0);

        $u-1#4 = virtualinvoke $u-1.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($u-1#4);

        return;
    }

    public void onContentScrollStarted()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = null;

     label1:
        return;
    }

    public void onContentScrollStopped()
    {
        androidx.appcompat.app.WindowDecorActionBar this;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        return;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u6, $u-1#5;
        android.view.KeyEvent $u7;
        androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl menu;
        android.view.Menu $u-1;
        android.view.KeyCharacterMap $u-1#7;
        boolean $u4;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u6 := @parameter0: int;

        $u7 := @parameter1: android.view.KeyEvent;

        menu = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode>;

        if menu != null goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke menu.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()>();

        if $u-1 == null goto label6;

        if $u7 == null goto label2;

        $u-1#5 = virtualinvoke $u7.<android.view.KeyEvent: int getDeviceId()>();

        goto label3;

     label2:
        $u-1#5 = -1;

     label3:
        $u-1#7 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>($u-1#5);

        $u-1#5 = virtualinvoke $u-1#7.<android.view.KeyCharacterMap: int getKeyboardType()>();

        $u4 = 1;

        if $u-1#5 == 1 goto label4;

        goto label5;

     label4:
        $u4 = 0;

     label5:
        interfaceinvoke $u-1.<android.view.Menu: void setQwertyMode(boolean)>($u4);

        $u4 = interfaceinvoke $u-1.<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>($u6, $u7, 0);

        return $u4;

     label6:
        return 0;
    }

    public void onWindowVisibilityChanged(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = $u1;

        return;
    }

    public void removeAllTabs()
    {
        androidx.appcompat.app.WindowDecorActionBar this;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void cleanupTabs()>();

        return;
    }

    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $u2;
        java.util.ArrayList $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$OnMenuVisibilityListener;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $u0.<java.util.ArrayList: boolean remove(java.lang.Object)>($u2);

        return;
    }

    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u2;
        int $u-1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u-1 = virtualinvoke $u2.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void removeTabAt(int)>($u-1);

        return;
    }

    public void removeTabAt(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u7, $u-1, $u-1#12, i;
        androidx.appcompat.widget.ScrollingTabContainerView selectedTabPosition;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl selectedTabPosition#2;
        java.util.ArrayList removedTab;
        java.lang.Object $u-1#7;
        boolean $u-1#20;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u7 := @parameter0: int;

        selectedTabPosition = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if selectedTabPosition != null goto label1;

        return;

     label1:
        selectedTabPosition#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if selectedTabPosition#2 == null goto label2;

        $u-1 = virtualinvoke selectedTabPosition#2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()>();

        goto label3;

     label2:
        $u-1 = this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition>;

     label3:
        selectedTabPosition = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke selectedTabPosition.<androidx.appcompat.widget.ScrollingTabContainerView: void removeTabAt(int)>($u7);

        removedTab = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#7 = virtualinvoke removedTab.<java.util.ArrayList: java.lang.Object remove(int)>($u7);

        selectedTabPosition#2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $u-1#7;

        if selectedTabPosition#2 == null goto label4;

        virtualinvoke selectedTabPosition#2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(-1);

     label4:
        removedTab = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#12 = virtualinvoke removedTab.<java.util.ArrayList: int size()>();

        i = $u7;

     label5:
        if i >= $u-1#12 goto label6;

        removedTab = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#7 = virtualinvoke removedTab.<java.util.ArrayList: java.lang.Object get(int)>(i);

        selectedTabPosition#2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $u-1#7;

        virtualinvoke selectedTabPosition#2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(i);

        i = i + 1;

        goto label5;

     label6:
        if $u-1 != $u7 goto label9;

        removedTab = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#20 = virtualinvoke removedTab.<java.util.ArrayList: boolean isEmpty()>();

        if $u-1#20 == 0 goto label7;

        selectedTabPosition#2 = null;

        goto label8;

     label7:
        removedTab = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u7 = $u7 + -1;

        $u7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u7);

        $u-1#7 = virtualinvoke removedTab.<java.util.ArrayList: java.lang.Object get(int)>($u7);

        selectedTabPosition#2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $u-1#7;

     label8:
        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>(selectedTabPosition#2);

     label9:
        return;
    }

    public boolean requestFocus()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.widget.DecorToolbar viewGroup;
        android.view.ViewGroup $u-1;
        boolean $u-1#4;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        viewGroup = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke viewGroup.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        if $u-1 == null goto label1;

        $u-1#4 = virtualinvoke $u-1.<android.view.ViewGroup: boolean hasFocus()>();

        if $u-1#4 != 0 goto label1;

        virtualinvoke $u-1.<android.view.ViewGroup: boolean requestFocus()>();

        return 1;

     label1:
        return 0;
    }

    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.app.ActionBar$Tab $u4;
        int $u-1, $u1;
        android.app.Activity trans;
        boolean trans#7;
        androidx.appcompat.widget.DecorToolbar trans#8;
        android.view.ViewGroup $u-1#9;
        androidx.fragment.app.FragmentActivity trans#14;
        androidx.fragment.app.FragmentManager $u-1#15;
        androidx.fragment.app.FragmentTransaction $u-1#17;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $u2;
        androidx.appcompat.app.ActionBar$TabListener $u-1#22;
        androidx.appcompat.widget.ScrollingTabContainerView $u1#25;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>();

        $u1 = -1;

        if $u-1 == 2 goto label2;

        if $u4 == null goto label1;

        $u1 = virtualinvoke $u4.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

     label1:
        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = $u1;

        return;

     label2:
        trans = this.<androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity>;

        trans#7 = trans instanceof androidx.fragment.app.FragmentActivity;

        if trans#7 == 0 goto label3;

        trans#8 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1#9 = interfaceinvoke trans#8.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        trans#7 = virtualinvoke $u-1#9.<android.view.ViewGroup: boolean isInEditMode()>();

        if trans#7 != 0 goto label3;

        trans = this.<androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity>;

        trans#14 = (androidx.fragment.app.FragmentActivity) trans;

        $u-1#15 = virtualinvoke trans#14.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        $u-1#17 = virtualinvoke $u-1#15.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()>();

        $u-1#17 = virtualinvoke $u-1#17.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()>();

        goto label4;

     label3:
        $u-1#17 = null;

     label4:
        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $u2 != $u4 goto label5;

        if $u2 == null goto label8;

        $u-1#22 = virtualinvoke $u2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $u-1#22.<androidx.appcompat.app.ActionBar$TabListener: void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)>($u2, $u-1#17);

        $u1#25 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        $u-1 = virtualinvoke $u4.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke $u1#25.<androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)>($u-1);

        goto label8;

     label5:
        $u1#25 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $u4 == null goto label6;

        $u1 = virtualinvoke $u4.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

     label6:
        virtualinvoke $u1#25.<androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)>($u1);

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $u2 == null goto label7;

        $u-1#22 = virtualinvoke $u2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $u-1#22.<androidx.appcompat.app.ActionBar$TabListener: void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)>($u2, $u-1#17);

     label7:
        $u2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $u4;

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab> = $u2;

        if $u2 == null goto label8;

        $u-1#22 = virtualinvoke $u2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $u-1#22.<androidx.appcompat.app.ActionBar$TabListener: void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)>($u2, $u-1#17);

     label8:
        if $u-1#17 == null goto label9;

        trans#7 = virtualinvoke $u-1#17.<androidx.fragment.app.FragmentTransaction: boolean isEmpty()>();

        if trans#7 != 0 goto label9;

        virtualinvoke $u-1#17.<androidx.fragment.app.FragmentTransaction: int commit()>();

     label9:
        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.ActionBarContainer $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setCustomView(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u4;
        android.content.Context $u-1;
        android.view.LayoutInflater $u-1#3;
        androidx.appcompat.widget.DecorToolbar $u1;
        android.view.ViewGroup $u-1#6;
        android.view.View $u-1#8;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()>();

        $u-1#3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($u-1);

        $u1 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1#6 = interfaceinvoke $u1.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        $u-1#8 = virtualinvoke $u-1#3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($u4, $u-1#6, 0);

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View)>($u-1#8);

        return;
    }

    public void setCustomView(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.view.View $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.view.View;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)>($u2);

        return;
    }

    public void setCustomView(android.view.View, androidx.appcompat.app.ActionBar$LayoutParams)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.view.View $u2;
        androidx.appcompat.app.ActionBar$LayoutParams $u3;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: androidx.appcompat.app.ActionBar$LayoutParams;

        virtualinvoke $u2.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($u3);

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)>($u2);

        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u2, $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet>;

        if $u0 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>($u2);

     label1:
        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u3;
        byte $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: boolean;

        if $u3 == 0 goto label1;

        $u1 = 4;

        goto label2;

     label1:
        $u1 = 0;

     label2:
        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($u1, 4);

        return;
    }

    public void setDisplayOptions(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2, $u0;
        androidx.appcompat.widget.DecorToolbar $u0#3;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = $u2 & 4;

        if $u0 == 0 goto label1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $u0#3 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0#3.<androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)>($u2);

        return;
    }

    public void setDisplayOptions(int, int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u5, $u6, $u-1, $u1;
        androidx.appcompat.widget.DecorToolbar current;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u5 := @parameter0: int;

        $u6 := @parameter1: int;

        current = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke current.<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>();

        $u1 = $u6 & 4;

        if $u1 == 0 goto label1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        current = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u5 = $u5 & $u6;

        $u6 = $u6 ^ -1;

        $u6 = $u6 & $u-1;

        $u5 = $u5 | $u6;

        interfaceinvoke current.<androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)>($u5);

        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u3;
        byte $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: boolean;

        if $u3 == 0 goto label1;

        $u1 = 16;

        goto label2;

     label1:
        $u1 = 0;

     label2:
        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($u1, 16);

        return;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u3;
        byte $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: boolean;

        if $u3 == 0 goto label1;

        $u1 = 2;

        goto label2;

     label1:
        $u1 = 0;

     label2:
        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($u1, 2);

        return;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u3;
        byte $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: boolean;

        if $u3 == 0 goto label1;

        $u1 = 8;

        goto label2;

     label1:
        $u1 = 0;

     label2:
        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($u1, 8);

        return;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u2;
        int tmp;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: boolean;

        tmp = (int) $u2;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(tmp, 1);

        return;
    }

    public void setElevation(float)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        float $u2;
        androidx.appcompat.widget.ActionBarContainer $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: float;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>($u0, $u2);

        return;
    }

    public void setHideOffset(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u3;
        boolean $u-1;
        androidx.appcompat.widget.ActionBarOverlayLayout $u0;
        java.lang.IllegalStateException $u0#3;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: int;

        if $u3 == 0 goto label2;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $u-1 == 0 goto label1;

        goto label2;

     label1:
        $u0#3 = new java.lang.IllegalStateException;

        specialinvoke $u0#3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to set a non-zero hide offset");

        throw $u0#3;

     label2:
        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>($u3);

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u3, $u-1;
        androidx.appcompat.widget.ActionBarOverlayLayout $u0;
        java.lang.IllegalStateException $u0#3;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: boolean;

        if $u3 == 0 goto label2;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $u-1 == 0 goto label1;

        goto label2;

     label1:
        $u0#3 = new java.lang.IllegalStateException;

        specialinvoke $u0#3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");

        throw $u0#3;

     label2:
        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll> = $u3;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>($u3);

        return;
    }

    public void setHomeActionContentDescription(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(int)>($u2);

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        java.lang.CharSequence $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>($u2);

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(int)>($u2);

        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>($u2);

        return;
    }

    public void setIcon(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setIcon(int)>($u2);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, androidx.appcompat.app.ActionBar$OnNavigationListener)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.widget.SpinnerAdapter $u3;
        androidx.appcompat.app.ActionBar$OnNavigationListener $u4;
        androidx.appcompat.widget.DecorToolbar $u0;
        androidx.appcompat.app.NavItemSelectedListener $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: android.widget.SpinnerAdapter;

        $u4 := @parameter1: androidx.appcompat.app.ActionBar$OnNavigationListener;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u1 = new androidx.appcompat.app.NavItemSelectedListener;

        specialinvoke $u1.<androidx.appcompat.app.NavItemSelectedListener: void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener)>($u4);

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)>($u3, $u1);

        return;
    }

    public void setLogo(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setLogo(int)>($u2);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setNavigationMode(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u7, $u-1, $u-1#5;
        androidx.appcompat.widget.DecorToolbar oldMode;
        androidx.appcompat.widget.ScrollingTabContainerView $u2;
        boolean $u2#10, $u5;
        androidx.appcompat.widget.ActionBarOverlayLayout $u2#11;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u7 := @parameter0: int;

        oldMode = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke oldMode.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $u-1 == 2 goto label1;

        goto label2;

     label1:
        $u-1#5 = virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: int getSelectedNavigationIndex()>();

        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = $u-1#5;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>(null);

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $u2.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label2:
        if $u-1 == $u7 goto label3;

        $u2#10 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $u2#10 != 0 goto label3;

        $u2#11 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $u2#11 == null goto label3;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($u2#11);

     label3:
        oldMode = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke oldMode.<androidx.appcompat.widget.DecorToolbar: void setNavigationMode(int)>($u7);

        $u2#10 = 0;

        if $u7 == 2 goto label4;

        goto label5;

     label4:
        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()>();

        $u2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $u2.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $u-1 = this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition>;

        if $u-1 == -1 goto label5;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setSelectedNavigationItem(int)>($u-1);

        this.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

     label5:
        oldMode = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $u7 != 2 goto label6;

        $u5 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $u5 != 0 goto label6;

        $u5 = 1;

        goto label7;

     label6:
        $u5 = 0;

     label7:
        interfaceinvoke oldMode.<androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)>($u5);

        $u2#11 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $u7 != 2 goto label8;

        $u5 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $u5 != 0 goto label8;

        $u2#10 = 1;

     label8:
        virtualinvoke $u2#11.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($u2#10);

        return;
    }

    public void setSelectedNavigationItem(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u3, $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;
        java.util.ArrayList $u0#6;
        java.lang.Object $u-1#7;
        androidx.appcompat.app.ActionBar$Tab $u0#9;
        java.lang.IllegalStateException $u0#10;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u3 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $u-1 == 1 goto label2;

        if $u-1 != 2 goto label1;

        $u0#6 = this.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $u-1#7 = virtualinvoke $u0#6.<java.util.ArrayList: java.lang.Object get(int)>($u3);

        $u0#9 = (androidx.appcompat.app.ActionBar$Tab) $u-1#7;

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($u0#9);

        return;

     label1:
        $u0#10 = new java.lang.IllegalStateException;

        specialinvoke $u0#10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $u0#10;

     label2:
        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setDropdownSelectedPosition(int)>($u3);

        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u2;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: boolean;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled> = $u2;

        if $u2 != 0 goto label1;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.graphics.drawable.Drawable $u1;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.ActionBarContainer $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setSubtitle(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        java.lang.String $u-1;
        android.content.Context $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $u-1 = virtualinvoke $u0.<android.content.Context: java.lang.String getString(int)>($u2);

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)>($u-1);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        java.lang.CharSequence $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>($u2);

        return;
    }

    public void setTitle(int)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        int $u2;
        java.lang.String $u-1;
        android.content.Context $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $u-1 = virtualinvoke $u0.<android.content.Context: java.lang.String getString(int)>($u2);

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)>($u-1);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        java.lang.CharSequence $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>($u2);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        java.lang.CharSequence $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($u2);

        return;
    }

    public void show()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp>;

        if $u0 == 0 goto label1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp> = 0;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void showForSystem()
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        boolean $u0;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u0 = this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $u0 == 0 goto label1;

        this.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem> = 0;

        specialinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.WindowDecorActionBar this;
        androidx.appcompat.view.ActionMode$Callback $u4;
        androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mode;
        androidx.appcompat.widget.ActionBarOverlayLayout mode#2;
        androidx.appcompat.widget.ActionBarContextView mode#4;
        android.content.Context $u-1;
        boolean $u-1#9;

        this := @this: androidx.appcompat.app.WindowDecorActionBar;

        $u4 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        mode = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode>;

        if mode == null goto label1;

        virtualinvoke mode.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()>();

     label1:
        mode#2 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke mode#2.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(0);

        mode#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke mode#4.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

        mode = new androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl;

        mode#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        $u-1 = virtualinvoke mode#4.<androidx.appcompat.widget.ActionBarContextView: android.content.Context getContext()>();

        specialinvoke mode.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)>(this, $u-1, $u4);

        $u-1#9 = virtualinvoke mode.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()>();

        if $u-1#9 == 0 goto label2;

        this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode> = mode;

        virtualinvoke mode.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()>();

        mode#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke mode#4.<androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)>(mode);

        virtualinvoke this.<androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)>(1);

        mode#4 = this.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke mode#4.<androidx.appcompat.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        return mode;

     label2:
        return null;
    }
}
