class androidx.appcompat.app.AppCompatDelegateImpl extends androidx.appcompat.app.AppCompatDelegate implements androidx.appcompat.view.menu.MenuBuilder$Callback, android.view.LayoutInflater$Factory2
{
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX;
    private static final boolean IS_PRE_LOLLIPOP;
    private static final boolean sCanApplyOverrideConfiguration;
    private static final boolean sCanReturnDifferentContext;
    private static boolean sInstalledExceptionHandler;
    private static final androidx.collection.SimpleArrayMap sLocalNightModes;
    private static final int[] sWindowBackgroundStyleable;
    androidx.appcompat.app.ActionBar mActionBar;
    private androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback;
    androidx.appcompat.view.ActionMode mActionMode;
    android.widget.PopupWindow mActionModePopup;
    androidx.appcompat.widget.ActionBarContextView mActionModeView;
    private boolean mActivityHandlesUiMode;
    private boolean mActivityHandlesUiModeChecked;
    final androidx.appcompat.app.AppCompatCallback mAppCompatCallback;
    private androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater;
    private androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback;
    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager;
    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager;
    private boolean mBaseContextAttached;
    private boolean mClosingActionMenu;
    final android.content.Context mContext;
    private boolean mCreated;
    private androidx.appcompat.widget.DecorContentParent mDecorContentParent;
    private boolean mEnableDefaultActionBarUp;
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim;
    private boolean mFeatureIndeterminateProgress;
    private boolean mFeatureProgress;
    private boolean mHandleNativeActionModes;
    boolean mHasActionBar;
    final java.lang.Object mHost;
    int mInvalidatePanelMenuFeatures;
    boolean mInvalidatePanelMenuPosted;
    private final java.lang.Runnable mInvalidatePanelMenuRunnable;
    boolean mIsDestroyed;
    boolean mIsFloating;
    private int mLocalNightMode;
    private boolean mLongPressBackDown;
    android.view.MenuInflater mMenuInflater;
    boolean mOverlayActionBar;
    boolean mOverlayActionMode;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel;
    java.lang.Runnable mShowActionModePopup;
    private boolean mStarted;
    private android.view.View mStatusGuard;
    android.view.ViewGroup mSubDecor;
    private boolean mSubDecorInstalled;
    private android.graphics.Rect mTempRect1;
    private android.graphics.Rect mTempRect2;
    private int mThemeResId;
    private java.lang.CharSequence mTitle;
    private android.widget.TextView mTitleView;
    android.view.Window mWindow;
    boolean mWindowNoTitle;

    static void <clinit>()
    {
        androidx.collection.SimpleArrayMap defHandler;
        int defHandler#2;
        boolean $u1, defHandler#5;
        int[] defHandler#6;
        java.lang.String defHandler#8, $u3;
        java.lang.Thread$UncaughtExceptionHandler $u-1;
        androidx.appcompat.app.AppCompatDelegateImpl$1 $u1#19;

        <androidx.appcompat.app.AppCompatDelegateImpl: java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX> = ". If the resource you are trying to use is a vector resource, you may be referencing it in an unsupported way. See AppCompatDelegate.setCompatVectorFromResourcesEnabled() for more info.";

        defHandler = new androidx.collection.SimpleArrayMap;

        specialinvoke defHandler.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> = defHandler;

        defHandler#2 = <android.os.Build$VERSION: int SDK_INT>;

        $u1 = 0;

        if defHandler#2 >= 21 goto label1;

        defHandler#5 = 1;

        goto label2;

     label1:
        defHandler#5 = 0;

     label2:
        <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP> = defHandler#5;

        defHandler#6 = newarray (int)[1];

        defHandler#6[0] = 16842836;

        <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable> = defHandler#6;

        defHandler#8 = <android.os.Build: java.lang.String FINGERPRINT>;

        $u3 = "robolectric";

        defHandler#5 = virtualinvoke $u3.<java.lang.String: boolean equals(java.lang.Object)>(defHandler#8);

        defHandler#5 = defHandler#5 ^ 1;

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext> = defHandler#5;

        defHandler#2 = <android.os.Build$VERSION: int SDK_INT>;

        if defHandler#2 < 17 goto label3;

        $u1 = 1;

     label3:
        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration> = $u1;

        $u1 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        if $u1 == 0 goto label4;

        $u1 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler>;

        if $u1 != 0 goto label4;

        $u-1 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        $u1#19 = new androidx.appcompat.app.AppCompatDelegateImpl$1;

        specialinvoke $u1#19.<androidx.appcompat.app.AppCompatDelegateImpl$1: void <init>(java.lang.Thread$UncaughtExceptionHandler)>($u-1);

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($u1#19);

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler> = 1;

     label4:
        return;
    }

    void <init>(android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.app.Activity $u2;
        androidx.appcompat.app.AppCompatCallback $u3;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: android.app.Activity;

        $u3 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($u2, null, $u3, $u2);

        return;
    }

    void <init>(android.app.Dialog, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.app.Dialog $u3;
        androidx.appcompat.app.AppCompatCallback $u4;
        android.content.Context $u-1;
        android.view.Window $u-1#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: android.app.Dialog;

        $u4 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        $u-1 = virtualinvoke $u3.<android.app.Dialog: android.content.Context getContext()>();

        $u-1#2 = virtualinvoke $u3.<android.app.Dialog: android.view.Window getWindow()>();

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($u-1, $u-1#2, $u4, $u3);

        return;
    }

    void <init>(android.content.Context, android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u2;
        android.app.Activity $u3;
        androidx.appcompat.app.AppCompatCallback $u4;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.app.Activity;

        $u4 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($u2, null, $u4, $u3);

        return;
    }

    void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u1;
        android.view.Window $u2;
        androidx.appcompat.app.AppCompatCallback $u3;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u1 := @parameter0: android.content.Context;

        $u2 := @parameter1: android.view.Window;

        $u3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($u1, $u2, $u3, $u1);

        return;
    }

    private void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback, java.lang.Object)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u4;
        android.view.Window $u5;
        androidx.appcompat.app.AppCompatCallback $u6;
        java.lang.Object $u7;
        androidx.appcompat.app.AppCompatDelegateImpl$2 activity;
        int activity#5;
        boolean activity#6;
        androidx.appcompat.app.AppCompatActivity $u-1;
        androidx.appcompat.app.AppCompatDelegate $u-1#9;
        androidx.collection.SimpleArrayMap value;
        java.lang.Class $u-1#16;
        java.lang.String $u-1#18;
        java.lang.Integer value#22;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.view.Window;

        $u6 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        $u7 := @parameter3: java.lang.Object;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegate: void <init>()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = null;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes> = 1;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = -100;

        activity = new androidx.appcompat.app.AppCompatDelegateImpl$2;

        specialinvoke activity.<androidx.appcompat.app.AppCompatDelegateImpl$2: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable> = activity;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext> = $u4;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback> = $u6;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost> = $u7;

        activity#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if activity#5 != -100 goto label1;

        activity#6 = $u7 instanceof android.app.Dialog;

        if activity#6 == 0 goto label1;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()>();

        if $u-1 == null goto label1;

        $u-1#9 = virtualinvoke $u-1.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>();

        activity#5 = virtualinvoke $u-1#9.<androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = activity#5;

     label1:
        activity#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if activity#5 != -100 goto label2;

        value = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u-1#16 = virtualinvoke $u7.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#18 = virtualinvoke $u-1#16.<java.lang.Class: java.lang.String getName()>();

        $u7 = virtualinvoke value.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($u-1#18);

        value#22 = (java.lang.Integer) $u7;

        if value#22 == null goto label2;

        activity#5 = virtualinvoke value#22.<java.lang.Integer: int intValue()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = activity#5;

        value = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u-1#16 = virtualinvoke $u7.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#18 = virtualinvoke $u-1#16.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke value.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($u-1#18);

     label2:
        if $u5 == null goto label3;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>($u5);

     label3:
        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>();

        return;
    }

    private boolean applyDayNight(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u5, nightMode;
        int $u-1, $u-1#6;
        android.content.Context modeToApply;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $u-1#10;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: boolean;

        nightMode = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if nightMode == 0 goto label1;

        return 0;

     label1:
        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>();

        modeToApply = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#6 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>(modeToApply, $u-1);

        $u5 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)>($u-1#6, $u5);

        if $u-1 != 0 goto label2;

        modeToApply = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#10 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>(modeToApply);

        virtualinvoke $u-1#10.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>();

        goto label3;

     label2:
        $u-1#10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $u-1#10 == null goto label3;

        virtualinvoke $u-1#10.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label3:
        if $u-1 != 3 goto label4;

        modeToApply = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#10 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>(modeToApply);

        virtualinvoke $u-1#10.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>();

        return $u5;

     label4:
        $u-1#10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $u-1#10 == null goto label5;

        virtualinvoke $u-1#10.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label5:
        return $u5;
    }

    private void applyFixedSizeWindow()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.ViewGroup cfl;
        android.view.View $u-1;
        androidx.appcompat.widget.ContentFrameLayout cfl#5;
        android.view.Window windowDecor;
        int $u-1#9, $u-1#11, $u-1#13, $u-1#15;
        android.content.Context a;
        int[] $u3;
        android.content.res.TypedArray $u-1#18;
        android.util.TypedValue $u-1#21;
        boolean $u-1#27;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        cfl = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $u-1 = virtualinvoke cfl.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        cfl#5 = (androidx.appcompat.widget.ContentFrameLayout) $u-1;

        windowDecor = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke windowDecor.<android.view.Window: android.view.View getDecorView()>();

        $u-1#9 = virtualinvoke $u-1.<android.view.View: int getPaddingLeft()>();

        $u-1#11 = virtualinvoke $u-1.<android.view.View: int getPaddingTop()>();

        $u-1#13 = virtualinvoke $u-1.<android.view.View: int getPaddingRight()>();

        $u-1#15 = virtualinvoke $u-1.<android.view.View: int getPaddingBottom()>();

        virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)>($u-1#9, $u-1#11, $u-1#13, $u-1#15);

        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u3 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        $u-1#18 = virtualinvoke a.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($u3);

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor>;

        $u-1#21 = virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()>();

        virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u-1#9, $u-1#21);

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor>;

        $u-1#21 = virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()>();

        virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u-1#9, $u-1#21);

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor>;

        $u-1#27 = virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#9);

        if $u-1#27 == 0 goto label1;

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor>;

        $u-1#21 = virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()>();

        virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u-1#9, $u-1#21);

     label1:
        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor>;

        $u-1#27 = virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#9);

        if $u-1#27 == 0 goto label2;

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor>;

        $u-1#21 = virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()>();

        virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u-1#9, $u-1#21);

     label2:
        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor>;

        $u-1#27 = virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#9);

        if $u-1#27 == 0 goto label3;

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor>;

        $u-1#21 = virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()>();

        virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u-1#9, $u-1#21);

     label3:
        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor>;

        $u-1#27 = virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean hasValue(int)>($u-1#9);

        if $u-1#27 == 0 goto label4;

        $u-1#9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor>;

        $u-1#21 = virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()>();

        virtualinvoke $u-1#18.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u-1#9, $u-1#21);

     label4:
        virtualinvoke $u-1#18.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke cfl#5.<androidx.appcompat.widget.ContentFrameLayout: void requestLayout()>();

        return;
    }

    private void attachToWindow(android.view.Window)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.Window $u5, callback;
        int[] $u3;
        android.view.Window$Callback $u-1;
        boolean winBg;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback a;
        android.content.Context a#7;
        androidx.appcompat.widget.TintTypedArray $u-1#9;
        android.graphics.drawable.Drawable $u-1#12;
        java.lang.IllegalStateException winBg#14;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: android.view.Window;

        callback = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if callback != null goto label3;

        $u-1 = virtualinvoke $u5.<android.view.Window: android.view.Window$Callback getCallback()>();

        winBg = $u-1 instanceof androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        if winBg != 0 goto label2;

        a = new androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        specialinvoke a.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)>(this, $u-1);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback> = a;

        virtualinvoke $u5.<android.view.Window: void setCallback(android.view.Window$Callback)>(a);

        a#7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u3 = <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable>;

        $u-1#9 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>(a#7, null, $u3);

        $u-1#12 = virtualinvoke $u-1#9.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)>(0);

        if $u-1#12 == null goto label1;

        virtualinvoke $u5.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($u-1#12);

     label1:
        virtualinvoke $u-1#9.<androidx.appcompat.widget.TintTypedArray: void recycle()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow> = $u5;

        return;

     label2:
        winBg#14 = new java.lang.IllegalStateException;

        specialinvoke winBg#14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");

        throw winBg#14;

     label3:
        winBg#14 = new java.lang.IllegalStateException;

        specialinvoke winBg#14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");

        throw winBg#14;
    }

    private int calculateNightMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $u-1 == -100 goto label1;

        return $u-1;

     label1:
        $u-1 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()>();

        return $u-1;
    }

    private void cleanupAutoManagers()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label1:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $u0 == null goto label2;

        virtualinvoke $u0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label2:
        return;
    }

    private android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context, int, android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u4;
        int $u5, $u2;
        android.content.res.Configuration $u6, $u-1#7;
        android.content.res.Resources $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: int;

        $u6 := @parameter2: android.content.res.Configuration;

        if $u5 == 1 goto label2;

        if $u5 == 2 goto label1;

        $u4 = virtualinvoke $u4.<android.content.Context: android.content.Context getApplicationContext()>();

        $u-1 = virtualinvoke $u4.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#7 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $u5 = $u-1#7.<android.content.res.Configuration: int uiMode>;

        $u5 = $u5 & 48;

        goto label3;

     label1:
        $u5 = 32;

        goto label3;

     label2:
        $u5 = 16;

     label3:
        $u-1#7 = new android.content.res.Configuration;

        specialinvoke $u-1#7.<android.content.res.Configuration: void <init>()>();

        $u-1#7.<android.content.res.Configuration: float fontScale> = 0.0F;

        if $u6 == null goto label4;

        virtualinvoke $u-1#7.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($u6);

     label4:
        $u2 = $u-1#7.<android.content.res.Configuration: int uiMode>;

        $u2 = $u2 & -49;

        $u5 = $u2 | $u5;

        $u-1#7.<android.content.res.Configuration: int uiMode> = $u5;

        return $u-1#7;
    }

    private android.view.ViewGroup createSubDecor()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context a, child;
        int[] inflater;
        android.content.res.TypedArray $u-1;
        int inflater#5;
        boolean $u-1#6;
        android.view.Window inflater#28;
        android.view.LayoutInflater $u-1#30;
        android.view.ViewGroup subDecor, windowContentView#98;
        android.view.View $u-1#36;
        android.content.res.Resources$Theme $u-1#42;
        androidx.appcompat.widget.DecorContentParent child#58;
        android.view.Window$Callback $u-1#59;
        androidx.appcompat.widget.FitWindowsViewGroup themedContext#83;
        android.widget.TextView themedContext#89;
        androidx.appcompat.widget.ContentFrameLayout themedContext#93;
        android.widget.FrameLayout $u2;
        java.lang.String $u-1#122;
        android.util.TypedValue $u0;
        androidx.appcompat.view.ContextThemeWrapper $u1;
        androidx.appcompat.app.AppCompatDelegateImpl$3 $u2;
        androidx.appcompat.app.AppCompatDelegateImpl$4 $u3;
        androidx.appcompat.app.AppCompatDelegateImpl$5 $u4;
        java.lang.StringBuilder $u5;
        java.lang.IllegalArgumentException $u6;
        java.lang.IllegalStateException $u7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        inflater = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        $u-1 = virtualinvoke a.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>(inflater);

        inflater#5 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean hasValue(int)>(inflater#5);

        if $u-1#6 == 0 goto label21;

        inflater#5 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(inflater#5, 0);

        if $u-1#6 == 0 goto label01;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(1);

        goto label02;

     label01:
        inflater#5 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(inflater#5, 0);

        if $u-1#6 == 0 goto label02;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(108);

     label02:
        inflater#5 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(inflater#5, 0);

        if $u-1#6 == 0 goto label03;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(109);

     label03:
        inflater#5 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(inflater#5, 0);

        if $u-1#6 == 0 goto label04;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(10);

     label04:
        inflater#5 = <androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating>;

        $u-1#6 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(inflater#5, 0);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating> = $u-1#6;

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>();

        inflater#28 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        virtualinvoke inflater#28.<android.view.Window: android.view.View getDecorView()>();

        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#30 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(a);

        subDecor = null;

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        if $u-1#6 != 0 goto label11;

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        if $u-1#6 == 0 goto label05;

        inflater#5 = <androidx.appcompat.R$layout: int abc_dialog_title_material>;

        $u-1#36 = virtualinvoke $u-1#30.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(inflater#5, null);

        subDecor = (android.view.ViewGroup) $u-1#36;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar> = 0;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 0;

        goto label13;

     label05:
        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $u-1#6 == 0 goto label13;

        $u0 = new android.util.TypedValue;

        specialinvoke $u0.<android.util.TypedValue: void <init>()>();

        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#42 = virtualinvoke a.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        inflater#5 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $u-1#42.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(inflater#5, $u0, 1);

        inflater#5 = $u0.<android.util.TypedValue: int resourceId>;

        if inflater#5 == 0 goto label06;

        $u1 = new androidx.appcompat.view.ContextThemeWrapper;

        a = $u1;

        child = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        inflater#5 = $u0.<android.util.TypedValue: int resourceId>;

        specialinvoke $u1.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(child, inflater#5);

        goto label07;

     label06:
        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label07:
        $u-1#30 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(a);

        inflater#5 = <androidx.appcompat.R$layout: int abc_screen_toolbar>;

        $u-1#36 = virtualinvoke $u-1#30.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(inflater#5, null);

        subDecor = (android.view.ViewGroup) $u-1#36;

        inflater#5 = <androidx.appcompat.R$id: int decor_content_parent>;

        $u-1#36 = virtualinvoke subDecor.<android.view.ViewGroup: android.view.View findViewById(int)>(inflater#5);

        child#58 = (androidx.appcompat.widget.DecorContentParent) $u-1#36;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent> = child#58;

        $u-1#59 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        interfaceinvoke child#58.<androidx.appcompat.widget.DecorContentParent: void setWindowCallback(android.view.Window$Callback)>($u-1#59);

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        if $u-1#6 == 0 goto label08;

        child#58 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke child#58.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(109);

     label08:
        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>;

        if $u-1#6 == 0 goto label09;

        child#58 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke child#58.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(2);

     label09:
        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>;

        if $u-1#6 == 0 goto label10;

        child#58 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke child#58.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(5);

     label10:
        goto label13;

     label11:
        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        if $u-1#6 == 0 goto label12;

        inflater#5 = <androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode>;

        $u-1#36 = virtualinvoke $u-1#30.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(inflater#5, null);

        subDecor = (android.view.ViewGroup) $u-1#36;

        goto label13;

     label12:
        inflater#5 = <androidx.appcompat.R$layout: int abc_screen_simple>;

        $u-1#36 = virtualinvoke $u-1#30.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(inflater#5, null);

        subDecor = (android.view.ViewGroup) $u-1#36;

     label13:
        if subDecor == null goto label20;

        inflater#5 = <android.os.Build$VERSION: int SDK_INT>;

        if inflater#5 < 21 goto label14;

        $u2 = new androidx.appcompat.app.AppCompatDelegateImpl$3;

        specialinvoke $u2.<androidx.appcompat.app.AppCompatDelegateImpl$3: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(subDecor, $u2);

        goto label15;

     label14:
        $u-1#6 = subDecor instanceof androidx.appcompat.widget.FitWindowsViewGroup;

        if $u-1#6 == 0 goto label15;

        themedContext#83 = (androidx.appcompat.widget.FitWindowsViewGroup) subDecor;

        $u3 = new androidx.appcompat.app.AppCompatDelegateImpl$4;

        specialinvoke $u3.<androidx.appcompat.app.AppCompatDelegateImpl$4: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        interfaceinvoke themedContext#83.<androidx.appcompat.widget.FitWindowsViewGroup: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)>($u3);

     label15:
        child#58 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if child#58 != null goto label16;

        inflater#5 = <androidx.appcompat.R$id: int title>;

        $u-1#36 = virtualinvoke subDecor.<android.view.ViewGroup: android.view.View findViewById(int)>(inflater#5);

        themedContext#89 = (android.widget.TextView) $u-1#36;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView> = themedContext#89;

     label16:
        staticinvoke <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)>(subDecor);

        inflater#5 = <androidx.appcompat.R$id: int action_bar_activity_content>;

        $u-1#36 = virtualinvoke subDecor.<android.view.ViewGroup: android.view.View findViewById(int)>(inflater#5);

        themedContext#93 = (androidx.appcompat.widget.ContentFrameLayout) $u-1#36;

        inflater#28 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1#36 = virtualinvoke inflater#28.<android.view.Window: android.view.View findViewById(int)>(16908290);

        windowContentView#98 = (android.view.ViewGroup) $u-1#36;

        if windowContentView#98 == null goto label19;

     label17:
        inflater#5 = virtualinvoke windowContentView#98.<android.view.ViewGroup: int getChildCount()>();

        if inflater#5 <= 0 goto label18;

        $u-1#36 = virtualinvoke windowContentView#98.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        virtualinvoke windowContentView#98.<android.view.ViewGroup: void removeViewAt(int)>(0);

        virtualinvoke themedContext#93.<androidx.appcompat.widget.ContentFrameLayout: void addView(android.view.View)>($u-1#36);

        goto label17;

     label18:
        virtualinvoke windowContentView#98.<android.view.ViewGroup: void setId(int)>(-1);

        virtualinvoke themedContext#93.<androidx.appcompat.widget.ContentFrameLayout: void setId(int)>(16908290);

        $u-1#6 = windowContentView#98 instanceof android.widget.FrameLayout;

        if $u-1#6 == 0 goto label19;

        $u2 = (android.widget.FrameLayout) windowContentView#98;

        virtualinvoke $u2.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>(null);

     label19:
        inflater#28 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        virtualinvoke inflater#28.<android.view.Window: void setContentView(android.view.View)>(subDecor);

        $u4 = new androidx.appcompat.app.AppCompatDelegateImpl$5;

        specialinvoke $u4.<androidx.appcompat.app.AppCompatDelegateImpl$5: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        virtualinvoke themedContext#93.<androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)>($u4);

        return subDecor;

     label20:
        $u6 = new java.lang.IllegalArgumentException;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppCompat does not support the current theme features: { windowActionBar: ");

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($u-1#6);

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionBarOverlay: ");

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($u-1#6);

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", android:windowIsFloating: ");

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($u-1#6);

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionModeOverlay: ");

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($u-1#6);

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowNoTitle: ");

        $u-1#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($u-1#6);

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $u-1#122 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($u-1#122);

        throw $u6;

     label21:
        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        $u7 = new java.lang.IllegalStateException;

        specialinvoke $u7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");

        goto label22;

     label22:
        throw $u7;
    }

    private void ensureSubDecor()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean title;
        android.view.ViewGroup $u-1;
        java.lang.CharSequence $u-1#4;
        androidx.appcompat.widget.DecorContentParent st;
        androidx.appcompat.app.ActionBar $u-1#9;
        android.widget.TextView st#13;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1#17;
        androidx.appcompat.view.menu.MenuBuilder $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        title = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if title != 0 goto label5;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor> = $u-1;

        $u-1#4 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>();

        title = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u-1#4);

        if title != 0 goto label3;

        st = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if st == null goto label1;

        interfaceinvoke st.<androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>($u-1#4);

        goto label3;

     label1:
        $u-1#9 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $u-1#9 == null goto label2;

        $u-1#9 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        virtualinvoke $u-1#9.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>($u-1#4);

        goto label3;

     label2:
        st#13 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        if st#13 == null goto label3;

        virtualinvoke st#13.<android.widget.TextView: void setText(java.lang.CharSequence)>($u-1#4);

     label3:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()>();

        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)>($u-1);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled> = 1;

        $u-1#17 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        title = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if title != 0 goto label5;

        if $u-1#17 == null goto label4;

        $u2 = $u-1#17.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $u2 != null goto label5;

     label4:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(108);

     label5:
        return;
    }

    private void ensureWindow()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.Window $u-1;
        java.lang.Object $u0;
        boolean $u1;
        android.app.Activity $u0#4;
        java.lang.IllegalStateException $u0#7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $u-1 != null goto label1;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u1 = $u0 instanceof android.app.Activity;

        if $u1 == 0 goto label1;

        $u0#4 = (android.app.Activity) $u0;

        $u-1 = virtualinvoke $u0#4.<android.app.Activity: android.view.Window getWindow()>();

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>($u-1);

     label1:
        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $u-1 == null goto label2;

        return;

     label2:
        $u0#7 = new java.lang.IllegalStateException;

        specialinvoke $u0#7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We have not been given a Window");

        throw $u0#7;
    }

    private static android.content.res.Configuration generateConfigDelta(android.content.res.Configuration, android.content.res.Configuration)
    {
        android.content.res.Configuration $u3, $u4, delta;
        int $u-1, $u2#9;
        float $u1, $u2;
        byte $u1#6;
        java.util.Locale $u1#16, $u2#17;
        boolean $u-1#18;

        $u3 := @parameter0: android.content.res.Configuration;

        $u4 := @parameter1: android.content.res.Configuration;

        delta = new android.content.res.Configuration;

        specialinvoke delta.<android.content.res.Configuration: void <init>()>();

        delta.<android.content.res.Configuration: float fontScale> = 0.0F;

        if $u4 == null goto label23;

        $u-1 = virtualinvoke $u3.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($u4);

        if $u-1 != 0 goto label01;

        return delta;

     label01:
        $u1 = $u3.<android.content.res.Configuration: float fontScale>;

        $u2 = $u4.<android.content.res.Configuration: float fontScale>;

        $u1#6 = $u1 cmpl $u2;

        if $u1#6 == 0 goto label02;

        $u1 = $u4.<android.content.res.Configuration: float fontScale>;

        delta.<android.content.res.Configuration: float fontScale> = $u1;

     label02:
        $u-1 = $u3.<android.content.res.Configuration: int mcc>;

        $u2#9 = $u4.<android.content.res.Configuration: int mcc>;

        if $u-1 == $u2#9 goto label03;

        $u-1 = $u4.<android.content.res.Configuration: int mcc>;

        delta.<android.content.res.Configuration: int mcc> = $u-1;

     label03:
        $u-1 = $u3.<android.content.res.Configuration: int mnc>;

        $u2#9 = $u4.<android.content.res.Configuration: int mnc>;

        if $u-1 == $u2#9 goto label04;

        $u-1 = $u4.<android.content.res.Configuration: int mnc>;

        delta.<android.content.res.Configuration: int mnc> = $u-1;

     label04:
        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 24 goto label05;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi24: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>($u3, $u4, delta);

        goto label06;

     label05:
        $u1#16 = $u3.<android.content.res.Configuration: java.util.Locale locale>;

        $u2#17 = $u4.<android.content.res.Configuration: java.util.Locale locale>;

        $u-1#18 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($u1#16, $u2#17);

        if $u-1#18 != 0 goto label06;

        $u1#16 = $u4.<android.content.res.Configuration: java.util.Locale locale>;

        delta.<android.content.res.Configuration: java.util.Locale locale> = $u1#16;

     label06:
        $u-1 = $u3.<android.content.res.Configuration: int touchscreen>;

        $u2#9 = $u4.<android.content.res.Configuration: int touchscreen>;

        if $u-1 == $u2#9 goto label07;

        $u-1 = $u4.<android.content.res.Configuration: int touchscreen>;

        delta.<android.content.res.Configuration: int touchscreen> = $u-1;

     label07:
        $u-1 = $u3.<android.content.res.Configuration: int keyboard>;

        $u2#9 = $u4.<android.content.res.Configuration: int keyboard>;

        if $u-1 == $u2#9 goto label08;

        $u-1 = $u4.<android.content.res.Configuration: int keyboard>;

        delta.<android.content.res.Configuration: int keyboard> = $u-1;

     label08:
        $u-1 = $u3.<android.content.res.Configuration: int keyboardHidden>;

        $u2#9 = $u4.<android.content.res.Configuration: int keyboardHidden>;

        if $u-1 == $u2#9 goto label09;

        $u-1 = $u4.<android.content.res.Configuration: int keyboardHidden>;

        delta.<android.content.res.Configuration: int keyboardHidden> = $u-1;

     label09:
        $u-1 = $u3.<android.content.res.Configuration: int navigation>;

        $u2#9 = $u4.<android.content.res.Configuration: int navigation>;

        if $u-1 == $u2#9 goto label10;

        $u-1 = $u4.<android.content.res.Configuration: int navigation>;

        delta.<android.content.res.Configuration: int navigation> = $u-1;

     label10:
        $u-1 = $u3.<android.content.res.Configuration: int navigationHidden>;

        $u2#9 = $u4.<android.content.res.Configuration: int navigationHidden>;

        if $u-1 == $u2#9 goto label11;

        $u-1 = $u4.<android.content.res.Configuration: int navigationHidden>;

        delta.<android.content.res.Configuration: int navigationHidden> = $u-1;

     label11:
        $u-1 = $u3.<android.content.res.Configuration: int orientation>;

        $u2#9 = $u4.<android.content.res.Configuration: int orientation>;

        if $u-1 == $u2#9 goto label12;

        $u-1 = $u4.<android.content.res.Configuration: int orientation>;

        delta.<android.content.res.Configuration: int orientation> = $u-1;

     label12:
        $u-1 = $u3.<android.content.res.Configuration: int screenLayout>;

        $u-1 = $u-1 & 15;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 15;

        if $u-1 == $u2#9 goto label13;

        $u-1 = delta.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 15;

        $u-1 = $u-1 | $u2#9;

        delta.<android.content.res.Configuration: int screenLayout> = $u-1;

     label13:
        $u-1 = $u3.<android.content.res.Configuration: int screenLayout>;

        $u-1 = $u-1 & 192;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 192;

        if $u-1 == $u2#9 goto label14;

        $u-1 = delta.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 192;

        $u-1 = $u-1 | $u2#9;

        delta.<android.content.res.Configuration: int screenLayout> = $u-1;

     label14:
        $u-1 = $u3.<android.content.res.Configuration: int screenLayout>;

        $u-1 = $u-1 & 48;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 48;

        if $u-1 == $u2#9 goto label15;

        $u-1 = delta.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 48;

        $u-1 = $u-1 | $u2#9;

        delta.<android.content.res.Configuration: int screenLayout> = $u-1;

     label15:
        $u-1 = $u3.<android.content.res.Configuration: int screenLayout>;

        $u-1 = $u-1 & 768;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 768;

        if $u-1 == $u2#9 goto label16;

        $u-1 = delta.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u4.<android.content.res.Configuration: int screenLayout>;

        $u2#9 = $u2#9 & 768;

        $u-1 = $u-1 | $u2#9;

        delta.<android.content.res.Configuration: int screenLayout> = $u-1;

     label16:
        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 26 goto label17;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi26: void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>($u3, $u4, delta);

     label17:
        $u-1 = $u3.<android.content.res.Configuration: int uiMode>;

        $u-1 = $u-1 & 15;

        $u2#9 = $u4.<android.content.res.Configuration: int uiMode>;

        $u2#9 = $u2#9 & 15;

        if $u-1 == $u2#9 goto label18;

        $u-1 = delta.<android.content.res.Configuration: int uiMode>;

        $u2#9 = $u4.<android.content.res.Configuration: int uiMode>;

        $u2#9 = $u2#9 & 15;

        $u-1 = $u-1 | $u2#9;

        delta.<android.content.res.Configuration: int uiMode> = $u-1;

     label18:
        $u-1 = $u3.<android.content.res.Configuration: int uiMode>;

        $u-1 = $u-1 & 48;

        $u2#9 = $u4.<android.content.res.Configuration: int uiMode>;

        $u2#9 = $u2#9 & 48;

        if $u-1 == $u2#9 goto label19;

        $u-1 = delta.<android.content.res.Configuration: int uiMode>;

        $u2#9 = $u4.<android.content.res.Configuration: int uiMode>;

        $u2#9 = $u2#9 & 48;

        $u-1 = $u-1 | $u2#9;

        delta.<android.content.res.Configuration: int uiMode> = $u-1;

     label19:
        $u-1 = $u3.<android.content.res.Configuration: int screenWidthDp>;

        $u2#9 = $u4.<android.content.res.Configuration: int screenWidthDp>;

        if $u-1 == $u2#9 goto label20;

        $u-1 = $u4.<android.content.res.Configuration: int screenWidthDp>;

        delta.<android.content.res.Configuration: int screenWidthDp> = $u-1;

     label20:
        $u-1 = $u3.<android.content.res.Configuration: int screenHeightDp>;

        $u2#9 = $u4.<android.content.res.Configuration: int screenHeightDp>;

        if $u-1 == $u2#9 goto label21;

        $u-1 = $u4.<android.content.res.Configuration: int screenHeightDp>;

        delta.<android.content.res.Configuration: int screenHeightDp> = $u-1;

     label21:
        $u-1 = $u3.<android.content.res.Configuration: int smallestScreenWidthDp>;

        $u2#9 = $u4.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if $u-1 == $u2#9 goto label22;

        $u-1 = $u4.<android.content.res.Configuration: int smallestScreenWidthDp>;

        delta.<android.content.res.Configuration: int smallestScreenWidthDp> = $u-1;

     label22:
        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 17 goto label23;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi17: void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>($u3, $u4, delta);

     label23:
        return delta;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u2;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $u0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager $u0#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: android.content.Context;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $u0 != null goto label1;

        $u0#2 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        specialinvoke $u0#2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>(this, $u2);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager> = $u0#2;

     label1:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        return $u0;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u3;
        androidx.appcompat.app.TwilightManager $u-1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $u0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager $u0#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: android.content.Context;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $u0 != null goto label1;

        $u0#2 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $u-1 = staticinvoke <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)>($u3);

        specialinvoke $u0#2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)>(this, $u-1);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager> = $u0#2;

     label1:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        return $u0;
    }

    private void initWindowDecorActionBar()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u2;
        androidx.appcompat.app.ActionBar $u0;
        java.lang.Object $u0#3;
        androidx.appcompat.app.WindowDecorActionBar $u0#5;
        android.app.Activity $u1;
        android.app.Dialog $u1#11;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $u2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $u2 == 0 goto label4;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $u0 == null goto label1;

        return;

     label1:
        $u0#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u2 = $u0#3 instanceof android.app.Activity;

        if $u2 == 0 goto label2;

        $u0#5 = new androidx.appcompat.app.WindowDecorActionBar;

        $u0#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u1 = (android.app.Activity) $u0#3;

        $u2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        specialinvoke $u0#5.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)>($u1, $u2);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = $u0#5;

        goto label3;

     label2:
        $u2 = $u0#3 instanceof android.app.Dialog;

        if $u2 == 0 goto label3;

        $u0#5 = new androidx.appcompat.app.WindowDecorActionBar;

        $u0#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u1#11 = (android.app.Dialog) $u0#3;

        specialinvoke $u0#5.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)>($u1#11);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = $u0#5;

     label3:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $u0 == null goto label4;

        $u2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp>;

        virtualinvoke $u0.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>($u2);

     label4:
        return;
    }

    private boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u5;
        androidx.appcompat.view.menu.MenuView $u-1;
        android.view.View menuView;
        androidx.appcompat.view.menu.MenuBuilder menuView#4;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback menuView#5;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        menuView = $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if menuView == null goto label1;

        menuView = $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = menuView;

        return 1;

     label1:
        menuView#4 = $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if menuView#4 != null goto label2;

        return 0;

     label2:
        menuView#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>;

        if menuView#5 != null goto label3;

        menuView#5 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        specialinvoke menuView#5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback> = menuView#5;

     label3:
        menuView#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>;

        $u-1 = virtualinvoke $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)>(menuView#5);

        menuView = (android.view.View) $u-1;

        $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = menuView;

        menuView = $u5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        if menuView == null goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u3;
        android.content.Context $u1;
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $u1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        virtualinvoke $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)>($u1);

        $u0 = new androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        $u1 = $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext>;

        specialinvoke $u0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>(this, $u1);

        $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView> = $u0;

        $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity> = 81;

        return 1;
    }

    private boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u8;
        android.content.Context context;
        int outValue;
        androidx.appcompat.widget.DecorContentParent outValue#5;
        android.util.TypedValue outValue#6;
        android.content.res.Resources$Theme $u-1, widgetTheme, $u-1#14;
        android.content.res.Resources $u-1#12;
        androidx.appcompat.view.ContextThemeWrapper $u5;
        androidx.appcompat.view.menu.MenuBuilder outValue#26;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u8 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        context = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        outValue = $u8.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if outValue == 0 goto label1;

        outValue = $u8.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if outValue != 108 goto label6;

     label1:
        outValue#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if outValue#5 == null goto label6;

        outValue#6 = new android.util.TypedValue;

        specialinvoke outValue#6.<android.util.TypedValue: void <init>()>();

        $u-1 = virtualinvoke context.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        outValue = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(outValue, outValue#6, 1);

        widgetTheme = null;

        outValue = outValue#6.<android.util.TypedValue: int resourceId>;

        if outValue == 0 goto label2;

        $u-1#12 = virtualinvoke context.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#14 = virtualinvoke $u-1#12.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        widgetTheme = $u-1#14;

        virtualinvoke $u-1#14.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($u-1);

        outValue = outValue#6.<android.util.TypedValue: int resourceId>;

        virtualinvoke $u-1#14.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(outValue, 1);

        outValue = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $u-1#14.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(outValue, outValue#6, 1);

        goto label3;

     label2:
        outValue = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(outValue, outValue#6, 1);

     label3:
        outValue = outValue#6.<android.util.TypedValue: int resourceId>;

        if outValue == 0 goto label5;

        if widgetTheme != null goto label4;

        $u-1#12 = virtualinvoke context.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#14 = virtualinvoke $u-1#12.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        widgetTheme = $u-1#14;

        virtualinvoke $u-1#14.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($u-1);

     label4:
        outValue = outValue#6.<android.util.TypedValue: int resourceId>;

        virtualinvoke widgetTheme.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(outValue, 1);

     label5:
        if widgetTheme == null goto label6;

        $u5 = new androidx.appcompat.view.ContextThemeWrapper;

        specialinvoke $u5.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(context, 0);

        context = $u5;

        $u-1 = virtualinvoke $u5.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $u-1.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(widgetTheme);

     label6:
        outValue#26 = new androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke outValue#26.<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>(context);

        virtualinvoke outValue#26.<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>(this);

        virtualinvoke $u8.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(outValue#26);

        return 1;
    }

    private void invalidatePanelMenu(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u4, $u0;
        android.view.View $u-1;
        boolean $u0#4;
        android.view.Window $u0#5;
        java.lang.Runnable $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $u4 = 1 << $u4;

        $u4 = $u0 | $u4;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures> = $u4;

        $u0#4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $u0#4 != 0 goto label1;

        $u0#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke $u0#5.<android.view.Window: android.view.View getDecorView()>();

        $u2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($u-1, $u2);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted> = 1;

     label1:
        return;
    }

    private boolean isActivityManifestHandlingUiMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean pm;
        java.lang.Object pm#2;
        android.content.Context pm#4;
        android.content.pm.PackageManager $u-1;
        int flags, info;
        android.content.ComponentName info#12;
        java.lang.Class $u-1#15;
        android.content.pm.ActivityInfo $u-1#17;
        android.content.pm.PackageManager$NameNotFoundException flags#22;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        pm = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked>;

        if pm != 0 goto label9;

        pm#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        pm = pm#2 instanceof android.app.Activity;

        if pm == 0 goto label9;

        pm#4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = virtualinvoke pm#4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if $u-1 != null goto label1;

        return 0;

     label1:
        flags = 0;

        info = <android.os.Build$VERSION: int SDK_INT>;

        if info < 29 goto label2;

        flags = 269221888;

        goto label3;

     label2:
        info = <android.os.Build$VERSION: int SDK_INT>;

        if info < 24 goto label3;

        flags = 786432;

     label3:
        info#12 = new android.content.ComponentName;

        pm#4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        pm#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

     label4:
        $u-1#15 = virtualinvoke pm#2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke info#12.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(pm#4, $u-1#15);

        $u-1#17 = virtualinvoke $u-1.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(info#12, flags);

     label5:
        if $u-1#17 == null goto label6;

        flags = $u-1#17.<android.content.pm.ActivityInfo: int configChanges>;

        flags = flags & 512;

        if flags == 0 goto label6;

        pm = 1;

        goto label7;

     label6:
        pm = 0;

     label7:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode> = pm;

        goto label9;

     label8:
        flags#22 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", "Exception while getting ActivityInfo", flags#22);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode> = 0;

     label9:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked> = 1;

        pm = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode>;

        return pm;

        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
    }

    private boolean onKeyDownPanel(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u3, $u-1;
        android.view.KeyEvent $u4;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1#4;
        boolean $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: int;

        $u4 := @parameter1: android.view.KeyEvent;

        $u-1 = virtualinvoke $u4.<android.view.KeyEvent: int getRepeatCount()>();

        if $u-1 != 0 goto label1;

        $u-1#4 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($u3, 1);

        $u1 = $u-1#4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $u1 != 0 goto label1;

        $u1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u-1#4, $u4);

        return $u1;

     label1:
        return 0;
    }

    private boolean onKeyUpPanel(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u6;
        android.view.KeyEvent $u7;
        androidx.appcompat.view.ActionMode handled;
        boolean handled#3, $u-1#7, $u4#28;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1;
        androidx.appcompat.widget.DecorContentParent $u4;
        android.content.Context $u4#9;
        android.view.ViewConfiguration $u-1#10;
        java.lang.Object $u-1#34;
        android.media.AudioManager show;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u6 := @parameter0: int;

        $u7 := @parameter1: android.view.KeyEvent;

        handled = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if handled == null goto label1;

        return 0;

     label1:
        handled#3 = 0;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($u6, 1);

        if $u6 != 0 goto label3;

        $u4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $u4 == null goto label3;

        $u-1#7 = interfaceinvoke $u4.<androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()>();

        if $u-1#7 == 0 goto label3;

        $u4#9 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#10 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u4#9);

        $u-1#7 = virtualinvoke $u-1#10.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $u-1#7 != 0 goto label3;

        $u4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $u-1#7 = interfaceinvoke $u4.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $u-1#7 != 0 goto label2;

        $u-1#7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $u-1#7 != 0 goto label7;

        $u-1#7 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u-1, $u7);

        if $u-1#7 == 0 goto label7;

        $u4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        handled#3 = interfaceinvoke $u4.<androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()>();

        goto label7;

     label2:
        $u4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        handled#3 = interfaceinvoke $u4.<androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()>();

        goto label7;

     label3:
        $u-1#7 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $u-1#7 != 0 goto label6;

        $u-1#7 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled>;

        if $u-1#7 == 0 goto label4;

        goto label6;

     label4:
        $u-1#7 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $u-1#7 == 0 goto label7;

        $u-1#7 = 1;

        $u4#28 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $u4#28 == 0 goto label5;

        $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        $u-1#7 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u-1, $u7);

     label5:
        if $u-1#7 == 0 goto label7;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u-1, $u7);

        handled#3 = 1;

        goto label7;

     label6:
        handled#3 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u-1, 1);

     label7:
        if handled#3 == 0 goto label9;

        $u4#9 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u4#9 = virtualinvoke $u4#9.<android.content.Context: android.content.Context getApplicationContext()>();

        $u-1#34 = virtualinvoke $u4#9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        show = (android.media.AudioManager) $u-1#34;

        if show == null goto label8;

        virtualinvoke show.<android.media.AudioManager: void playSoundEffect(int)>(0);

        return handled#3;

     label8:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppCompatDelegate", "Couldn\'t get audio manager");

     label9:
        return handled#3;
    }

    private void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u20;
        android.view.KeyEvent $u21;
        int $u14, $u15;
        boolean config;
        android.content.Context config#5;
        android.content.res.Resources $u-1;
        android.content.res.Configuration $u-1#8;
        android.view.Window$Callback $u-1#14;
        androidx.appcompat.view.menu.MenuBuilder width;
        java.lang.Object $u-1#22;
        android.view.WindowManager isXLarge;
        byte width#27;
        android.view.ViewGroup lp1;
        android.view.View lp1#30;
        android.view.ViewGroup$LayoutParams $u-1#32, lp1#51;
        android.view.ViewParent $u-1#57;
        android.view.WindowManager$LayoutParams lp;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u20 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $u21 := @parameter1: android.view.KeyEvent;

        config = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if config != 0 goto label18;

        config = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if config == 0 goto label01;

        return;

     label01:
        $u14 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $u14 != 0 goto label04;

        config#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = virtualinvoke config#5.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#8 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $u14 = $u-1#8.<android.content.res.Configuration: int screenLayout>;

        $u14 = $u14 & 15;

        if $u14 != 4 goto label02;

        config = 1;

        goto label03;

     label02:
        config = 0;

     label03:
        if config == 0 goto label04;

        return;

     label04:
        $u-1#14 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $u-1#14 == null goto label05;

        $u14 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        width = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        config = interfaceinvoke $u-1#14.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>($u14, width);

        if config != 0 goto label05;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u20, 1);

        return;

     label05:
        config#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#22 = virtualinvoke config#5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        isXLarge = (android.view.WindowManager) $u-1#22;

        if isXLarge != null goto label06;

        return;

     label06:
        config = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u20, $u21);

        if config != 0 goto label07;

        return;

     label07:
        width#27 = -2;

        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if lp1 == null goto label10;

        config = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>;

        if config == 0 goto label08;

        goto label10;

     label08:
        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if lp1#30 == null goto label09;

        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $u-1#32 = virtualinvoke lp1#30.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $u-1#32 == null goto label16;

        $u14 = $u-1#32.<android.view.ViewGroup$LayoutParams: int width>;

        if $u14 != -1 goto label16;

        width#27 = -1;

        goto label16;

     label09:
        goto label16;

     label10:
        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if lp1 != null goto label11;

        config = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($u20);

        if config == 0 goto label18;

        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if lp1 != null goto label12;

        return;

     label11:
        config = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>;

        if config == 0 goto label12;

        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        $u14 = virtualinvoke lp1.<android.view.ViewGroup: int getChildCount()>();

        if $u14 <= 0 goto label12;

        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        virtualinvoke lp1.<android.view.ViewGroup: void removeAllViews()>();

     label12:
        config = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($u20);

        if config == 0 goto label17;

        config = virtualinvoke $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()>();

        if config != 0 goto label13;

        goto label17;

     label13:
        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        $u-1#32 = virtualinvoke lp1#30.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp1#51 = $u-1#32;

        if $u-1#32 != null goto label14;

        $u-1#32 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $u-1#32.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        lp1#51 = $u-1#32;

     label14:
        $u14 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background>;

        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        virtualinvoke lp1.<android.view.ViewGroup: void setBackgroundResource(int)>($u14);

        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        $u-1#57 = virtualinvoke lp1#30.<android.view.View: android.view.ViewParent getParent()>();

        config = $u-1#57 instanceof android.view.ViewGroup;

        if config == 0 goto label15;

        lp1 = (android.view.ViewGroup) $u-1#57;

        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke lp1.<android.view.ViewGroup: void removeView(android.view.View)>(lp1#30);

     label15:
        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke lp1.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(lp1#30, lp1#51);

        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        config = virtualinvoke lp1#30.<android.view.View: boolean hasFocus()>();

        if config != 0 goto label09;

        lp1#30 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke lp1#30.<android.view.View: boolean requestFocus()>();

        goto label09;

     label16:
        $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        lp = new android.view.WindowManager$LayoutParams;

        $u14 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x>;

        $u15 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y>;

        specialinvoke lp.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int,int,int)>(width#27, -2, $u14, $u15, 1002, 8519680, -3);

        $u14 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity>;

        lp.<android.view.WindowManager$LayoutParams: int gravity> = $u14;

        $u14 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations>;

        lp.<android.view.WindowManager$LayoutParams: int windowAnimations> = $u14;

        lp1 = $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        interfaceinvoke isXLarge.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(lp1, lp);

        $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen> = 1;

        return;

     label17:
        $u20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

     label18:
        return;
    }

    private boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, int, android.view.KeyEvent, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u3;
        int $u4, $u6;
        android.view.KeyEvent $u5;
        boolean $u-1, $u1;
        androidx.appcompat.view.menu.MenuBuilder $u1#8;
        androidx.appcompat.widget.DecorContentParent $u1#12;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $u4 := @parameter1: int;

        $u5 := @parameter2: android.view.KeyEvent;

        $u6 := @parameter3: int;

        $u-1 = virtualinvoke $u5.<android.view.KeyEvent: boolean isSystem()>();

        if $u-1 == 0 goto label1;

        return 0;

     label1:
        $u-1 = 0;

        $u1 = $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $u1 != 0 goto label2;

        $u1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u3, $u5);

        if $u1 == 0 goto label3;

     label2:
        $u1#8 = $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $u1#8 == null goto label3;

        $u1#8 = $u3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $u-1 = virtualinvoke $u1#8.<androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)>($u4, $u5, $u6);

     label3:
        if $u-1 == 0 goto label4;

        $u4 = $u6 & 1;

        if $u4 != 0 goto label4;

        $u1#12 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $u1#12 != null goto label4;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u3, 1);

     label4:
        return $u-1;
    }

    private boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u9, cb#4;
        android.view.KeyEvent $u10;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback $u7;
        boolean cb, kmap#18;
        android.view.Window$Callback $u-1;
        int isActionBarMenu;
        android.view.View $u-1#8;
        androidx.appcompat.widget.DecorContentParent kmap;
        androidx.appcompat.app.ActionBar $u-1#16;
        androidx.appcompat.view.menu.MenuBuilder kmap#19;
        android.os.Bundle kmap#39;
        android.view.KeyCharacterMap $u-1#51;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u9 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $u10 := @parameter1: android.view.KeyEvent;

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if cb == 0 goto label01;

        return 0;

     label01:
        cb = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if cb == 0 goto label02;

        return 1;

     label02:
        cb#4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if cb#4 == null goto label03;

        if cb#4 == $u9 goto label03;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(cb#4, 0);

     label03:
        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $u-1 == null goto label04;

        isActionBarMenu = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        $u-1#8 = interfaceinvoke $u-1.<android.view.Window$Callback: android.view.View onCreatePanelView(int)>(isActionBarMenu);

        $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView> = $u-1#8;

     label04:
        isActionBarMenu = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if isActionBarMenu == 0 goto label06;

        isActionBarMenu = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if isActionBarMenu != 108 goto label05;

        goto label06;

     label05:
        cb = 0;

        goto label07;

     label06:
        cb = 1;

     label07:
        if cb == 0 goto label08;

        kmap = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if kmap == null goto label08;

        interfaceinvoke kmap.<androidx.appcompat.widget.DecorContentParent: void setMenuPrepared()>();

     label08:
        $u-1#8 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if $u-1#8 != null goto label23;

        if cb == 0 goto label09;

        $u-1#16 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        kmap#18 = $u-1#16 instanceof androidx.appcompat.app.ToolbarActionBar;

        if kmap#18 != 0 goto label23;

     label09:
        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if kmap#19 == null goto label10;

        kmap#18 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if kmap#18 == 0 goto label15;

     label10:
        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if kmap#19 != null goto label11;

        kmap#18 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($u9);

        if kmap#18 == 0 goto label24;

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if kmap#19 != null goto label11;

        return 0;

     label11:
        if cb == 0 goto label13;

        kmap = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if kmap == null goto label13;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        if $u7 != null goto label12;

        $u7 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        specialinvoke $u7.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback> = $u7;

     label12:
        kmap = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke kmap.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(kmap#19, $u7);

     label13:
        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke kmap#19.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        isActionBarMenu = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        kmap#18 = interfaceinvoke $u-1.<android.view.Window$Callback: boolean onCreatePanelMenu(int,android.view.Menu)>(isActionBarMenu, kmap#19);

        if kmap#18 != 0 goto label14;

        virtualinvoke $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(null);

        if cb == 0 goto label24;

        kmap = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if kmap == null goto label24;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke kmap.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(null, $u7);

        return 0;

     label14:
        $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent> = 0;

     label15:
        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke kmap#19.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        kmap#39 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>;

        if kmap#39 == null goto label16;

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        kmap#39 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>;

        virtualinvoke kmap#19.<androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>(kmap#39);

        $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState> = null;

     label16:
        $u-1#8 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        kmap#18 = interfaceinvoke $u-1.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, $u-1#8, kmap#19);

        if kmap#18 != 0 goto label18;

        if cb == 0 goto label17;

        kmap = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if kmap == null goto label17;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke kmap.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(null, $u7);

     label17:
        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke kmap#19.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        return 0;

     label18:
        if $u10 == null goto label19;

        isActionBarMenu = virtualinvoke $u10.<android.view.KeyEvent: int getDeviceId()>();

        goto label20;

     label19:
        isActionBarMenu = -1;

     label20:
        $u-1#51 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(isActionBarMenu);

        isActionBarMenu = virtualinvoke $u-1#51.<android.view.KeyCharacterMap: int getKeyboardType()>();

        if isActionBarMenu == 1 goto label21;

        cb = 1;

        goto label22;

     label21:
        cb = 0;

     label22:
        $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode> = cb;

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        cb = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode>;

        virtualinvoke kmap#19.<androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)>(cb);

        kmap#19 = $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke kmap#19.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

     label23:
        $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 1;

        $u9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel> = $u9;

        return 1;

     label24:
        return 0;
    }

    private void reopenMenu(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u7, $u-1;
        androidx.appcompat.widget.DecorContentParent cb;
        android.content.Context cb#6;
        android.view.ViewConfiguration $u-1#7;
        android.view.Window$Callback $u-1#14;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1#21;
        androidx.appcompat.view.menu.MenuBuilder $u2;
        int $u3;
        android.view.Window $u3#28;
        android.view.View $u-1#29;
        java.lang.Runnable $u5;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u7 := @parameter0: boolean;

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if cb == null goto label5;

        $u-1 = interfaceinvoke cb.<androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()>();

        if $u-1 == 0 goto label5;

        cb#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(cb#6);

        $u-1 = virtualinvoke $u-1#7.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $u-1 == 0 goto label1;

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $u-1 = interfaceinvoke cb.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowPending()>();

        if $u-1 == 0 goto label5;

     label1:
        $u-1#14 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $u-1 = interfaceinvoke cb.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $u-1 == 0 goto label3;

        if $u7 != 0 goto label2;

        goto label3;

     label2:
        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke cb.<androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()>();

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $u7 != 0 goto label6;

        $u-1#21 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $u2 = $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        interfaceinvoke $u-1#14.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(108, $u2);

        return;

     label3:
        if $u-1#14 == null goto label6;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $u7 != 0 goto label6;

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $u7 == 0 goto label4;

        $u3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $u3 = $u3 & 1;

        if $u3 == 0 goto label4;

        $u3#28 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1#29 = virtualinvoke $u3#28.<android.view.Window: android.view.View getDecorView()>();

        $u5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        virtualinvoke $u-1#29.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u5);

        $u5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        interfaceinvoke $u5.<java.lang.Runnable: void run()>();

     label4:
        $u-1#21 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $u2 = $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $u2 == null goto label6;

        $u7 = $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $u7 != 0 goto label6;

        $u-1#29 = $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $u2 = $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $u7 = interfaceinvoke $u-1#14.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, $u-1#29, $u2);

        if $u7 == 0 goto label6;

        $u2 = $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        interfaceinvoke $u-1#14.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(108, $u2);

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke cb.<androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()>();

        return;

     label5:
        $u-1#21 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $u-1#21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u-1#21, 0);

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u-1#21, null);

     label6:
        return;
    }

    private int sanitizeWindowFeatureId(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u3;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: int;

        if $u3 != 8 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.");

        return 108;

     label1:
        if $u3 != 9 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.");

        return 109;

     label2:
        return $u3;
    }

    private boolean shouldInheritContext(android.view.ViewParent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.ViewParent $u4;
        android.view.Window windowDecor;
        android.view.View $u-1, $u2#9;
        boolean $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: android.view.ViewParent;

        if $u4 != null goto label1;

        return 0;

     label1:
        windowDecor = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke windowDecor.<android.view.Window: android.view.View getDecorView()>();

     label2:
        if $u4 != null goto label3;

        return 1;

     label3:
        if $u4 == $u-1 goto label5;

        $u2 = $u4 instanceof android.view.View;

        if $u2 == 0 goto label5;

        $u2#9 = (android.view.View) $u4;

        $u2 = staticinvoke <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>($u2#9);

        if $u2 == 0 goto label4;

        return 0;

     label4:
        $u4 = interfaceinvoke $u4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label5:
        return 0;
    }

    private void throwFeatureRequestIfSubDecorInstalled()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u0;
        android.util.AndroidRuntimeException $u0#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $u0 != 0 goto label1;

        return;

     label1:
        $u0#2 = new android.util.AndroidRuntimeException;

        specialinvoke $u0#2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Window feature must be requested before adding content");

        throw $u0#2;
    }

    private androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u-1;
        boolean $u2;
        androidx.appcompat.app.AppCompatActivity $u1;
        android.content.ContextWrapper $u1#8;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label1:
        if $u-1 == null goto label3;

        $u2 = $u-1 instanceof androidx.appcompat.app.AppCompatActivity;

        if $u2 == 0 goto label2;

        $u1 = (androidx.appcompat.app.AppCompatActivity) $u-1;

        return $u1;

     label2:
        $u2 = $u-1 instanceof android.content.ContextWrapper;

        if $u2 == 0 goto label3;

        $u1#8 = (android.content.ContextWrapper) $u-1;

        $u-1 = virtualinvoke $u1#8.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        goto label1;

     label3:
        return null;
    }

    private boolean updateForNightMode(int, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u9, currentNightMode, newNightMode;
        boolean $u10, handled, $u-1#6;
        android.content.Context overrideConfig;
        android.content.res.Configuration $u-1, $u-1#10;
        android.content.res.Resources $u-1#8;
        java.lang.Object $u6;
        android.app.Activity $u6#20;
        androidx.appcompat.app.AppCompatActivity $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u9 := @parameter0: int;

        $u10 := @parameter1: boolean;

        handled = 0;

        overrideConfig = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>(overrideConfig, $u9, null);

        $u-1#6 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()>();

        overrideConfig = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#8 = virtualinvoke overrideConfig.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#10 = virtualinvoke $u-1#8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        currentNightMode = $u-1#10.<android.content.res.Configuration: int uiMode>;

        currentNightMode = currentNightMode & 48;

        newNightMode = $u-1.<android.content.res.Configuration: int uiMode>;

        newNightMode = newNightMode & 48;

        if currentNightMode == newNightMode goto label2;

        if $u10 == 0 goto label2;

        if $u-1#6 != 0 goto label2;

        $u10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>;

        if $u10 == 0 goto label2;

        $u10 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>;

        if $u10 != 0 goto label1;

        $u10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated>;

        if $u10 == 0 goto label2;

     label1:
        $u6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u10 = $u6 instanceof android.app.Activity;

        if $u10 == 0 goto label2;

        $u6#20 = (android.app.Activity) $u6;

        $u10 = virtualinvoke $u6#20.<android.app.Activity: boolean isChild()>();

        if $u10 != 0 goto label2;

        $u6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u6#20 = (android.app.Activity) $u6;

        staticinvoke <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>($u6#20);

        handled = 1;

     label2:
        if handled != 0 goto label3;

        if currentNightMode == newNightMode goto label3;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)>(newNightMode, $u-1#6, null);

        handled = 1;

     label3:
        if handled == 0 goto label4;

        $u6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u10 = $u6 instanceof androidx.appcompat.app.AppCompatActivity;

        if $u10 == 0 goto label4;

        $u2 = (androidx.appcompat.app.AppCompatActivity) $u6;

        virtualinvoke $u2.<androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)>($u9);

     label4:
        return handled;
    }

    private void updateResourcesConfigurationForNightMode(int, boolean, android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u7, activity;
        boolean $u8;
        android.content.res.Configuration $u9, conf, $u-1#4;
        androidx.lifecycle.Lifecycle$State $u5, $u-1#31;
        android.content.Context res;
        android.content.res.Resources $u-1;
        android.content.res.Resources$Theme $u-1#19;
        java.lang.Object activity#23;
        android.app.Activity activity#25;
        androidx.lifecycle.LifecycleOwner lifecycle;
        androidx.lifecycle.Lifecycle $u-1#29;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u7 := @parameter0: int;

        $u8 := @parameter1: boolean;

        $u9 := @parameter2: android.content.res.Configuration;

        res = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = virtualinvoke res.<android.content.Context: android.content.res.Resources getResources()>();

        conf = new android.content.res.Configuration;

        $u-1#4 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke conf.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($u-1#4);

        if $u9 == null goto label1;

        virtualinvoke conf.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($u9);

     label1:
        $u9 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        activity = $u9.<android.content.res.Configuration: int uiMode>;

        activity = activity & -49;

        $u7 = activity | $u7;

        conf.<android.content.res.Configuration: int uiMode> = $u7;

        virtualinvoke $u-1.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(conf, null);

        $u7 = <android.os.Build$VERSION: int SDK_INT>;

        if $u7 >= 26 goto label2;

        staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)>($u-1);

     label2:
        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        if $u7 == 0 goto label3;

        res = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        virtualinvoke res.<android.content.Context: void setTheme(int)>($u7);

        $u7 = <android.os.Build$VERSION: int SDK_INT>;

        if $u7 < 23 goto label3;

        res = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#19 = virtualinvoke res.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u7 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        virtualinvoke $u-1#19.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($u7, 1);

     label3:
        if $u8 == 0 goto label6;

        activity#23 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u8 = activity#23 instanceof android.app.Activity;

        if $u8 == 0 goto label6;

        activity#25 = (android.app.Activity) activity#23;

        $u8 = activity#25 instanceof androidx.lifecycle.LifecycleOwner;

        if $u8 == 0 goto label5;

        lifecycle = (androidx.lifecycle.LifecycleOwner) activity#25;

        $u-1#29 = interfaceinvoke lifecycle.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $u-1#31 = virtualinvoke $u-1#29.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $u5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $u8 = virtualinvoke $u-1#31.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($u5);

        if $u8 == 0 goto label4;

        virtualinvoke activity#25.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(conf);

     label4:
        return;

     label5:
        $u8 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted>;

        if $u8 == 0 goto label6;

        virtualinvoke activity#25.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(conf);

     label6:
        return;
    }

    private void updateStatusGuardColor(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.View $u4;
        int $u-1;
        boolean lightStatusBar;
        android.content.Context $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: android.view.View;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>($u4);

        $u-1 = $u-1 & 8192;

        if $u-1 == 0 goto label1;

        lightStatusBar = 1;

        goto label2;

     label1:
        lightStatusBar = 0;

     label2:
        if lightStatusBar == 0 goto label3;

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = <androidx.appcompat.R$color: int abc_decor_view_status_guard_light>;

        $u-1 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($u1, $u-1);

        goto label4;

     label3:
        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = <androidx.appcompat.R$color: int abc_decor_view_status_guard>;

        $u-1 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($u1, $u-1);

     label4:
        virtualinvoke $u4.<android.view.View: void setBackgroundColor(int)>($u-1);

        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.View $u3, $u-1;
        android.view.ViewGroup$LayoutParams $u4;
        android.view.ViewGroup contentParent;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $u1;
        android.view.Window$Callback $u-1#7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        contentParent = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $u-1 = virtualinvoke contentParent.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        contentParent = (android.view.ViewGroup) $u-1;

        virtualinvoke contentParent.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($u3, $u4);

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $u-1#7 = virtualinvoke $u1.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $u-1#7.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public boolean applyDayNight()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(1);

        return $u-1;
    }

    public android.content.Context attachBaseContext2(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u9;
        androidx.appcompat.view.ContextThemeWrapper wrappedContext;
        boolean needsThemeRebase, config;
        int $u-1;
        android.content.res.Configuration $u-1#9, $u-1#33;
        android.view.ContextThemeWrapper configOverlay;
        java.lang.IllegalStateException configOverlay#13, baseConfig;
        android.content.pm.PackageManager $u-1#23;
        android.content.pm.ApplicationInfo $u-1#25;
        android.content.res.Resources $u-1#27;
        android.content.res.Resources$Theme $u-1#41;
        java.lang.NullPointerException needsThemeRebase#43;
        android.content.pm.PackageManager$NameNotFoundException needsThemeRebase#49;
        java.lang.RuntimeException config#50;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u9 := @parameter0: android.content.Context;

        needsThemeRebase = 1;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached> = 1;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>();

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>($u9, $u-1);

        config = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration>;

        if config == 0 goto label04;

        config = $u9 instanceof android.view.ContextThemeWrapper;

        if config == 0 goto label04;

        $u-1#9 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($u9, $u-1, null);

        configOverlay = (android.view.ContextThemeWrapper) $u9;

     label01:
        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl: void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration)>(configOverlay, $u-1#9);

     label02:
        return $u9;

     label03:
        configOverlay#13 := @caughtexception;

     label04:
        config = $u9 instanceof androidx.appcompat.view.ContextThemeWrapper;

        if config == 0 goto label08;

        $u-1#9 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($u9, $u-1, null);

        wrappedContext = (androidx.appcompat.view.ContextThemeWrapper) $u9;

     label05:
        virtualinvoke wrappedContext.<androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>($u-1#9);

     label06:
        return $u9;

     label07:
        baseConfig := @caughtexception;

     label08:
        config = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>;

        if config != 0 goto label09;

        $u9 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)>($u9);

        return $u9;

     label09:
        $u-1#23 = virtualinvoke $u9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $u-1#25 = virtualinvoke $u9.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $u-1#27 = virtualinvoke $u-1#23.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($u-1#25);

        $u-1#9 = virtualinvoke $u-1#27.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

     label10:
        $u-1#27 = virtualinvoke $u9.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#33 = virtualinvoke $u-1#27.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        config = virtualinvoke $u-1#9.<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>($u-1#33);

        if config != 0 goto label11;

        $u-1#9 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration)>($u-1#9, $u-1#33);

        goto label12;

     label11:
        $u-1#9 = null;

     label12:
        $u-1#9 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($u9, $u-1, $u-1#9);

        wrappedContext = new androidx.appcompat.view.ContextThemeWrapper;

        $u-1 = <androidx.appcompat.R$style: int Theme_AppCompat_Empty>;

        specialinvoke wrappedContext.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($u9, $u-1);

        virtualinvoke wrappedContext.<androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>($u-1#9);

     label13:
        $u-1#41 = virtualinvoke $u9.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

     label14:
        if $u-1#41 == null goto label15;

        goto label16;

     label15:
        needsThemeRebase = 0;

     label16:
        goto label18;

     label17:
        needsThemeRebase#43 := @caughtexception;

        needsThemeRebase = 0;

     label18:
        if needsThemeRebase == 0 goto label19;

        $u-1#41 = virtualinvoke wrappedContext.<androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>();

        staticinvoke <androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)>($u-1#41);

     label19:
        $u9 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)>(wrappedContext);

        return $u9;

     label20:
        needsThemeRebase#49 := @caughtexception;

        config#50 = new java.lang.RuntimeException;

        specialinvoke config#50.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Application failed to obtain resources from itself", needsThemeRebase#49);

        throw config#50;

        catch java.lang.IllegalStateException from label01 to label02 with label03;
        catch java.lang.IllegalStateException from label05 to label06 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label20;
        catch java.lang.NullPointerException from label13 to label14 with label17;
    }

    void callOnPanelClosed(int, androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u3, $u1;
        android.view.Window$Callback $u-1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u4;
        android.view.Menu $u5;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] $u0;
        boolean $u0#4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $u0#6;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: int;

        $u4 := @parameter1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $u5 := @parameter2: android.view.Menu;

        if $u5 != null goto label2;

        if $u4 != null goto label1;

        if $u3 < 0 goto label1;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        $u1 = lengthof $u0;

        if $u3 >= $u1 goto label1;

        $u4 = $u0[$u3];

     label1:
        if $u4 == null goto label2;

        $u5 = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

     label2:
        if $u4 == null goto label3;

        $u0#4 = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $u0#4 != 0 goto label3;

        return;

     label3:
        $u0#4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $u0#4 != 0 goto label4;

        $u0#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $u-1 = virtualinvoke $u0#6.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $u-1.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>($u3, $u5);

     label4:
        return;
    }

    void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.view.menu.MenuBuilder $u3;
        android.view.Window$Callback $u-1;
        boolean cb;
        androidx.appcompat.widget.DecorContentParent cb#3;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu>;

        if cb == 0 goto label1;

        return;

     label1:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu> = 1;

        cb#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke cb#3.<androidx.appcompat.widget.DecorContentParent: void dismissPopups()>();

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $u-1 == null goto label2;

        cb = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if cb != 0 goto label2;

        interfaceinvoke $u-1.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(108, $u3);

     label2:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu> = 0;

        return;
    }

    void closePanel(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u3;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($u3, 1);

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u-1, 1);

        return;
    }

    void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u4, $u2#18;
        boolean $u5, $u-1;
        int wm;
        androidx.appcompat.widget.DecorContentParent wm#2;
        androidx.appcompat.view.menu.MenuBuilder wm#5;
        android.content.Context wm#6;
        java.lang.Object $u-1#8;
        android.view.WindowManager wm#10;
        android.view.ViewGroup $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $u5 := @parameter1: boolean;

        if $u5 == 0 goto label1;

        wm = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if wm != 0 goto label1;

        wm#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if wm#2 == null goto label1;

        $u-1 = interfaceinvoke wm#2.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $u-1 == 0 goto label1;

        wm#5 = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)>(wm#5);

        return;

     label1:
        wm#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#8 = virtualinvoke wm#6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        wm#10 = (android.view.WindowManager) $u-1#8;

        if wm#10 == null goto label2;

        $u-1 = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $u-1 == 0 goto label2;

        $u2 = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if $u2 == null goto label2;

        $u2 = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        interfaceinvoke wm#10.<android.view.WindowManager: void removeView(android.view.View)>($u2);

        if $u5 == 0 goto label2;

        wm = $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)>(wm, $u4, null);

     label2:
        $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen> = 0;

        $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = null;

        $u4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        $u2#18 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $u2#18 != $u4 goto label3;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel> = null;

     label3:
        return;
    }

    public android.view.View createView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.View $u11;
        java.lang.String $u12, $u-1#8;
        android.content.Context $u13, a#3;
        android.util.AttributeSet $u14;
        boolean $u7, a#28, viewInflaterClassName#29;
        androidx.appcompat.app.AppCompatViewInflater a;
        int[] viewInflaterClassName;
        android.content.res.TypedArray $u-1;
        int viewInflaterClassName#7;
        java.lang.Class $u-1#11;
        java.lang.Class[] $u4;
        java.lang.reflect.Constructor $u-1#14;
        java.lang.Object[] $u5;
        java.lang.Object $u-1#17;
        java.lang.Throwable viewInflaterClass;
        java.lang.StringBuilder $u4#21;
        org.xmlpull.v1.XmlPullParser viewInflaterClassName#33;
        android.view.ViewParent $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u11 := @parameter0: android.view.View;

        $u12 := @parameter1: java.lang.String;

        $u13 := @parameter2: android.content.Context;

        $u14 := @parameter3: android.util.AttributeSet;

        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>;

        $u7 = 0;

        if a != null goto label4;

        a#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        viewInflaterClassName = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        $u-1 = virtualinvoke a#3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>(viewInflaterClassName);

        viewInflaterClassName#7 = <androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass>;

        $u-1#8 = virtualinvoke $u-1.<android.content.res.TypedArray: java.lang.String getString(int)>(viewInflaterClassName#7);

        if $u-1#8 != null goto label1;

        a = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke a.<androidx.appcompat.app.AppCompatViewInflater: void <init>()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = a;

        goto label4;

     label1:
        $u-1#11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($u-1#8);

        $u4 = newarray (java.lang.Class)[0];

        $u-1#14 = virtualinvoke $u-1#11.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($u4);

        $u5 = newarray (java.lang.Object)[0];

        $u-1#17 = virtualinvoke $u-1#14.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($u5);

        a = (androidx.appcompat.app.AppCompatViewInflater) $u-1#17;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = a;

     label2:
        goto label4;

     label3:
        viewInflaterClass := @caughtexception;

        $u4#21 = new java.lang.StringBuilder;

        specialinvoke $u4#21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u4#21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to instantiate custom view inflater ");

        virtualinvoke $u4#21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#8);

        virtualinvoke $u4#21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Falling back to default.");

        $u-1#8 = virtualinvoke $u4#21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", $u-1#8, viewInflaterClass);

        a = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke a.<androidx.appcompat.app.AppCompatViewInflater: void <init>()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = a;

     label4:
        a#28 = 0;

        viewInflaterClassName#29 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        if viewInflaterClassName#29 == 0 goto label7;

        a#28 = $u14 instanceof org.xmlpull.v1.XmlPullParser;

        if a#28 == 0 goto label5;

        viewInflaterClassName#33 = (org.xmlpull.v1.XmlPullParser) $u14;

        viewInflaterClassName#7 = interfaceinvoke viewInflaterClassName#33.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if viewInflaterClassName#7 <= 1 goto label6;

        $u7 = 1;

        goto label6;

     label5:
        $u1 = (android.view.ViewParent) $u11;

        $u7 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)>($u1);

     label6:
        a#28 = $u7;

     label7:
        a = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>;

        $u7 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        viewInflaterClassName#29 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>();

        $u11 = virtualinvoke a.<androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)>($u11, $u12, $u13, $u14, a#28, $u7, 1, viewInflaterClassName#29);

        return $u11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void dismissPopups()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.widget.DecorContentParent st;
        android.widget.PopupWindow st#2;
        android.view.Window st#3;
        android.view.View $u-1;
        java.lang.Runnable $u1;
        boolean $u-1#8;
        java.lang.IllegalArgumentException st#11;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1#14;
        androidx.appcompat.view.menu.MenuBuilder $u1#16;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        st = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if st == null goto label1;

        interfaceinvoke st.<androidx.appcompat.widget.DecorContentParent: void dismissPopups()>();

     label1:
        st#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if st#2 == null goto label6;

        st#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke st#3.<android.view.Window: android.view.View getDecorView()>();

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $u-1.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u1);

        st#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        $u-1#8 = virtualinvoke st#2.<android.widget.PopupWindow: boolean isShowing()>();

        if $u-1#8 == 0 goto label5;

        st#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

     label2:
        virtualinvoke st#2.<android.widget.PopupWindow: void dismiss()>();

     label3:
        goto label5;

     label4:
        st#11 := @caughtexception;

     label5:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup> = null;

     label6:
        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        $u-1#14 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if $u-1#14 == null goto label7;

        $u1#16 = $u-1#14.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $u1#16 == null goto label7;

        $u1#16 = $u-1#14.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $u1#16.<androidx.appcompat.view.menu.MenuBuilder: void close()>();

     label7:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.KeyEvent $u5;
        java.lang.Object root;
        boolean action, isDown;
        android.view.Window root#5;
        android.view.View $u-1;
        int $u-1#10, $u-1#20;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback root#13;
        android.view.Window$Callback $u-1#14;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: android.view.KeyEvent;

        root = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        action = root instanceof androidx.core.view.KeyEventDispatcher$Component;

        isDown = 1;

        if action != 0 goto label1;

        action = root instanceof androidx.appcompat.app.AppCompatDialog;

        if action == 0 goto label2;

     label1:
        root#5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke root#5.<android.view.Window: android.view.View getDecorView()>();

        if $u-1 == null goto label2;

        action = staticinvoke <androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>($u-1, $u5);

        if action == 0 goto label2;

        return 1;

     label2:
        $u-1#10 = virtualinvoke $u5.<android.view.KeyEvent: int getKeyCode()>();

        if $u-1#10 != 82 goto label3;

        root#13 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $u-1#14 = virtualinvoke root#13.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        action = interfaceinvoke $u-1#14.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>($u5);

        if action == 0 goto label3;

        return 1;

     label3:
        $u-1#10 = virtualinvoke $u5.<android.view.KeyEvent: int getKeyCode()>();

        $u-1#20 = virtualinvoke $u5.<android.view.KeyEvent: int getAction()>();

        if $u-1#20 != 0 goto label4;

        goto label5;

     label4:
        isDown = 0;

     label5:
        if isDown == 0 goto label6;

        isDown = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)>($u-1#10, $u5);

        return isDown;

     label6:
        isDown = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)>($u-1#10, $u5);

        return isDown;
    }

    void doInvalidatePanelMenu(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u5, $u-1#9;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1;
        androidx.appcompat.view.menu.MenuBuilder $u3;
        android.os.Bundle $u3#6;
        androidx.appcompat.widget.DecorContentParent $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($u5, 1);

        $u3 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $u3 == null goto label2;

        $u3#6 = new android.os.Bundle;

        specialinvoke $u3#6.<android.os.Bundle: void <init>()>();

        $u3 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $u3.<androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>($u3#6);

        $u-1#9 = virtualinvoke $u3#6.<android.os.Bundle: int size()>();

        if $u-1#9 <= 0 goto label1;

        $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState> = $u3#6;

     label1:
        $u3 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $u3.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $u3 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $u3.<androidx.appcompat.view.menu.MenuBuilder: void clear()>();

     label2:
        $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent> = 1;

        $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        if $u5 == 108 goto label3;

        if $u5 != 0 goto label4;

     label3:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $u0 == null goto label4;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if $u-1 == null goto label4;

        $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($u-1, null);

     label4:
        return;
    }

    void endOnGoingFadeAnimation()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.core.view.ViewPropertyAnimatorCompat $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        return;
    }

    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.Menu $u6;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] panels;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState panel;
        androidx.appcompat.view.menu.MenuBuilder $u4;
        int N, i;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u6 := @parameter0: android.view.Menu;

        panels = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        if panels == null goto label1;

        N = lengthof panels;

        goto label2;

     label1:
        N = 0;

     label2:
        i = 0;

     label3:
        if i >= N goto label5;

        panel = panels[i];

        if panel == null goto label4;

        $u4 = panel.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $u4 != $u6 goto label4;

        return panel;

     label4:
        i = i + 1;

        goto label3;

     label5:
        return null;
    }

    public android.view.View findViewById(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u2;
        android.view.View $u-1;
        android.view.Window $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: int;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke $u0.<android.view.Window: android.view.View findViewById(int)>($u2);

        return $u-1;
    }

    final android.content.Context getActionBarThemedContext()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context context;
        androidx.appcompat.app.ActionBar $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        context = null;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        context = virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>();

     label1:
        if context != null goto label2;

        context = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label2:
        return context;
    }

    final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $u-1;
        android.content.Context $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($u0);

        return $u-1;
    }

    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        specialinvoke $u0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        return $u0;
    }

    public int getLocalNightMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int ret0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        ret0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        return ret0;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u-1;
        android.view.MenuInflater $u0;
        androidx.appcompat.view.SupportMenuInflater $u0#2;
        androidx.appcompat.app.ActionBar $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>;

        if $u0 != null goto label3;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>();

        $u0#2 = new androidx.appcompat.view.SupportMenuInflater;

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $u1 == null goto label1;

        $u-1 = virtualinvoke $u1.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>();

        goto label2;

     label1:
        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label2:
        specialinvoke $u0#2.<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>($u-1);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater> = $u0#2;

     label3:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>;

        return $u0;
    }

    protected androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u5, nar#3;
        boolean $u6;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] nar, ar, nar#5;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState nar#7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: int;

        $u6 := @parameter1: boolean;

        nar = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        ar = nar;

        if nar == null goto label1;

        nar#3 = lengthof nar;

        if nar#3 > $u5 goto label3;

     label1:
        nar#3 = $u5 + 1;

        nar#5 = newarray (androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)[nar#3];

        if nar == null goto label2;

        nar#3 = lengthof nar;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(nar, 0, nar#5, 0, nar#3);

     label2:
        ar = nar#5;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels> = nar#5;

     label3:
        nar#7 = ar[$u5];

        if nar#7 != null goto label4;

        nar#7 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        specialinvoke nar#7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void <init>(int)>($u5);

        ar[$u5] = nar#7;

     label4:
        return nar#7;
    }

    android.view.ViewGroup getSubDecor()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.ViewGroup ret0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        ret0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        return ret0;
    }

    public androidx.appcompat.app.ActionBar getSupportActionBar()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.ActionBar ret0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>();

        ret0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        return ret0;
    }

    final java.lang.CharSequence getTitle()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u1;
        java.lang.CharSequence $u-1;
        java.lang.Object $u0;
        android.app.Activity $u0#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u1 = $u0 instanceof android.app.Activity;

        if $u1 == 0 goto label1;

        $u0#2 = (android.app.Activity) $u0;

        $u-1 = virtualinvoke $u0#2.<android.app.Activity: java.lang.CharSequence getTitle()>();

        return $u-1;

     label1:
        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle>;

        return $u-1;
    }

    final android.view.Window$Callback getWindowCallback()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.Window$Callback $u-1;
        android.view.Window $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke $u0.<android.view.Window: android.view.Window$Callback getCallback()>();

        return $u-1;
    }

    public boolean hasWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u5, $u-1;
        boolean result;
        android.view.Window $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: int;

        result = 0;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>($u5);

        if $u-1 == 1 goto label6;

        if $u-1 == 2 goto label5;

        if $u-1 == 5 goto label4;

        if $u-1 == 10 goto label3;

        if $u-1 == 108 goto label2;

        if $u-1 == 109 goto label1;

        goto label7;

     label1:
        result = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        goto label7;

     label2:
        result = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        goto label7;

     label3:
        result = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        goto label7;

     label4:
        result = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>;

        goto label7;

     label5:
        result = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>;

        goto label7;

     label6:
        result = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

     label7:
        if result != 0 goto label9;

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        result = virtualinvoke $u1.<android.view.Window: boolean hasFeature(int)>($u5);

        if result == 0 goto label8;

        return 1;

     label8:
        return 0;

     label9:
        return 1;
    }

    public void installViewFactory()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context layoutInflater;
        android.view.LayoutInflater $u-1;
        android.view.LayoutInflater$Factory $u-1#4;
        android.view.LayoutInflater$Factory2 $u-1#6;
        boolean $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        layoutInflater = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(layoutInflater);

        $u-1#4 = virtualinvoke $u-1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>();

        if $u-1#4 != null goto label1;

        staticinvoke <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>($u-1, this);

        return;

     label1:
        $u-1#6 = virtualinvoke $u-1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()>();

        $u1 = $u-1#6 instanceof androidx.appcompat.app.AppCompatDelegateImpl;

        if $u1 != 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "The Activity\'s LayoutInflater already has a Factory installed so we can not install AppCompat\'s");

     label2:
        return;
    }

    public void invalidateOptionsMenu()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.ActionBar $u-1;
        boolean $u-1#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        $u-1#2 = virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()>();

        if $u-1#2 == 0 goto label1;

        return;

     label1:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(0);

        return;
    }

    public boolean isHandleNativeActionModesEnabled()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean ret0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        ret0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes>;

        return ret0;
    }

    int mapNightMode(android.content.Context, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.Context $u4, $u-1#14;
        int $u5;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $u-1;
        java.lang.IllegalStateException uiModeManager;
        java.lang.Object $u-1#17;
        android.app.UiModeManager uiModeManager#19;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: int;

        if $u5 == -100 goto label5;

        if $u5 == -1 goto label4;

        if $u5 == 0 goto label2;

        if $u5 == 1 goto label6;

        if $u5 == 2 goto label6;

        if $u5 != 3 goto label1;

        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>($u4);

        $u5 = virtualinvoke $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>();

        return $u5;

     label1:
        uiModeManager = new java.lang.IllegalStateException;

        specialinvoke uiModeManager.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown value set for night mode. Please use one of the MODE_NIGHT values from AppCompatDelegate.");

        throw uiModeManager;

     label2:
        $u5 = <android.os.Build$VERSION: int SDK_INT>;

        if $u5 < 23 goto label3;

        $u-1#14 = virtualinvoke $u4.<android.content.Context: android.content.Context getApplicationContext()>();

        $u-1#17 = virtualinvoke $u-1#14.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/UiModeManager;");

        uiModeManager#19 = (android.app.UiModeManager) $u-1#17;

        $u5 = virtualinvoke uiModeManager#19.<android.app.UiModeManager: int getNightMode()>();

        if $u5 != 0 goto label3;

        return -1;

     label3:
        $u-1 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($u4);

        $u5 = virtualinvoke $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>();

     label4:
        return $u5;

     label5:
        return -1;

     label6:
        return $u5;
    }

    boolean onBackPressed()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.view.ActionMode ab;
        androidx.appcompat.app.ActionBar $u-1;
        boolean $u-1#5;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        ab = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if ab == null goto label1;

        virtualinvoke ab.<androidx.appcompat.view.ActionMode: void finish()>();

        return 1;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label2;

        $u-1#5 = virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: boolean collapseActionView()>();

        if $u-1#5 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.content.res.Configuration $u3;
        android.content.Context $u1;
        boolean ab;
        androidx.appcompat.app.ActionBar $u-1;
        androidx.appcompat.widget.AppCompatDrawableManager $u-1#5;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: android.content.res.Configuration;

        ab = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if ab == 0 goto label1;

        ab = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if ab == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>($u3);

     label1:
        $u-1#5 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>();

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        virtualinvoke $u-1#5.<androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)>($u1);

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(0);

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.os.Bundle $u4;
        java.lang.Object ab;
        boolean parentActivityName;
        java.lang.String parentActivityName#4, $u-1;
        android.app.Activity ab#5;
        java.lang.IllegalArgumentException ab#8;
        androidx.appcompat.app.ActionBar $u-1#9;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: android.os.Bundle;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached> = 1;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(0);

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>();

        ab = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        parentActivityName = ab instanceof android.app.Activity;

        if parentActivityName == 0 goto label7;

        parentActivityName#4 = null;

        ab#5 = (android.app.Activity) ab;

     label1:
        $u-1 = staticinvoke <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>(ab#5);

     label2:
        parentActivityName#4 = $u-1;

        goto label4;

     label3:
        ab#8 := @caughtexception;

     label4:
        if parentActivityName#4 == null goto label6;

        $u-1#9 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $u-1#9 != null goto label5;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp> = 1;

        goto label6;

     label5:
        virtualinvoke $u-1#9.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1);

     label6:
        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>(this);

     label7:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated> = 1;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public final android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.View $u2;
        java.lang.String $u3;
        android.content.Context $u4;
        android.util.AttributeSet $u5;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: java.lang.String;

        $u4 := @parameter2: android.content.Context;

        $u5 := @parameter3: android.util.AttributeSet;

        $u2 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>($u2, $u3, $u4, $u5);

        return $u2;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        java.lang.String $u2;
        android.content.Context $u3;
        android.util.AttributeSet $u4;
        android.view.View $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: android.content.Context;

        $u4 := @parameter2: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(null, $u2, $u3, $u4);

        return $u-1;
    }

    public void onDestroy()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        java.lang.Object $u0;
        boolean $u0#2;
        android.view.Window $u0#4;
        android.view.View $u-1;
        java.lang.Runnable $u1;
        int $u0#10;
        android.app.Activity $u0#14;
        androidx.collection.SimpleArrayMap $u0#17;
        java.lang.Class $u-1#19;
        java.lang.String $u-1#21;
        java.lang.Integer $u-1#24;
        androidx.appcompat.app.ActionBar $u0#32;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u0#2 = $u0 instanceof android.app.Activity;

        if $u0#2 == 0 goto label1;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>(this);

     label1:
        $u0#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $u0#2 == 0 goto label2;

        $u0#4 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1 = virtualinvoke $u0#4.<android.view.Window: android.view.View getDecorView()>();

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        virtualinvoke $u-1.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u1);

     label2:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted> = 0;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed> = 1;

        $u0#10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $u0#10 == -100 goto label3;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u0#2 = $u0 instanceof android.app.Activity;

        if $u0#2 == 0 goto label3;

        $u0#14 = (android.app.Activity) $u0;

        $u0#2 = virtualinvoke $u0#14.<android.app.Activity: boolean isChangingConfigurations()>();

        if $u0#2 == 0 goto label3;

        $u0#17 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u-1#19 = virtualinvoke $u0.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#21 = virtualinvoke $u-1#19.<java.lang.Class: java.lang.String getName()>();

        $u0#10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        $u-1#24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u0#10);

        virtualinvoke $u0#17.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u-1#21, $u-1#24);

        goto label4;

     label3:
        $u0#17 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $u-1#19 = virtualinvoke $u0.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#21 = virtualinvoke $u-1#19.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $u0#17.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($u-1#21);

     label4:
        $u0#32 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $u0#32 == null goto label5;

        virtualinvoke $u0#32.<androidx.appcompat.app.ActionBar: void onDestroy()>();

     label5:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()>();

        return;
    }

    boolean onKeyDown(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u4;
        android.view.KeyEvent $u5;
        boolean $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: int;

        $u5 := @parameter1: android.view.KeyEvent;

        $u1 = 1;

        if $u4 == 4 goto label2;

        if $u4 == 82 goto label1;

        return 0;

     label1:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)>(0, $u5);

        return 1;

     label2:
        $u4 = virtualinvoke $u5.<android.view.KeyEvent: int getFlags()>();

        $u4 = $u4 & 128;

        if $u4 == 0 goto label3;

        goto label4;

     label3:
        $u1 = 0;

     label4:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown> = $u1;

        return 0;
    }

    boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u6;
        android.view.KeyEvent $u7;
        androidx.appcompat.app.ActionBar $u-1;
        boolean $u-1#2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState handled;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u6 := @parameter0: int;

        $u7 := @parameter1: android.view.KeyEvent;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        $u-1#2 = virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)>($u6, $u7);

        if $u-1#2 == 0 goto label1;

        return 1;

     label1:
        handled = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if handled == null goto label2;

        $u6 = virtualinvoke $u7.<android.view.KeyEvent: int getKeyCode()>();

        $u-1#2 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)>(handled, $u6, $u7, 1);

        if $u-1#2 == 0 goto label2;

        handled = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if handled == null goto label4;

        handled.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 1;

        return 1;

     label2:
        handled = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if handled != null goto label3;

        handled = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(handled, $u7);

        $u6 = virtualinvoke $u7.<android.view.KeyEvent: int getKeyCode()>();

        $u-1#2 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)>(handled, $u6, $u7, 1);

        handled.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        if $u-1#2 == 0 goto label5;

        return 1;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    boolean onKeyUp(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u6;
        android.view.KeyEvent $u7;
        boolean wasLongPressBackDown, $u4;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u6 := @parameter0: int;

        $u7 := @parameter1: android.view.KeyEvent;

        if $u6 == 4 goto label2;

        if $u6 == 82 goto label1;

        return 0;

     label1:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)>(0, $u7);

        return 1;

     label2:
        wasLongPressBackDown = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown>;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown> = 0;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if $u-1 == null goto label3;

        $u4 = $u-1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $u4 == 0 goto label3;

        if wasLongPressBackDown != 0 goto label5;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u-1, 1);

        return 1;

     label3:
        wasLongPressBackDown = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()>();

        if wasLongPressBackDown == 0 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        return 1;
    }

    public boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.view.menu.MenuBuilder $u4;
        android.view.MenuItem $u5;
        android.view.Window$Callback $u-1;
        boolean panel;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1#5;
        int $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $u5 := @parameter1: android.view.MenuItem;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $u-1 == null goto label1;

        panel = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if panel != 0 goto label1;

        $u4 = virtualinvoke $u4.<androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()>();

        $u-1#5 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)>($u4);

        if $u-1#5 == null goto label1;

        $u2 = $u-1#5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        panel = interfaceinvoke $u-1.<android.view.Window$Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>($u2, $u5);

        return panel;

     label1:
        return 0;
    }

    public void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.view.menu.MenuBuilder $u2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(boolean)>(1);

        return;
    }

    void onMenuOpened(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u3;
        androidx.appcompat.app.ActionBar $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: int;

        if $u3 != 108 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(1);

     label1:
        return;
    }

    void onPanelClosed(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u4;
        boolean $u2;
        androidx.appcompat.app.ActionBar $u-1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $u-1#5;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u4 := @parameter0: int;

        if $u4 != 108 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label2;

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(0);

        goto label2;

     label1:
        if $u4 != 0 goto label2;

        $u-1#5 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($u4, 1);

        $u2 = $u-1#5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $u2 == 0 goto label2;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($u-1#5, 0);

     label2:
        return;
    }

    public void onPostCreate(android.os.Bundle)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.os.Bundle $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u1 := @parameter0: android.os.Bundle;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        return;
    }

    public void onPostResume()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.ActionBar $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(1);

     label1:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.os.Bundle $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onStart()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted> = 1;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

        return;
    }

    public void onStop()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.ActionBar $u-1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted> = 0;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label1;

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(0);

     label1:
        return;
    }

    void onSubDecorInstalled(android.view.ViewGroup)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.ViewGroup $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u1 := @parameter0: android.view.ViewGroup;

        return;
    }

    final androidx.appcompat.app.ActionBar peekSupportActionBar()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.app.ActionBar ret0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        ret0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        return ret0;
    }

    public boolean requestWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u5;
        boolean $u0;
        android.view.Window $u0#10;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: int;

        $u5 = specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>($u5);

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        if $u0 == 0 goto label1;

        if $u5 != 108 goto label1;

        return 0;

     label1:
        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $u0 == 0 goto label2;

        if $u5 != 1 goto label2;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 0;

     label2:
        if $u5 == 1 goto label8;

        if $u5 == 2 goto label7;

        if $u5 == 5 goto label6;

        if $u5 == 10 goto label5;

        if $u5 == 108 goto label4;

        if $u5 == 109 goto label3;

        $u0#10 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u0 = virtualinvoke $u0#10.<android.view.Window: boolean requestFeature(int)>($u5);

        return $u0;

     label3:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar> = 1;

        return 1;

     label4:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 1;

        return 1;

     label5:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode> = 1;

        return 1;

     label6:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress> = 1;

        return 1;

     label7:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress> = 1;

        return 1;

     label8:
        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle> = 1;

        return 1;
    }

    public void setContentView(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u3;
        android.view.ViewGroup contentParent;
        android.view.View $u-1;
        android.content.Context $u1;
        android.view.LayoutInflater $u-1#7;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $u1#9;
        android.view.Window$Callback $u-1#10;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: int;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        contentParent = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $u-1 = virtualinvoke contentParent.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        contentParent = (android.view.ViewGroup) $u-1;

        virtualinvoke contentParent.<android.view.ViewGroup: void removeAllViews()>();

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#7 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($u1);

        virtualinvoke $u-1#7.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($u3, contentParent);

        $u1#9 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $u-1#10 = virtualinvoke $u1#9.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $u-1#10.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void setContentView(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.View $u3, $u-1;
        android.view.ViewGroup contentParent;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $u1;
        android.view.Window$Callback $u-1#7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: android.view.View;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        contentParent = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $u-1 = virtualinvoke contentParent.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        contentParent = (android.view.ViewGroup) $u-1;

        virtualinvoke contentParent.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke contentParent.<android.view.ViewGroup: void addView(android.view.View)>($u3);

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $u-1#7 = virtualinvoke $u1.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $u-1#7.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        android.view.View $u3, $u-1;
        android.view.ViewGroup$LayoutParams $u4;
        android.view.ViewGroup contentParent;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $u1;
        android.view.Window$Callback $u-1#7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        contentParent = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $u-1 = virtualinvoke contentParent.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        contentParent = (android.view.ViewGroup) $u-1;

        virtualinvoke contentParent.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke contentParent.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($u3, $u4);

        $u1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $u-1#7 = virtualinvoke $u1.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $u-1#7.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void setHandleNativeActionModesEnabled(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u1 := @parameter0: boolean;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes> = $u1;

        return;
    }

    public void setLocalNightMode(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u2, $u0;
        boolean $u0#2;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $u0 == $u2 goto label1;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = $u2;

        $u0#2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>;

        if $u0#2 == 0 goto label1;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

     label1:
        return;
    }

    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.widget.Toolbar $u5;
        java.lang.Object ab;
        boolean ab#2;
        androidx.appcompat.app.ActionBar $u-1;
        androidx.appcompat.app.ToolbarActionBar tbab;
        java.lang.CharSequence $u-1#8;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $u3;
        android.view.Window $u2;
        android.view.Window$Callback $u-1#12;
        java.lang.IllegalStateException tbab#16;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: androidx.appcompat.widget.Toolbar;

        ab = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        ab#2 = ab instanceof android.app.Activity;

        if ab#2 != 0 goto label1;

        return;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        ab#2 = $u-1 instanceof androidx.appcompat.app.WindowDecorActionBar;

        if ab#2 != 0 goto label5;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater> = null;

        if $u-1 == null goto label2;

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void onDestroy()>();

     label2:
        if $u5 == null goto label3;

        tbab = new androidx.appcompat.app.ToolbarActionBar;

        $u-1#8 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>();

        $u3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        specialinvoke tbab.<androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)>($u5, $u-1#8, $u3);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = tbab;

        $u2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1#12 = virtualinvoke tbab.<androidx.appcompat.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()>();

        virtualinvoke $u2.<android.view.Window: void setCallback(android.view.Window$Callback)>($u-1#12);

        goto label4;

     label3:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = null;

        $u2 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        virtualinvoke $u2.<android.view.Window: void setCallback(android.view.Window$Callback)>($u3);

     label4:
        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()>();

        return;

     label5:
        tbab#16 = new java.lang.IllegalStateException;

        specialinvoke tbab#16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.");

        throw tbab#16;
    }

    public void setTheme(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        int $u1;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId> = $u1;

        return;
    }

    public final void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        java.lang.CharSequence $u2;
        androidx.appcompat.widget.DecorContentParent $u0;
        androidx.appcompat.app.ActionBar $u-1;
        android.widget.TextView $u0#6;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u2 := @parameter0: java.lang.CharSequence;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle> = $u2;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $u0 == null goto label1;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>($u2);

        return;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $u-1 == null goto label2;

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>($u2);

        return;

     label2:
        $u0#6 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        if $u0#6 == null goto label3;

        virtualinvoke $u0#6.<android.widget.TextView: void setText(java.lang.CharSequence)>($u2);

     label3:
        return;
    }

    final boolean shouldAnimateActionModeView()
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        boolean $u-1;
        android.view.ViewGroup $u0;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u-1 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $u-1 == 0 goto label1;

        $u0 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        if $u0 == null goto label1;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>($u0);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.view.ActionMode$Callback $u5;
        androidx.appcompat.app.AppCompatCallback $u3;
        androidx.appcompat.view.ActionMode wrappedCallback;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 wrappedCallback#2;
        androidx.appcompat.app.ActionBar $u-1;
        java.lang.IllegalArgumentException wrappedCallback#11;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u5 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        if $u5 == null goto label4;

        wrappedCallback = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if wrappedCallback == null goto label1;

        virtualinvoke wrappedCallback.<androidx.appcompat.view.ActionMode: void finish()>();

     label1:
        wrappedCallback#2 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke wrappedCallback#2.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)>(this, $u5);

        $u-1 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $u-1 == null goto label2;

        wrappedCallback = virtualinvoke $u-1.<androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)>(wrappedCallback#2);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = wrappedCallback;

        if wrappedCallback == null goto label2;

        $u3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if $u3 == null goto label2;

        interfaceinvoke $u3.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)>(wrappedCallback);

     label2:
        wrappedCallback = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if wrappedCallback != null goto label3;

        wrappedCallback = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)>(wrappedCallback#2);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = wrappedCallback;

     label3:
        wrappedCallback = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        return wrappedCallback;

     label4:
        wrappedCallback#11 = new java.lang.IllegalArgumentException;

        specialinvoke wrappedCallback#11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ActionMode callback can not be null.");

        throw wrappedCallback#11;
    }

    androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.appcompat.view.ActionMode$Callback $u11;
        androidx.appcompat.view.ActionMode mode, $u-1;
        boolean mode#3, outValue#15;
        androidx.appcompat.app.AppCompatCallback outValue;
        java.lang.AbstractMethodError outValue#10;
        androidx.appcompat.widget.ActionBarContextView outValue#11, $u3;
        android.content.Context baseTheme, $u8;
        android.content.res.Resources$Theme $u-1#18, $u-1#25;
        int actionBarTheme;
        android.content.res.Resources $u-1#23;
        android.widget.PopupWindow actionBarTheme#33, $u4;
        android.util.DisplayMetrics $u-1#46;
        android.view.ViewGroup outValue#53;
        android.view.View $u-1#55;
        androidx.appcompat.widget.ViewStubCompat outValue#57;
        android.view.LayoutInflater $u-1#60;
        android.view.Menu $u-1#74;
        androidx.core.view.ViewPropertyAnimatorCompat $u-1#85;
        android.view.ViewParent $u-1#95;
        android.view.Window outValue#103;
        java.lang.Runnable $u2#106;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 $u0;
        android.util.TypedValue $u1;
        androidx.appcompat.view.ContextThemeWrapper $u2;
        androidx.appcompat.app.AppCompatDelegateImpl$6 $u5;
        androidx.appcompat.view.StandaloneActionMode $u6;
        androidx.appcompat.app.AppCompatDelegateImpl$7 $u7;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u11 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        mode = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if mode == null goto label01;

        virtualinvoke mode.<androidx.appcompat.view.ActionMode: void finish()>();

     label01:
        mode#3 = $u11 instanceof androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        if mode#3 != 0 goto label02;

        $u0 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke $u0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)>(this, $u11);

        $u11 = $u0;

     label02:
        mode = null;

        outValue = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if outValue == null goto label06;

        mode#3 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if mode#3 != 0 goto label06;

     label03:
        $u-1 = interfaceinvoke outValue.<androidx.appcompat.app.AppCompatCallback: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)>($u11);

     label04:
        mode = $u-1;

        goto label06;

     label05:
        outValue#10 := @caughtexception;

     label06:
        if mode == null goto label07;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = mode;

        goto label17;

     label07:
        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        mode#3 = 1;

        if outValue#11 != null goto label11;

        outValue#15 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        if outValue#15 == 0 goto label10;

        $u1 = new android.util.TypedValue;

        specialinvoke $u1.<android.util.TypedValue: void <init>()>();

        baseTheme = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#18 = virtualinvoke baseTheme.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        actionBarTheme = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $u-1#18.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(actionBarTheme, $u1, 1);

        actionBarTheme = $u1.<android.util.TypedValue: int resourceId>;

        if actionBarTheme == 0 goto label08;

        baseTheme = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $u-1#23 = virtualinvoke baseTheme.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#25 = virtualinvoke $u-1#23.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        virtualinvoke $u-1#25.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($u-1#18);

        actionBarTheme = $u1.<android.util.TypedValue: int resourceId>;

        virtualinvoke $u-1#25.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(actionBarTheme, 1);

        $u2 = new androidx.appcompat.view.ContextThemeWrapper;

        baseTheme = $u2;

        $u8 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke $u2.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($u8, 0);

        $u-1#18 = virtualinvoke $u2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $u-1#18.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($u-1#25);

        goto label09;

     label08:
        baseTheme = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label09:
        $u3 = new androidx.appcompat.widget.ActionBarContextView;

        specialinvoke $u3.<androidx.appcompat.widget.ActionBarContextView: void <init>(android.content.Context)>(baseTheme);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView> = $u3;

        $u4 = new android.widget.PopupWindow;

        actionBarTheme = <androidx.appcompat.R$attr: int actionModePopupWindowStyle>;

        specialinvoke $u4.<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>(baseTheme, null, actionBarTheme);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup> = $u4;

        staticinvoke <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>($u4, 2);

        actionBarTheme#33 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke actionBarTheme#33.<android.widget.PopupWindow: void setContentView(android.view.View)>(outValue#11);

        actionBarTheme#33 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke actionBarTheme#33.<android.widget.PopupWindow: void setWidth(int)>(-1);

        $u-1#25 = virtualinvoke baseTheme.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        actionBarTheme = <androidx.appcompat.R$attr: int actionBarSize>;

        virtualinvoke $u-1#25.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(actionBarTheme, $u1, 1);

        actionBarTheme = $u1.<android.util.TypedValue: int data>;

        $u-1#23 = virtualinvoke baseTheme.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#46 = virtualinvoke $u-1#23.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        actionBarTheme = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>(actionBarTheme, $u-1#46);

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)>(actionBarTheme);

        actionBarTheme#33 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke actionBarTheme#33.<android.widget.PopupWindow: void setHeight(int)>(-2);

        $u5 = new androidx.appcompat.app.AppCompatDelegateImpl$6;

        specialinvoke $u5.<androidx.appcompat.app.AppCompatDelegateImpl$6: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup> = $u5;

        goto label11;

     label10:
        outValue#53 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        actionBarTheme = <androidx.appcompat.R$id: int action_mode_bar_stub>;

        $u-1#55 = virtualinvoke outValue#53.<android.view.ViewGroup: android.view.View findViewById(int)>(actionBarTheme);

        outValue#57 = (androidx.appcompat.widget.ViewStubCompat) $u-1#55;

        if outValue#57 == null goto label11;

        baseTheme = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        $u-1#60 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(baseTheme);

        virtualinvoke outValue#57.<androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)>($u-1#60);

        $u-1#55 = virtualinvoke outValue#57.<androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()>();

        outValue#11 = (androidx.appcompat.widget.ActionBarContextView) $u-1#55;

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView> = outValue#11;

     label11:
        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if outValue#11 == null goto label17;

        virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

        $u6 = new androidx.appcompat.view.StandaloneActionMode;

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        baseTheme = virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: android.content.Context getContext()>();

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        actionBarTheme#33 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if actionBarTheme#33 != null goto label12;

        goto label13;

     label12:
        mode#3 = 0;

     label13:
        specialinvoke $u6.<androidx.appcompat.view.StandaloneActionMode: void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)>(baseTheme, outValue#11, $u11, mode#3);

        $u-1#74 = virtualinvoke $u6.<androidx.appcompat.view.ActionMode: android.view.Menu getMenu()>();

        mode#3 = interfaceinvoke $u11.<androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>($u6, $u-1#74);

        if mode#3 == 0 goto label16;

        virtualinvoke $u6.<androidx.appcompat.view.ActionMode: void invalidate()>();

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)>($u6);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = $u6;

        mode#3 = virtualinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()>();

        if mode#3 == 0 goto label14;

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(0.0F);

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $u-1#85 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(outValue#11);

        $u-1#85 = virtualinvoke $u-1#85.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = $u-1#85;

        $u7 = new androidx.appcompat.app.AppCompatDelegateImpl$7;

        specialinvoke $u7.<androidx.appcompat.app.AppCompatDelegateImpl$7: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(this);

        virtualinvoke $u-1#85.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>($u7);

        goto label15;

     label14:
        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(1.0F);

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $u-1#95 = virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        mode#3 = $u-1#95 instanceof android.view.View;

        if mode#3 == 0 goto label15;

        outValue#11 = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $u-1#95 = virtualinvoke outValue#11.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $u-1#55 = (android.view.View) $u-1#95;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($u-1#55);

     label15:
        actionBarTheme#33 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if actionBarTheme#33 == null goto label17;

        outValue#103 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $u-1#55 = virtualinvoke outValue#103.<android.view.Window: android.view.View getDecorView()>();

        $u2#106 = this.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $u-1#55.<android.view.View: boolean post(java.lang.Runnable)>($u2#106);

        goto label17;

     label16:
        this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = null;

     label17:
        mode = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if mode == null goto label18;

        outValue = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if outValue == null goto label18;

        interfaceinvoke outValue.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)>(mode);

     label18:
        mode = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        return mode;

        catch java.lang.AbstractMethodError from label03 to label04 with label05;
    }

    final int updateStatusGuard(androidx.core.view.WindowInsetsCompat, android.graphics.Rect)
    {
        androidx.appcompat.app.AppCompatDelegateImpl this;
        androidx.core.view.WindowInsetsCompat $u18;
        android.graphics.Rect $u19, rect, innerInsets;
        int systemWindowInsetTop, $u-1#21, $u-1#23, $u-1#25, $u-1#27, newRightMargin, mlpChanged;
        boolean showStatusGuard, mlp#8, $u-1#15;
        androidx.appcompat.widget.ActionBarContextView mlp;
        android.view.ViewGroup$LayoutParams $u-1;
        android.view.ViewGroup$MarginLayoutParams mlp#12, lp;
        android.view.ViewGroup newTopMargin;
        android.view.View mlpChanged#44;
        android.content.Context $u5;
        android.widget.FrameLayout$LayoutParams mlpChanged#48;
        byte $u5#84;

        this := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $u18 := @parameter0: androidx.core.view.WindowInsetsCompat;

        $u19 := @parameter1: android.graphics.Rect;

        systemWindowInsetTop = 0;

        if $u18 == null goto label01;

        systemWindowInsetTop = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        goto label02;

     label01:
        if $u19 == null goto label02;

        systemWindowInsetTop = $u19.<android.graphics.Rect: int top>;

     label02:
        showStatusGuard = 0;

        mlp = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if mlp == null goto label22;

        $u-1 = virtualinvoke mlp.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        mlp#8 = $u-1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if mlp#8 == 0 goto label21;

        mlp = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $u-1 = virtualinvoke mlp.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        mlp#12 = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        mlp#8 = 0;

        mlp = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $u-1#15 = virtualinvoke mlp.<androidx.appcompat.widget.ActionBarContextView: boolean isShown()>();

        if $u-1#15 == 0 goto label19;

        rect = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>;

        if rect != null goto label03;

        rect = new android.graphics.Rect;

        specialinvoke rect.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1> = rect;

        rect = new android.graphics.Rect;

        specialinvoke rect.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2> = rect;

     label03:
        innerInsets = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>;

        rect = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2>;

        if $u18 != null goto label04;

        virtualinvoke innerInsets.<android.graphics.Rect: void set(android.graphics.Rect)>($u19);

        goto label05;

     label04:
        $u-1#21 = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $u-1#23 = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $u-1#25 = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $u-1#27 = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        virtualinvoke innerInsets.<android.graphics.Rect: void set(int,int,int,int)>($u-1#21, $u-1#23, $u-1#25, $u-1#27);

     label05:
        newTopMargin = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        staticinvoke <androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)>(newTopMargin, innerInsets, rect);

        $u-1#25 = innerInsets.<android.graphics.Rect: int top>;

        $u-1#27 = innerInsets.<android.graphics.Rect: int left>;

        newRightMargin = innerInsets.<android.graphics.Rect: int right>;

        newTopMargin = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $u18 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>(newTopMargin);

        if $u18 != null goto label06;

        $u-1#21 = 0;

        goto label07;

     label06:
        $u-1#21 = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

     label07:
        if $u18 != null goto label08;

        $u-1#23 = 0;

        goto label09;

     label08:
        $u-1#23 = virtualinvoke $u18.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

     label09:
        mlpChanged = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if mlpChanged != $u-1#25 goto label10;

        mlpChanged = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if mlpChanged != $u-1#27 goto label10;

        mlpChanged = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if mlpChanged == newRightMargin goto label11;

     label10:
        mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = $u-1#25;

        mlp#12.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = $u-1#27;

        mlp#12.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = newRightMargin;

        mlp#8 = 1;

     label11:
        if $u-1#25 <= 0 goto label12;

        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if mlpChanged#44 != null goto label12;

        mlpChanged#44 = new android.view.View;

        $u5 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke mlpChanged#44.<android.view.View: void <init>(android.content.Context)>($u5);

        this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard> = mlpChanged#44;

        virtualinvoke mlpChanged#44.<android.view.View: void setVisibility(int)>(8);

        mlpChanged#48 = new android.widget.FrameLayout$LayoutParams;

        $u-1#25 = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        specialinvoke mlpChanged#48.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $u-1#25, 51);

        mlpChanged#48.<android.widget.FrameLayout$LayoutParams: int leftMargin> = $u-1#21;

        mlpChanged#48.<android.widget.FrameLayout$LayoutParams: int rightMargin> = $u-1#23;

        newTopMargin = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke newTopMargin.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(mlpChanged#44, -1, mlpChanged#48);

        goto label14;

     label12:
        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if mlpChanged#44 == null goto label14;

        $u-1 = virtualinvoke mlpChanged#44.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        $u-1#25 = lp.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $u-1#27 = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $u-1#25 != $u-1#27 goto label13;

        $u-1#25 = lp.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if $u-1#25 != $u-1#21 goto label13;

        $u-1#25 = lp.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if $u-1#25 == $u-1#23 goto label14;

     label13:
        $u-1#25 = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        lp.<android.view.ViewGroup$MarginLayoutParams: int height> = $u-1#25;

        lp.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = $u-1#21;

        lp.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = $u-1#23;

        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke mlpChanged#44.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(lp);

        goto label14;

     label14:
        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if mlpChanged#44 == null goto label15;

        showStatusGuard = 1;

        goto label16;

     label15:
        showStatusGuard = 0;

     label16:
        if showStatusGuard == 0 goto label17;

        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        $u-1#21 = virtualinvoke mlpChanged#44.<android.view.View: int getVisibility()>();

        if $u-1#21 == 0 goto label17;

        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        specialinvoke this.<androidx.appcompat.app.AppCompatDelegateImpl: void updateStatusGuardColor(android.view.View)>(mlpChanged#44);

     label17:
        $u-1#15 = this.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        if $u-1#15 != 0 goto label18;

        if showStatusGuard == 0 goto label18;

        systemWindowInsetTop = 0;

        goto label18;

     label18:
        goto label20;

     label19:
        $u-1#21 = mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $u-1#21 == 0 goto label20;

        mlp#8 = 1;

        mlp#12.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = 0;

        goto label20;

     label20:
        if mlp#8 == 0 goto label22;

        mlp = this.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke mlp.<androidx.appcompat.widget.ActionBarContextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(mlp#12);

        goto label22;

     label21:
        goto label22;

     label22:
        mlpChanged#44 = this.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if mlpChanged#44 == null goto label25;

        if showStatusGuard == 0 goto label23;

        $u5#84 = 0;

        goto label24;

     label23:
        $u5#84 = 8;

     label24:
        virtualinvoke mlpChanged#44.<android.view.View: void setVisibility(int)>($u5#84);

     label25:
        return systemWindowInsetTop;
    }
}
