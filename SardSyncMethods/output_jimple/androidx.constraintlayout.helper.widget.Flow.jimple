public class androidx.constraintlayout.helper.widget.Flow extends androidx.constraintlayout.widget.VirtualLayout
{
    public static final int CHAIN_PACKED;
    public static final int CHAIN_SPREAD;
    public static final int CHAIN_SPREAD_INSIDE;
    public static final int HORIZONTAL;
    public static final int HORIZONTAL_ALIGN_CENTER;
    public static final int HORIZONTAL_ALIGN_END;
    public static final int HORIZONTAL_ALIGN_START;
    private static final java.lang.String TAG;
    public static final int VERTICAL;
    public static final int VERTICAL_ALIGN_BASELINE;
    public static final int VERTICAL_ALIGN_BOTTOM;
    public static final int VERTICAL_ALIGN_CENTER;
    public static final int VERTICAL_ALIGN_TOP;
    public static final int WRAP_ALIGNED;
    public static final int WRAP_CHAIN;
    public static final int WRAP_NONE;
    private androidx.constraintlayout.solver.widgets.Flow mFlow;

    public void <init>(android.content.Context)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        android.content.Context $u1;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u1 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.constraintlayout.widget.VirtualLayout: void <init>(android.content.Context)>($u1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        android.content.Context $u1;
        android.util.AttributeSet $u2;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u1 := @parameter0: android.content.Context;

        $u2 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<androidx.constraintlayout.widget.VirtualLayout: void <init>(android.content.Context,android.util.AttributeSet)>($u1, $u2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        android.content.Context $u1;
        android.util.AttributeSet $u2;
        int $u3;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u1 := @parameter0: android.content.Context;

        $u2 := @parameter1: android.util.AttributeSet;

        $u3 := @parameter2: int;

        specialinvoke this.<androidx.constraintlayout.widget.VirtualLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($u1, $u2, $u3);

        return;
    }

    protected void init(android.util.AttributeSet)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        android.util.AttributeSet $u8;
        androidx.constraintlayout.solver.widgets.Flow a;
        android.content.Context $u-1;
        int[] N;
        android.content.res.TypedArray $u-1#5;
        int $u-1#7, i, $u-1#10, $u4;
        float $u-1#75;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u8 := @parameter0: android.util.AttributeSet;

        specialinvoke this.<androidx.constraintlayout.widget.VirtualLayout: void init(android.util.AttributeSet)>($u8);

        a = new androidx.constraintlayout.solver.widgets.Flow;

        specialinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void <init>()>();

        this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow> = a;

        if $u8 == null goto label28;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: android.content.Context getContext()>();

        N = <androidx.constraintlayout.widget.R$styleable: int[] ConstraintLayout_Layout>;

        $u-1#5 = virtualinvoke $u-1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($u8, N);

        $u-1#7 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getIndexCount()>();

        i = 0;

     label01:
        if i >= $u-1#7 goto label28;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getIndex(int)>(i);

        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_orientation>;

        if $u-1#10 != $u4 goto label02;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setOrientation(int)>($u-1#10);

        goto label27;

     label02:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_padding>;

        if $u-1#10 != $u4 goto label03;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPadding(int)>($u-1#10);

        goto label27;

     label03:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_paddingStart>;

        if $u-1#10 != $u4 goto label04;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingStart(int)>($u-1#10);

        goto label27;

     label04:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_paddingEnd>;

        if $u-1#10 != $u4 goto label05;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingEnd(int)>($u-1#10);

        goto label27;

     label05:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_paddingLeft>;

        if $u-1#10 != $u4 goto label06;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingLeft(int)>($u-1#10);

        goto label27;

     label06:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_paddingTop>;

        if $u-1#10 != $u4 goto label07;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingTop(int)>($u-1#10);

        goto label27;

     label07:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_paddingRight>;

        if $u-1#10 != $u4 goto label08;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingRight(int)>($u-1#10);

        goto label27;

     label08:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_paddingBottom>;

        if $u-1#10 != $u4 goto label09;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingBottom(int)>($u-1#10);

        goto label27;

     label09:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_wrapMode>;

        if $u-1#10 != $u4 goto label10;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setWrapMode(int)>($u-1#10);

        goto label27;

     label10:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_horizontalStyle>;

        if $u-1#10 != $u4 goto label11;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalStyle(int)>($u-1#10);

        goto label27;

     label11:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_verticalStyle>;

        if $u-1#10 != $u4 goto label12;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalStyle(int)>($u-1#10);

        goto label27;

     label12:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_firstHorizontalStyle>;

        if $u-1#10 != $u4 goto label13;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setFirstHorizontalStyle(int)>($u-1#10);

        goto label27;

     label13:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_lastHorizontalStyle>;

        if $u-1#10 != $u4 goto label14;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setLastHorizontalStyle(int)>($u-1#10);

        goto label27;

     label14:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_firstVerticalStyle>;

        if $u-1#10 != $u4 goto label15;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setFirstVerticalStyle(int)>($u-1#10);

        goto label27;

     label15:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_lastVerticalStyle>;

        if $u-1#10 != $u4 goto label16;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setLastVerticalStyle(int)>($u-1#10);

        goto label27;

     label16:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_horizontalBias>;

        if $u-1#10 != $u4 goto label17;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#75 = virtualinvoke $u-1#5.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.5F);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalBias(float)>($u-1#75);

        goto label27;

     label17:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_firstHorizontalBias>;

        if $u-1#10 != $u4 goto label18;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#75 = virtualinvoke $u-1#5.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.5F);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setFirstHorizontalBias(float)>($u-1#75);

        goto label27;

     label18:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_lastHorizontalBias>;

        if $u-1#10 != $u4 goto label19;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#75 = virtualinvoke $u-1#5.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.5F);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setLastHorizontalBias(float)>($u-1#75);

        goto label27;

     label19:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_firstVerticalBias>;

        if $u-1#10 != $u4 goto label20;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#75 = virtualinvoke $u-1#5.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.5F);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setFirstVerticalBias(float)>($u-1#75);

        goto label27;

     label20:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_lastVerticalBias>;

        if $u-1#10 != $u4 goto label21;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#75 = virtualinvoke $u-1#5.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.5F);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setLastVerticalBias(float)>($u-1#75);

        goto label27;

     label21:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_verticalBias>;

        if $u-1#10 != $u4 goto label22;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#75 = virtualinvoke $u-1#5.<android.content.res.TypedArray: float getFloat(int,float)>($u-1#10, 0.5F);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalBias(float)>($u-1#75);

        goto label27;

     label22:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_horizontalAlign>;

        if $u-1#10 != $u4 goto label23;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 2);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalAlign(int)>($u-1#10);

        goto label27;

     label23:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_verticalAlign>;

        if $u-1#10 != $u4 goto label24;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, 2);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalAlign(int)>($u-1#10);

        goto label27;

     label24:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_horizontalGap>;

        if $u-1#10 != $u4 goto label25;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalGap(int)>($u-1#10);

        goto label27;

     label25:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_verticalGap>;

        if $u-1#10 != $u4 goto label26;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($u-1#10, 0);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalGap(int)>($u-1#10);

        goto label27;

     label26:
        $u4 = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_flow_maxElementsWrap>;

        if $u-1#10 != $u4 goto label27;

        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        $u-1#10 = virtualinvoke $u-1#5.<android.content.res.TypedArray: int getInt(int,int)>($u-1#10, -1);

        virtualinvoke a.<androidx.constraintlayout.solver.widgets.Flow: void setMaxElementsWrap(int)>($u-1#10);

     label27:
        i = i + 1;

        goto label01;

     label28:
        a = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Helper mHelperWidget> = a;

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void validateParams()>();

        return;
    }

    public void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint, androidx.constraintlayout.solver.widgets.HelperWidget, androidx.constraintlayout.widget.ConstraintLayout$LayoutParams, android.util.SparseArray)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        androidx.constraintlayout.widget.ConstraintSet$Constraint $u4;
        androidx.constraintlayout.solver.widgets.HelperWidget $u5;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u6;
        android.util.SparseArray mapIdToWidget;
        boolean flow;
        androidx.constraintlayout.solver.widgets.Flow flow#3;
        int $u1;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u4 := @parameter0: androidx.constraintlayout.widget.ConstraintSet$Constraint;

        $u5 := @parameter1: androidx.constraintlayout.solver.widgets.HelperWidget;

        $u6 := @parameter2: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        mapIdToWidget := @parameter3: android.util.SparseArray;

        specialinvoke this.<androidx.constraintlayout.widget.VirtualLayout: void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.solver.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray)>($u4, $u5, $u6, mapIdToWidget);

        flow = $u5 instanceof androidx.constraintlayout.solver.widgets.Flow;

        if flow == 0 goto label1;

        flow#3 = (androidx.constraintlayout.solver.widgets.Flow) $u5;

        $u1 = $u6.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int orientation>;

        if $u1 == -1 goto label1;

        $u1 = $u6.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int orientation>;

        virtualinvoke flow#3.<androidx.constraintlayout.solver.widgets.Flow: void setOrientation(int)>($u1);

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2, $u3;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void onMeasure(androidx.constraintlayout.solver.widgets.VirtualLayout,int,int)>($u0, $u2, $u3);

        return;
    }

    public void onMeasure(androidx.constraintlayout.solver.widgets.VirtualLayout, int, int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        androidx.constraintlayout.solver.widgets.VirtualLayout $u7;
        int $u8, $u9, $u-1, $u-1#3;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u7 := @parameter0: androidx.constraintlayout.solver.widgets.VirtualLayout;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u-1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u8);

        $u8 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u8);

        $u-1#3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u9);

        $u9 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u9);

        if $u7 == null goto label1;

        virtualinvoke $u7.<androidx.constraintlayout.solver.widgets.VirtualLayout: void measure(int,int,int,int)>($u-1, $u8, $u-1#3, $u9);

        $u8 = virtualinvoke $u7.<androidx.constraintlayout.solver.widgets.VirtualLayout: int getMeasuredWidth()>();

        $u9 = virtualinvoke $u7.<androidx.constraintlayout.solver.widgets.VirtualLayout: int getMeasuredHeight()>();

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void setMeasuredDimension(int,int)>($u8, $u9);

        return;

     label1:
        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void setMeasuredDimension(int,int)>(0, 0);

        return;
    }

    public void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget, boolean)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u2;
        boolean $u3;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u3 := @parameter1: boolean;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void applyRtl(boolean)>($u3);

        return;
    }

    public void setFirstHorizontalBias(float)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        float $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: float;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setFirstHorizontalBias(float)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setFirstHorizontalStyle(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setFirstHorizontalStyle(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setFirstVerticalBias(float)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        float $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: float;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setFirstVerticalBias(float)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setFirstVerticalStyle(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setFirstVerticalStyle(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setHorizontalAlign(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalAlign(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setHorizontalBias(float)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        float $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: float;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalBias(float)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setHorizontalGap(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalGap(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setHorizontalStyle(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setHorizontalStyle(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setMaxElementsWrap(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setMaxElementsWrap(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setOrientation(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setOrientation(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setPadding(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setPadding(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setPaddingBottom(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingBottom(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setPaddingLeft(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingLeft(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setPaddingRight(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingRight(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setPaddingTop(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setPaddingTop(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setVerticalAlign(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalAlign(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setVerticalBias(float)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        float $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: float;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalBias(float)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setVerticalGap(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalGap(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setVerticalStyle(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setVerticalStyle(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public void setWrapMode(int)
    {
        androidx.constraintlayout.helper.widget.Flow this;
        int $u2;
        androidx.constraintlayout.solver.widgets.Flow $u0;

        this := @this: androidx.constraintlayout.helper.widget.Flow;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.helper.widget.Flow: androidx.constraintlayout.solver.widgets.Flow mFlow>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.Flow: void setWrapMode(int)>($u2);

        virtualinvoke this.<androidx.constraintlayout.helper.widget.Flow: void requestLayout()>();

        return;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.helper.widget.Flow: int WRAP_CHAIN> = 1;

        <androidx.constraintlayout.helper.widget.Flow: int WRAP_ALIGNED> = 2;

        <androidx.constraintlayout.helper.widget.Flow: int VERTICAL_ALIGN_TOP> = 0;

        <androidx.constraintlayout.helper.widget.Flow: int VERTICAL_ALIGN_CENTER> = 2;

        <androidx.constraintlayout.helper.widget.Flow: int VERTICAL_ALIGN_BOTTOM> = 1;

        <androidx.constraintlayout.helper.widget.Flow: int VERTICAL_ALIGN_BASELINE> = 3;

        <androidx.constraintlayout.helper.widget.Flow: int VERTICAL> = 1;

        <androidx.constraintlayout.helper.widget.Flow: java.lang.String TAG> = "Flow";

        <androidx.constraintlayout.helper.widget.Flow: int HORIZONTAL_ALIGN_START> = 0;

        <androidx.constraintlayout.helper.widget.Flow: int HORIZONTAL_ALIGN_END> = 1;

        <androidx.constraintlayout.helper.widget.Flow: int HORIZONTAL_ALIGN_CENTER> = 2;

        <androidx.constraintlayout.helper.widget.Flow: int HORIZONTAL> = 0;

        <androidx.constraintlayout.helper.widget.Flow: int CHAIN_SPREAD_INSIDE> = 1;

        <androidx.constraintlayout.helper.widget.Flow: int CHAIN_SPREAD> = 0;

        <androidx.constraintlayout.helper.widget.Flow: int CHAIN_PACKED> = 2;

        return;
    }
}
