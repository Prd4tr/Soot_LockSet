public final class androidx.core.view.DisplayCompat extends java.lang.Object
{
    private static final int DISPLAY_SIZE_4K_HEIGHT;
    private static final int DISPLAY_SIZE_4K_WIDTH;

    private void <init>()
    {
        androidx.core.view.DisplayCompat this;

        this := @this: androidx.core.view.DisplayCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.graphics.Point getPhysicalDisplaySize(android.content.Context, android.view.Display)
    {
        android.content.Context $u4;
        android.view.Display $u5;
        int displaySize;
        android.graphics.Point $u-1;
        boolean $u-1#8;
        android.view.Display$Mode $u-1#16;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.view.Display;

        displaySize = <android.os.Build$VERSION: int SDK_INT>;

        if displaySize >= 28 goto label1;

        $u-1 = staticinvoke <androidx.core.view.DisplayCompat: android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String,android.view.Display)>("sys.display-size", $u5);

        goto label2;

     label1:
        $u-1 = staticinvoke <androidx.core.view.DisplayCompat: android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String,android.view.Display)>("vendor.display-size", $u5);

     label2:
        if $u-1 == null goto label3;

        return $u-1;

     label3:
        $u-1#8 = staticinvoke <androidx.core.view.DisplayCompat: boolean isSonyBravia4kTv(android.content.Context)>($u4);

        if $u-1#8 == 0 goto label4;

        $u-1 = new android.graphics.Point;

        specialinvoke $u-1.<android.graphics.Point: void <init>(int,int)>(3840, 2160);

        return $u-1;

     label4:
        $u-1 = new android.graphics.Point;

        specialinvoke $u-1.<android.graphics.Point: void <init>()>();

        displaySize = <android.os.Build$VERSION: int SDK_INT>;

        if displaySize < 23 goto label5;

        $u-1#16 = virtualinvoke $u5.<android.view.Display: android.view.Display$Mode getMode()>();

        displaySize = virtualinvoke $u-1#16.<android.view.Display$Mode: int getPhysicalWidth()>();

        $u-1.<android.graphics.Point: int x> = displaySize;

        displaySize = virtualinvoke $u-1#16.<android.view.Display$Mode: int getPhysicalHeight()>();

        $u-1.<android.graphics.Point: int y> = displaySize;

        return $u-1;

     label5:
        displaySize = <android.os.Build$VERSION: int SDK_INT>;

        if displaySize < 17 goto label6;

        virtualinvoke $u5.<android.view.Display: void getRealSize(android.graphics.Point)>($u-1);

        return $u-1;

     label6:
        virtualinvoke $u5.<android.view.Display: void getSize(android.graphics.Point)>($u-1);

        return $u-1;
    }

    public static androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context, android.view.Display)
    {
        android.content.Context $u9;
        android.view.Display $u10;
        android.graphics.Point $u-1;
        int supportedModes, $u7;
        android.view.Display$Mode[] $u-1#6;
        java.util.ArrayList supportedModesCompat;
        boolean nativeModeExists, $u-1#14;
        android.view.Display$Mode $u7#13;
        androidx.core.view.DisplayCompat$ModeCompat $u7#16;
        androidx.core.view.DisplayCompat$ModeCompat[] $u2;
        java.lang.Object[] $u-1#22;

        $u9 := @parameter0: android.content.Context;

        $u10 := @parameter1: android.view.Display;

        $u-1 = staticinvoke <androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>($u9, $u10);

        supportedModes = <android.os.Build$VERSION: int SDK_INT>;

        if supportedModes < 23 goto label6;

        $u-1#6 = virtualinvoke $u10.<android.view.Display: android.view.Display$Mode[] getSupportedModes()>();

        supportedModesCompat = new java.util.ArrayList;

        supportedModes = lengthof $u-1#6;

        specialinvoke supportedModesCompat.<java.util.ArrayList: void <init>(int)>(supportedModes);

        nativeModeExists = 0;

        supportedModes = 0;

     label1:
        $u7 = lengthof $u-1#6;

        if supportedModes >= $u7 goto label4;

        $u7#13 = $u-1#6[supportedModes];

        $u-1#14 = staticinvoke <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)>($u7#13, $u-1);

        if $u-1#14 == 0 goto label2;

        $u7#16 = new androidx.core.view.DisplayCompat$ModeCompat;

        $u7#13 = $u-1#6[supportedModes];

        specialinvoke $u7#16.<androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>($u7#13, 1);

        virtualinvoke supportedModesCompat.<java.util.ArrayList: void add(int,java.lang.Object)>(supportedModes, $u7#16);

        nativeModeExists = 1;

        goto label3;

     label2:
        $u7#16 = new androidx.core.view.DisplayCompat$ModeCompat;

        $u7#13 = $u-1#6[supportedModes];

        specialinvoke $u7#16.<androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>($u7#13, 0);

        virtualinvoke supportedModesCompat.<java.util.ArrayList: void add(int,java.lang.Object)>(supportedModes, $u7#16);

     label3:
        supportedModes = supportedModes + 1;

        goto label1;

     label4:
        if nativeModeExists != 0 goto label5;

        $u7#16 = new androidx.core.view.DisplayCompat$ModeCompat;

        specialinvoke $u7#16.<androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.graphics.Point)>($u-1);

        virtualinvoke supportedModesCompat.<java.util.ArrayList: boolean add(java.lang.Object)>($u7#16);

     label5:
        $u2 = newarray (androidx.core.view.DisplayCompat$ModeCompat)[0];

        $u-1#22 = virtualinvoke supportedModesCompat.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($u2);

        $u2 = (androidx.core.view.DisplayCompat$ModeCompat[]) $u-1#22;

        return $u2;

     label6:
        $u2 = newarray (androidx.core.view.DisplayCompat$ModeCompat)[1];

        $u7#16 = new androidx.core.view.DisplayCompat$ModeCompat;

        specialinvoke $u7#16.<androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.graphics.Point)>($u-1);

        $u2[0] = $u7#16;

        return $u2;
    }

    private static java.lang.String getSystemProperty(java.lang.String)
    {
        java.lang.String $u6;
        java.lang.Class[] $u3;
        java.lang.Class $u-1;
        java.lang.reflect.Method $u-1#6;
        java.lang.Object[] $u2;
        java.lang.Object $u-1#9;
        java.lang.Exception systemProperties;

        $u6 := @parameter0: java.lang.String;

     label1:
        $u-1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

        $u3 = newarray (java.lang.Class)[1];

        $u3[0] = class "Ljava/lang/String;";

        $u-1#6 = virtualinvoke $u-1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $u3);

        $u2 = newarray (java.lang.Object)[1];

        $u2[0] = $u6;

        $u-1#9 = virtualinvoke $u-1#6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($u-1, $u2);

        $u6 = (java.lang.String) $u-1#9;

     label2:
        return $u6;

     label3:
        systemProperties := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static boolean isSonyBravia4kTv(android.content.Context)
    {
        android.content.Context $u2;
        boolean $u-1;
        java.lang.String $u0, $u1;
        android.content.pm.PackageManager $u-1#11;

        $u2 := @parameter0: android.content.Context;

        $u-1 = staticinvoke <androidx.core.view.DisplayCompat: boolean isTv(android.content.Context)>($u2);

        if $u-1 == 0 goto label1;

        $u0 = <android.os.Build: java.lang.String MANUFACTURER>;

        $u1 = "Sony";

        $u-1 = virtualinvoke $u1.<java.lang.String: boolean equals(java.lang.Object)>($u0);

        if $u-1 == 0 goto label1;

        $u0 = <android.os.Build: java.lang.String MODEL>;

        $u-1 = virtualinvoke $u0.<java.lang.String: boolean startsWith(java.lang.String)>("BRAVIA");

        if $u-1 == 0 goto label1;

        $u-1#11 = virtualinvoke $u2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $u-1 = virtualinvoke $u-1#11.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("com.sony.dtv.hardware.panel.qfhd");

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isTv(android.content.Context)
    {
        android.content.Context $u3;
        java.lang.Object $u-1;
        android.app.UiModeManager uiModeManager;
        int $u-1#5;

        $u3 := @parameter0: android.content.Context;

        $u-1 = virtualinvoke $u3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("uimode");

        uiModeManager = (android.app.UiModeManager) $u-1;

        if uiModeManager == null goto label1;

        $u-1#5 = virtualinvoke uiModeManager.<android.app.UiModeManager: int getCurrentModeType()>();

        if $u-1#5 != 4 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static android.graphics.Point parseDisplaySize(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String $u4;
        android.graphics.Point $u3;
        java.lang.String[] $u-1;
        int width, $u-1#15;
        java.lang.NumberFormatException width#17;

        $u4 := @parameter0: java.lang.String;

        $u4 = virtualinvoke $u4.<java.lang.String: java.lang.String trim()>();

        $u-1 = virtualinvoke $u4.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("x", -1);

        width = lengthof $u-1;

        if width != 2 goto label1;

        $u4 = $u-1[0];

        width = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($u4);

        $u4 = $u-1[1];

        $u-1#15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($u4);

        if width <= 0 goto label1;

        if $u-1#15 <= 0 goto label1;

        $u3 = new android.graphics.Point;

        specialinvoke $u3.<android.graphics.Point: void <init>(int,int)>(width, $u-1#15);

        return $u3;

     label1:
        width#17 = new java.lang.NumberFormatException;

        specialinvoke width#17.<java.lang.NumberFormatException: void <init>()>();

        throw width#17;
    }

    private static android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String, android.view.Display)
    {
        java.lang.String $u2;
        android.view.Display $u3;
        int $u-1;
        boolean $u-1#5;
        android.graphics.Point $u-1#7;
        java.lang.NumberFormatException $u1;

        $u2 := @parameter0: java.lang.String;

        $u3 := @parameter1: android.view.Display;

        $u-1 = virtualinvoke $u3.<android.view.Display: int getDisplayId()>();

        if $u-1 != 0 goto label4;

        $u2 = staticinvoke <androidx.core.view.DisplayCompat: java.lang.String getSystemProperty(java.lang.String)>($u2);

        $u-1#5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u2);

        if $u-1#5 != 0 goto label4;

     label1:
        $u-1#7 = staticinvoke <androidx.core.view.DisplayCompat: android.graphics.Point parseDisplaySize(java.lang.String)>($u2);

     label2:
        return $u-1#7;

     label3:
        $u1 := @caughtexception;

     label4:
        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static boolean physicalSizeEquals(android.view.Display$Mode, android.graphics.Point)
    {
        android.view.Display$Mode $u2;
        android.graphics.Point $u3;
        int $u-1, $u1;

        $u2 := @parameter0: android.view.Display$Mode;

        $u3 := @parameter1: android.graphics.Point;

        $u-1 = virtualinvoke $u2.<android.view.Display$Mode: int getPhysicalWidth()>();

        $u1 = $u3.<android.graphics.Point: int x>;

        if $u-1 != $u1 goto label1;

        $u-1 = virtualinvoke $u2.<android.view.Display$Mode: int getPhysicalHeight()>();

        $u1 = $u3.<android.graphics.Point: int y>;

        if $u-1 == $u1 goto label2;

     label1:
        $u-1 = virtualinvoke $u2.<android.view.Display$Mode: int getPhysicalWidth()>();

        $u1 = $u3.<android.graphics.Point: int y>;

        if $u-1 != $u1 goto label3;

        $u-1 = virtualinvoke $u2.<android.view.Display$Mode: int getPhysicalHeight()>();

        $u1 = $u3.<android.graphics.Point: int x>;

        if $u-1 != $u1 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.core.view.DisplayCompat: int DISPLAY_SIZE_4K_WIDTH> = 3840;

        <androidx.core.view.DisplayCompat: int DISPLAY_SIZE_4K_HEIGHT> = 2160;

        return;
    }
}
