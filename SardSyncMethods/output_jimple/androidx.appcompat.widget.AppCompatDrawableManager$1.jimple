class androidx.appcompat.widget.AppCompatDrawableManager$1 extends java.lang.Object implements androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
{
    private final int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY;
    private final int[] COLORFILTER_COLOR_CONTROL_ACTIVATED;
    private final int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL;
    private final int[] TINT_CHECKABLE_BUTTON_LIST;
    private final int[] TINT_COLOR_CONTROL_NORMAL;
    private final int[] TINT_COLOR_CONTROL_STATE_LIST;

    void <init>()
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        int[] $u1;
        int $u2;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u1 = newarray (int)[3];

        $u2 = <androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha>;

        $u1[0] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha>;

        $u1[1] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha>;

        $u1[2] = $u2;

        this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL> = $u1;

        $u1 = newarray (int)[7];

        $u2 = <androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha>;

        $u1[0] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material>;

        $u1[1] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha>;

        $u1[2] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha>;

        $u1[3] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha>;

        $u1[4] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha>;

        $u1[5] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha>;

        $u1[6] = $u2;

        this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL> = $u1;

        $u1 = newarray (int)[10];

        $u2 = <androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha>;

        $u1[0] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha>;

        $u1[1] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $u1[2] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_cursor_material>;

        $u1[3] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark>;

        $u1[4] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark>;

        $u1[5] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark>;

        $u1[6] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light>;

        $u1[7] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light>;

        $u1[8] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light>;

        $u1[9] = $u2;

        this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED> = $u1;

        $u1 = newarray (int)[3];

        $u2 = <androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult>;

        $u1[0] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $u1[1] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult>;

        $u1[2] = $u2;

        this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY> = $u1;

        $u1 = newarray (int)[2];

        $u2 = <androidx.appcompat.R$drawable: int abc_tab_indicator_material>;

        $u1[0] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_textfield_search_material>;

        $u1[1] = $u2;

        this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST> = $u1;

        $u1 = newarray (int)[4];

        $u2 = <androidx.appcompat.R$drawable: int abc_btn_check_material>;

        $u1[0] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_btn_radio_material>;

        $u1[1] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_btn_check_material_anim>;

        $u1[2] = $u2;

        $u2 = <androidx.appcompat.R$drawable: int abc_btn_radio_material_anim>;

        $u1[3] = $u2;

        this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST> = $u1;

        return;
    }

    private boolean arrayContains(int[], int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        int[] $u5;
        int $u6, id, $u0, $u2;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u5 := @parameter0: int[];

        $u6 := @parameter1: int;

        $u0 = lengthof $u5;

        $u2 = 0;

     label1:
        if $u2 >= $u0 goto label3;

        id = $u5[$u2];

        if id != $u6 goto label2;

        return 1;

     label2:
        $u2 = $u2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u2;
        android.content.res.ColorStateList $u-1;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u2 := @parameter0: android.content.Context;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($u2, 0);

        return $u-1;
    }

    private android.content.res.ColorStateList createButtonColorStateList(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u7;
        int $u8, colorControlHighlight, disabledColor, $u-1;
        int[][] states;
        int[] colors, $u5;
        android.content.res.ColorStateList $u5#22;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u7 := @parameter0: android.content.Context;

        $u8 := @parameter1: int;

        states = newarray (int[])[4];

        colors = newarray (int)[4];

        colorControlHighlight = <androidx.appcompat.R$attr: int colorControlHighlight>;

        colorControlHighlight = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u7, colorControlHighlight);

        disabledColor = <androidx.appcompat.R$attr: int colorButtonNormal>;

        disabledColor = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($u7, disabledColor);

        $u5 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        states[0] = $u5;

        colors[0] = disabledColor;

        $u5 = <androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        states[1] = $u5;

        $u-1 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>(colorControlHighlight, $u8);

        colors[1] = $u-1;

        disabledColor = 1 + 1;

        $u5 = <androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        states[disabledColor] = $u5;

        colorControlHighlight = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>(colorControlHighlight, $u8);

        colors[disabledColor] = colorControlHighlight;

        colorControlHighlight = disabledColor + 1;

        $u5 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        states[colorControlHighlight] = $u5;

        colors[colorControlHighlight] = $u8;

        $u5#22 = new android.content.res.ColorStateList;

        specialinvoke $u5#22.<android.content.res.ColorStateList: void <init>(int[][],int[])>(states, colors);

        return $u5#22;
    }

    private android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u2;
        int $u0;
        android.content.res.ColorStateList $u-1;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u2 := @parameter0: android.content.Context;

        $u0 = <androidx.appcompat.R$attr: int colorAccent>;

        $u0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u2, $u0);

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($u2, $u0);

        return $u-1;
    }

    private android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u2;
        int $u0;
        android.content.res.ColorStateList $u-1;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u2 := @parameter0: android.content.Context;

        $u0 = <androidx.appcompat.R$attr: int colorButtonNormal>;

        $u0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u2, $u0);

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($u2, $u0);

        return $u-1;
    }

    private android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u7;
        int[][] states;
        int[] colors, $u4;
        int thumbColor, $u4#15;
        android.content.res.ColorStateList $u-1;
        boolean $u-1#7;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u7 := @parameter0: android.content.Context;

        states = newarray (int[])[3];

        colors = newarray (int)[3];

        thumbColor = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $u-1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($u7, thumbColor);

        if $u-1 == null goto label1;

        $u-1#7 = virtualinvoke $u-1.<android.content.res.ColorStateList: boolean isStateful()>();

        if $u-1#7 == 0 goto label1;

        $u4 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        states[0] = $u4;

        $u4 = states[0];

        thumbColor = virtualinvoke $u-1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($u4, 0);

        colors[0] = thumbColor;

        $u4 = <androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        states[1] = $u4;

        $u4#15 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $u4#15 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u7, $u4#15);

        colors[1] = $u4#15;

        thumbColor = 1 + 1;

        $u4 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        states[thumbColor] = $u4;

        $u4#15 = virtualinvoke $u-1.<android.content.res.ColorStateList: int getDefaultColor()>();

        colors[thumbColor] = $u4#15;

        goto label2;

     label1:
        $u4 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        states[0] = $u4;

        thumbColor = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        thumbColor = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($u7, thumbColor);

        colors[0] = thumbColor;

        $u4 = <androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        states[1] = $u4;

        $u4#15 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $u4#15 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u7, $u4#15);

        colors[1] = $u4#15;

        thumbColor = 1 + 1;

        $u4 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        states[thumbColor] = $u4;

        $u4#15 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $u4#15 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u7, $u4#15);

        colors[thumbColor] = $u4#15;

     label2:
        $u-1 = new android.content.res.ColorStateList;

        specialinvoke $u-1.<android.content.res.ColorStateList: void <init>(int[][],int[])>(states, colors);

        return $u-1;
    }

    private void setPorterDuffColorFilter(android.graphics.drawable.Drawable, int, android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        int $u3;
        android.graphics.PorterDuff$Mode $u4;
        android.graphics.drawable.Drawable $u2;
        boolean $u-1;
        android.graphics.PorterDuffColorFilter $u-1#7;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: int;

        $u4 := @parameter2: android.graphics.PorterDuff$Mode;

        $u-1 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u2);

        if $u-1 == 0 goto label1;

        $u2 = virtualinvoke $u2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        if $u4 != null goto label2;

        $u4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        goto label2;

     label2:
        $u-1#7 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($u3, $u4);

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($u-1#7);

        return;
    }

    public android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal, android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        androidx.appcompat.widget.ResourceManagerInternal $u5;
        android.content.Context $u6;
        int $u7, $u0;
        android.graphics.drawable.LayerDrawable $u0#2;
        android.graphics.drawable.Drawable[] $u1;
        android.graphics.drawable.Drawable $u-1;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u5 := @parameter0: androidx.appcompat.widget.ResourceManagerInternal;

        $u6 := @parameter1: android.content.Context;

        $u7 := @parameter2: int;

        $u0 = <androidx.appcompat.R$drawable: int abc_cab_background_top_material>;

        if $u7 != $u0 goto label1;

        $u0#2 = new android.graphics.drawable.LayerDrawable;

        $u1 = newarray (android.graphics.drawable.Drawable)[2];

        $u7 = <androidx.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $u-1 = virtualinvoke $u5.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u6, $u7);

        $u1[0] = $u-1;

        $u7 = <androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $u-1 = virtualinvoke $u5.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u6, $u7);

        $u1[1] = $u-1;

        specialinvoke $u0#2.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($u1);

        return $u0#2;

     label1:
        return null;
    }

    public android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u2;
        int $u3, $u0;
        android.content.res.ColorStateList $u-1;
        int[] $u0#23;
        boolean $u-1#24;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: int;

        $u0 = <androidx.appcompat.R$drawable: int abc_edit_text_material>;

        if $u3 != $u0 goto label01;

        $u3 = <androidx.appcompat.R$color: int abc_tint_edittext>;

        $u-1 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;

     label01:
        $u0 = <androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        if $u3 != $u0 goto label02;

        $u3 = <androidx.appcompat.R$color: int abc_tint_switch_track>;

        $u-1 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;

     label02:
        $u0 = <androidx.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $u3 != $u0 goto label03;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>($u2);

        return $u-1;

     label03:
        $u0 = <androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        if $u3 != $u0 goto label04;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>($u2);

        return $u-1;

     label04:
        $u0 = <androidx.appcompat.R$drawable: int abc_btn_borderless_material>;

        if $u3 != $u0 goto label05;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>($u2);

        return $u-1;

     label05:
        $u0 = <androidx.appcompat.R$drawable: int abc_btn_colored_material>;

        if $u3 != $u0 goto label06;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>($u2);

        return $u-1;

     label06:
        $u0 = <androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        if $u3 == $u0 goto label12;

        $u0 = <androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        if $u3 != $u0 goto label07;

        goto label12;

     label07:
        $u0#23 = this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL>;

        $u-1#24 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($u0#23, $u3);

        if $u-1#24 == 0 goto label08;

        $u3 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $u-1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;

     label08:
        $u0#23 = this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $u-1#24 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($u0#23, $u3);

        if $u-1#24 == 0 goto label09;

        $u3 = <androidx.appcompat.R$color: int abc_tint_default>;

        $u-1 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;

     label09:
        $u0#23 = this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $u-1#24 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($u0#23, $u3);

        if $u-1#24 == 0 goto label10;

        $u3 = <androidx.appcompat.R$color: int abc_tint_btn_checkable>;

        $u-1 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;

     label10:
        $u0 = <androidx.appcompat.R$drawable: int abc_seekbar_thumb_material>;

        if $u3 != $u0 goto label11;

        $u3 = <androidx.appcompat.R$color: int abc_tint_seek_thumb>;

        $u-1 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;

     label11:
        return null;

     label12:
        $u3 = <androidx.appcompat.R$color: int abc_tint_spinner>;

        $u-1 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($u2, $u3);

        return $u-1;
    }

    public android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        int $u3, $u1;
        android.graphics.PorterDuff$Mode ret0;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u3 := @parameter0: int;

        $u1 = <androidx.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $u3 != $u1 goto label1;

        ret0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return ret0;

     label1:
        return null;
    }

    public boolean tintDrawable(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u8;
        int $u9, ld;
        android.graphics.drawable.Drawable $u10;
        android.graphics.drawable.LayerDrawable ld#6;
        android.graphics.PorterDuff$Mode $u-1;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u8 := @parameter0: android.content.Context;

        $u9 := @parameter1: int;

        $u10 := @parameter2: android.graphics.drawable.Drawable;

        ld = <androidx.appcompat.R$drawable: int abc_seekbar_track_material>;

        if $u9 != ld goto label1;

        ld#6 = (android.graphics.drawable.LayerDrawable) $u10;

        $u10 = virtualinvoke ld#6.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $u9 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $u9 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u8, $u9);

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($u10, $u9, $u-1);

        $u10 = virtualinvoke ld#6.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $u9 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $u9 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u8, $u9);

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($u10, $u9, $u-1);

        $u10 = virtualinvoke ld#6.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $u9 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $u9 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u8, $u9);

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($u10, $u9, $u-1);

        return 1;

     label1:
        ld = <androidx.appcompat.R$drawable: int abc_ratingbar_material>;

        if $u9 == ld goto label3;

        ld = <androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material>;

        if $u9 == ld goto label3;

        ld = <androidx.appcompat.R$drawable: int abc_ratingbar_small_material>;

        if $u9 != ld goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        ld#6 = (android.graphics.drawable.LayerDrawable) $u10;

        $u10 = virtualinvoke ld#6.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $u9 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $u9 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($u8, $u9);

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($u10, $u9, $u-1);

        $u10 = virtualinvoke ld#6.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $u9 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $u9 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u8, $u9);

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($u10, $u9, $u-1);

        $u10 = virtualinvoke ld#6.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $u9 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $u9 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u8, $u9);

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($u10, $u9, $u-1);

        return 1;
    }

    public boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 this;
        android.content.Context $u7;
        int $u8, colorAttr, alpha, color#16;
        android.graphics.drawable.Drawable $u9;
        android.graphics.PorterDuff$Mode $u-1;
        boolean colorAttrSet, $u-1#8;
        int[] color;
        android.graphics.PorterDuffColorFilter $u-1#25;

        this := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $u7 := @parameter0: android.content.Context;

        $u8 := @parameter1: int;

        $u9 := @parameter2: android.graphics.drawable.Drawable;

        $u-1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        colorAttrSet = 0;

        colorAttr = 0;

        alpha = -1;

        color = this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $u-1#8 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>(color, $u8);

        if $u-1#8 == 0 goto label1;

        colorAttr = <androidx.appcompat.R$attr: int colorControlNormal>;

        colorAttrSet = 1;

        goto label5;

     label1:
        color = this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $u-1#8 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>(color, $u8);

        if $u-1#8 == 0 goto label2;

        colorAttr = <androidx.appcompat.R$attr: int colorControlActivated>;

        colorAttrSet = 1;

        goto label5;

     label2:
        color = this.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $u-1#8 = specialinvoke this.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>(color, $u8);

        if $u-1#8 == 0 goto label3;

        colorAttr = 16842801;

        colorAttrSet = 1;

        $u-1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        goto label5;

     label3:
        color#16 = <androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha>;

        if $u8 != color#16 goto label4;

        colorAttr = 16842800;

        colorAttrSet = 1;

        alpha = staticinvoke <java.lang.Math: int round(float)>(40.8F);

        goto label5;

     label4:
        color#16 = <androidx.appcompat.R$drawable: int abc_dialog_material_background>;

        if $u8 != color#16 goto label5;

        colorAttr = 16842801;

        colorAttrSet = 1;

     label5:
        if colorAttrSet == 0 goto label8;

        colorAttrSet = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($u9);

        if colorAttrSet == 0 goto label6;

        $u9 = virtualinvoke $u9.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label6:
        $u8 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($u7, colorAttr);

        $u-1#25 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($u8, $u-1);

        virtualinvoke $u9.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($u-1#25);

        if alpha == -1 goto label7;

        virtualinvoke $u9.<android.graphics.drawable.Drawable: void setAlpha(int)>(alpha);

     label7:
        return 1;

     label8:
        return 0;
    }
}
