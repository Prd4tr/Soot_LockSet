public final class androidx.core.graphics.drawable.DrawableCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sGetLayoutDirectionMethod;
    private static boolean sGetLayoutDirectionMethodFetched;
    private static java.lang.reflect.Method sSetLayoutDirectionMethod;
    private static boolean sSetLayoutDirectionMethodFetched;

    private void <init>()
    {
        androidx.core.graphics.drawable.DrawableCompat this;

        this := @this: androidx.core.graphics.drawable.DrawableCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void applyTheme(android.graphics.drawable.Drawable, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.Drawable $u2;
        android.content.res.Resources$Theme $u3;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: android.content.res.Resources$Theme;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>($u3);

     label1:
        return;
    }

    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        boolean $u-1;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        $u-1 = virtualinvoke $u2.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        return $u-1;

     label1:
        return 0;
    }

    public static void clearColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u5;
        int container, $u-1#22;
        boolean container#5;
        android.graphics.drawable.InsetDrawable container#7;
        androidx.core.graphics.drawable.WrappedDrawable container#12;
        android.graphics.drawable.DrawableContainer container#17;
        android.graphics.drawable.Drawable$ConstantState $u-1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState state;

        $u5 := @parameter0: android.graphics.drawable.Drawable;

        container = <android.os.Build$VERSION: int SDK_INT>;

        if container < 23 goto label1;

        virtualinvoke $u5.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;

     label1:
        container = <android.os.Build$VERSION: int SDK_INT>;

        if container < 21 goto label7;

        virtualinvoke $u5.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        container#5 = $u5 instanceof android.graphics.drawable.InsetDrawable;

        if container#5 == 0 goto label2;

        container#7 = (android.graphics.drawable.InsetDrawable) $u5;

        $u5 = virtualinvoke container#7.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($u5);

        return;

     label2:
        container#5 = $u5 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if container#5 == 0 goto label3;

        container#12 = (androidx.core.graphics.drawable.WrappedDrawable) $u5;

        $u5 = interfaceinvoke container#12.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($u5);

        return;

     label3:
        container#5 = $u5 instanceof android.graphics.drawable.DrawableContainer;

        if container#5 == 0 goto label8;

        container#17 = (android.graphics.drawable.DrawableContainer) $u5;

        $u-1 = virtualinvoke container#17.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        state = (android.graphics.drawable.DrawableContainer$DrawableContainerState) $u-1;

        if state == null goto label6;

        container = 0;

        $u-1#22 = virtualinvoke state.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

     label4:
        if container >= $u-1#22 goto label6;

        $u5 = virtualinvoke state.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>(container);

        if $u5 == null goto label5;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($u5);

     label5:
        container = container + 1;

        goto label4;

     label6:
        return;

     label7:
        virtualinvoke $u5.<android.graphics.drawable.Drawable: void clearColorFilter()>();

     label8:
        return;
    }

    public static int getAlpha(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        int $u-1;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 19 goto label1;

        $u-1 = virtualinvoke $u2.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $u-1;

     label1:
        return 0;
    }

    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        android.graphics.ColorFilter $u-1;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        $u-1 = virtualinvoke $u2.<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>();

        return $u-1;

     label1:
        return null;
    }

    public static int getLayoutDirection(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u6;
        java.lang.Class[] $u5;
        int e;
        boolean e#7;
        java.lang.Class e1;
        java.lang.reflect.Method $u-1;
        java.lang.NoSuchMethodException e1#14;
        java.lang.Object[] e1#17;
        java.lang.Object $u-1#18;
        java.lang.Integer e#20;
        java.lang.Exception e#23;

        $u6 := @parameter0: android.graphics.drawable.Drawable;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 23 goto label01;

        e = virtualinvoke $u6.<android.graphics.drawable.Drawable: int getLayoutDirection()>();

        return e;

     label01:
        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 17 goto label12;

        e#7 = <androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched>;

        if e#7 != 0 goto label08;

        e1 = class "Landroid/graphics/drawable/Drawable;";

        $u5 = newarray (java.lang.Class)[0];

     label02:
        $u-1 = virtualinvoke e1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getLayoutDirection", $u5);

     label03:
        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod> = $u-1;

     label04:
        virtualinvoke $u-1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label05:
        goto label07;

     label06:
        e1#14 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve getLayoutDirection() method", e1#14);

     label07:
        <androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched> = 1;

     label08:
        $u-1 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

        if $u-1 == null goto label12;

     label09:
        e1#17 = newarray (java.lang.Object)[0];

        $u-1#18 = virtualinvoke $u-1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($u6, e1#17);

        e#20 = (java.lang.Integer) $u-1#18;

        e = virtualinvoke e#20.<java.lang.Integer: int intValue()>();

     label10:
        return e;

     label11:
        e#23 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke getLayoutDirection() via reflection", e#23);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod> = null;

     label12:
        return 0;

        catch java.lang.NoSuchMethodException from label02 to label03 with label06;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static void inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.Drawable $u2;
        android.content.res.Resources $u3;
        org.xmlpull.v1.XmlPullParser $u4;
        android.util.AttributeSet $u5;
        android.content.res.Resources$Theme $u6;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: android.content.res.Resources;

        $u4 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $u5 := @parameter3: android.util.AttributeSet;

        $u6 := @parameter4: android.content.res.Resources$Theme;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($u3, $u4, $u5, $u6);

        return;

     label1:
        virtualinvoke $u2.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($u3, $u4, $u5);

        return;
    }

    public static boolean isAutoMirrored(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        boolean $u-1;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 19 goto label1;

        $u-1 = virtualinvoke $u2.<android.graphics.drawable.Drawable: boolean isAutoMirrored()>();

        return $u-1;

     label1:
        return 0;
    }

    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u0;

        $u0 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke $u0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        return;
    }

    public static void setAutoMirrored(android.graphics.drawable.Drawable, boolean)
    {
        android.graphics.drawable.Drawable $u2;
        boolean $u3;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: boolean;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 19 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($u3);

     label1:
        return;
    }

    public static void setHotspot(android.graphics.drawable.Drawable, float, float)
    {
        android.graphics.drawable.Drawable $u2;
        float $u3, $u4;
        int $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>($u3, $u4);

     label1:
        return;
    }

    public static void setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.graphics.drawable.Drawable $u2;
        int $u3, $u4, $u5, $u6, $u0;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($u3, $u4, $u5, $u6);

     label1:
        return;
    }

    public static boolean setLayoutDirection(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.Drawable $u7;
        int $u8, e;
        java.lang.Class $u6, e#10;
        boolean $u-1;
        java.lang.Class[] $u5;
        java.lang.reflect.Method $u-1#13;
        java.lang.NoSuchMethodException e#15;
        java.lang.Object[] $u4;
        java.lang.Integer $u-1#19;
        java.lang.Exception e#21;

        $u7 := @parameter0: android.graphics.drawable.Drawable;

        $u8 := @parameter1: int;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 23 goto label01;

        $u-1 = virtualinvoke $u7.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($u8);

        return $u-1;

     label01:
        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 17 goto label12;

        $u-1 = <androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched>;

        if $u-1 != 0 goto label08;

        e#10 = class "Landroid/graphics/drawable/Drawable;";

        $u5 = newarray (java.lang.Class)[1];

        $u6 = <java.lang.Integer: java.lang.Class TYPE>;

        $u5[0] = $u6;

     label02:
        $u-1#13 = virtualinvoke e#10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setLayoutDirection", $u5);

     label03:
        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod> = $u-1#13;

     label04:
        virtualinvoke $u-1#13.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label05:
        goto label07;

     label06:
        e#15 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve setLayoutDirection(int) method", e#15);

     label07:
        <androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched> = 1;

     label08:
        $u-1#13 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

        if $u-1#13 == null goto label12;

     label09:
        $u4 = newarray (java.lang.Object)[1];

        $u-1#19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u8);

        $u4[0] = $u-1#19;

        virtualinvoke $u-1#13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($u7, $u4);

     label10:
        return 1;

     label11:
        e#21 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke setLayoutDirection(int) via reflection", e#21);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod> = null;

     label12:
        return 0;

        catch java.lang.NoSuchMethodException from label02 to label03 with label06;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static void setTint(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.Drawable $u2;
        int $u3, $u0;
        boolean $u0#2;
        androidx.core.graphics.drawable.TintAwareDrawable $u0#4;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setTint(int)>($u3);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.graphics.drawable.TintAwareDrawable) $u2;

        interfaceinvoke $u0#4.<androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)>($u3);

     label2:
        return;
    }

    public static void setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList)
    {
        android.graphics.drawable.Drawable $u2;
        android.content.res.ColorStateList $u3;
        int $u0;
        boolean $u0#2;
        androidx.core.graphics.drawable.TintAwareDrawable $u0#4;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: android.content.res.ColorStateList;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($u3);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.graphics.drawable.TintAwareDrawable) $u2;

        interfaceinvoke $u0#4.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>($u3);

     label2:
        return;
    }

    public static void setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.Drawable $u2;
        android.graphics.PorterDuff$Mode $u3;
        int $u0;
        boolean $u0#2;
        androidx.core.graphics.drawable.TintAwareDrawable $u0#4;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u3 := @parameter1: android.graphics.PorterDuff$Mode;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label1;

        virtualinvoke $u2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($u3);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.graphics.drawable.TintAwareDrawable) $u2;

        interfaceinvoke $u0#4.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($u3);

     label2:
        return;
    }

    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u1;
        boolean $u0;
        androidx.core.graphics.drawable.WrappedDrawable $u0#3;

        $u1 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = $u1 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if $u0 == 0 goto label1;

        $u0#3 = (androidx.core.graphics.drawable.WrappedDrawable) $u1;

        $u1 = interfaceinvoke $u0#3.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

     label1:
        return $u1;
    }

    public static android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $u2;
        int $u0;
        boolean $u0#5;
        androidx.core.graphics.drawable.WrappedDrawableApi21 $u0#6;
        androidx.core.graphics.drawable.WrappedDrawableApi14 $u0#8;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 23 goto label1;

        return $u2;

     label1:
        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 21 goto label3;

        $u0#5 = $u2 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $u0#5 != 0 goto label2;

        $u0#6 = new androidx.core.graphics.drawable.WrappedDrawableApi21;

        specialinvoke $u0#6.<androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)>($u2);

        return $u0#6;

     label2:
        return $u2;

     label3:
        $u0#5 = $u2 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $u0#5 != 0 goto label4;

        $u0#8 = new androidx.core.graphics.drawable.WrappedDrawableApi14;

        specialinvoke $u0#8.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>($u2);

        return $u0#8;

     label4:
        return $u2;
    }

    public static void <clinit>()
    {
        <androidx.core.graphics.drawable.DrawableCompat: java.lang.String TAG> = "DrawableCompat";

        return;
    }
}
