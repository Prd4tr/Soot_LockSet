class androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase extends java.lang.Object implements androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
{
    private static final int DOUBLE_TAP_TIMEOUT;
    private static final int LONGPRESS_TIMEOUT;
    private static final int LONG_PRESS;
    private static final int SHOW_PRESS;
    private static final int TAP;
    private static final int TAP_TIMEOUT;
    private boolean mAlwaysInBiggerTapRegion;
    private boolean mAlwaysInTapRegion;
    android.view.MotionEvent mCurrentDownEvent;
    boolean mDeferConfirmSingleTap;
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener;
    private int mDoubleTapSlopSquare;
    private float mDownFocusX;
    private float mDownFocusY;
    private final android.os.Handler mHandler;
    private boolean mInLongPress;
    private boolean mIsDoubleTapping;
    private boolean mIsLongpressEnabled;
    private float mLastFocusX;
    private float mLastFocusY;
    final android.view.GestureDetector$OnGestureListener mListener;
    private int mMaximumFlingVelocity;
    private int mMinimumFlingVelocity;
    private android.view.MotionEvent mPreviousUpEvent;
    boolean mStillDown;
    private int mTouchSlopSquare;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int $u-1;

        <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int TAP> = 3;

        <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int SHOW_PRESS> = 1;

        <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int LONG_PRESS> = 2;

        $u-1 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int LONGPRESS_TIMEOUT> = $u-1;

        $u-1 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int TAP_TIMEOUT> = $u-1;

        $u-1 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int DOUBLE_TAP_TIMEOUT> = $u-1;

        return;
    }

    void <init>(android.content.Context, android.view.GestureDetector$OnGestureListener, android.os.Handler)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.content.Context $u2;
        android.view.GestureDetector$OnGestureListener $u3;
        android.os.Handler $u4;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler $u0;
        boolean $u0#3;
        android.view.GestureDetector$OnDoubleTapListener $u0#5;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.view.GestureDetector$OnGestureListener;

        $u4 := @parameter2: android.os.Handler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if $u4 == null goto label1;

        $u0 = new androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler;

        specialinvoke $u0.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler)>(this, $u4);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler> = $u0;

        goto label2;

     label1:
        $u0 = new androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler;

        specialinvoke $u0.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase)>(this);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler> = $u0;

     label2:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener> = $u3;

        $u0#3 = $u3 instanceof android.view.GestureDetector$OnDoubleTapListener;

        if $u0#3 == 0 goto label3;

        $u0#5 = (android.view.GestureDetector$OnDoubleTapListener) $u3;

        virtualinvoke this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>($u0#5);

     label3:
        specialinvoke this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void init(android.content.Context)>($u2);

        return;
    }

    private void cancel()
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.os.Handler $u0;
        android.view.VelocityTracker $u0#7;
        boolean $u1;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(1);

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(2);

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(3);

        $u0#7 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $u0#7.<android.view.VelocityTracker: void recycle()>();

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker> = null;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mStillDown> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInBiggerTapRegion> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap> = 0;

        $u1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress>;

        if $u1 == 0 goto label1;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress> = 0;

     label1:
        return;
    }

    private void cancelTaps()
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.os.Handler $u0;
        boolean $u1;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(1);

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(2);

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(3);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInBiggerTapRegion> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap> = 0;

        $u1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress>;

        if $u1 == 0 goto label1;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress> = 0;

     label1:
        return;
    }

    private void init(android.content.Context)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.content.Context $u5;
        android.view.GestureDetector$OnGestureListener configuration;
        android.view.ViewConfiguration $u-1;
        int $u-1#5, $u-1#7, $u-1#8;
        java.lang.IllegalArgumentException configuration#14;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u5 := @parameter0: android.content.Context;

        if $u5 == null goto label2;

        configuration = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        if configuration == null goto label1;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsLongpressEnabled> = 1;

        $u-1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u5);

        $u-1#5 = virtualinvoke $u-1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $u-1#7 = virtualinvoke $u-1.<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>();

        $u-1#8 = virtualinvoke $u-1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMinimumFlingVelocity> = $u-1#8;

        $u-1#8 = virtualinvoke $u-1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMaximumFlingVelocity> = $u-1#8;

        $u-1#5 = $u-1#5 * $u-1#5;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mTouchSlopSquare> = $u-1#5;

        $u-1#7 = $u-1#7 * $u-1#7;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mDoubleTapSlopSquare> = $u-1#7;

        return;

     label1:
        configuration#14 = new java.lang.IllegalArgumentException;

        specialinvoke configuration#14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("OnGestureListener must not be null");

        throw configuration#14;

     label2:
        configuration#14 = new java.lang.IllegalArgumentException;

        specialinvoke configuration#14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null");

        throw configuration#14;
    }

    private boolean isConsideredDoubleTap(android.view.MotionEvent, android.view.MotionEvent, android.view.MotionEvent)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.view.MotionEvent $u7, $u8, $u9;
        boolean deltaX;
        long $u-1, $u-1#5;
        int deltaX#8, deltaY, $u3;
        byte deltaX#10;
        float $u-1#11;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u7 := @parameter0: android.view.MotionEvent;

        $u8 := @parameter1: android.view.MotionEvent;

        $u9 := @parameter2: android.view.MotionEvent;

        deltaX = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInBiggerTapRegion>;

        if deltaX != 0 goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke $u9.<android.view.MotionEvent: long getEventTime()>();

        $u-1#5 = virtualinvoke $u8.<android.view.MotionEvent: long getEventTime()>();

        $u-1 = $u-1 - $u-1#5;

        deltaX#8 = <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int DOUBLE_TAP_TIMEOUT>;

        $u-1#5 = (long) deltaX#8;

        deltaX#10 = $u-1 cmp $u-1#5;

        if deltaX#10 <= 0 goto label2;

        return 0;

     label2:
        $u-1#11 = virtualinvoke $u7.<android.view.MotionEvent: float getX()>();

        deltaX#8 = (int) $u-1#11;

        $u-1#11 = virtualinvoke $u9.<android.view.MotionEvent: float getX()>();

        deltaY = (int) $u-1#11;

        deltaX#8 = deltaX#8 - deltaY;

        $u-1#11 = virtualinvoke $u7.<android.view.MotionEvent: float getY()>();

        deltaY = (int) $u-1#11;

        $u-1#11 = virtualinvoke $u9.<android.view.MotionEvent: float getY()>();

        $u3 = (int) $u-1#11;

        deltaY = deltaY - $u3;

        deltaX#8 = deltaX#8 * deltaX#8;

        deltaY = deltaY * deltaY;

        deltaX#8 = deltaX#8 + deltaY;

        deltaY = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mDoubleTapSlopSquare>;

        if deltaX#8 >= deltaY goto label3;

        return 1;

     label3:
        return 0;
    }

    void dispatchLongPress()
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.os.Handler $u0;
        android.view.GestureDetector$OnGestureListener $u0#5;
        android.view.MotionEvent $u1;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke $u0.<android.os.Handler: void removeMessages(int)>(3);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress> = 1;

        $u0#5 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        $u1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        interfaceinvoke $u0#5.<android.view.GestureDetector$OnGestureListener: void onLongPress(android.view.MotionEvent)>($u1);

        return;
    }

    public boolean isLongpressEnabled()
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        boolean ret0;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        ret0 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsLongpressEnabled>;

        return ret0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.view.MotionEvent $u24, upIndex#102, y1;
        float dot, sumX, sumY, $u-1#61, upIndex#90;
        int $u-1, pointerUp#7, skipIndex, i;
        android.view.VelocityTracker pointerUp;
        boolean pointerUp#10, action;
        byte id2;
        android.view.GestureDetector$OnDoubleTapListener upIndex;
        android.view.GestureDetector$OnGestureListener x1;
        android.os.Handler x1#106;
        long upIndex#203, x1#219;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u24 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u24.<android.view.MotionEvent: int getAction()>();

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        if pointerUp != null goto label01;

        pointerUp = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker> = pointerUp;

     label01:
        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke pointerUp.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u24);

        pointerUp#7 = $u-1 & 255;

        if pointerUp#7 != 6 goto label02;

        pointerUp#10 = 1;

        goto label03;

     label02:
        pointerUp#10 = 0;

     label03:
        if pointerUp#10 == 0 goto label04;

        skipIndex = virtualinvoke $u24.<android.view.MotionEvent: int getActionIndex()>();

        goto label05;

     label04:
        skipIndex = -1;

     label05:
        sumX = 0.0F;

        sumY = 0.0F;

        pointerUp#7 = virtualinvoke $u24.<android.view.MotionEvent: int getPointerCount()>();

        i = 0;

     label06:
        if i >= pointerUp#7 goto label09;

        if skipIndex != i goto label07;

        goto label08;

     label07:
        dot = virtualinvoke $u24.<android.view.MotionEvent: float getX(int)>(i);

        sumX = sumX + dot;

        dot = virtualinvoke $u24.<android.view.MotionEvent: float getY(int)>(i);

        sumY = sumY + dot;

     label08:
        i = i + 1;

        goto label06;

     label09:
        if pointerUp#10 == 0 goto label10;

        skipIndex = pointerUp#7 + -1;

        goto label11;

     label10:
        skipIndex = pointerUp#7;

     label11:
        dot = (float) skipIndex;

        sumX = sumX / dot;

        dot = (float) skipIndex;

        sumY = sumY / dot;

        pointerUp#10 = 0;

        $u-1 = $u-1 & 255;

        if $u-1 == 0 goto label35;

        if $u-1 == 1 goto label27;

        if $u-1 == 2 goto label19;

        if $u-1 == 3 goto label18;

        if $u-1 == 5 goto label17;

        if $u-1 == 6 goto label12;

        goto label25;

     label12:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY> = sumY;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusY> = sumY;

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        $u-1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMaximumFlingVelocity>;

        sumX = (float) $u-1;

        virtualinvoke pointerUp.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, sumX);

        skipIndex = virtualinvoke $u24.<android.view.MotionEvent: int getActionIndex()>();

        $u-1 = skipIndex;

        skipIndex = virtualinvoke $u24.<android.view.MotionEvent: int getPointerId(int)>(skipIndex);

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        sumX = virtualinvoke pointerUp.<android.view.VelocityTracker: float getXVelocity(int)>(skipIndex);

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        sumY = virtualinvoke pointerUp.<android.view.VelocityTracker: float getYVelocity(int)>(skipIndex);

        skipIndex = 0;

     label13:
        if skipIndex >= pointerUp#7 goto label16;

        if skipIndex != $u-1 goto label14;

        goto label15;

     label14:
        i = virtualinvoke $u24.<android.view.MotionEvent: int getPointerId(int)>(skipIndex);

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        dot = virtualinvoke pointerUp.<android.view.VelocityTracker: float getXVelocity(int)>(i);

        dot = dot * sumX;

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        $u-1#61 = virtualinvoke pointerUp.<android.view.VelocityTracker: float getYVelocity(int)>(i);

        $u-1#61 = $u-1#61 * sumY;

        dot = dot + $u-1#61;

        id2 = dot cmpg 0.0F;

        if id2 >= 0 goto label15;

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke pointerUp.<android.view.VelocityTracker: void clear()>();

        goto label16;

     label15:
        skipIndex = skipIndex + 1;

        goto label13;

     label16:
        goto label25;

     label17:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY> = sumY;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusY> = sumY;

        specialinvoke this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void cancelTaps()>();

        goto label25;

     label18:
        specialinvoke this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void cancel()>();

        goto label25;

     label19:
        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress>;

        if action == 0 goto label20;

        goto label25;

     label20:
        dot = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX>;

        dot = dot - sumX;

        $u-1#61 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY>;

        $u-1#61 = $u-1#61 - sumY;

        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping>;

        if action == 0 goto label21;

        upIndex = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        pointerUp#10 = interfaceinvoke upIndex.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>($u24);

        return pointerUp#10;

     label21:
        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion>;

        if action == 0 goto label24;

        upIndex#90 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusX>;

        upIndex#90 = sumX - upIndex#90;

        $u-1 = (int) upIndex#90;

        upIndex#90 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusY>;

        upIndex#90 = sumY - upIndex#90;

        pointerUp#7 = (int) upIndex#90;

        $u-1 = $u-1 * $u-1;

        pointerUp#7 = pointerUp#7 * pointerUp#7;

        pointerUp#7 = $u-1 + pointerUp#7;

        $u-1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mTouchSlopSquare>;

        if pointerUp#7 <= $u-1 goto label22;

        x1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        pointerUp#10 = interfaceinvoke x1.<android.view.GestureDetector$OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>(upIndex#102, $u24, dot, $u-1#61);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY> = sumY;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion> = 0;

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(3);

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(1);

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(2);

        goto label22;

     label22:
        $u-1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mTouchSlopSquare>;

        if pointerUp#7 <= $u-1 goto label23;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInBiggerTapRegion> = 0;

     label23:
        return pointerUp#10;

     label24:
        upIndex#90 = staticinvoke <java.lang.Math: float abs(float)>(dot);

        id2 = upIndex#90 cmpl 1.0F;

        if id2 >= 0 goto label26;

        upIndex#90 = staticinvoke <java.lang.Math: float abs(float)>($u-1#61);

        id2 = upIndex#90 cmpl 1.0F;

        if id2 < 0 goto label25;

        goto label26;

     label25:
        return 0;

     label26:
        x1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        pointerUp#10 = interfaceinvoke x1.<android.view.GestureDetector$OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>(upIndex#102, $u24, dot, $u-1#61);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY> = sumY;

        return pointerUp#10;

     label27:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mStillDown> = 0;

        upIndex#102 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($u24);

        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping>;

        if action == 0 goto label28;

        upIndex = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        pointerUp#10 = interfaceinvoke upIndex.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>($u24);

        goto label32;

     label28:
        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress>;

        if action == 0 goto label29;

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(3);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress> = 0;

        goto label32;

     label29:
        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion>;

        if action == 0 goto label30;

        x1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        pointerUp#10 = interfaceinvoke x1.<android.view.GestureDetector$OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>($u24);

        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap>;

        if action == 0 goto label32;

        upIndex = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        if upIndex == null goto label32;

        interfaceinvoke upIndex.<android.view.GestureDetector$OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>($u24);

        goto label32;

     label30:
        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        pointerUp#7 = virtualinvoke $u24.<android.view.MotionEvent: int getPointerId(int)>(0);

        $u-1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMaximumFlingVelocity>;

        sumX = (float) $u-1;

        virtualinvoke pointerUp.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, sumX);

        sumX = virtualinvoke pointerUp.<android.view.VelocityTracker: float getYVelocity(int)>(pointerUp#7);

        sumY = virtualinvoke pointerUp.<android.view.VelocityTracker: float getXVelocity(int)>(pointerUp#7);

        dot = staticinvoke <java.lang.Math: float abs(float)>(sumX);

        pointerUp#7 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMinimumFlingVelocity>;

        $u-1#61 = (float) pointerUp#7;

        id2 = dot cmpl $u-1#61;

        if id2 > 0 goto label31;

        dot = staticinvoke <java.lang.Math: float abs(float)>(sumY);

        pointerUp#7 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMinimumFlingVelocity>;

        $u-1#61 = (float) pointerUp#7;

        id2 = dot cmpl $u-1#61;

        if id2 <= 0 goto label32;

     label31:
        x1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        y1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        pointerUp#10 = interfaceinvoke x1.<android.view.GestureDetector$OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>(y1, $u24, sumY, sumX);

     label32:
        $u24 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mPreviousUpEvent>;

        if $u24 == null goto label33;

        virtualinvoke $u24.<android.view.MotionEvent: void recycle()>();

     label33:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mPreviousUpEvent> = upIndex#102;

        pointerUp = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker>;

        if pointerUp == null goto label34;

        virtualinvoke pointerUp.<android.view.VelocityTracker: void recycle()>();

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker> = null;

     label34:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap> = 0;

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(1);

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(2);

        return pointerUp#10;

     label35:
        upIndex = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        if upIndex == null goto label38;

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        action = virtualinvoke x1#106.<android.os.Handler: boolean hasMessages(int)>(3);

        if action == 0 goto label36;

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(3);

     label36:
        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        if upIndex#102 == null goto label37;

        y1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mPreviousUpEvent>;

        if y1 == null goto label37;

        if action == 0 goto label37;

        action = specialinvoke this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)>(upIndex#102, y1, $u24);

        if action == 0 goto label37;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping> = 1;

        upIndex = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        pointerUp#10 = interfaceinvoke upIndex.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>(upIndex#102);

        upIndex = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        action = interfaceinvoke upIndex.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>($u24);

        pointerUp#10 = pointerUp#10 | action;

        goto label38;

     label37:
        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        pointerUp#7 = <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int DOUBLE_TAP_TIMEOUT>;

        upIndex#203 = (long) pointerUp#7;

        virtualinvoke x1#106.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(3, upIndex#203);

     label38:
        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusX> = sumX;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY> = sumY;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusY> = sumY;

        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        if upIndex#102 == null goto label39;

        virtualinvoke upIndex#102.<android.view.MotionEvent: void recycle()>();

     label39:
        upIndex#102 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($u24);

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent> = upIndex#102;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion> = 1;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInBiggerTapRegion> = 1;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mStillDown> = 1;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress> = 0;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap> = 0;

        action = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsLongpressEnabled>;

        if action == 0 goto label40;

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        virtualinvoke x1#106.<android.os.Handler: void removeMessages(int)>(2);

        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        upIndex#203 = virtualinvoke upIndex#102.<android.view.MotionEvent: long getDownTime()>();

        pointerUp#7 = <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int TAP_TIMEOUT>;

        x1#219 = (long) pointerUp#7;

        upIndex#203 = upIndex#203 + x1#219;

        pointerUp#7 = <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int LONGPRESS_TIMEOUT>;

        x1#219 = (long) pointerUp#7;

        upIndex#203 = upIndex#203 + x1#219;

        virtualinvoke x1#106.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(2, upIndex#203);

        goto label40;

     label40:
        x1#106 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler>;

        upIndex#102 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent>;

        upIndex#203 = virtualinvoke upIndex#102.<android.view.MotionEvent: long getDownTime()>();

        pointerUp#7 = <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int TAP_TIMEOUT>;

        x1#219 = (long) pointerUp#7;

        upIndex#203 = upIndex#203 + x1#219;

        virtualinvoke x1#106.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(1, upIndex#203);

        x1 = this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener>;

        action = interfaceinvoke x1.<android.view.GestureDetector$OnGestureListener: boolean onDown(android.view.MotionEvent)>($u24);

        pointerUp#10 = pointerUp#10 | action;

        return pointerUp#10;
    }

    public void setIsLongpressEnabled(boolean)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        boolean $u1;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u1 := @parameter0: boolean;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsLongpressEnabled> = $u1;

        return;
    }

    public void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this;
        android.view.GestureDetector$OnDoubleTapListener $u1;

        this := @this: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase;

        $u1 := @parameter0: android.view.GestureDetector$OnDoubleTapListener;

        this.<androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener> = $u1;

        return;
    }
}
