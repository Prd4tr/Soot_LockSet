public class androidx.appcompat.widget.Toolbar extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback;
    int mButtonGravity;
    android.widget.ImageButton mCollapseButtonView;
    private java.lang.CharSequence mCollapseDescription;
    private android.graphics.drawable.Drawable mCollapseIcon;
    private boolean mCollapsible;
    private int mContentInsetEndWithActions;
    private int mContentInsetStartWithNavigation;
    private androidx.appcompat.widget.RtlSpacingHelper mContentInsets;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    android.view.View mExpandedActionView;
    private androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter;
    private int mGravity;
    private final java.util.ArrayList mHiddenViews;
    private android.widget.ImageView mLogoView;
    private int mMaxButtonHeight;
    private androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback;
    private androidx.appcompat.widget.ActionMenuView mMenuView;
    private final androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener;
    private android.widget.ImageButton mNavButtonView;
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener;
    private androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter;
    private android.content.Context mPopupContext;
    private int mPopupTheme;
    private final java.lang.Runnable mShowOverflowMenuRunnable;
    private java.lang.CharSequence mSubtitleText;
    private int mSubtitleTextAppearance;
    private android.content.res.ColorStateList mSubtitleTextColor;
    private android.widget.TextView mSubtitleTextView;
    private final int[] mTempMargins;
    private final java.util.ArrayList mTempViews;
    private int mTitleMarginBottom;
    private int mTitleMarginEnd;
    private int mTitleMarginStart;
    private int mTitleMarginTop;
    private java.lang.CharSequence mTitleText;
    private int mTitleTextAppearance;
    private android.content.res.ColorStateList mTitleTextColor;
    private android.widget.TextView mTitleTextView;
    private androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context $u2;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;
        int $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        $u0 = <androidx.appcompat.R$attr: int toolbarStyle>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, $u0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context $u23, $u-1;
        android.util.AttributeSet $u24;
        int $u25, marginStart, marginStart#38, contentInsetRight;
        java.util.ArrayList titleMargin;
        int[] titleMargin#5;
        androidx.appcompat.widget.Toolbar$1 titleMargin#6;
        androidx.appcompat.widget.Toolbar$2 titleMargin#7;
        androidx.appcompat.widget.TintTypedArray $u-1#12;
        android.content.res.TypedArray $u-1#14;
        boolean $u-1#39;
        androidx.appcompat.widget.RtlSpacingHelper subtitle;
        android.graphics.drawable.Drawable $u-1#81;
        java.lang.CharSequence $u-1#84;
        android.content.res.ColorStateList $u-1#123;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u23 := @parameter0: android.content.Context;

        $u24 := @parameter1: android.util.AttributeSet;

        $u25 := @parameter2: int;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($u23, $u24, $u25);

        this.<androidx.appcompat.widget.Toolbar: int mGravity> = 8388627;

        titleMargin = new java.util.ArrayList;

        specialinvoke titleMargin.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews> = titleMargin;

        titleMargin = new java.util.ArrayList;

        specialinvoke titleMargin.<java.util.ArrayList: void <init>()>();

        this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews> = titleMargin;

        titleMargin#5 = newarray (int)[2];

        this.<androidx.appcompat.widget.Toolbar: int[] mTempMargins> = titleMargin#5;

        titleMargin#6 = new androidx.appcompat.widget.Toolbar$1;

        specialinvoke titleMargin#6.<androidx.appcompat.widget.Toolbar$1: void <init>(androidx.appcompat.widget.Toolbar)>(this);

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener> = titleMargin#6;

        titleMargin#7 = new androidx.appcompat.widget.Toolbar$2;

        specialinvoke titleMargin#7.<androidx.appcompat.widget.Toolbar$2: void <init>(androidx.appcompat.widget.Toolbar)>(this);

        this.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable> = titleMargin#7;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        titleMargin#5 = <androidx.appcompat.R$styleable: int[] Toolbar>;

        $u-1#12 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($u-1, $u24, titleMargin#5, $u25, 0);

        titleMargin#5 = <androidx.appcompat.R$styleable: int[] Toolbar>;

        $u-1#14 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()>();

        staticinvoke <androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(this, $u23, titleMargin#5, $u24, $u-1#14, $u25, 0);

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($u25, 0);

        this.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($u25, 0);

        this.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_android_gravity>;

        marginStart = this.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)>($u25, marginStart);

        this.<androidx.appcompat.widget.Toolbar: int mGravity> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_buttonGravity>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)>($u25, 48);

        this.<androidx.appcompat.widget.Toolbar: int mButtonGravity> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleMargin>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, 0);

        marginStart = $u25;

        marginStart#38 = <androidx.appcompat.R$styleable: int Toolbar_titleMargins>;

        $u-1#39 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>(marginStart#38);

        if $u-1#39 == 0 goto label01;

        marginStart = <androidx.appcompat.R$styleable: int Toolbar_titleMargins>;

        marginStart = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>(marginStart, $u25);

     label01:
        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = marginStart;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = marginStart;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = marginStart;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = marginStart;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginStart>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -1);

        if $u25 < 0 goto label02;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $u25;

     label02:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -1);

        if $u25 < 0 goto label03;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $u25;

     label03:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginTop>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -1);

        if $u25 < 0 goto label04;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $u25;

     label04:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -1);

        if $u25 < 0 goto label05;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $u25;

     label05:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($u25, -1);

        this.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetStart>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -2147483648);

        marginStart = <androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd>;

        marginStart = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>(marginStart, -2147483648);

        marginStart#38 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft>;

        marginStart#38 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>(marginStart#38, 0);

        contentInsetRight = <androidx.appcompat.R$styleable: int Toolbar_contentInsetRight>;

        contentInsetRight = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>(contentInsetRight, 0);

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        subtitle = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke subtitle.<androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)>(marginStart#38, contentInsetRight);

        if $u25 != -2147483648 goto label06;

        if marginStart == -2147483648 goto label07;

     label06:
        subtitle = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke subtitle.<androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)>($u25, marginStart);

     label07:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -2147483648);

        this.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($u25, -2147483648);

        this.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions> = $u25;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_collapseIcon>;

        $u-1#81 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($u25);

        this.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon> = $u-1#81;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription>;

        $u-1#84 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($u25);

        this.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription> = $u-1#84;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_title>;

        $u-1#84 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($u25);

        $u-1#39 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u-1#84);

        if $u-1#39 != 0 goto label08;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)>($u-1#84);

     label08:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_subtitle>;

        $u-1#84 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($u25);

        $u-1#39 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u-1#84);

        if $u-1#39 != 0 goto label09;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($u-1#84);

     label09:
        $u23 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $u23;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_popupTheme>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($u25, 0);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setPopupTheme(int)>($u25);

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_navigationIcon>;

        $u-1#81 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($u25);

        if $u-1#81 == null goto label10;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($u-1#81);

     label10:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription>;

        $u-1#84 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($u25);

        $u-1#39 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u-1#84);

        if $u-1#39 != 0 goto label11;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($u-1#84);

     label11:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_logo>;

        $u-1#81 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($u25);

        if $u-1#81 == null goto label12;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($u-1#81);

     label12:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_logoDescription>;

        $u-1#84 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($u25);

        $u-1#39 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u-1#84);

        if $u-1#39 != 0 goto label13;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($u-1#84);

     label13:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleTextColor>;

        $u-1#39 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>($u25);

        if $u-1#39 == 0 goto label14;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_titleTextColor>;

        $u-1#123 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>($u25);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)>($u-1#123);

     label14:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor>;

        $u-1#39 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>($u25);

        if $u-1#39 == 0 goto label15;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor>;

        $u-1#123 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>($u25);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)>($u-1#123);

     label15:
        $u25 = <androidx.appcompat.R$styleable: int Toolbar_menu>;

        $u-1#39 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>($u25);

        if $u-1#39 == 0 goto label16;

        $u25 = <androidx.appcompat.R$styleable: int Toolbar_menu>;

        $u25 = virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($u25, 0);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void inflateMenu(int)>($u25);

        goto label16;

     label16:
        virtualinvoke $u-1#12.<androidx.appcompat.widget.TintTypedArray: void recycle()>();

        return;
    }

    private void addCustomViewsWithGravity(java.util.List, int)
    {
        androidx.appcompat.widget.Toolbar this;
        java.util.List views;
        int $u9, $u-1, $u-1#7, $u6;
        boolean childCount;
        android.view.View $u-1#12;
        android.view.ViewGroup$LayoutParams $u-1#14;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        views := @parameter0: java.util.List;

        $u9 := @parameter1: int;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        childCount = 1;

        if $u-1 != 1 goto label1;

        goto label2;

     label1:
        childCount = 0;

     label2:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        $u-1#7 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u9 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u9, $u-1#7);

        interfaceinvoke views.<java.util.List: void clear()>();

        if childCount == 0 goto label6;

        $u-1 = $u-1 + -1;

     label3:
        if $u-1 < 0 goto label5;

        $u-1#12 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($u-1);

        $u-1#14 = virtualinvoke $u-1#12.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#14;

        $u-1#7 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $u-1#7 != 0 goto label4;

        childCount = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($u-1#12);

        if childCount == 0 goto label4;

        $u-1#7 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity>;

        $u-1#7 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)>($u-1#7);

        if $u-1#7 != $u9 goto label4;

        interfaceinvoke views.<java.util.List: boolean add(java.lang.Object)>($u-1#12);

     label4:
        $u-1 = $u-1 + -1;

        goto label3;

     label5:
        return;

     label6:
        $u-1#7 = 0;

     label7:
        if $u-1#7 >= $u-1 goto label9;

        $u-1#12 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($u-1#7);

        $u-1#14 = virtualinvoke $u-1#12.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#14;

        $u6 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $u6 != 0 goto label8;

        childCount = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($u-1#12);

        if childCount == 0 goto label8;

        $u6 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity>;

        $u6 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)>($u6);

        if $u6 != $u9 goto label8;

        interfaceinvoke views.<java.util.List: boolean add(java.lang.Object)>($u-1#12);

     label8:
        $u-1#7 = $u-1#7 + 1;

        goto label7;

     label9:
        return;
    }

    private void addSystemView(android.view.View, boolean)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u4, $u2;
        boolean $u5, $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1#2;
        java.util.ArrayList $u2#10;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: boolean;

        $u-1 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $u-1 != null goto label1;

        $u-1#2 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        goto label3;

     label1:
        $u-1#4 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($u-1);

        if $u-1#4 != 0 goto label2;

        $u-1#2 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($u-1);

        goto label3;

     label2:
        $u-1#2 = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1;

     label3:
        $u-1#2.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType> = 1;

        if $u5 == 0 goto label4;

        $u2 = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        if $u2 == null goto label4;

        virtualinvoke $u4.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($u-1#2);

        $u2#10 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $u2#10.<java.util.ArrayList: boolean add(java.lang.Object)>($u4);

        return;

     label4:
        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($u4, $u-1#2);

        return;
    }

    private void ensureContentInsets()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $u0 != null goto label1;

        $u0 = new androidx.appcompat.widget.RtlSpacingHelper;

        specialinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: void <init>()>();

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets> = $u0;

     label1:
        return;
    }

    private void ensureLogoView()
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context $u-1;
        android.widget.ImageView $u0;
        androidx.appcompat.widget.AppCompatImageView $u0#2;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $u0 != null goto label1;

        $u0#2 = new androidx.appcompat.widget.AppCompatImageView;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $u0#2.<androidx.appcompat.widget.AppCompatImageView: void <init>(android.content.Context)>($u-1);

        this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView> = $u0#2;

     label1:
        return;
    }

    private void ensureMenu()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.ActionMenuView menu;
        androidx.appcompat.view.menu.MenuBuilder $u-1;
        android.view.Menu $u-1#5;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $u1;
        android.content.Context $u2;

        this := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureMenuView()>();

        menu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1 = virtualinvoke menu.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $u-1 != null goto label2;

        menu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1#5 = virtualinvoke menu.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        $u-1 = (androidx.appcompat.view.menu.MenuBuilder) $u-1#5;

        $u1 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $u1 != null goto label1;

        $u1 = new androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $u1.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(androidx.appcompat.widget.Toolbar)>(this);

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $u1;

     label1:
        menu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke menu.<androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>(1);

        $u1 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $u2 = this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $u-1.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($u1, $u2);

     label2:
        return;
    }

    private void ensureMenuView()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.ActionMenuView lp;
        android.content.Context $u-1;
        int $u1;
        androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener $u1#7;
        androidx.appcompat.view.menu.MenuPresenter$Callback $u1#9;
        androidx.appcompat.view.menu.MenuBuilder$Callback $u2;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1#11;

        this := @this: androidx.appcompat.widget.Toolbar;

        lp = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if lp != null goto label1;

        lp = new androidx.appcompat.widget.ActionMenuView;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke lp.<androidx.appcompat.widget.ActionMenuView: void <init>(android.content.Context)>($u-1);

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView> = lp;

        $u1 = this.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        virtualinvoke lp.<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>($u1);

        lp = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u1#7 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener>;

        virtualinvoke lp.<androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)>($u1#7);

        lp = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u1#9 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback>;

        $u2 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback>;

        virtualinvoke lp.<androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>($u1#9, $u2);

        $u-1#11 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $u1 = this.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $u1 = $u1 & 112;

        $u1 = 8388613 | $u1;

        $u-1#11.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity> = $u1;

        lp = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke lp.<androidx.appcompat.widget.ActionMenuView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($u-1#11);

        lp = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>(lp, 0);

     label1:
        return;
    }

    private void ensureNavButtonView()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u3;
        android.widget.ImageButton lp;
        androidx.appcompat.widget.AppCompatImageButton lp#2;
        android.content.Context $u-1;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1#6;

        this := @this: androidx.appcompat.widget.Toolbar;

        lp = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if lp != null goto label1;

        lp#2 = new androidx.appcompat.widget.AppCompatImageButton;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u3 = <androidx.appcompat.R$attr: int toolbarNavigationButtonStyle>;

        specialinvoke lp#2.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($u-1, null, $u3);

        this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView> = lp#2;

        $u-1#6 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $u3 = this.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $u3 = $u3 & 112;

        $u3 = 8388611 | $u3;

        $u-1#6.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity> = $u3;

        lp = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke lp.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($u-1#6);

     label1:
        return;
    }

    private int getChildHorizontalGravity(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u7, $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u7 := @parameter0: int;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        $u7 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($u7, $u-1);

        $u7 = $u7 & 7;

        if $u7 == 1 goto label1;

        if $u7 == 3 goto label1;

        if $u7 == 5 goto label1;

        if $u-1 != 1 goto label2;

        return 5;

     label1:
        return $u7;

     label2:
        return 3;
    }

    private int getChildTop(android.view.View, int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u12;
        int $u13, $u-1#4, paddingTop, $u-1#15, $u-1#17, spaceBelow;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u12 := @parameter0: android.view.View;

        $u13 := @parameter1: int;

        $u-1 = virtualinvoke $u12.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1;

        $u-1#4 = virtualinvoke $u12.<android.view.View: int getMeasuredHeight()>();

        if $u13 <= 0 goto label1;

        $u13 = $u-1#4 - $u13;

        $u13 = $u13 / 2;

        goto label2;

     label1:
        $u13 = 0;

     label2:
        paddingTop = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity>;

        paddingTop = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)>(paddingTop);

        if paddingTop == 48 goto label6;

        if paddingTop == 80 goto label5;

        $u13 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $u-1#15 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $u-1#17 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getHeight()>();

        paddingTop = $u-1#17 - $u13;

        paddingTop = paddingTop - $u-1#15;

        paddingTop = paddingTop - $u-1#4;

        paddingTop = paddingTop / 2;

        spaceBelow = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        if paddingTop >= spaceBelow goto label3;

        paddingTop = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        goto label4;

     label3:
        $u-1#15 = $u-1#17 - $u-1#15;

        $u-1#4 = $u-1#15 - $u-1#4;

        $u-1#4 = $u-1#4 - paddingTop;

        $u-1#4 = $u-1#4 - $u13;

        $u-1#15 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        if $u-1#4 >= $u-1#15 goto label4;

        $u-1#15 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#4 = $u-1#15 - $u-1#4;

        $u-1#4 = paddingTop - $u-1#4;

        paddingTop = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#4);

     label4:
        $u13 = $u13 + paddingTop;

        return $u13;

     label5:
        paddingTop = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getHeight()>();

        $u-1#15 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        paddingTop = paddingTop - $u-1#15;

        $u-1#4 = paddingTop - $u-1#4;

        paddingTop = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#4 = $u-1#4 - paddingTop;

        $u13 = $u-1#4 - $u13;

        return $u13;

     label6:
        $u-1#4 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $u13 = $u-1#4 - $u13;

        return $u13;
    }

    private int getChildVerticalGravity(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: int;

        $u3 = $u3 & 112;

        if $u3 == 16 goto label1;

        if $u3 == 48 goto label1;

        if $u3 == 80 goto label1;

        $u3 = this.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $u3 = $u3 & 112;

     label1:
        return $u3;
    }

    private int getHorizontalMargins(android.view.View)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u4;
        android.view.ViewGroup$LayoutParams $u-1;
        android.view.ViewGroup$MarginLayoutParams mlp;
        int $u-1#4, $u-1#6;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u4 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        mlp = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        $u-1#4 = staticinvoke <androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)>(mlp);

        $u-1#6 = staticinvoke <androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)>(mlp);

        $u-1#4 = $u-1#4 + $u-1#6;

        return $u-1#4;
    }

    private android.view.MenuInflater getMenuInflater()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.view.SupportMenuInflater $u0;
        android.content.Context $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = new androidx.appcompat.view.SupportMenuInflater;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>($u-1);

        return $u0;
    }

    private int getVerticalMargins(android.view.View)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u4;
        int $u2, $u1;
        android.view.ViewGroup$LayoutParams $u-1;
        android.view.ViewGroup$MarginLayoutParams mlp;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u4 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        mlp = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        $u1 = mlp.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $u2 = mlp.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $u2 = $u1 + $u2;

        return $u2;
    }

    private int getViewListMeasuredWidth(java.util.List, int[])
    {
        androidx.appcompat.widget.Toolbar this;
        java.util.List views;
        int[] $u15;
        int collapseLeft, collapseRight, width, $u-1, i, l, $u-1#17, $u-1#23;
        java.lang.Object $u-1#7;
        android.view.View v;
        android.view.ViewGroup$LayoutParams $u-1#10;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        views := @parameter0: java.util.List;

        $u15 := @parameter1: int[];

        collapseLeft = $u15[0];

        collapseRight = $u15[1];

        width = 0;

        $u-1 = interfaceinvoke views.<java.util.List: int size()>();

        i = 0;

     label1:
        if i >= $u-1 goto label2;

        $u-1#7 = interfaceinvoke views.<java.util.List: java.lang.Object get(int)>(i);

        v = (android.view.View) $u-1#7;

        $u-1#10 = virtualinvoke v.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#10;

        l = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int leftMargin>;

        collapseLeft = l - collapseLeft;

        l = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int rightMargin>;

        collapseRight = l - collapseRight;

        $u-1#17 = staticinvoke <java.lang.Math: int max(int,int)>(0, collapseLeft);

        l = staticinvoke <java.lang.Math: int max(int,int)>(0, collapseRight);

        collapseLeft = neg collapseLeft;

        collapseLeft = staticinvoke <java.lang.Math: int max(int,int)>(0, collapseLeft);

        collapseRight = neg collapseRight;

        collapseRight = staticinvoke <java.lang.Math: int max(int,int)>(0, collapseRight);

        $u-1#23 = virtualinvoke v.<android.view.View: int getMeasuredWidth()>();

        $u-1#17 = $u-1#23 + $u-1#17;

        l = $u-1#17 + l;

        width = width + l;

        i = i + 1;

        goto label1;

     label2:
        return width;
    }

    private boolean isChildOrHidden(android.view.View)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u2;
        android.view.ViewParent $u-1;
        java.util.ArrayList $u0;
        boolean $u-1#4;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.view.View;

        $u-1 = virtualinvoke $u2.<android.view.View: android.view.ViewParent getParent()>();

        if $u-1 == this goto label2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $u-1#4 = virtualinvoke $u0.<java.util.ArrayList: boolean contains(java.lang.Object)>($u2);

        if $u-1#4 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private int layoutChildLeft(android.view.View, int, int[], int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u7;
        int[] $u9;
        int $u10, $u8, l, childWidth, $u-1#20;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int[];

        $u10 := @parameter3: int;

        $u-1 = virtualinvoke $u7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1;

        l = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int leftMargin>;

        childWidth = $u9[0];

        l = l - childWidth;

        childWidth = staticinvoke <java.lang.Math: int max(int,int)>(0, l);

        $u8 = $u8 + childWidth;

        l = neg l;

        l = staticinvoke <java.lang.Math: int max(int,int)>(0, l);

        $u9[0] = l;

        l = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)>($u7, $u10);

        $u10 = virtualinvoke $u7.<android.view.View: int getMeasuredWidth()>();

        childWidth = $u8 + $u10;

        $u-1#20 = virtualinvoke $u7.<android.view.View: int getMeasuredHeight()>();

        $u-1#20 = $u-1#20 + l;

        virtualinvoke $u7.<android.view.View: void layout(int,int,int,int)>($u8, l, childWidth, $u-1#20);

        l = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int rightMargin>;

        $u10 = l + $u10;

        $u8 = $u8 + $u10;

        return $u8;
    }

    private int layoutChildRight(android.view.View, int, int[], int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u7;
        int[] $u9;
        int $u10, $u8, r, childWidth, $u-1#21;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int[];

        $u10 := @parameter3: int;

        $u-1 = virtualinvoke $u7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1;

        r = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int rightMargin>;

        childWidth = $u9[1];

        r = r - childWidth;

        childWidth = staticinvoke <java.lang.Math: int max(int,int)>(0, r);

        $u8 = $u8 - childWidth;

        r = neg r;

        r = staticinvoke <java.lang.Math: int max(int,int)>(0, r);

        $u9[1] = r;

        r = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)>($u7, $u10);

        $u10 = virtualinvoke $u7.<android.view.View: int getMeasuredWidth()>();

        childWidth = $u8 - $u10;

        $u-1#21 = virtualinvoke $u7.<android.view.View: int getMeasuredHeight()>();

        $u-1#21 = $u-1#21 + r;

        virtualinvoke $u7.<android.view.View: void layout(int,int,int,int)>(childWidth, r, $u8, $u-1#21);

        r = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int leftMargin>;

        $u10 = r + $u10;

        $u8 = $u8 - $u10;

        return $u8;
    }

    private int measureChildCollapseMargins(android.view.View, int, int, int, int, int[])
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u10;
        int $u11, $u12, $u13, $u14, hMargins, rightDiff, leftMargin, $u-1#14;
        int[] $u15;
        android.view.ViewGroup$LayoutParams $u-1;
        android.view.ViewGroup$MarginLayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u10 := @parameter0: android.view.View;

        $u11 := @parameter1: int;

        $u12 := @parameter2: int;

        $u13 := @parameter3: int;

        $u14 := @parameter4: int;

        $u15 := @parameter5: int[];

        $u-1 = virtualinvoke $u10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        hMargins = lp.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        rightDiff = $u15[0];

        rightDiff = hMargins - rightDiff;

        hMargins = lp.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        leftMargin = $u15[1];

        leftMargin = hMargins - leftMargin;

        hMargins = staticinvoke <java.lang.Math: int max(int,int)>(0, rightDiff);

        $u-1#14 = staticinvoke <java.lang.Math: int max(int,int)>(0, leftMargin);

        hMargins = hMargins + $u-1#14;

        rightDiff = neg rightDiff;

        rightDiff = staticinvoke <java.lang.Math: int max(int,int)>(0, rightDiff);

        $u15[0] = rightDiff;

        rightDiff = neg leftMargin;

        rightDiff = staticinvoke <java.lang.Math: int max(int,int)>(0, rightDiff);

        $u15[1] = rightDiff;

        rightDiff = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        leftMargin = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        rightDiff = rightDiff + leftMargin;

        rightDiff = rightDiff + hMargins;

        $u12 = rightDiff + $u12;

        rightDiff = lp.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $u11 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($u11, $u12, rightDiff);

        $u12 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        rightDiff = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $u12 = $u12 + rightDiff;

        rightDiff = lp.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $u12 = $u12 + rightDiff;

        rightDiff = lp.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $u12 = $u12 + rightDiff;

        $u12 = $u12 + $u14;

        $u14 = lp.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $u12 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($u13, $u12, $u14);

        virtualinvoke $u10.<android.view.View: void measure(int,int)>($u11, $u12);

        $u11 = virtualinvoke $u10.<android.view.View: int getMeasuredWidth()>();

        $u11 = $u11 + hMargins;

        return $u11;
    }

    private void measureChildConstrained(android.view.View, int, int, int, int, int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u7;
        int $u8, $u9, $u10, $u11, $u12, $u-1#4, $u-1#6;
        android.view.ViewGroup$LayoutParams $u-1;
        android.view.ViewGroup$MarginLayoutParams lp;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int;

        $u11 := @parameter4: int;

        $u12 := @parameter5: int;

        $u-1 = virtualinvoke $u7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        $u-1#4 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $u-1#6 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        $u-1#4 = $u-1#4 + $u-1#6;

        $u-1#6 = lp.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $u-1#4 = $u-1#4 + $u-1#6;

        $u-1#6 = lp.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $u-1#4 = $u-1#4 + $u-1#6;

        $u9 = $u-1#4 + $u9;

        $u-1#4 = lp.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $u8 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($u8, $u9, $u-1#4);

        $u9 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $u-1#4 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $u9 = $u9 + $u-1#4;

        $u-1#4 = lp.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $u9 = $u9 + $u-1#4;

        $u-1#4 = lp.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $u9 = $u9 + $u-1#4;

        $u9 = $u9 + $u11;

        $u11 = lp.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $u9 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($u10, $u9, $u11);

        $u10 = $u9;

        $u11 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u9);

        if $u11 == 1073741824 goto label3;

        if $u12 < 0 goto label3;

        if $u11 == 0 goto label1;

        $u9 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u9);

        $u9 = staticinvoke <java.lang.Math: int min(int,int)>($u9, $u12);

        goto label2;

     label1:
        $u9 = $u12;

     label2:
        $u10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u9, 1073741824);

     label3:
        virtualinvoke $u7.<android.view.View: void measure(int,int)>($u8, $u10);

        return;
    }

    private void postShowOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($u0);

        $u0 = this.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: boolean post(java.lang.Runnable)>($u0);

        return;
    }

    private boolean shouldCollapse()
    {
        androidx.appcompat.widget.Toolbar this;
        boolean childCount;
        int $u-1, i, $u-1#9;
        android.view.View $u-1#6;

        this := @this: androidx.appcompat.widget.Toolbar;

        childCount = this.<androidx.appcompat.widget.Toolbar: boolean mCollapsible>;

        if childCount != 0 goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        i = 0;

     label2:
        if i >= $u-1 goto label4;

        $u-1#6 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>(i);

        childCount = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($u-1#6);

        if childCount == 0 goto label3;

        $u-1#9 = virtualinvoke $u-1#6.<android.view.View: int getMeasuredWidth()>();

        if $u-1#9 <= 0 goto label3;

        $u-1#9 = virtualinvoke $u-1#6.<android.view.View: int getMeasuredHeight()>();

        if $u-1#9 <= 0 goto label3;

        return 0;

     label3:
        i = i + 1;

        goto label2;

     label4:
        return 1;
    }

    private boolean shouldLayout(android.view.View)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View $u3;
        android.view.ViewParent $u-1;
        int $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: android.view.View;

        if $u3 == null goto label1;

        $u-1 = virtualinvoke $u3.<android.view.View: android.view.ViewParent getParent()>();

        if $u-1 != this goto label1;

        $u-1#3 = virtualinvoke $u3.<android.view.View: int getVisibility()>();

        if $u-1#3 == 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    void addChildrenForExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar this;
        java.util.ArrayList count;
        int $u-1;
        java.lang.Object $u-1#6;
        android.view.View $u2;

        this := @this: androidx.appcompat.widget.Toolbar;

        count = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $u-1 = virtualinvoke count.<java.util.ArrayList: int size()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label2;

        count = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $u-1#6 = virtualinvoke count.<java.util.ArrayList: java.lang.Object get(int)>($u-1);

        $u2 = (android.view.View) $u-1#6;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void addView(android.view.View)>($u2);

        $u-1 = $u-1 + -1;

        goto label1;

     label2:
        count = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke count.<java.util.ArrayList: void clear()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;
        boolean $u-1#4;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getVisibility()>();

        if $u-1 != 0 goto label1;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        $u-1#4 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()>();

        if $u-1#4 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.ViewGroup$LayoutParams $u2;
        boolean $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($u2);

        if $u-1 == 0 goto label1;

        $u-1 = $u2 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void collapseActionView()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter item;
        androidx.appcompat.view.menu.MenuItemImpl item#2;

        this := @this: androidx.appcompat.widget.Toolbar;

        item = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if item != null goto label1;

        item#2 = null;

        goto label2;

     label1:
        item#2 = item.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

     label2:
        if item#2 == null goto label3;

        virtualinvoke item#2.<androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()>();

     label3:
        return;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()>();

     label1:
        return;
    }

    void ensureCollapseButtonView()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u3;
        android.widget.ImageButton lp;
        androidx.appcompat.widget.AppCompatImageButton lp#2;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u1;
        java.lang.CharSequence $u1#8;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1#9;
        androidx.appcompat.widget.Toolbar$3 $u2;

        this := @this: androidx.appcompat.widget.Toolbar;

        lp = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if lp != null goto label1;

        lp#2 = new androidx.appcompat.widget.AppCompatImageButton;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u3 = <androidx.appcompat.R$attr: int toolbarNavigationButtonStyle>;

        specialinvoke lp#2.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($u-1, null, $u3);

        this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView> = lp#2;

        $u1 = this.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke lp#2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($u1);

        lp = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $u1#8 = this.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription>;

        virtualinvoke lp.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($u1#8);

        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $u3 = this.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $u3 = $u3 & 112;

        $u3 = 8388611 | $u3;

        $u-1#9.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity> = $u3;

        $u-1#9.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType> = 2;

        lp = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke lp.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($u-1#9);

        lp = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $u2 = new androidx.appcompat.widget.Toolbar$3;

        specialinvoke $u2.<androidx.appcompat.widget.Toolbar$3: void <init>(androidx.appcompat.widget.Toolbar)>(this);

        virtualinvoke lp.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($u2);

     label1:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        return $u-1;
    }

    protected androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$LayoutParams $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $u0.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(int,int)>(-2, -2);

        return $u0;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1;
        android.util.AttributeSet $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)>($u1);

        return $u-1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$LayoutParams $u-1;
        android.view.ViewGroup$LayoutParams $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($u1);

        return $u-1;
    }

    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar this;
        android.util.AttributeSet $u3;
        androidx.appcompat.widget.Toolbar$LayoutParams $u0;
        android.content.Context $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: android.util.AttributeSet;

        $u0 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($u-1, $u3);

        return $u0;
    }

    protected androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.ViewGroup$LayoutParams $u3;
        boolean $u0;
        androidx.appcompat.widget.Toolbar$LayoutParams $u0#2, $u1;
        androidx.appcompat.app.ActionBar$LayoutParams $u1#8;
        android.view.ViewGroup$MarginLayoutParams $u1#12;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = $u3 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $u0 == 0 goto label1;

        $u0#2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $u1 = (androidx.appcompat.widget.Toolbar$LayoutParams) $u3;

        specialinvoke $u0#2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(androidx.appcompat.widget.Toolbar$LayoutParams)>($u1);

        return $u0#2;

     label1:
        $u0 = $u3 instanceof androidx.appcompat.app.ActionBar$LayoutParams;

        if $u0 == 0 goto label2;

        $u0#2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $u1#8 = (androidx.appcompat.app.ActionBar$LayoutParams) $u3;

        specialinvoke $u0#2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(androidx.appcompat.app.ActionBar$LayoutParams)>($u1#8);

        return $u0#2;

     label2:
        $u0 = $u3 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $u0 == 0 goto label3;

        $u0#2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $u1#12 = (android.view.ViewGroup$MarginLayoutParams) $u3;

        specialinvoke $u0#2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($u1#12);

        return $u0#2;

     label3:
        $u0#2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $u0#2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($u3);

        return $u0#2;
    }

    public java.lang.CharSequence getCollapseContentDescription()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u-1;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $u-1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCollapseIcon()
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $u-1;

     label1:
        return null;
    }

    public int getContentInsetEnd()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: int getEnd()>();

        return $u-1;

     label1:
        return 0;
    }

    public int getContentInsetEndWithActions()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = this.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        if $u-1 == -2147483648 goto label1;

        return $u-1;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        return $u-1;
    }

    public int getContentInsetLeft()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: int getLeft()>();

        return $u-1;

     label1:
        return 0;
    }

    public int getContentInsetRight()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: int getRight()>();

        return $u-1;

     label1:
        return 0;
    }

    public int getContentInsetStart()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: int getStart()>();

        return $u-1;

     label1:
        return 0;
    }

    public int getContentInsetStartWithNavigation()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = this.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if $u-1 == -2147483648 goto label1;

        return $u-1;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        return $u-1;
    }

    public int getCurrentContentInsetEnd()
    {
        androidx.appcompat.widget.Toolbar this;
        boolean hasActions;
        androidx.appcompat.widget.ActionMenuView mb;
        androidx.appcompat.view.menu.MenuBuilder $u-1;
        int $u-1#9, $u3;

        this := @this: androidx.appcompat.widget.Toolbar;

        hasActions = 0;

        mb = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if mb == null goto label2;

        $u-1 = virtualinvoke mb.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $u-1 == null goto label1;

        hasActions = virtualinvoke $u-1.<androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()>();

        if hasActions == 0 goto label1;

        hasActions = 1;

        goto label2;

     label1:
        hasActions = 0;

     label2:
        if hasActions == 0 goto label3;

        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        $u3 = this.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        $u3 = staticinvoke <java.lang.Math: int max(int,int)>($u3, 0);

        $u-1#9 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#9, $u3);

        return $u-1#9;

     label3:
        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        return $u-1#9;
    }

    public int getCurrentContentInsetLeft()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        if $u-1 != 1 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        return $u-1;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        return $u-1;
    }

    public int getCurrentContentInsetRight()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        if $u-1 != 1 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        return $u-1;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        return $u-1;
    }

    public int getCurrentContentInsetStart()
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        int $u-1#3, $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $u-1 == null goto label1;

        $u-1#3 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        $u1 = this.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        $u1 = staticinvoke <java.lang.Math: int max(int,int)>($u1, 0);

        $u-1#3 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#3, $u1);

        return $u-1#3;

     label1:
        $u-1#3 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        return $u-1#3;
    }

    public android.graphics.drawable.Drawable getLogo()
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        android.widget.ImageView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        return $u-1;

     label1:
        return null;
    }

    public java.lang.CharSequence getLogoDescription()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u-1;
        android.widget.ImageView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        return $u-1;

     label1:
        return null;
    }

    public android.view.Menu getMenu()
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.Menu $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        return $u-1;
    }

    public java.lang.CharSequence getNavigationContentDescription()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u-1;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $u-1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getNavigationIcon()
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $u-1;

     label1:
        return null;
    }

    androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.ActionMenuPresenter ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        return ret0;
    }

    public android.graphics.drawable.Drawable getOverflowIcon()
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>();

        return $u-1;
    }

    android.content.Context getPopupContext()
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        return ret0;
    }

    public int getPopupTheme()
    {
        androidx.appcompat.widget.Toolbar this;
        int ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        return ret0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText>;

        return ret0;
    }

    final android.widget.TextView getSubtitleTextView()
    {
        androidx.appcompat.widget.Toolbar this;
        android.widget.TextView ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        return ret0;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText>;

        return ret0;
    }

    public int getTitleMarginBottom()
    {
        androidx.appcompat.widget.Toolbar this;
        int ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        return ret0;
    }

    public int getTitleMarginEnd()
    {
        androidx.appcompat.widget.Toolbar this;
        int ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        return ret0;
    }

    public int getTitleMarginStart()
    {
        androidx.appcompat.widget.Toolbar this;
        int ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        return ret0;
    }

    public int getTitleMarginTop()
    {
        androidx.appcompat.widget.Toolbar this;
        int ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        return ret0;
    }

    final android.widget.TextView getTitleTextView()
    {
        androidx.appcompat.widget.Toolbar this;
        android.widget.TextView ret0;

        this := @this: androidx.appcompat.widget.Toolbar;

        ret0 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        return ret0;
    }

    public androidx.appcompat.widget.DecorToolbar getWrapper()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.ToolbarWidgetWrapper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper>;

        if $u0 != null goto label1;

        $u0 = new androidx.appcompat.widget.ToolbarWidgetWrapper;

        specialinvoke $u0.<androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean)>(this, 1);

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper> = $u0;

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper>;

        return $u0;
    }

    public boolean hasExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $u0;
        androidx.appcompat.view.menu.MenuItemImpl $u0#2;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $u0 == null goto label1;

        $u0#2 = $u0.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $u0#2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void inflateMenu(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u3;
        android.view.MenuInflater $u-1;
        android.view.Menu $u-1#2;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: int;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()>();

        $u-1#2 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()>();

        virtualinvoke $u-1.<android.view.MenuInflater: void inflate(int,android.view.Menu)>($u3, $u-1#2);

        return;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.Toolbar this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.Toolbar this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        androidx.appcompat.widget.Toolbar this;
        android.widget.TextView titleLayout;
        android.text.Layout $u-1;
        int $u-1#5, i, $u-1#7;

        this := @this: androidx.appcompat.widget.Toolbar;

        titleLayout = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if titleLayout != null goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke titleLayout.<android.widget.TextView: android.text.Layout getLayout()>();

        if $u-1 != null goto label2;

        return 0;

     label2:
        $u-1#5 = virtualinvoke $u-1.<android.text.Layout: int getLineCount()>();

        i = 0;

     label3:
        if i >= $u-1#5 goto label5;

        $u-1#7 = virtualinvoke $u-1.<android.text.Layout: int getEllipsisCount(int)>(i);

        if $u-1#7 <= 0 goto label4;

        return 1;

     label4:
        i = i + 1;

        goto label3;

     label5:
        return 0;
    }

    protected void onDetachedFromWindow()
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke this.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($u0);

        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.MotionEvent $u6;
        int $u-1;
        boolean handled;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u6 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u6.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1 != 9 goto label1;

        this.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 0;

     label1:
        handled = this.<androidx.appcompat.widget.Toolbar: boolean mEatingHover>;

        if handled != 0 goto label2;

        handled = specialinvoke this.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>($u6);

        if $u-1 != 9 goto label2;

        if handled != 0 goto label2;

        this.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 1;

     label2:
        if $u-1 == 10 goto label3;

        if $u-1 != 3 goto label4;

     label3:
        this.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.appcompat.widget.Toolbar this;
        boolean $u34, $u-1#25, $u-1#81, minHeight#134;
        int $u35, $u36, $u37, $u38, $u-1, $u-1#8, $u-1#12, $u-1#14, $u-1#16, left1, $u-1#19, left, alignmentHeight;
        int[] collapsingMargins;
        android.widget.ImageButton contentInsetLeft;
        androidx.appcompat.widget.ActionMenuView contentInsetLeft#38;
        android.view.View right;
        android.widget.ImageView right#70;
        android.widget.TextView right#77, minHeight#118;
        android.view.ViewGroup$LayoutParams $u-1#86;
        androidx.appcompat.widget.Toolbar$LayoutParams minHeight, paddingRight;
        java.util.ArrayList isRtl;
        java.lang.Object $u-1#290;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u34 := @parameter0: boolean;

        $u35 := @parameter1: int;

        $u36 := @parameter2: int;

        $u37 := @parameter3: int;

        $u38 := @parameter4: int;

        $u35 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(this);

        if $u35 != 1 goto label01;

        $u34 = 1;

        goto label02;

     label01:
        $u34 = 0;

     label02:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getWidth()>();

        $u-1#8 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getHeight()>();

        $u37 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $u-1#12 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        $u-1#14 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $u-1#16 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        left1 = $u37;

        $u35 = $u-1 - $u-1#12;

        collapsingMargins = this.<androidx.appcompat.widget.Toolbar: int[] mTempMargins>;

        collapsingMargins[1] = 0;

        collapsingMargins[0] = 0;

        $u-1#19 = staticinvoke <androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)>(this);

        if $u-1#19 < 0 goto label03;

        $u36 = $u38 - $u36;

        $u-1#19 = staticinvoke <java.lang.Math: int min(int,int)>($u-1#19, $u36);

        goto label04;

     label03:
        $u-1#19 = 0;

     label04:
        contentInsetLeft = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $u-1#25 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(contentInsetLeft);

        if $u-1#25 == 0 goto label06;

        if $u34 == 0 goto label05;

        contentInsetLeft = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $u35 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>(contentInsetLeft, $u35, collapsingMargins, $u-1#19);

        goto label06;

     label05:
        contentInsetLeft = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        left1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(contentInsetLeft, $u37, collapsingMargins, $u-1#19);

     label06:
        contentInsetLeft = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $u-1#25 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(contentInsetLeft);

        if $u-1#25 == 0 goto label08;

        if $u34 == 0 goto label07;

        contentInsetLeft = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $u35 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>(contentInsetLeft, $u35, collapsingMargins, $u-1#19);

        goto label08;

     label07:
        contentInsetLeft = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        left1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(contentInsetLeft, left1, collapsingMargins, $u-1#19);

     label08:
        contentInsetLeft#38 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1#25 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(contentInsetLeft#38);

        if $u-1#25 == 0 goto label10;

        if $u34 == 0 goto label09;

        contentInsetLeft#38 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        left1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(contentInsetLeft#38, left1, collapsingMargins, $u-1#19);

        goto label10;

     label09:
        contentInsetLeft#38 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u35 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>(contentInsetLeft#38, $u35, collapsingMargins, $u-1#19);

     label10:
        $u38 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()>();

        $u36 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()>();

        left = $u38 - left1;

        left = staticinvoke <java.lang.Math: int max(int,int)>(0, left);

        collapsingMargins[0] = left;

        left = $u-1 - $u-1#12;

        left = left - $u35;

        left = $u36 - left;

        left = staticinvoke <java.lang.Math: int max(int,int)>(0, left);

        collapsingMargins[1] = left;

        $u38 = staticinvoke <java.lang.Math: int max(int,int)>(left1, $u38);

        left1 = $u38;

        left = $u-1 - $u-1#12;

        $u36 = left - $u36;

        $u36 = staticinvoke <java.lang.Math: int min(int,int)>($u35, $u36);

        $u35 = $u36;

        right = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $u-1#25 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(right);

        if $u-1#25 == 0 goto label12;

        if $u34 == 0 goto label11;

        right = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $u35 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>(right, $u36, collapsingMargins, $u-1#19);

        goto label12;

     label11:
        right = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        left1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(right, $u38, collapsingMargins, $u-1#19);

     label12:
        right#70 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $u-1#25 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(right#70);

        if $u-1#25 == 0 goto label14;

        if $u34 == 0 goto label13;

        right#70 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $u35 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>(right#70, $u35, collapsingMargins, $u-1#19);

        goto label14;

     label13:
        right#70 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        left1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(right#70, left1, collapsingMargins, $u-1#19);

     label14:
        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#25 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(right#77);

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#81 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(right#77);

        left = 0;

        if $u-1#25 == 0 goto label15;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#86 = virtualinvoke right#77.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        $u38 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $u36 = $u-1#12;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#12 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredHeight()>();

        $u38 = $u38 + $u-1#12;

        $u-1#12 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u38 = $u38 + $u-1#12;

        left = $u38;

        goto label16;

     label15:
        $u36 = $u-1#12;

     label16:
        if $u-1#81 == 0 goto label17;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#86 = virtualinvoke right#77.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        $u38 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#12 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredHeight()>();

        $u38 = $u38 + $u-1#12;

        $u-1#12 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u38 = $u38 + $u-1#12;

        left = left + $u38;

     label17:
        if $u-1#25 != 0 goto label19;

        if $u-1#81 == 0 goto label18;

        goto label19;

     label18:
        $u38 = $u-1;

        goto label45;

     label19:
        if $u-1#25 == 0 goto label20;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        goto label21;

     label20:
        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

     label21:
        if $u-1#81 == 0 goto label22;

        minHeight#118 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        goto label23;

     label22:
        minHeight#118 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

     label23:
        $u-1#86 = virtualinvoke right#77.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        $u-1#86 = virtualinvoke minHeight#118.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        paddingRight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        if $u-1#25 == 0 goto label24;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u38 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredWidth()>();

        if $u38 > 0 goto label25;

        goto label24;

     label24:
        if $u-1#81 == 0 goto label26;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u38 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredWidth()>();

        if $u38 <= 0 goto label26;

     label25:
        minHeight#134 = 1;

        goto label27;

     label26:
        minHeight#134 = 0;

     label27:
        $u38 = $u-1;

        $u-1 = this.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $u-1 = $u-1 & 112;

        if $u-1 == 48 goto label31;

        if $u-1 == 80 goto label30;

        $u-1 = $u-1#8 - $u-1#14;

        $u-1 = $u-1 - $u-1#16;

        $u-1 = $u-1 - left;

        $u-1 = $u-1 / 2;

        $u-1#12 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        alignmentHeight = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $u-1#12 = $u-1#12 + alignmentHeight;

        if $u-1 >= $u-1#12 goto label28;

        $u-1#8 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $u-1#16 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $u-1 = $u-1#8 + $u-1#16;

        goto label29;

     label28:
        $u-1#8 = $u-1#8 - $u-1#16;

        $u-1#8 = $u-1#8 - left;

        $u-1#8 = $u-1#8 - $u-1;

        $u-1#8 = $u-1#8 - $u-1#14;

        $u-1#16 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#12 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $u-1#16 = $u-1#16 + $u-1#12;

        if $u-1#8 >= $u-1#16 goto label29;

        $u-1#16 = paddingRight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#12 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $u-1#16 = $u-1#16 + $u-1#12;

        $u-1#8 = $u-1#16 - $u-1#8;

        $u-1#8 = $u-1 - $u-1#8;

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#8);

     label29:
        $u-1#14 = $u-1#14 + $u-1;

        goto label32;

     label30:
        $u-1#14 = $u-1#8 - $u-1#16;

        $u-1#8 = paddingRight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#14 = $u-1#14 - $u-1#8;

        $u-1#8 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $u-1#14 = $u-1#14 - $u-1#8;

        $u-1#14 = $u-1#14 - left;

        goto label32;

     label31:
        $u-1#14 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $u-1#8 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $u-1#14 = $u-1#14 + $u-1#8;

        $u-1#8 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $u-1#14 = $u-1#14 + $u-1#8;

     label32:
        if $u34 == 0 goto label38;

        if minHeight#134 == 0 goto label33;

        $u-1#8 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        goto label34;

     label33:
        $u-1#8 = 0;

     label34:
        $u-1#16 = collapsingMargins[1];

        $u-1#8 = $u-1#8 - $u-1#16;

        $u-1#16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#8);

        $u35 = $u35 - $u-1#16;

        $u-1#8 = neg $u-1#8;

        $u-1#8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#8);

        collapsingMargins[1] = $u-1#8;

        $u-1#16 = $u35;

        $u-1#8 = $u35;

        if $u-1#25 == 0 goto label35;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#86 = virtualinvoke right#77.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#16 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredWidth()>();

        $u-1#16 = $u35 - $u-1#16;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredHeight()>();

        $u-1 = $u-1 + $u-1#14;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke right#77.<android.widget.TextView: void layout(int,int,int,int)>($u-1#16, $u-1#14, $u35, $u-1);

        $u-1#14 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $u-1#16 = $u-1#16 - $u-1#14;

        $u-1#14 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#14 = $u-1 + $u-1#14;

        goto label35;

     label35:
        if $u-1#81 == 0 goto label36;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#86 = virtualinvoke right#77.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        $u-1 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $u-1#14 = $u-1#14 + $u-1;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredWidth()>();

        $u-1 = $u-1#8 - $u-1;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#12 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredHeight()>();

        $u-1#12 = $u-1#12 + $u-1#14;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke right#77.<android.widget.TextView: void layout(int,int,int,int)>($u-1, $u-1#14, $u-1#8, $u-1#12);

        $u-1#14 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $u-1#8 = $u-1#8 - $u-1#14;

        $u-1#14 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

     label36:
        if minHeight#134 == 0 goto label37;

        $u35 = staticinvoke <java.lang.Math: int min(int,int)>($u-1#16, $u-1#8);

     label37:
        goto label45;

     label38:
        if minHeight#134 == 0 goto label39;

        $u-1#8 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        goto label40;

     label39:
        $u-1#8 = 0;

     label40:
        $u-1#16 = collapsingMargins[0];

        $u-1#16 = $u-1#8 - $u-1#16;

        $u-1#8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#16);

        $u-1#8 = left1 + $u-1#8;

        $u-1#16 = neg $u-1#16;

        $u-1#16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#16);

        collapsingMargins[0] = $u-1#16;

        left1 = $u-1#8;

        $u-1 = $u-1#8;

        if $u-1#25 == 0 goto label41;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#86 = virtualinvoke right#77.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#16 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredWidth()>();

        left1 = $u-1#16 + $u-1#8;

        $u-1#16 = $u-1#8;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#12 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredHeight()>();

        $u-1#12 = $u-1#12 + $u-1#14;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke right#77.<android.widget.TextView: void layout(int,int,int,int)>($u-1#8, $u-1#14, left1, $u-1#12);

        $u-1#14 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        left1 = left1 + $u-1#14;

        $u-1#14 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $u-1#14 = $u-1#12 + $u-1#14;

        goto label42;

     label41:
        $u-1#16 = $u-1#8;

     label42:
        if $u-1#81 == 0 goto label43;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#86 = virtualinvoke right#77.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        minHeight = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#86;

        $u-1 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $u-1#14 = $u-1#14 + $u-1;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredWidth()>();

        $u-1 = $u-1 + $u-1#8;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#12 = virtualinvoke right#77.<android.widget.TextView: int getMeasuredHeight()>();

        $u-1#12 = $u-1#12 + $u-1#14;

        right#77 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke right#77.<android.widget.TextView: void layout(int,int,int,int)>($u-1#8, $u-1#14, $u-1, $u-1#12);

        $u-1#14 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $u-1 = $u-1 + $u-1#14;

        $u-1#14 = minHeight.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

     label43:
        if minHeight#134 == 0 goto label44;

        left1 = staticinvoke <java.lang.Math: int max(int,int)>(left1, $u-1);

        goto label45;

     label44:
        left1 = $u-1#16;

     label45:
        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>(isRtl, 3);

        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u-1#14 = virtualinvoke isRtl.<java.util.ArrayList: int size()>();

        $u-1#8 = 0;

     label46:
        if $u-1#8 >= $u-1#14 goto label47;

        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u-1#290 = virtualinvoke isRtl.<java.util.ArrayList: java.lang.Object get(int)>($u-1#8);

        right = (android.view.View) $u-1#290;

        left1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(right, left1, collapsingMargins, $u-1#19);

        $u-1#8 = $u-1#8 + 1;

        goto label46;

     label47:
        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>(isRtl, 5);

        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u-1#14 = virtualinvoke isRtl.<java.util.ArrayList: int size()>();

        $u-1#8 = 0;

     label48:
        if $u-1#8 >= $u-1#14 goto label49;

        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u-1#290 = virtualinvoke isRtl.<java.util.ArrayList: java.lang.Object get(int)>($u-1#8);

        right = (android.view.View) $u-1#290;

        $u35 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>(right, $u35, collapsingMargins, $u-1#19);

        $u-1#8 = $u-1#8 + 1;

        goto label48;

     label49:
        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>(isRtl, 1);

        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u-1#14 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])>(isRtl, collapsingMargins);

        $u38 = $u38 - $u37;

        $u36 = $u38 - $u36;

        $u36 = $u36 / 2;

        $u36 = $u37 + $u36;

        $u37 = $u-1#14 / 2;

        $u36 = $u36 - $u37;

        $u37 = $u36 + $u-1#14;

        if $u36 >= left1 goto label50;

        $u36 = left1;

        goto label51;

     label50:
        if $u37 <= $u35 goto label51;

        $u35 = $u37 - $u35;

        $u36 = $u36 - $u35;

     label51:
        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u35 = virtualinvoke isRtl.<java.util.ArrayList: int size()>();

        $u37 = 0;

     label52:
        if $u37 >= $u35 goto label53;

        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $u-1#290 = virtualinvoke isRtl.<java.util.ArrayList: java.lang.Object get(int)>($u37);

        right = (android.view.View) $u-1#290;

        $u36 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>(right, $u36, collapsingMargins, $u-1#19);

        $u37 = $u37 + 1;

        goto label52;

     label53:
        isRtl = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        virtualinvoke isRtl.<java.util.ArrayList: void clear()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u24, $u25, titleHorizMargins, height, childState1, navWidth, menuWidth, $u-1#61, $u-1#103, $u-1#208, marginEndIndex;
        int[] collapsingMargins;
        boolean $u-1;
        byte marginStartIndex1, marginEndIndex1;
        android.widget.ImageButton marginStartIndex;
        androidx.appcompat.widget.ActionMenuView marginStartIndex#78;
        android.view.View marginStartIndex#121;
        android.widget.ImageView marginStartIndex#150;
        android.view.ViewGroup$LayoutParams $u-1#183;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;
        android.widget.TextView marginStartIndex#229;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u24 := @parameter0: int;

        $u25 := @parameter1: int;

        height = 0;

        childState1 = 0;

        collapsingMargins = this.<androidx.appcompat.widget.Toolbar: int[] mTempMargins>;

        $u-1 = staticinvoke <androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>(this);

        if $u-1 == 0 goto label01;

        marginStartIndex1 = 1;

        marginEndIndex1 = 0;

        goto label02;

     label01:
        marginStartIndex1 = 0;

        marginEndIndex1 = 1;

     label02:
        navWidth = 0;

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex);

        if $u-1 == 0 goto label03;

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        height = this.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>(marginStartIndex, $u24, 0, $u25, 0, height);

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        height = virtualinvoke marginStartIndex.<android.widget.ImageButton: int getMeasuredWidth()>();

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        childState1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>(marginStartIndex);

        navWidth = height + childState1;

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        height = virtualinvoke marginStartIndex.<android.widget.ImageButton: int getMeasuredHeight()>();

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        childState1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex);

        height = height + childState1;

        height = staticinvoke <java.lang.Math: int max(int,int)>(0, height);

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        childState1 = virtualinvoke marginStartIndex.<android.widget.ImageButton: int getMeasuredState()>();

        childState1 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(0, childState1);

     label03:
        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex);

        if $u-1 == 0 goto label04;

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        menuWidth = this.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>(marginStartIndex, $u24, 0, $u25, 0, menuWidth);

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        menuWidth = virtualinvoke marginStartIndex.<android.widget.ImageButton: int getMeasuredWidth()>();

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        navWidth = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>(marginStartIndex);

        navWidth = menuWidth + navWidth;

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        menuWidth = virtualinvoke marginStartIndex.<android.widget.ImageButton: int getMeasuredHeight()>();

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $u-1#61 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex);

        menuWidth = menuWidth + $u-1#61;

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, menuWidth);

        marginStartIndex = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        menuWidth = virtualinvoke marginStartIndex.<android.widget.ImageButton: int getMeasuredState()>();

        childState1 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(childState1, menuWidth);

     label04:
        $u-1#61 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        menuWidth = staticinvoke <java.lang.Math: int max(int,int)>($u-1#61, navWidth);

        navWidth = $u-1#61 - navWidth;

        navWidth = staticinvoke <java.lang.Math: int max(int,int)>(0, navWidth);

        collapsingMargins[marginStartIndex1] = navWidth;

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex#78);

        if $u-1 == 0 goto label05;

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        navWidth = this.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>(marginStartIndex#78, $u24, menuWidth, $u25, 0, navWidth);

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        navWidth = virtualinvoke marginStartIndex#78.<androidx.appcompat.widget.ActionMenuView: int getMeasuredWidth()>();

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1#61 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>(marginStartIndex#78);

        navWidth = navWidth + $u-1#61;

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1#61 = virtualinvoke marginStartIndex#78.<androidx.appcompat.widget.ActionMenuView: int getMeasuredHeight()>();

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1#103 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex#78);

        $u-1#61 = $u-1#61 + $u-1#103;

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, $u-1#61);

        marginStartIndex#78 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1#61 = virtualinvoke marginStartIndex#78.<androidx.appcompat.widget.ActionMenuView: int getMeasuredState()>();

        childState1 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(childState1, $u-1#61);

        goto label06;

     label05:
        navWidth = 0;

     label06:
        $u-1#61 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        $u-1#103 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#61, navWidth);

        menuWidth = menuWidth + $u-1#103;

        navWidth = $u-1#61 - navWidth;

        navWidth = staticinvoke <java.lang.Math: int max(int,int)>(0, navWidth);

        collapsingMargins[marginEndIndex1] = navWidth;

        marginStartIndex#121 = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex#121);

        if $u-1 == 0 goto label07;

        marginStartIndex#121 = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        navWidth = specialinvoke this.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(marginStartIndex#121, $u24, menuWidth, $u25, 0, collapsingMargins);

        menuWidth = menuWidth + navWidth;

        marginStartIndex#121 = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        navWidth = virtualinvoke marginStartIndex#121.<android.view.View: int getMeasuredHeight()>();

        marginStartIndex#121 = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $u-1#61 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex#121);

        navWidth = navWidth + $u-1#61;

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, navWidth);

        marginStartIndex#121 = this.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        navWidth = virtualinvoke marginStartIndex#121.<android.view.View: int getMeasuredState()>();

        childState1 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(childState1, navWidth);

        goto label07;

     label07:
        marginStartIndex#150 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex#150);

        if $u-1 == 0 goto label08;

        marginStartIndex#150 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        navWidth = specialinvoke this.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(marginStartIndex#150, $u24, menuWidth, $u25, 0, collapsingMargins);

        menuWidth = menuWidth + navWidth;

        marginStartIndex#150 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        navWidth = virtualinvoke marginStartIndex#150.<android.widget.ImageView: int getMeasuredHeight()>();

        marginStartIndex#150 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $u-1#61 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex#150);

        navWidth = navWidth + $u-1#61;

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, navWidth);

        marginStartIndex#150 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        navWidth = virtualinvoke marginStartIndex#150.<android.widget.ImageView: int getMeasuredState()>();

        childState1 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(childState1, navWidth);

     label08:
        $u-1#61 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        navWidth = childState1;

        childState1 = menuWidth;

        menuWidth = 0;

     label09:
        if menuWidth >= $u-1#61 goto label12;

        marginStartIndex#121 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>(menuWidth);

        $u-1#183 = virtualinvoke marginStartIndex#121.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#183;

        $u-1#103 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $u-1#103 != 0 goto label11;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex#121);

        if $u-1 != 0 goto label10;

        goto label11;

     label10:
        $u-1#103 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(marginStartIndex#121, $u24, childState1, $u25, 0, collapsingMargins);

        childState1 = childState1 + $u-1#103;

        $u-1#103 = virtualinvoke marginStartIndex#121.<android.view.View: int getMeasuredHeight()>();

        $u-1#208 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex#121);

        $u-1#103 = $u-1#103 + $u-1#208;

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, $u-1#103);

        $u-1#103 = virtualinvoke marginStartIndex#121.<android.view.View: int getMeasuredState()>();

        navWidth = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(navWidth, $u-1#103);

        goto label11;

     label11:
        menuWidth = menuWidth + 1;

        goto label09;

     label12:
        menuWidth = navWidth;

        $u-1#61 = 0;

        $u-1#103 = 0;

        $u-1#208 = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        titleHorizMargins = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $u-1#208 = $u-1#208 + titleHorizMargins;

        titleHorizMargins = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        marginEndIndex = this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        titleHorizMargins = titleHorizMargins + marginEndIndex;

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex#229);

        if $u-1 == 0 goto label13;

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        menuWidth = childState1 + titleHorizMargins;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(marginStartIndex#229, $u24, menuWidth, $u25, $u-1#208, collapsingMargins);

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        menuWidth = virtualinvoke marginStartIndex#229.<android.widget.TextView: int getMeasuredWidth()>();

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#61 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>(marginStartIndex#229);

        $u-1#61 = menuWidth + $u-1#61;

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        menuWidth = virtualinvoke marginStartIndex#229.<android.widget.TextView: int getMeasuredHeight()>();

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1#103 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex#229);

        $u-1#103 = menuWidth + $u-1#103;

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        menuWidth = virtualinvoke marginStartIndex#229.<android.widget.TextView: int getMeasuredState()>();

        menuWidth = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(navWidth, menuWidth);

     label13:
        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>(marginStartIndex#229);

        if $u-1 == 0 goto label14;

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        navWidth = childState1 + titleHorizMargins;

        $u-1#208 = $u-1#103 + $u-1#208;

        navWidth = specialinvoke this.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(marginStartIndex#229, $u24, navWidth, $u25, $u-1#208, collapsingMargins);

        $u-1#61 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#61, navWidth);

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        navWidth = virtualinvoke marginStartIndex#229.<android.widget.TextView: int getMeasuredHeight()>();

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#208 = specialinvoke this.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>(marginStartIndex#229);

        navWidth = navWidth + $u-1#208;

        navWidth = $u-1#103 + navWidth;

        marginStartIndex#229 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1#103 = virtualinvoke marginStartIndex#229.<android.widget.TextView: int getMeasuredState()>();

        menuWidth = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(menuWidth, $u-1#103);

        goto label15;

     label14:
        navWidth = $u-1#103;

     label15:
        childState1 = childState1 + $u-1#61;

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, navWidth);

        navWidth = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $u-1#61 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        navWidth = navWidth + $u-1#61;

        childState1 = childState1 + navWidth;

        navWidth = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $u-1#61 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        navWidth = navWidth + $u-1#61;

        height = height + navWidth;

        navWidth = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getSuggestedMinimumWidth()>();

        childState1 = staticinvoke <java.lang.Math: int max(int,int)>(childState1, navWidth);

        navWidth = -16777216 & menuWidth;

        $u24 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(childState1, $u24, navWidth);

        childState1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getSuggestedMinimumHeight()>();

        height = staticinvoke <java.lang.Math: int max(int,int)>(height, childState1);

        childState1 = menuWidth << 16;

        $u25 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(height, $u25, childState1);

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean shouldCollapse()>();

        if $u-1 == 0 goto label16;

        $u25 = 0;

        goto label16;

     label16:
        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setMeasuredDimension(int,int)>($u24, $u25);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.appcompat.widget.Toolbar this;
        android.os.Parcelable $u4;
        boolean ss;
        androidx.appcompat.widget.Toolbar$SavedState ss#3;
        androidx.appcompat.widget.ActionMenuView menu;
        androidx.appcompat.view.menu.MenuBuilder $u-1;
        int item;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter item#10;
        android.view.MenuItem $u-1#12;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u4 := @parameter0: android.os.Parcelable;

        ss = $u4 instanceof androidx.appcompat.widget.Toolbar$SavedState;

        if ss != 0 goto label1;

        specialinvoke this.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($u4);

        return;

     label1:
        ss#3 = (androidx.appcompat.widget.Toolbar$SavedState) $u4;

        $u4 = virtualinvoke ss#3.<androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke this.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($u4);

        menu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if menu == null goto label2;

        $u-1 = virtualinvoke menu.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        goto label3;

     label2:
        $u-1 = null;

     label3:
        item = ss#3.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId>;

        if item == 0 goto label4;

        item#10 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if item#10 == null goto label4;

        if $u-1 == null goto label4;

        item = ss#3.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId>;

        $u-1#12 = interfaceinvoke $u-1.<android.view.Menu: android.view.MenuItem findItem(int)>(item);

        if $u-1#12 == null goto label4;

        interfaceinvoke $u-1#12.<android.view.MenuItem: boolean expandActionView()>();

     label4:
        ss = ss#3.<androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen>;

        if ss == 0 goto label5;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()>();

     label5:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u3, $u0;
        androidx.appcompat.widget.RtlSpacingHelper $u0#3;
        boolean $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 17 goto label1;

        specialinvoke this.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>($u3);

     label1:
        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $u0#3 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        $u1 = 1;

        if $u3 != 1 goto label2;

        goto label3;

     label2:
        $u1 = 0;

     label3:
        virtualinvoke $u0#3.<androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)>($u1);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$SavedState state;
        android.os.Parcelable $u-1;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $u1;
        androidx.appcompat.view.menu.MenuItemImpl $u1#4;
        int $u-1#7;
        boolean $u-1#9;

        this := @this: androidx.appcompat.widget.Toolbar;

        state = new androidx.appcompat.widget.Toolbar$SavedState;

        $u-1 = specialinvoke this.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke state.<androidx.appcompat.widget.Toolbar$SavedState: void <init>(android.os.Parcelable)>($u-1);

        $u1 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $u1 == null goto label1;

        $u1#4 = $u1.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $u1#4 == null goto label1;

        $u1 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $u1#4 = $u1.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

        $u-1#7 = virtualinvoke $u1#4.<androidx.appcompat.view.menu.MenuItemImpl: int getItemId()>();

        state.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId> = $u-1#7;

     label1:
        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()>();

        state.<androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen> = $u-1#9;

        return state;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.MotionEvent $u5;
        int $u-1;
        boolean handled;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u5 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1 != 0 goto label1;

        this.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 0;

     label1:
        handled = this.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch>;

        if handled != 0 goto label2;

        handled = specialinvoke this.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($u5);

        if $u-1 != 0 goto label2;

        if handled != 0 goto label2;

        this.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 1;

     label2:
        if $u-1 == 1 goto label3;

        if $u-1 != 3 goto label4;

     label3:
        this.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    void removeChildrenForExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar this;
        int $u-1, $u4;
        android.view.View $u-1#3;
        android.view.ViewGroup$LayoutParams $u-1#4;
        androidx.appcompat.widget.Toolbar$LayoutParams lp;
        androidx.appcompat.widget.ActionMenuView $u4#8;
        java.util.ArrayList $u4#9;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        $u-1 = $u-1 + -1;

     label1:
        if $u-1 < 0 goto label3;

        $u-1#3 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($u-1);

        $u-1#4 = virtualinvoke $u-1#3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.Toolbar$LayoutParams) $u-1#4;

        $u4 = lp.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $u4 == 2 goto label2;

        $u4#8 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u-1#3 == $u4#8 goto label2;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void removeViewAt(int)>($u-1);

        $u4#9 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $u4#9.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1#3);

     label2:
        $u-1 = $u-1 + -1;

        goto label1;

     label3:
        return;
    }

    public void setCollapseContentDescription(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        java.lang.CharSequence $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        if $u2 == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: java.lang.CharSequence getText(int)>($u2);

        goto label2;

     label1:
        $u-1#3 = null;

     label2:
        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)>($u-1#3);

        return;
    }

    public void setCollapseContentDescription(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u2;
        boolean $u-1;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u2);

        if $u-1 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()>();

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $u0 == null goto label2;

        virtualinvoke $u0.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($u2);

     label2:
        return;
    }

    public void setCollapseIcon(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u-1, $u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)>($u-1#3);

        return;
    }

    public void setCollapseIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u3;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: android.graphics.drawable.Drawable;

        if $u3 == null goto label1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $u0.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($u3);

        return;

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $u0 == null goto label2;

        $u3 = this.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke $u0.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($u3);

     label2:
        return;
    }

    public void setCollapsible(boolean)
    {
        androidx.appcompat.widget.Toolbar this;
        boolean $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: boolean;

        this.<androidx.appcompat.widget.Toolbar: boolean mCollapsible> = $u1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setContentInsetEndWithActions(int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        int $u2, $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        if $u2 >= 0 goto label1;

        $u2 = -2147483648;

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        if $u2 == $u0 goto label2;

        this.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions> = $u2;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $u-1 == null goto label2;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetStartWithNavigation(int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u-1;
        int $u2, $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        if $u2 >= 0 goto label1;

        $u2 = -2147483648;

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if $u2 == $u0 goto label2;

        this.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation> = $u2;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $u-1 == null goto label2;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetsAbsolute(int, int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2, $u3;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)>($u2, $u3);

        return;
    }

    public void setContentInsetsRelative(int, int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2, $u3;
        androidx.appcompat.widget.RtlSpacingHelper $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $u0.<androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)>($u2, $u3);

        return;
    }

    public void setLogo(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u-1, $u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($u-1#3);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u3;
        android.widget.ImageView $u0;
        boolean $u-1;
        java.util.ArrayList $u0#10;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: android.graphics.drawable.Drawable;

        if $u3 == null goto label1;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureLogoView()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($u0);

        if $u-1 != 0 goto label2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($u0, 1);

        goto label2;

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $u0 == null goto label2;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($u0);

        if $u-1 == 0 goto label2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>($u0);

        $u0#10 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $u0#10.<java.util.ArrayList: boolean remove(java.lang.Object)>($u0);

     label2:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $u0 == null goto label3;

        virtualinvoke $u0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($u3);

     label3:
        return;
    }

    public void setLogoDescription(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        java.lang.CharSequence $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: java.lang.CharSequence getText(int)>($u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($u-1#3);

        return;
    }

    public void setLogoDescription(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u2;
        boolean $u-1;
        android.widget.ImageView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u2);

        if $u-1 != 0 goto label1;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureLogoView()>();

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $u0 == null goto label2;

        virtualinvoke $u0.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>($u2);

     label2:
        return;
    }

    public void setMenu(androidx.appcompat.view.menu.MenuBuilder, androidx.appcompat.widget.ActionMenuPresenter)
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.view.menu.MenuBuilder $u6, $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u7, $u1;
        android.content.Context $u4;
        androidx.appcompat.widget.ActionMenuView oldMenu;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $u1#5;
        int $u2;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u6 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $u7 := @parameter1: androidx.appcompat.widget.ActionMenuPresenter;

        if $u6 != null goto label1;

        oldMenu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if oldMenu != null goto label1;

        return;

     label1:
        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureMenuView()>();

        oldMenu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u-1 = virtualinvoke oldMenu.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $u-1 != $u6 goto label2;

        return;

     label2:
        if $u-1 == null goto label3;

        $u1 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        virtualinvoke $u-1.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($u1);

        $u1#5 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke $u-1.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($u1#5);

     label3:
        $u1#5 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $u1#5 != null goto label4;

        $u1#5 = new androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $u1#5.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(androidx.appcompat.widget.Toolbar)>(this);

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $u1#5;

     label4:
        virtualinvoke $u7.<androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>(1);

        if $u6 == null goto label5;

        $u4 = this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $u6.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($u7, $u4);

        $u1#5 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $u4 = this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $u6.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($u1#5, $u4);

        goto label6;

     label5:
        $u4 = this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $u7.<androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>($u4, null);

        $u1#5 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $u4 = this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $u1#5.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>($u4, null);

        virtualinvoke $u7.<androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)>(1);

        $u1#5 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke $u1#5.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>(1);

     label6:
        oldMenu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $u2 = this.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        virtualinvoke oldMenu.<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>($u2);

        oldMenu = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke oldMenu.<androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)>($u7);

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter> = $u7;

        return;
    }

    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback, androidx.appcompat.view.menu.MenuBuilder$Callback)
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.view.menu.MenuPresenter$Callback $u2;
        androidx.appcompat.view.menu.MenuBuilder$Callback $u3;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: androidx.appcompat.view.menu.MenuPresenter$Callback;

        $u3 := @parameter1: androidx.appcompat.view.menu.MenuBuilder$Callback;

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback> = $u2;

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback> = $u3;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>($u2, $u3);

     label1:
        return;
    }

    public void setNavigationContentDescription(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        java.lang.CharSequence $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        if $u2 == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: java.lang.CharSequence getText(int)>($u2);

        goto label2;

     label1:
        $u-1#3 = null;

     label2:
        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($u-1#3);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u2;
        boolean $u-1;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: java.lang.CharSequence;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u2);

        if $u-1 != 0 goto label1;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $u0 == null goto label2;

        virtualinvoke $u0.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($u2);

     label2:
        return;
    }

    public void setNavigationIcon(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        android.graphics.drawable.Drawable $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($u-1, $u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($u-1#3);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u3;
        android.widget.ImageButton $u0;
        boolean $u-1;
        java.util.ArrayList $u0#10;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: android.graphics.drawable.Drawable;

        if $u3 == null goto label1;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($u0);

        if $u-1 != 0 goto label2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($u0, 1);

        goto label2;

     label1:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $u0 == null goto label2;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($u0);

        if $u-1 == 0 goto label2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>($u0);

        $u0#10 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $u0#10.<java.util.ArrayList: boolean remove(java.lang.Object)>($u0);

     label2:
        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $u0 == null goto label3;

        virtualinvoke $u0.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($u3);

     label3:
        return;
    }

    public void setNavigationOnClickListener(android.view.View$OnClickListener)
    {
        androidx.appcompat.widget.Toolbar this;
        android.view.View$OnClickListener $u2;
        android.widget.ImageButton $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.view.View$OnClickListener;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $u0.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($u2);

        return;
    }

    public void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
    {
        androidx.appcompat.widget.Toolbar this;
        androidx.appcompat.widget.Toolbar$OnMenuItemClickListener $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener;

        this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener> = $u1;

        return;
    }

    public void setOverflowIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setPopupTheme(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u3, $u0;
        android.content.Context $u-1;
        android.view.ContextThemeWrapper $u0#4;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u3 := @parameter0: int;

        $u0 = this.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        if $u0 == $u3 goto label2;

        this.<androidx.appcompat.widget.Toolbar: int mPopupTheme> = $u3;

        if $u3 != 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $u-1;

        return;

     label1:
        $u0#4 = new android.view.ContextThemeWrapper;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $u0#4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($u-1, $u3);

        this.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $u0#4;

     label2:
        return;
    }

    public void setSubtitle(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        java.lang.CharSequence $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: java.lang.CharSequence getText(int)>($u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($u-1#3);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u4;
        boolean $u-1;
        android.widget.TextView context;
        android.content.Context $u-1#4;
        androidx.appcompat.widget.AppCompatTextView $u1;
        android.text.TextUtils$TruncateAt $u2;
        int $u1#9;
        android.content.res.ColorStateList $u1#11;
        java.util.ArrayList context#22;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u4 := @parameter0: java.lang.CharSequence;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u4);

        if $u-1 != 0 goto label3;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if context != null goto label2;

        $u-1#4 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u1 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $u1.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($u-1#4);

        this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView> = $u1;

        virtualinvoke $u1.<android.widget.TextView: void setSingleLine()>();

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke context.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($u2);

        $u1#9 = this.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance>;

        if $u1#9 == 0 goto label1;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke context.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($u-1#4, $u1#9);

     label1:
        $u1#11 = this.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor>;

        if $u1#11 == null goto label2;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke context.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($u1#11);

     label2:
        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(context);

        if $u-1 != 0 goto label4;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>(context, 1);

        goto label4;

     label3:
        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if context == null goto label4;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(context);

        if $u-1 == 0 goto label4;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>(context);

        context#22 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke context#22.<java.util.ArrayList: boolean remove(java.lang.Object)>(context);

     label4:
        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if context == null goto label5;

        virtualinvoke context.<android.widget.TextView: void setText(java.lang.CharSequence)>($u4);

     label5:
        this.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText> = $u4;

        return;
    }

    public void setSubtitleTextAppearance(android.content.Context, int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context $u2;
        int $u3;
        android.widget.TextView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: int;

        this.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance> = $u3;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($u2, $u3);

     label1:
        return;
    }

    public void setSubtitleTextColor(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.res.ColorStateList $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)>($u-1);

        return;
    }

    public void setSubtitleTextColor(android.content.res.ColorStateList)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.res.ColorStateList $u2;
        android.widget.TextView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.content.res.ColorStateList;

        this.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor> = $u2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($u2);

     label1:
        return;
    }

    public void setTitle(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.Context $u-1;
        java.lang.CharSequence $u-1#3;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: java.lang.CharSequence getText(int)>($u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)>($u-1#3);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar this;
        java.lang.CharSequence $u4;
        boolean $u-1;
        android.widget.TextView context;
        android.content.Context $u-1#4;
        androidx.appcompat.widget.AppCompatTextView $u1;
        android.text.TextUtils$TruncateAt $u2;
        int $u1#9;
        android.content.res.ColorStateList $u1#11;
        java.util.ArrayList context#22;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u4 := @parameter0: java.lang.CharSequence;

        $u-1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($u4);

        if $u-1 != 0 goto label3;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if context != null goto label2;

        $u-1#4 = virtualinvoke this.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $u1 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $u1.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($u-1#4);

        this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView> = $u1;

        virtualinvoke $u1.<android.widget.TextView: void setSingleLine()>();

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke context.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($u2);

        $u1#9 = this.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance>;

        if $u1#9 == 0 goto label1;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke context.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($u-1#4, $u1#9);

     label1:
        $u1#11 = this.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor>;

        if $u1#11 == null goto label2;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke context.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($u1#11);

     label2:
        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(context);

        if $u-1 != 0 goto label4;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        specialinvoke this.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>(context, 1);

        goto label4;

     label3:
        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if context == null goto label4;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(context);

        if $u-1 == 0 goto label4;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>(context);

        context#22 = this.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke context#22.<java.util.ArrayList: boolean remove(java.lang.Object)>(context);

     label4:
        context = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if context == null goto label5;

        virtualinvoke context.<android.widget.TextView: void setText(java.lang.CharSequence)>($u4);

     label5:
        this.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText> = $u4;

        return;
    }

    public void setTitleMargin(int, int, int, int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u1, $u2, $u3, $u4;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $u1;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $u2;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $u3;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $u4;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginBottom(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $u1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginEnd(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $u1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginStart(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $u1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginTop(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u1 := @parameter0: int;

        this.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $u1;

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleTextAppearance(android.content.Context, int)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.Context $u2;
        int $u3;
        android.widget.TextView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: int;

        this.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance> = $u3;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($u2, $u3);

     label1:
        return;
    }

    public void setTitleTextColor(int)
    {
        androidx.appcompat.widget.Toolbar this;
        int $u2;
        android.content.res.ColorStateList $u-1;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: int;

        $u-1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($u2);

        virtualinvoke this.<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)>($u-1);

        return;
    }

    public void setTitleTextColor(android.content.res.ColorStateList)
    {
        androidx.appcompat.widget.Toolbar this;
        android.content.res.ColorStateList $u2;
        android.widget.TextView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u2 := @parameter0: android.content.res.ColorStateList;

        this.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor> = $u2;

        $u0 = this.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($u2);

     label1:
        return;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuView $u0;

        this := @this: androidx.appcompat.widget.Toolbar;

        $u0 = this.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.Toolbar: java.lang.String TAG> = "Toolbar";

        return;
    }
}
