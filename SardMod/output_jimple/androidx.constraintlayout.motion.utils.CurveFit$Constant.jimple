class androidx.constraintlayout.motion.utils.CurveFit$Constant extends androidx.constraintlayout.motion.utils.CurveFit
{
    double mTime;
    double[] mValue;

    void <init>(double, double[])
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u1;
        double[] $u3;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u1 := @parameter0: double;

        $u3 := @parameter1: double[];

        specialinvoke this.<androidx.constraintlayout.motion.utils.CurveFit: void <init>()>();

        this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double mTime> = $u1;

        this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double[] mValue> = $u3;

        return;
    }

    public double getPos(double, int)
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u4;
        int $u6;
        double[] $u0;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u4 := @parameter0: double;

        $u6 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double[] mValue>;

        $u4 = $u0[$u6];

        return $u4;
    }

    public void getPos(double, double[])
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u4;
        double[] $u6, $u0;
        int $u1;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u4 := @parameter0: double;

        $u6 := @parameter1: double[];

        $u0 = this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double[] mValue>;

        $u1 = lengthof $u0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($u0, 0, $u6, 0, $u1);

        return;
    }

    public void getPos(double, float[])
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u5;
        float[] $u7;
        int i, $u2;
        double[] $u1;
        float $u1#5;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u5 := @parameter0: double;

        $u7 := @parameter1: float[];

        i = 0;

     label1:
        $u1 = this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double[] mValue>;

        $u2 = lengthof $u1;

        if i >= $u2 goto label2;

        $u5 = $u1[i];

        $u1#5 = (float) $u5;

        $u7[i] = $u1#5;

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public double getSlope(double, int)
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u3;
        int $u5;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u3 := @parameter0: double;

        $u5 := @parameter1: int;

        return 0.0;
    }

    public void getSlope(double, double[])
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u4;
        double[] $u6, $u1;
        int i, $u1#3;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u4 := @parameter0: double;

        $u6 := @parameter1: double[];

        i = 0;

     label1:
        $u1 = this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double[] mValue>;

        $u1#3 = lengthof $u1;

        if i >= $u1#3 goto label2;

        $u6[i] = 0.0;

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public double[] getTimePoints()
    {
        androidx.constraintlayout.motion.utils.CurveFit$Constant this;
        double $u1;
        double[] $u0;

        this := @this: androidx.constraintlayout.motion.utils.CurveFit$Constant;

        $u0 = newarray (double)[1];

        $u1 = this.<androidx.constraintlayout.motion.utils.CurveFit$Constant: double mTime>;

        $u0[0] = $u1;

        return $u0;
    }
}
