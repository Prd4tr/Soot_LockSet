public class androidx.constraintlayout.solver.state.State extends java.lang.Object
{
    static final int CONSTRAINT_RATIO;
    static final int CONSTRAINT_SPREAD;
    static final int CONSTRAINT_WRAP;
    public static final java.lang.Integer PARENT;
    static final int UNKNOWN;
    protected java.util.HashMap mHelperReferences;
    public final androidx.constraintlayout.solver.state.ConstraintReference mParent;
    protected java.util.HashMap mReferences;
    private int numHelpers;

    static void <clinit>()
    {
        java.lang.Integer $u-1;

        <androidx.constraintlayout.solver.state.State: int UNKNOWN> = -1;

        <androidx.constraintlayout.solver.state.State: int CONSTRAINT_WRAP> = 1;

        <androidx.constraintlayout.solver.state.State: int CONSTRAINT_SPREAD> = 0;

        <androidx.constraintlayout.solver.state.State: int CONSTRAINT_RATIO> = 2;

        $u-1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        <androidx.constraintlayout.solver.state.State: java.lang.Integer PARENT> = $u-1;

        return;
    }

    public void <init>()
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Integer $u2;
        java.util.HashMap $u0;
        androidx.constraintlayout.solver.state.ConstraintReference $u0#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences> = $u0;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences> = $u0;

        $u0#3 = new androidx.constraintlayout.solver.state.ConstraintReference;

        specialinvoke $u0#3.<androidx.constraintlayout.solver.state.ConstraintReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference mParent> = $u0#3;

        this.<androidx.constraintlayout.solver.state.State: int numHelpers> = 0;

        $u0 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u2 = <androidx.constraintlayout.solver.state.State: java.lang.Integer PARENT>;

        virtualinvoke $u0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u2, $u0#3);

        return;
    }

    private java.lang.String createHelperKey()
    {
        androidx.constraintlayout.solver.state.State this;
        int $u2, $u1;
        java.lang.String $u-1;
        java.lang.StringBuilder $u0;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__HELPER_KEY_");

        $u1 = this.<androidx.constraintlayout.solver.state.State: int numHelpers>;

        $u2 = $u1 + 1;

        this.<androidx.constraintlayout.solver.state.State: int numHelpers> = $u2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__");

        $u-1 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1;
    }

    public void apply(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
    {
        androidx.constraintlayout.solver.state.State this;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u10;
        androidx.constraintlayout.solver.state.ConstraintReference $u0;
        androidx.constraintlayout.solver.state.Dimension $u-1;
        java.util.HashMap $u0#9;
        java.util.Set $u-1#10;
        java.util.Iterator $u-1#12, $u-1#63;
        boolean $u-1#14;
        java.lang.Object $u-1#16, $u-1#19;
        androidx.constraintlayout.solver.state.HelperReference reference;
        androidx.constraintlayout.solver.widgets.HelperWidget $u-1#22;
        androidx.constraintlayout.solver.state.Reference constraintReference;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u-1#43;
        java.util.ArrayList constraintReference#62;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u10 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        virtualinvoke $u10.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void removeAllChildren()>();

        $u0 = this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference mParent>;

        $u-1 = virtualinvoke $u0.<androidx.constraintlayout.solver.state.ConstraintReference: androidx.constraintlayout.solver.state.Dimension getWidth()>();

        virtualinvoke $u-1.<androidx.constraintlayout.solver.state.Dimension: void apply(androidx.constraintlayout.solver.state.State,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(this, $u10, 0);

        $u0 = this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference mParent>;

        $u-1 = virtualinvoke $u0.<androidx.constraintlayout.solver.state.ConstraintReference: androidx.constraintlayout.solver.state.Dimension getHeight()>();

        virtualinvoke $u-1.<androidx.constraintlayout.solver.state.Dimension: void apply(androidx.constraintlayout.solver.state.State,androidx.constraintlayout.solver.widgets.ConstraintWidget,int)>(this, $u10, 1);

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        $u-1#10 = virtualinvoke $u0#9.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#12 = interfaceinvoke $u-1#10.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Iterator: boolean hasNext()>();

        if $u-1#14 == 0 goto label03;

        $u-1#16 = interfaceinvoke $u-1#12.<java.util.Iterator: java.lang.Object next()>();

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        $u-1#19 = virtualinvoke $u0#9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#16);

        reference = (androidx.constraintlayout.solver.state.HelperReference) $u-1#19;

        $u-1#22 = virtualinvoke reference.<androidx.constraintlayout.solver.state.HelperReference: androidx.constraintlayout.solver.widgets.HelperWidget getHelperWidget()>();

        if $u-1#22 == null goto label01;

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1#19 = virtualinvoke $u0#9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#16);

        constraintReference = (androidx.constraintlayout.solver.state.Reference) $u-1#19;

        if constraintReference != null goto label02;

        constraintReference = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference constraints(java.lang.Object)>($u-1#16);

     label02:
        interfaceinvoke constraintReference.<androidx.constraintlayout.solver.state.Reference: void setConstraintWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u-1#22);

        goto label01;

     label03:
        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1#10 = virtualinvoke $u0#9.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#12 = interfaceinvoke $u-1#10.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Iterator: boolean hasNext()>();

        if $u-1#14 == 0 goto label07;

        $u-1#16 = interfaceinvoke $u-1#12.<java.util.Iterator: java.lang.Object next()>();

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1#16 = virtualinvoke $u0#9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#16);

        constraintReference = (androidx.constraintlayout.solver.state.Reference) $u-1#16;

        $u0 = this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference mParent>;

        if constraintReference == $u0 goto label06;

        $u-1#43 = interfaceinvoke constraintReference.<androidx.constraintlayout.solver.state.Reference: androidx.constraintlayout.solver.widgets.ConstraintWidget getConstraintWidget()>();

        virtualinvoke $u-1#43.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)>(null);

        $u-1#14 = constraintReference instanceof androidx.constraintlayout.solver.state.helpers.GuidelineReference;

        if $u-1#14 == 0 goto label05;

        interfaceinvoke constraintReference.<androidx.constraintlayout.solver.state.Reference: void apply()>();

     label05:
        virtualinvoke $u10.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u-1#43);

        goto label04;

     label06:
        interfaceinvoke constraintReference.<androidx.constraintlayout.solver.state.Reference: void setConstraintWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u10);

        goto label04;

     label07:
        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        $u-1#10 = virtualinvoke $u0#9.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#12 = interfaceinvoke $u-1#10.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Iterator: boolean hasNext()>();

        if $u-1#14 == 0 goto label11;

        $u-1#16 = interfaceinvoke $u-1#12.<java.util.Iterator: java.lang.Object next()>();

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        $u-1#16 = virtualinvoke $u0#9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#16);

        reference = (androidx.constraintlayout.solver.state.HelperReference) $u-1#16;

        $u-1#22 = virtualinvoke reference.<androidx.constraintlayout.solver.state.HelperReference: androidx.constraintlayout.solver.widgets.HelperWidget getHelperWidget()>();

        if $u-1#22 == null goto label08;

        constraintReference#62 = reference.<androidx.constraintlayout.solver.state.HelperReference: java.util.ArrayList mReferences>;

        $u-1#63 = virtualinvoke constraintReference#62.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $u-1#14 = interfaceinvoke $u-1#63.<java.util.Iterator: boolean hasNext()>();

        if $u-1#14 == 0 goto label10;

        $u-1#16 = interfaceinvoke $u-1#63.<java.util.Iterator: java.lang.Object next()>();

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1#16 = virtualinvoke $u0#9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#16);

        constraintReference = (androidx.constraintlayout.solver.state.Reference) $u-1#16;

        $u-1#22 = virtualinvoke reference.<androidx.constraintlayout.solver.state.HelperReference: androidx.constraintlayout.solver.widgets.HelperWidget getHelperWidget()>();

        $u-1#43 = interfaceinvoke constraintReference.<androidx.constraintlayout.solver.state.Reference: androidx.constraintlayout.solver.widgets.ConstraintWidget getConstraintWidget()>();

        virtualinvoke $u-1#22.<androidx.constraintlayout.solver.widgets.HelperWidget: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u-1#43);

        goto label09;

     label10:
        virtualinvoke reference.<androidx.constraintlayout.solver.state.HelperReference: void apply()>();

        goto label08;

     label11:
        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1#10 = virtualinvoke $u0#9.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#12 = interfaceinvoke $u-1#10.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $u-1#14 = interfaceinvoke $u-1#12.<java.util.Iterator: boolean hasNext()>();

        if $u-1#14 == 0 goto label13;

        $u-1#16 = interfaceinvoke $u-1#12.<java.util.Iterator: java.lang.Object next()>();

        $u0#9 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1#16 = virtualinvoke $u0#9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u-1#16);

        constraintReference = (androidx.constraintlayout.solver.state.Reference) $u-1#16;

        interfaceinvoke constraintReference.<androidx.constraintlayout.solver.state.Reference: void apply()>();

        goto label12;

     label13:
        return;
    }

    public androidx.constraintlayout.solver.state.helpers.BarrierReference barrier(java.lang.Object, androidx.constraintlayout.solver.state.State$Direction)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2;
        androidx.constraintlayout.solver.state.State$Direction $u3;
        androidx.constraintlayout.solver.state.HelperReference $u-1;
        androidx.constraintlayout.solver.state.State$Helper reference;
        androidx.constraintlayout.solver.state.helpers.BarrierReference reference#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u3 := @parameter1: androidx.constraintlayout.solver.state.State$Direction;

        reference = <androidx.constraintlayout.solver.state.State$Helper: androidx.constraintlayout.solver.state.State$Helper BARRIER>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.HelperReference helper(java.lang.Object,androidx.constraintlayout.solver.state.State$Helper)>($u2, reference);

        reference#3 = (androidx.constraintlayout.solver.state.helpers.BarrierReference) $u-1;

        virtualinvoke reference#3.<androidx.constraintlayout.solver.state.helpers.BarrierReference: void setBarrierDirection(androidx.constraintlayout.solver.state.State$Direction)>($u3);

        return reference#3;
    }

    public transient androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference centerHorizontally(java.lang.Object[])
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object[] $u3;
        androidx.constraintlayout.solver.state.HelperReference $u-1;
        androidx.constraintlayout.solver.state.State$Helper reference;
        androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference reference#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u3 := @parameter0: java.lang.Object[];

        reference = <androidx.constraintlayout.solver.state.State$Helper: androidx.constraintlayout.solver.state.State$Helper ALIGN_HORIZONTALLY>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.HelperReference helper(java.lang.Object,androidx.constraintlayout.solver.state.State$Helper)>(null, reference);

        reference#3 = (androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference) $u-1;

        virtualinvoke reference#3.<androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference: androidx.constraintlayout.solver.state.HelperReference add(java.lang.Object[])>($u3);

        return reference#3;
    }

    public transient androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference centerVertically(java.lang.Object[])
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object[] $u3;
        androidx.constraintlayout.solver.state.HelperReference $u-1;
        androidx.constraintlayout.solver.state.State$Helper reference;
        androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference reference#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u3 := @parameter0: java.lang.Object[];

        reference = <androidx.constraintlayout.solver.state.State$Helper: androidx.constraintlayout.solver.state.State$Helper ALIGN_VERTICALLY>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.HelperReference helper(java.lang.Object,androidx.constraintlayout.solver.state.State$Helper)>(null, reference);

        reference#3 = (androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference) $u-1;

        virtualinvoke reference#3.<androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference: androidx.constraintlayout.solver.state.HelperReference add(java.lang.Object[])>($u3);

        return reference#3;
    }

    public androidx.constraintlayout.solver.state.ConstraintReference constraints(java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u3, $u-1;
        java.util.HashMap reference;
        androidx.constraintlayout.solver.state.Reference reference#4;
        androidx.constraintlayout.solver.state.ConstraintReference $u-1#5;
        boolean $u1;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u3 := @parameter0: java.lang.Object;

        reference = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1 = virtualinvoke reference.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u3);

        reference#4 = (androidx.constraintlayout.solver.state.Reference) $u-1;

        if reference#4 != null goto label1;

        $u-1#5 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference createConstraintReference(java.lang.Object)>($u3);

        reference#4 = $u-1#5;

        reference = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        virtualinvoke reference.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u3, $u-1#5);

        interfaceinvoke $u-1#5.<androidx.constraintlayout.solver.state.Reference: void setKey(java.lang.Object)>($u3);

     label1:
        $u1 = reference#4 instanceof androidx.constraintlayout.solver.state.ConstraintReference;

        if $u1 == 0 goto label2;

        $u-1#5 = (androidx.constraintlayout.solver.state.ConstraintReference) reference#4;

        return $u-1#5;

     label2:
        return null;
    }

    public int convertDimension(java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2;
        boolean $u0;
        java.lang.Float $u0#3;
        int $u-1;
        java.lang.Integer $u0#8;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u0 = $u2 instanceof java.lang.Float;

        if $u0 == 0 goto label1;

        $u0#3 = (java.lang.Float) $u2;

        $u-1 = virtualinvoke $u0#3.<java.lang.Float: int intValue()>();

        return $u-1;

     label1:
        $u0 = $u2 instanceof java.lang.Integer;

        if $u0 == 0 goto label2;

        $u0#8 = (java.lang.Integer) $u2;

        $u-1 = virtualinvoke $u0#8.<java.lang.Integer: int intValue()>();

        return $u-1;

     label2:
        return 0;
    }

    public androidx.constraintlayout.solver.state.ConstraintReference createConstraintReference(java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2;
        androidx.constraintlayout.solver.state.ConstraintReference $u0;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u0 = new androidx.constraintlayout.solver.state.ConstraintReference;

        specialinvoke $u0.<androidx.constraintlayout.solver.state.ConstraintReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        return $u0;
    }

    public void directMapping()
    {
        androidx.constraintlayout.solver.state.State this;
        java.util.HashMap $u0;
        java.util.Set $u-1;
        java.util.Iterator $u-1#4;
        boolean $u-1#6;
        java.lang.Object $u-1#8;
        androidx.constraintlayout.solver.state.ConstraintReference $u-1#10;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u0 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1 = virtualinvoke $u0.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#4 = interfaceinvoke $u-1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $u-1#6 = interfaceinvoke $u-1#4.<java.util.Iterator: boolean hasNext()>();

        if $u-1#6 == 0 goto label2;

        $u-1#8 = interfaceinvoke $u-1#4.<java.util.Iterator: java.lang.Object next()>();

        $u-1#10 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference constraints(java.lang.Object)>($u-1#8);

        virtualinvoke $u-1#10.<androidx.constraintlayout.solver.state.ConstraintReference: void setView(java.lang.Object)>($u-1#8);

        goto label1;

     label2:
        return;
    }

    public androidx.constraintlayout.solver.state.helpers.GuidelineReference guideline(java.lang.Object, int)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u4, $u-1;
        int $u5;
        java.util.HashMap $u2;
        androidx.constraintlayout.solver.state.Reference reference;
        androidx.constraintlayout.solver.state.helpers.GuidelineReference guidelineReference;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u4 := @parameter0: java.lang.Object;

        $u5 := @parameter1: int;

        $u2 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u-1 = virtualinvoke $u2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u4);

        reference = (androidx.constraintlayout.solver.state.Reference) $u-1;

        if reference != null goto label1;

        guidelineReference = new androidx.constraintlayout.solver.state.helpers.GuidelineReference;

        specialinvoke guidelineReference.<androidx.constraintlayout.solver.state.helpers.GuidelineReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        virtualinvoke guidelineReference.<androidx.constraintlayout.solver.state.helpers.GuidelineReference: void setOrientation(int)>($u5);

        virtualinvoke guidelineReference.<androidx.constraintlayout.solver.state.helpers.GuidelineReference: void setKey(java.lang.Object)>($u4);

        $u2 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        virtualinvoke $u2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u4, guidelineReference);

        reference = guidelineReference;

     label1:
        guidelineReference = (androidx.constraintlayout.solver.state.helpers.GuidelineReference) reference;

        return guidelineReference;
    }

    public androidx.constraintlayout.solver.state.State height(androidx.constraintlayout.solver.state.Dimension)
    {
        androidx.constraintlayout.solver.state.State this;
        androidx.constraintlayout.solver.state.Dimension $u2;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: androidx.constraintlayout.solver.state.Dimension;

        this = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.State setHeight(androidx.constraintlayout.solver.state.Dimension)>($u2);

        return this;
    }

    public androidx.constraintlayout.solver.state.HelperReference helper(java.lang.Object, androidx.constraintlayout.solver.state.State$Helper)
    {
        androidx.constraintlayout.solver.state.State this;
        androidx.constraintlayout.solver.state.State$Helper $u5;
        java.lang.Object $u4, $u-1#4;
        java.util.HashMap reference;
        androidx.constraintlayout.solver.state.HelperReference reference#6;
        int[] $u1;
        int $u-1#8;
        androidx.constraintlayout.solver.state.helpers.BarrierReference $u1#18;
        androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference $u1#19;
        androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference $u1#20;
        androidx.constraintlayout.solver.state.helpers.VerticalChainReference $u1#21;
        androidx.constraintlayout.solver.state.helpers.HorizontalChainReference $u1#22;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u4 := @parameter0: java.lang.Object;

        $u5 := @parameter1: androidx.constraintlayout.solver.state.State$Helper;

        if $u4 != null goto label1;

        $u4 = specialinvoke this.<androidx.constraintlayout.solver.state.State: java.lang.String createHelperKey()>();

     label1:
        reference = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        $u-1#4 = virtualinvoke reference.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u4);

        reference#6 = (androidx.constraintlayout.solver.state.HelperReference) $u-1#4;

        if reference#6 != null goto label8;

        $u1 = <androidx.constraintlayout.solver.state.State$1: int[] $SwitchMap$androidx$constraintlayout$solver$state$State$Helper>;

        $u-1#8 = virtualinvoke $u5.<androidx.constraintlayout.solver.state.State$Helper: int ordinal()>();

        $u-1#8 = $u1[$u-1#8];

        if $u-1#8 == 1 goto label6;

        if $u-1#8 == 2 goto label5;

        if $u-1#8 == 3 goto label4;

        if $u-1#8 == 4 goto label3;

        if $u-1#8 == 5 goto label2;

        reference#6 = new androidx.constraintlayout.solver.state.HelperReference;

        specialinvoke reference#6.<androidx.constraintlayout.solver.state.HelperReference: void <init>(androidx.constraintlayout.solver.state.State,androidx.constraintlayout.solver.state.State$Helper)>(this, $u5);

        goto label7;

     label2:
        $u1#18 = new androidx.constraintlayout.solver.state.helpers.BarrierReference;

        specialinvoke $u1#18.<androidx.constraintlayout.solver.state.helpers.BarrierReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        reference#6 = $u1#18;

        goto label7;

     label3:
        $u1#19 = new androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference;

        specialinvoke $u1#19.<androidx.constraintlayout.solver.state.helpers.AlignVerticallyReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        reference#6 = $u1#19;

        goto label7;

     label4:
        $u1#20 = new androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference;

        specialinvoke $u1#20.<androidx.constraintlayout.solver.state.helpers.AlignHorizontallyReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        reference#6 = $u1#20;

        goto label7;

     label5:
        $u1#21 = new androidx.constraintlayout.solver.state.helpers.VerticalChainReference;

        specialinvoke $u1#21.<androidx.constraintlayout.solver.state.helpers.VerticalChainReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        reference#6 = $u1#21;

        goto label7;

     label6:
        $u1#22 = new androidx.constraintlayout.solver.state.helpers.HorizontalChainReference;

        specialinvoke $u1#22.<androidx.constraintlayout.solver.state.helpers.HorizontalChainReference: void <init>(androidx.constraintlayout.solver.state.State)>(this);

        reference#6 = $u1#22;

     label7:
        reference = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        virtualinvoke reference.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u4, reference#6);

     label8:
        return reference#6;
    }

    public transient androidx.constraintlayout.solver.state.helpers.HorizontalChainReference horizontalChain(java.lang.Object[])
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object[] $u3;
        androidx.constraintlayout.solver.state.HelperReference $u-1;
        androidx.constraintlayout.solver.state.State$Helper reference;
        androidx.constraintlayout.solver.state.helpers.HorizontalChainReference reference#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u3 := @parameter0: java.lang.Object[];

        reference = <androidx.constraintlayout.solver.state.State$Helper: androidx.constraintlayout.solver.state.State$Helper HORIZONTAL_CHAIN>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.HelperReference helper(java.lang.Object,androidx.constraintlayout.solver.state.State$Helper)>(null, reference);

        reference#3 = (androidx.constraintlayout.solver.state.helpers.HorizontalChainReference) $u-1;

        virtualinvoke reference#3.<androidx.constraintlayout.solver.state.helpers.HorizontalChainReference: androidx.constraintlayout.solver.state.HelperReference add(java.lang.Object[])>($u3);

        return reference#3;
    }

    public androidx.constraintlayout.solver.state.helpers.GuidelineReference horizontalGuideline(java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2;
        androidx.constraintlayout.solver.state.helpers.GuidelineReference $u-1;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.helpers.GuidelineReference guideline(java.lang.Object,int)>($u2, 0);

        return $u-1;
    }

    public void map(java.lang.Object, java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2, $u3;
        androidx.constraintlayout.solver.state.ConstraintReference $u-1;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u3 := @parameter1: java.lang.Object;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference constraints(java.lang.Object)>($u2);

        virtualinvoke $u-1.<androidx.constraintlayout.solver.state.ConstraintReference: void setView(java.lang.Object)>($u3);

        return;
    }

    androidx.constraintlayout.solver.state.Reference reference(java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2;
        java.util.HashMap $u0;
        androidx.constraintlayout.solver.state.Reference $u0#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u0 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mReferences>;

        $u2 = virtualinvoke $u0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u2);

        $u0#3 = (androidx.constraintlayout.solver.state.Reference) $u2;

        return $u0#3;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.state.State this;
        java.util.HashMap $u0;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u0 = this.<androidx.constraintlayout.solver.state.State: java.util.HashMap mHelperReferences>;

        virtualinvoke $u0.<java.util.HashMap: void clear()>();

        return;
    }

    public androidx.constraintlayout.solver.state.State setHeight(androidx.constraintlayout.solver.state.Dimension)
    {
        androidx.constraintlayout.solver.state.State this;
        androidx.constraintlayout.solver.state.Dimension $u2;
        androidx.constraintlayout.solver.state.ConstraintReference $u0;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: androidx.constraintlayout.solver.state.Dimension;

        $u0 = this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference mParent>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.state.ConstraintReference: androidx.constraintlayout.solver.state.ConstraintReference setHeight(androidx.constraintlayout.solver.state.Dimension)>($u2);

        return this;
    }

    public androidx.constraintlayout.solver.state.State setWidth(androidx.constraintlayout.solver.state.Dimension)
    {
        androidx.constraintlayout.solver.state.State this;
        androidx.constraintlayout.solver.state.Dimension $u2;
        androidx.constraintlayout.solver.state.ConstraintReference $u0;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: androidx.constraintlayout.solver.state.Dimension;

        $u0 = this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.ConstraintReference mParent>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.state.ConstraintReference: androidx.constraintlayout.solver.state.ConstraintReference setWidth(androidx.constraintlayout.solver.state.Dimension)>($u2);

        return this;
    }

    public transient androidx.constraintlayout.solver.state.helpers.VerticalChainReference verticalChain(java.lang.Object[])
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object[] $u3;
        androidx.constraintlayout.solver.state.HelperReference $u-1;
        androidx.constraintlayout.solver.state.State$Helper reference;
        androidx.constraintlayout.solver.state.helpers.VerticalChainReference reference#3;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u3 := @parameter0: java.lang.Object[];

        reference = <androidx.constraintlayout.solver.state.State$Helper: androidx.constraintlayout.solver.state.State$Helper VERTICAL_CHAIN>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.HelperReference helper(java.lang.Object,androidx.constraintlayout.solver.state.State$Helper)>(null, reference);

        reference#3 = (androidx.constraintlayout.solver.state.helpers.VerticalChainReference) $u-1;

        virtualinvoke reference#3.<androidx.constraintlayout.solver.state.helpers.VerticalChainReference: androidx.constraintlayout.solver.state.HelperReference add(java.lang.Object[])>($u3);

        return reference#3;
    }

    public androidx.constraintlayout.solver.state.helpers.GuidelineReference verticalGuideline(java.lang.Object)
    {
        androidx.constraintlayout.solver.state.State this;
        java.lang.Object $u2;
        androidx.constraintlayout.solver.state.helpers.GuidelineReference $u-1;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: java.lang.Object;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.helpers.GuidelineReference guideline(java.lang.Object,int)>($u2, 1);

        return $u-1;
    }

    public androidx.constraintlayout.solver.state.State width(androidx.constraintlayout.solver.state.Dimension)
    {
        androidx.constraintlayout.solver.state.State this;
        androidx.constraintlayout.solver.state.Dimension $u2;

        this := @this: androidx.constraintlayout.solver.state.State;

        $u2 := @parameter0: androidx.constraintlayout.solver.state.Dimension;

        this = virtualinvoke this.<androidx.constraintlayout.solver.state.State: androidx.constraintlayout.solver.state.State setWidth(androidx.constraintlayout.solver.state.Dimension)>($u2);

        return this;
    }
}
