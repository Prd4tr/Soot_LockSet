class androidx.versionedparcelable.VersionedParcel$1 extends java.io.ObjectInputStream
{
    final androidx.versionedparcelable.VersionedParcel this$0;

    void <init>(androidx.versionedparcelable.VersionedParcel, java.io.InputStream)
    {
        androidx.versionedparcelable.VersionedParcel$1 this;
        androidx.versionedparcelable.VersionedParcel $u1;
        java.io.InputStream $u2;

        this := @this: androidx.versionedparcelable.VersionedParcel$1;

        $u1 := @parameter0: androidx.versionedparcelable.VersionedParcel;

        $u2 := @parameter1: java.io.InputStream;

        this.<androidx.versionedparcelable.VersionedParcel$1: androidx.versionedparcelable.VersionedParcel this$0> = $u1;

        specialinvoke this.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($u2);

        return;
    }

    protected java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        androidx.versionedparcelable.VersionedParcel$1 this;
        java.io.ObjectStreamClass $u4;
        java.lang.String $u-1;
        java.lang.Class $u-1#3;
        java.lang.ClassLoader $u-1#5;

        this := @this: androidx.versionedparcelable.VersionedParcel$1;

        $u4 := @parameter0: java.io.ObjectStreamClass;

        $u-1 = virtualinvoke $u4.<java.io.ObjectStreamClass: java.lang.String getName()>();

        $u-1#3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#5 = virtualinvoke $u-1#3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $u-1#3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($u-1, 0, $u-1#5);

        if $u-1#3 == null goto label1;

        return $u-1#3;

     label1:
        $u-1#3 = specialinvoke this.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>($u4);

        return $u-1#3;
    }
}
