public abstract class androidx.appcompat.widget.ForwardingListener extends java.lang.Object implements android.view.View$OnTouchListener, android.view.View$OnAttachStateChangeListener
{
    private int mActivePointerId;
    private java.lang.Runnable mDisallowIntercept;
    private boolean mForwarding;
    private final int mLongPressTimeout;
    private final float mScaledTouchSlop;
    final android.view.View mSrc;
    private final int mTapTimeout;
    private final int[] mTmpLocation;
    private java.lang.Runnable mTriggerLongPress;

    public void <init>(android.view.View)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View $u4;
        int[] $u1;
        android.content.Context $u-1;
        android.view.ViewConfiguration $u-1#5;
        int $u-1#7, $u-1#12;
        float $u1#9;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u4 := @parameter0: android.view.View;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u1 = newarray (int)[2];

        this.<androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation> = $u1;

        this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc> = $u4;

        virtualinvoke $u4.<android.view.View: void setLongClickable(boolean)>(1);

        virtualinvoke $u4.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(this);

        $u-1 = virtualinvoke $u4.<android.view.View: android.content.Context getContext()>();

        $u-1#5 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u-1);

        $u-1#7 = virtualinvoke $u-1#5.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $u1#9 = (float) $u-1#7;

        this.<androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop> = $u1#9;

        $u-1#7 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        this.<androidx.appcompat.widget.ForwardingListener: int mTapTimeout> = $u-1#7;

        $u-1#12 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $u-1#7 = $u-1#7 + $u-1#12;

        $u-1#7 = $u-1#7 / 2;

        this.<androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout> = $u-1#7;

        return;
    }

    private void clearCallbacks()
    {
        androidx.appcompat.widget.ForwardingListener this;
        java.lang.Runnable $u0;
        android.view.View $u1;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u0 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress>;

        if $u0 == null goto label1;

        $u1 = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        virtualinvoke $u1.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u0);

     label1:
        $u0 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept>;

        if $u0 == null goto label2;

        $u1 = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        virtualinvoke $u1.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u0);

     label2:
        return;
    }

    private boolean onTouchForwarded(android.view.MotionEvent)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.MotionEvent $u10, $u-1#10;
        android.view.View src;
        androidx.appcompat.view.menu.ShowableListMenu $u-1;
        boolean $u-1#3, keepForwarding;
        android.widget.ListView $u-1#5;
        androidx.appcompat.widget.DropDownListView dst;
        int handled;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u10 := @parameter0: android.view.MotionEvent;

        src = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()>();

        if $u-1 == null goto label5;

        $u-1#3 = interfaceinvoke $u-1.<androidx.appcompat.view.menu.ShowableListMenu: boolean isShowing()>();

        if $u-1#3 != 0 goto label1;

        return 0;

     label1:
        $u-1#5 = interfaceinvoke $u-1.<androidx.appcompat.view.menu.ShowableListMenu: android.widget.ListView getListView()>();

        dst = (androidx.appcompat.widget.DropDownListView) $u-1#5;

        if dst == null goto label5;

        $u-1#3 = virtualinvoke dst.<androidx.appcompat.widget.DropDownListView: boolean isShown()>();

        if $u-1#3 != 0 goto label2;

        return 0;

     label2:
        $u-1#10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>($u10);

        specialinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)>(src, $u-1#10);

        specialinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)>(dst, $u-1#10);

        handled = this.<androidx.appcompat.widget.ForwardingListener: int mActivePointerId>;

        $u-1#3 = virtualinvoke dst.<androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)>($u-1#10, handled);

        virtualinvoke $u-1#10.<android.view.MotionEvent: void recycle()>();

        handled = virtualinvoke $u10.<android.view.MotionEvent: int getActionMasked()>();

        if handled == 1 goto label3;

        if handled == 3 goto label3;

        keepForwarding = 1;

        goto label4;

     label3:
        keepForwarding = 0;

     label4:
        if $u-1#3 == 0 goto label5;

        if keepForwarding == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private boolean onTouchObserved(android.view.MotionEvent)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.MotionEvent $u9;
        android.view.View src;
        boolean $u-1;
        int $u-1#4;
        float $u-1#12, $u-1#13, $u7;
        android.view.ViewParent $u-1#17;
        java.lang.Runnable $u3;
        androidx.appcompat.widget.ForwardingListener$DisallowIntercept $u3#22;
        long activePointerIndex;
        androidx.appcompat.widget.ForwardingListener$TriggerLongPress $u3#27;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u9 := @parameter0: android.view.MotionEvent;

        src = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        $u-1 = virtualinvoke src.<android.view.View: boolean isEnabled()>();

        if $u-1 != 0 goto label1;

        return 0;

     label1:
        $u-1#4 = virtualinvoke $u9.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1#4 == 0 goto label5;

        if $u-1#4 == 1 goto label4;

        if $u-1#4 == 2 goto label2;

        if $u-1#4 == 3 goto label4;

        return 0;

     label2:
        $u-1#4 = this.<androidx.appcompat.widget.ForwardingListener: int mActivePointerId>;

        $u-1#4 = virtualinvoke $u9.<android.view.MotionEvent: int findPointerIndex(int)>($u-1#4);

        if $u-1#4 < 0 goto label8;

        $u-1#12 = virtualinvoke $u9.<android.view.MotionEvent: float getX(int)>($u-1#4);

        $u-1#13 = virtualinvoke $u9.<android.view.MotionEvent: float getY(int)>($u-1#4);

        $u7 = this.<androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop>;

        $u-1 = staticinvoke <androidx.appcompat.widget.ForwardingListener: boolean pointInView(android.view.View,float,float,float)>(src, $u-1#12, $u-1#13, $u7);

        if $u-1 != 0 goto label3;

        specialinvoke this.<androidx.appcompat.widget.ForwardingListener: void clearCallbacks()>();

        $u-1#17 = virtualinvoke src.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $u-1#17.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        return 1;

     label3:
        return 0;

     label4:
        specialinvoke this.<androidx.appcompat.widget.ForwardingListener: void clearCallbacks()>();

        return 0;

     label5:
        $u-1#4 = virtualinvoke $u9.<android.view.MotionEvent: int getPointerId(int)>(0);

        this.<androidx.appcompat.widget.ForwardingListener: int mActivePointerId> = $u-1#4;

        $u3 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept>;

        if $u3 != null goto label6;

        $u3#22 = new androidx.appcompat.widget.ForwardingListener$DisallowIntercept;

        specialinvoke $u3#22.<androidx.appcompat.widget.ForwardingListener$DisallowIntercept: void <init>(androidx.appcompat.widget.ForwardingListener)>(this);

        this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept> = $u3#22;

     label6:
        $u3 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept>;

        $u-1#4 = this.<androidx.appcompat.widget.ForwardingListener: int mTapTimeout>;

        activePointerIndex = (long) $u-1#4;

        virtualinvoke src.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($u3, activePointerIndex);

        $u3 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress>;

        if $u3 != null goto label7;

        $u3#27 = new androidx.appcompat.widget.ForwardingListener$TriggerLongPress;

        specialinvoke $u3#27.<androidx.appcompat.widget.ForwardingListener$TriggerLongPress: void <init>(androidx.appcompat.widget.ForwardingListener)>(this);

        this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress> = $u3#27;

     label7:
        $u3 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress>;

        $u-1#4 = this.<androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout>;

        activePointerIndex = (long) $u-1#4;

        virtualinvoke src.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($u3, activePointerIndex);

     label8:
        return 0;
    }

    private static boolean pointInView(android.view.View, float, float, float)
    {
        android.view.View $u2;
        float $u3, $u4, $u5, $u0;
        byte $u0#2;
        int $u-1, $u-1#7;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u5 := @parameter3: float;

        $u0 = neg $u5;

        $u0#2 = $u3 cmpl $u0;

        if $u0#2 < 0 goto label1;

        $u0 = neg $u5;

        $u0#2 = $u4 cmpl $u0;

        if $u0#2 < 0 goto label1;

        $u-1 = virtualinvoke $u2.<android.view.View: int getRight()>();

        $u-1#7 = virtualinvoke $u2.<android.view.View: int getLeft()>();

        $u-1 = $u-1 - $u-1#7;

        $u0 = (float) $u-1;

        $u0 = $u0 + $u5;

        $u0#2 = $u3 cmpg $u0;

        if $u0#2 >= 0 goto label1;

        $u-1 = virtualinvoke $u2.<android.view.View: int getBottom()>();

        $u-1#7 = virtualinvoke $u2.<android.view.View: int getTop()>();

        $u-1 = $u-1 - $u-1#7;

        $u3 = (float) $u-1;

        $u3 = $u3 + $u5;

        $u0#2 = $u4 cmpg $u3;

        if $u0#2 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean toGlobalMotionEvent(android.view.View, android.view.MotionEvent)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View $u5;
        android.view.MotionEvent $u6;
        int[] loc;
        int $u1;
        float $u1#3, $u3;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: android.view.MotionEvent;

        loc = this.<androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation>;

        virtualinvoke $u5.<android.view.View: void getLocationOnScreen(int[])>(loc);

        $u1 = loc[0];

        $u1#3 = (float) $u1;

        $u1 = loc[1];

        $u3 = (float) $u1;

        virtualinvoke $u6.<android.view.MotionEvent: void offsetLocation(float,float)>($u1#3, $u3);

        return 1;
    }

    private boolean toLocalMotionEvent(android.view.View, android.view.MotionEvent)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View $u5;
        android.view.MotionEvent $u6;
        int[] loc;
        int $u1;
        float $u1#4, $u3;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: android.view.MotionEvent;

        loc = this.<androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation>;

        virtualinvoke $u5.<android.view.View: void getLocationOnScreen(int[])>(loc);

        $u1 = loc[0];

        $u1 = neg $u1;

        $u1#4 = (float) $u1;

        $u1 = loc[1];

        $u1 = neg $u1;

        $u3 = (float) $u1;

        virtualinvoke $u6.<android.view.MotionEvent: void offsetLocation(float,float)>($u1#4, $u3);

        return 1;
    }

    public abstract androidx.appcompat.view.menu.ShowableListMenu getPopup();

    protected boolean onForwardingStarted()
    {
        androidx.appcompat.widget.ForwardingListener this;
        androidx.appcompat.view.menu.ShowableListMenu $u-1;
        boolean $u-1#2;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()>();

        if $u-1 == null goto label1;

        $u-1#2 = interfaceinvoke $u-1.<androidx.appcompat.view.menu.ShowableListMenu: boolean isShowing()>();

        if $u-1#2 != 0 goto label1;

        interfaceinvoke $u-1.<androidx.appcompat.view.menu.ShowableListMenu: void show()>();

     label1:
        return 1;
    }

    protected boolean onForwardingStopped()
    {
        androidx.appcompat.widget.ForwardingListener this;
        androidx.appcompat.view.menu.ShowableListMenu $u-1;
        boolean $u-1#2;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()>();

        if $u-1 == null goto label1;

        $u-1#2 = interfaceinvoke $u-1.<androidx.appcompat.view.menu.ShowableListMenu: boolean isShowing()>();

        if $u-1#2 == 0 goto label1;

        interfaceinvoke $u-1.<androidx.appcompat.view.menu.ShowableListMenu: void dismiss()>();

     label1:
        return 1;
    }

    void onLongPress()
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View src;
        boolean $u-1;
        android.view.ViewParent $u-1#7;
        long $u-1#9;
        android.view.MotionEvent $u-1#10;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        specialinvoke this.<androidx.appcompat.widget.ForwardingListener: void clearCallbacks()>();

        src = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        $u-1 = virtualinvoke src.<android.view.View: boolean isEnabled()>();

        if $u-1 == 0 goto label3;

        $u-1 = virtualinvoke src.<android.view.View: boolean isLongClickable()>();

        if $u-1 == 0 goto label1;

        return;

     label1:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean onForwardingStarted()>();

        if $u-1 != 0 goto label2;

        return;

     label2:
        $u-1#7 = virtualinvoke src.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $u-1#7.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $u-1#9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u-1#10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($u-1#9, $u-1#9, 3, 0.0F, 0.0F, 0);

        virtualinvoke src.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($u-1#10);

        virtualinvoke $u-1#10.<android.view.MotionEvent: void recycle()>();

        this.<androidx.appcompat.widget.ForwardingListener: boolean mForwarding> = 1;

     label3:
        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View $u17;
        android.view.MotionEvent $u18;
        boolean wasForwarding, $u-1;
        long $u-1#11;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u17 := @parameter0: android.view.View;

        $u18 := @parameter1: android.view.MotionEvent;

        wasForwarding = this.<androidx.appcompat.widget.ForwardingListener: boolean mForwarding>;

        if wasForwarding == 0 goto label4;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean onTouchForwarded(android.view.MotionEvent)>($u18);

        if $u-1 != 0 goto label2;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()>();

        if $u-1 != 0 goto label1;

        goto label2;

     label1:
        $u-1 = 0;

        goto label3;

     label2:
        $u-1 = 1;

     label3:
        goto label7;

     label4:
        $u-1 = specialinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean onTouchObserved(android.view.MotionEvent)>($u18);

        if $u-1 == 0 goto label5;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ForwardingListener: boolean onForwardingStarted()>();

        if $u-1 == 0 goto label5;

        $u-1 = 1;

        goto label6;

     label5:
        $u-1 = 0;

     label6:
        if $u-1 == 0 goto label7;

        $u-1#11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $u18 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($u-1#11, $u-1#11, 3, 0.0F, 0.0F, 0);

        $u17 = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        virtualinvoke $u17.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($u18);

        virtualinvoke $u18.<android.view.MotionEvent: void recycle()>();

     label7:
        this.<androidx.appcompat.widget.ForwardingListener: boolean mForwarding> = $u-1;

        if $u-1 != 0 goto label9;

        if wasForwarding == 0 goto label8;

        return 1;

     label8:
        return 0;

     label9:
        return 1;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View $u1;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u1 := @parameter0: android.view.View;

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        androidx.appcompat.widget.ForwardingListener this;
        android.view.View $u3;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.ForwardingListener;

        $u3 := @parameter0: android.view.View;

        this.<androidx.appcompat.widget.ForwardingListener: boolean mForwarding> = 0;

        this.<androidx.appcompat.widget.ForwardingListener: int mActivePointerId> = -1;

        $u0 = this.<androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept>;

        if $u0 == null goto label1;

        $u3 = this.<androidx.appcompat.widget.ForwardingListener: android.view.View mSrc>;

        virtualinvoke $u3.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($u0);

     label1:
        return;
    }
}
