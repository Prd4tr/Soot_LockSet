public final class androidx.core.view.ViewConfigurationCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sGetScaledScrollFactorMethod;

    static void <clinit>()
    {
        java.lang.reflect.Method $u-1;
        int e;
        java.lang.Class e#3;
        java.lang.Class[] $u2;
        java.lang.Exception e#8;

        <androidx.core.view.ViewConfigurationCompat: java.lang.String TAG> = "ViewConfigCompat";

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e != 25 goto label4;

        e#3 = class "Landroid/view/ViewConfiguration;";

     label1:
        $u2 = newarray (java.lang.Class)[0];

        $u-1 = virtualinvoke e#3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getScaledScrollFactor", $u2);

     label2:
        <androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod> = $u-1;

        return;

     label3:
        e#8 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void <init>()
    {
        androidx.core.view.ViewConfigurationCompat this;

        this := @this: androidx.core.view.ViewConfigurationCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static float getLegacyScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $u4;
        android.content.Context $u5;
        int e;
        java.lang.reflect.Method e#3;
        java.lang.Object[] $u1;
        java.lang.Object $u-1;
        java.lang.Integer e#8;
        float e#11;
        java.lang.Exception e#12;
        android.util.TypedValue e#15;
        android.content.res.Resources$Theme $u-1#16;
        boolean $u-1#19;
        android.content.res.Resources $u-1#21;
        android.util.DisplayMetrics $u-1#23;

        $u4 := @parameter0: android.view.ViewConfiguration;

        $u5 := @parameter1: android.content.Context;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 25 goto label4;

        e#3 = <androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod>;

        if e#3 == null goto label4;

     label1:
        $u1 = newarray (java.lang.Object)[0];

        $u-1 = virtualinvoke e#3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($u4, $u1);

        e#8 = (java.lang.Integer) $u-1;

        e = virtualinvoke e#8.<java.lang.Integer: int intValue()>();

     label2:
        e#11 = (float) e;

        return e#11;

     label3:
        e#12 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration");

     label4:
        e#15 = new android.util.TypedValue;

        specialinvoke e#15.<android.util.TypedValue: void <init>()>();

        $u-1#16 = virtualinvoke $u5.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u-1#19 = virtualinvoke $u-1#16.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, e#15, 1);

        if $u-1#19 == 0 goto label5;

        $u-1#21 = virtualinvoke $u5.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#23 = virtualinvoke $u-1#21.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        e#11 = virtualinvoke e#15.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($u-1#23);

        return e#11;

     label5:
        return 0.0F;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static float getScaledHorizontalScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $u2;
        android.content.Context $u3;
        int $u0;
        float $u-1;

        $u2 := @parameter0: android.view.ViewConfiguration;

        $u3 := @parameter1: android.content.Context;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 26 goto label1;

        $u-1 = virtualinvoke $u2.<android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>();

        return $u-1;

     label1:
        $u-1 = staticinvoke <androidx.core.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>($u2, $u3);

        return $u-1;
    }

    public static int getScaledHoverSlop(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration $u2;
        int $u0;

        $u2 := @parameter0: android.view.ViewConfiguration;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 28 goto label1;

        $u0 = virtualinvoke $u2.<android.view.ViewConfiguration: int getScaledHoverSlop()>();

        return $u0;

     label1:
        $u0 = virtualinvoke $u2.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $u0 = $u0 / 2;

        return $u0;
    }

    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration $u1;
        int $u-1;

        $u1 := @parameter0: android.view.ViewConfiguration;

        $u-1 = virtualinvoke $u1.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        return $u-1;
    }

    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $u2;
        android.content.Context $u3;
        int $u0;
        float $u-1;

        $u2 := @parameter0: android.view.ViewConfiguration;

        $u3 := @parameter1: android.content.Context;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 26 goto label1;

        $u-1 = virtualinvoke $u2.<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>();

        return $u-1;

     label1:
        $u-1 = staticinvoke <androidx.core.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>($u2, $u3);

        return $u-1;
    }

    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration $u1;
        boolean $u-1;

        $u1 := @parameter0: android.view.ViewConfiguration;

        $u-1 = virtualinvoke $u1.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        return $u-1;
    }

    public static boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $u4;
        android.content.Context $u5;
        int res;
        boolean $u-1;
        android.content.res.Resources $u-1#5;

        $u4 := @parameter0: android.view.ViewConfiguration;

        $u5 := @parameter1: android.content.Context;

        res = <android.os.Build$VERSION: int SDK_INT>;

        if res < 28 goto label1;

        $u-1 = virtualinvoke $u4.<android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>();

        return $u-1;

     label1:
        $u-1#5 = virtualinvoke $u5.<android.content.Context: android.content.res.Resources getResources()>();

        res = virtualinvoke $u-1#5.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("config_showMenuShortcutsWhenKeyboardPresent", "bool", "android");

        if res == 0 goto label2;

        $u-1 = virtualinvoke $u-1#5.<android.content.res.Resources: boolean getBoolean(int)>(res);

        if $u-1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
