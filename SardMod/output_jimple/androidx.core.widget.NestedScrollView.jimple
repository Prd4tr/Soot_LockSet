public class androidx.core.widget.NestedScrollView extends android.widget.FrameLayout implements androidx.core.view.NestedScrollingParent3, androidx.core.view.NestedScrollingChild3, androidx.core.view.ScrollingView
{
    private static final androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE;
    static final int ANIMATED_SCROLL_GAP;
    private static final int DEFAULT_SMOOTH_SCROLL_DURATION;
    private static final int INVALID_POINTER;
    static final float MAX_SCROLL_FACTOR;
    private static final int[] SCROLLVIEW_STYLEABLE;
    private static final java.lang.String TAG;
    private int mActivePointerId;
    private final androidx.core.view.NestedScrollingChildHelper mChildHelper;
    private android.view.View mChildToScrollTo;
    private android.widget.EdgeEffect mEdgeGlowBottom;
    private android.widget.EdgeEffect mEdgeGlowTop;
    private boolean mFillViewport;
    private boolean mIsBeingDragged;
    private boolean mIsLaidOut;
    private boolean mIsLayoutDirty;
    private int mLastMotionY;
    private long mLastScroll;
    private int mLastScrollerY;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private int mNestedYOffset;
    private androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener;
    private final androidx.core.view.NestedScrollingParentHelper mParentHelper;
    private androidx.core.widget.NestedScrollView$SavedState mSavedState;
    private final int[] mScrollConsumed;
    private final int[] mScrollOffset;
    private android.widget.OverScroller mScroller;
    private boolean mSmoothScrollingEnabled;
    private final android.graphics.Rect mTempRect;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;
    private float mVerticalScrollFactor;

    static void <clinit>()
    {
        androidx.core.widget.NestedScrollView$AccessibilityDelegate $u0;
        int[] $u0#3;

        <androidx.core.widget.NestedScrollView: java.lang.String TAG> = "NestedScrollView";

        <androidx.core.widget.NestedScrollView: float MAX_SCROLL_FACTOR> = 0.5F;

        <androidx.core.widget.NestedScrollView: int INVALID_POINTER> = -1;

        <androidx.core.widget.NestedScrollView: int DEFAULT_SMOOTH_SCROLL_DURATION> = 250;

        <androidx.core.widget.NestedScrollView: int ANIMATED_SCROLL_GAP> = 250;

        $u0 = new androidx.core.widget.NestedScrollView$AccessibilityDelegate;

        specialinvoke $u0.<androidx.core.widget.NestedScrollView$AccessibilityDelegate: void <init>()>();

        <androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE> = $u0;

        $u0#3 = newarray (int)[1];

        $u0#3[0] = 16843130;

        <androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE> = $u0#3;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.core.widget.NestedScrollView this;
        android.content.Context $u2;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.core.widget.NestedScrollView this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($u2, $u3, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.content.Context $u5;
        android.util.AttributeSet $u6;
        int $u7;
        int[] $u3;
        android.graphics.Rect $u0;
        android.content.res.TypedArray $u-1;
        boolean $u-1#11;
        androidx.core.view.NestedScrollingParentHelper $u1;
        androidx.core.view.NestedScrollingChildHelper $u1#14;
        androidx.core.widget.NestedScrollView$AccessibilityDelegate $u0#15;

        this := @this: androidx.core.widget.NestedScrollView;

        $u5 := @parameter0: android.content.Context;

        $u6 := @parameter1: android.util.AttributeSet;

        $u7 := @parameter2: int;

        specialinvoke this.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($u5, $u6, $u7);

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect> = $u0;

        this.<androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;

        this.<androidx.core.widget.NestedScrollView: boolean mIsLaidOut> = 0;

        this.<androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;

        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        this.<androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = 1;

        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = -1;

        $u3 = newarray (int)[2];

        this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset> = $u3;

        $u3 = newarray (int)[2];

        this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed> = $u3;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void initScrollView()>();

        $u3 = <androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE>;

        $u-1 = virtualinvoke $u5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($u6, $u3, $u7, 0);

        $u-1#11 = virtualinvoke $u-1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setFillViewport(boolean)>($u-1#11);

        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        $u1 = new androidx.core.view.NestedScrollingParentHelper;

        specialinvoke $u1.<androidx.core.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(this);

        this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper> = $u1;

        $u1#14 = new androidx.core.view.NestedScrollingChildHelper;

        specialinvoke $u1#14.<androidx.core.view.NestedScrollingChildHelper: void <init>(android.view.View)>(this);

        this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper> = $u1#14;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>(1);

        $u0#15 = <androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE>;

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(this, $u0#15);

        return;
    }

    private void abortAnimatedScroll()
    {
        androidx.core.widget.NestedScrollView this;
        android.widget.OverScroller $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u0 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $u0.<android.widget.OverScroller: void abortAnimation()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>(1);

        return;
    }

    private boolean canScroll()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1, parentSpace, $u-1#17;
        android.view.View $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1#6;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 <= 0 goto label1;

        $u-1#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#6 = virtualinvoke $u-1#4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#6;

        $u-1 = virtualinvoke $u-1#4.<android.view.View: int getHeight()>();

        parentSpace = lp.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $u-1 = $u-1 + parentSpace;

        parentSpace = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1 = $u-1 + parentSpace;

        parentSpace = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#17 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        parentSpace = parentSpace - $u-1#17;

        $u-1#17 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        parentSpace = parentSpace - $u-1#17;

        if $u-1 <= parentSpace goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int clamp(int, int, int)
    {
        int $u1, $u2, $u3, $u0;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        if $u2 >= $u3 goto label3;

        if $u1 >= 0 goto label1;

        goto label3;

     label1:
        $u0 = $u2 + $u1;

        if $u0 <= $u3 goto label2;

        $u1 = $u3 - $u2;

     label2:
        return $u1;

     label3:
        return 0;
    }

    private void doScrollY(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u3;
        boolean $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: int;

        if $u3 == 0 goto label2;

        $u0 = this.<androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;

        if $u0 == 0 goto label1;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, $u3);

        return;

     label1:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollBy(int,int)>(0, $u3);

     label2:
        return;
    }

    private void endDrag()
    {
        androidx.core.widget.NestedScrollView this;
        android.widget.EdgeEffect $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void recycleVelocityTracker()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>(0);

        $u0 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.widget.EdgeEffect: void onRelease()>();

        $u0 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $u0.<android.widget.EdgeEffect: void onRelease()>();

     label1:
        return;
    }

    private void ensureGlows()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;
        android.widget.EdgeEffect context;
        android.content.Context $u-1#5;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getOverScrollMode()>();

        if $u-1 == 2 goto label1;

        context = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if context != null goto label2;

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.content.Context getContext()>();

        context = new android.widget.EdgeEffect;

        specialinvoke context.<android.widget.EdgeEffect: void <init>(android.content.Context)>($u-1#5);

        this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop> = context;

        context = new android.widget.EdgeEffect;

        specialinvoke context.<android.widget.EdgeEffect: void <init>(android.content.Context)>($u-1#5);

        this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom> = context;

        return;

     label1:
        this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop> = null;

        this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom> = null;

     label2:
        return;
    }

    private android.view.View findFocusableViewInBounds(boolean, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u13, foundFullyContainedFocusable, viewIsCloserToBoundary, viewIsFullyContained;
        int $u14, $u15, $u-1#6, i, $u-1#11, $u-1#12, $u-1#15;
        java.util.ArrayList $u-1;
        android.view.View focusCandidate, view;
        java.lang.Object $u-1#8;

        this := @this: androidx.core.widget.NestedScrollView;

        $u13 := @parameter0: boolean;

        $u14 := @parameter1: int;

        $u15 := @parameter2: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: java.util.ArrayList getFocusables(int)>(2);

        focusCandidate = null;

        foundFullyContainedFocusable = 0;

        $u-1#6 = interfaceinvoke $u-1.<java.util.List: int size()>();

        i = 0;

     label01:
        if i >= $u-1#6 goto label11;

        $u-1#8 = interfaceinvoke $u-1.<java.util.List: java.lang.Object get(int)>(i);

        view = (android.view.View) $u-1#8;

        $u-1#11 = virtualinvoke view.<android.view.View: int getTop()>();

        $u-1#12 = virtualinvoke view.<android.view.View: int getBottom()>();

        if $u14 >= $u-1#12 goto label10;

        if $u-1#11 >= $u15 goto label10;

        viewIsCloserToBoundary = 0;

        if $u14 >= $u-1#11 goto label02;

        if $u-1#12 >= $u15 goto label02;

        viewIsFullyContained = 1;

        goto label03;

     label02:
        viewIsFullyContained = 0;

     label03:
        if focusCandidate != null goto label04;

        focusCandidate = view;

        foundFullyContainedFocusable = viewIsFullyContained;

        goto label10;

     label04:
        if $u13 == 0 goto label05;

        $u-1#15 = virtualinvoke focusCandidate.<android.view.View: int getTop()>();

        if $u-1#11 < $u-1#15 goto label06;

     label05:
        if $u13 != 0 goto label07;

        $u-1#11 = virtualinvoke focusCandidate.<android.view.View: int getBottom()>();

        if $u-1#12 <= $u-1#11 goto label07;

     label06:
        viewIsCloserToBoundary = 1;

        goto label07;

     label07:
        if foundFullyContainedFocusable == 0 goto label08;

        if viewIsFullyContained == 0 goto label10;

        if viewIsCloserToBoundary == 0 goto label10;

        focusCandidate = view;

        goto label10;

     label08:
        if viewIsFullyContained == 0 goto label09;

        focusCandidate = view;

        foundFullyContainedFocusable = 1;

        goto label10;

     label09:
        if viewIsCloserToBoundary == 0 goto label10;

        focusCandidate = view;

     label10:
        i = i + 1;

        goto label01;

     label11:
        return focusCandidate;
    }

    private float getVerticalScrollFactorCompat()
    {
        androidx.core.widget.NestedScrollView this;
        float outValue;
        byte outValue#3;
        android.util.TypedValue outValue#4;
        android.content.Context $u-1;
        android.content.res.Resources$Theme $u-1#7;
        boolean $u-1#10;
        android.content.res.Resources $u-1#12;
        android.util.DisplayMetrics $u-1#14;
        java.lang.IllegalStateException $u2;

        this := @this: androidx.core.widget.NestedScrollView;

        outValue = this.<androidx.core.widget.NestedScrollView: float mVerticalScrollFactor>;

        outValue#3 = outValue cmpl 0.0F;

        if outValue#3 != 0 goto label2;

        outValue#4 = new android.util.TypedValue;

        specialinvoke outValue#4.<android.util.TypedValue: void <init>()>();

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.content.Context getContext()>();

        $u-1#7 = virtualinvoke $u-1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u-1#10 = virtualinvoke $u-1#7.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, outValue#4, 1);

        if $u-1#10 == 0 goto label1;

        $u-1#12 = virtualinvoke $u-1.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#14 = virtualinvoke $u-1#12.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        outValue = virtualinvoke outValue#4.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($u-1#14);

        this.<androidx.core.widget.NestedScrollView: float mVerticalScrollFactor> = outValue;

        goto label2;

     label1:
        $u2 = new java.lang.IllegalStateException;

        specialinvoke $u2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected theme to define listPreferredItemHeight.");

        throw $u2;

     label2:
        outValue = this.<androidx.core.widget.NestedScrollView: float mVerticalScrollFactor>;

        return outValue;
    }

    private boolean inChild(int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u5, $u6, $u-1, $u-1#7;
        android.view.View $u-1#6;

        this := @this: androidx.core.widget.NestedScrollView;

        $u5 := @parameter0: int;

        $u6 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 <= 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#7 = virtualinvoke $u-1#6.<android.view.View: int getTop()>();

        $u-1#7 = $u-1#7 - $u-1;

        if $u6 < $u-1#7 goto label1;

        $u-1#7 = virtualinvoke $u-1#6.<android.view.View: int getBottom()>();

        $u-1 = $u-1#7 - $u-1;

        if $u6 >= $u-1 goto label1;

        $u6 = virtualinvoke $u-1#6.<android.view.View: int getLeft()>();

        if $u5 < $u6 goto label1;

        $u6 = virtualinvoke $u-1#6.<android.view.View: int getRight()>();

        if $u5 >= $u6 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void initOrResetVelocityTracker()
    {
        androidx.core.widget.NestedScrollView this;
        android.view.VelocityTracker $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $u-1 != null goto label1;

        $u-1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $u-1;

        return;

     label1:
        virtualinvoke $u-1.<android.view.VelocityTracker: void clear()>();

        return;
    }

    private void initScrollView()
    {
        androidx.core.widget.NestedScrollView this;
        android.widget.OverScroller configuration;
        android.content.Context $u-1;
        android.view.ViewConfiguration $u-1#9;
        int $u-1#11;

        this := @this: androidx.core.widget.NestedScrollView;

        configuration = new android.widget.OverScroller;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.content.Context getContext()>();

        specialinvoke configuration.<android.widget.OverScroller: void <init>(android.content.Context)>($u-1);

        this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller> = configuration;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setFocusable(boolean)>(1);

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setDescendantFocusability(int)>(262144);

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setWillNotDraw(boolean)>(0);

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.content.Context getContext()>();

        $u-1#9 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u-1);

        $u-1#11 = virtualinvoke $u-1#9.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        this.<androidx.core.widget.NestedScrollView: int mTouchSlop> = $u-1#11;

        $u-1#11 = virtualinvoke $u-1#9.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        this.<androidx.core.widget.NestedScrollView: int mMinimumVelocity> = $u-1#11;

        $u-1#11 = virtualinvoke $u-1#9.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        this.<androidx.core.widget.NestedScrollView: int mMaximumVelocity> = $u-1#11;

        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        androidx.core.widget.NestedScrollView this;
        android.view.VelocityTracker $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $u-1 != null goto label1;

        $u-1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $u-1;

     label1:
        return;
    }

    private boolean isOffScreen(android.view.View)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u-1;
        boolean $u-1#3;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#3 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($u3, 0, $u-1);

        $u-1#3 = $u-1#3 ^ 1;

        return $u-1#3;
    }

    private static boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.view.View $u3, $u4;
        android.view.ViewParent $u-1;
        boolean $u2;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: android.view.View;

        if $u3 != $u4 goto label1;

        return 1;

     label1:
        $u-1 = virtualinvoke $u3.<android.view.View: android.view.ViewParent getParent()>();

        $u2 = $u-1 instanceof android.view.ViewGroup;

        if $u2 == 0 goto label2;

        $u3 = (android.view.View) $u-1;

        $u2 = staticinvoke <androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($u3, $u4);

        if $u2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u4, $u5, $u0#4, $u-1;
        android.graphics.Rect $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $u3.<android.view.View: void getDrawingRect(android.graphics.Rect)>($u0);

        $u0 = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($u3, $u0);

        $u0 = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u0#4 = $u0.<android.graphics.Rect: int bottom>;

        $u0#4 = $u0#4 + $u4;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u0#4 < $u-1 goto label1;

        $u0 = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u0#4 = $u0.<android.graphics.Rect: int top>;

        $u4 = $u0#4 - $u4;

        $u0#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u5 = $u0#4 + $u5;

        if $u4 > $u5 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void onNestedScrollInternal(int, int, int[])
    {
        androidx.core.widget.NestedScrollView this;
        int $u12, $u13, $u-1, $u-1#3;
        int[] $u14;
        androidx.core.view.NestedScrollingChildHelper $u2;

        this := @this: androidx.core.widget.NestedScrollView;

        $u12 := @parameter0: int;

        $u13 := @parameter1: int;

        $u14 := @parameter2: int[];

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollBy(int,int)>(0, $u12);

        $u-1#3 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1 = $u-1#3 - $u-1;

        if $u14 == null goto label1;

        $u-1#3 = $u14[1];

        $u-1#3 = $u-1#3 + $u-1;

        $u14[1] = $u-1#3;

     label1:
        $u12 = $u12 - $u-1;

        $u2 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $u2.<androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>(0, $u-1, 0, $u12, null, $u13, $u14);

        return;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.MotionEvent $u5;
        int $u-1, $u-1#2, newPointerIndex;
        byte newPointerIndex#4;
        float $u-1#5;
        android.view.VelocityTracker $u3;

        this := @this: androidx.core.widget.NestedScrollView;

        $u5 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: int getActionIndex()>();

        $u-1#2 = virtualinvoke $u5.<android.view.MotionEvent: int getPointerId(int)>($u-1);

        newPointerIndex = this.<androidx.core.widget.NestedScrollView: int mActivePointerId>;

        if $u-1#2 != newPointerIndex goto label3;

        if $u-1 != 0 goto label1;

        newPointerIndex#4 = 1;

        goto label2;

     label1:
        newPointerIndex#4 = 0;

     label2:
        $u-1#5 = virtualinvoke $u5.<android.view.MotionEvent: float getY(int)>(newPointerIndex#4);

        $u-1 = (int) $u-1#5;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = $u-1;

        $u-1 = virtualinvoke $u5.<android.view.MotionEvent: int getPointerId(int)>(newPointerIndex#4);

        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = $u-1;

        $u3 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $u3 == null goto label3;

        virtualinvoke $u3.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    private void recycleVelocityTracker()
    {
        androidx.core.widget.NestedScrollView this;
        android.view.VelocityTracker $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u0 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.view.VelocityTracker: void recycle()>();

        this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private void runAnimatedScroll(boolean)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u3;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: boolean;

        if $u3 == 0 goto label1;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, 1);

        goto label2;

     label1:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>(1);

     label2:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        this.<androidx.core.widget.NestedScrollView: int mLastScrollerY> = $u-1;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

        return;
    }

    private boolean scrollAndFocus(int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u8, $u9, $u10, containerBottom, $u-1;
        boolean handled, up;
        android.view.View $u-1#6, newFocused;

        this := @this: androidx.core.widget.NestedScrollView;

        $u8 := @parameter0: int;

        $u9 := @parameter1: int;

        $u10 := @parameter2: int;

        handled = 1;

        containerBottom = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        containerBottom = $u-1 + containerBottom;

        if $u8 != 33 goto label1;

        up = 1;

        goto label2;

     label1:
        up = 0;

     label2:
        $u-1#6 = specialinvoke this.<androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>(up, $u9, $u10);

        newFocused = $u-1#6;

        if $u-1#6 != null goto label3;

        newFocused = this;

     label3:
        if $u9 < $u-1 goto label4;

        if $u10 > containerBottom goto label4;

        handled = 0;

        goto label7;

     label4:
        if up == 0 goto label5;

        $u9 = $u9 - $u-1;

        goto label6;

     label5:
        $u9 = $u10 - containerBottom;

     label6:
        specialinvoke this.<androidx.core.widget.NestedScrollView: void doScrollY(int)>($u9);

     label7:
        $u-1#6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View findFocus()>();

        if newFocused == $u-1#6 goto label8;

        virtualinvoke newFocused.<android.view.View: boolean requestFocus(int)>($u8);

     label8:
        return handled;
    }

    private void scrollToChild(android.view.View)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u-1;
        android.graphics.Rect scrollDelta;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $u3.<android.view.View: void getDrawingRect(android.graphics.Rect)>(scrollDelta);

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($u3, scrollDelta);

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>(scrollDelta);

        if $u-1 == 0 goto label1;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollBy(int,int)>(0, $u-1);

     label1:
        return;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        android.graphics.Rect $u4;
        boolean $u5, scroll;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u4 := @parameter0: android.graphics.Rect;

        $u5 := @parameter1: boolean;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($u4);

        if $u-1 == 0 goto label1;

        scroll = 1;

        goto label2;

     label1:
        scroll = 0;

     label2:
        if scroll == 0 goto label4;

        if $u5 == 0 goto label3;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollBy(int,int)>(0, $u-1);

        return scroll;

     label3:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, $u-1);

     label4:
        return scroll;
    }

    private void smoothScrollBy(int, int, int, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        int $u17, $u18, $u19, $u-1, $u-1#23;
        boolean $u20;
        long $u-1#3, dy;
        byte lp;
        android.view.View $u-1#10;
        android.view.ViewGroup$LayoutParams $u-1#12;
        android.widget.FrameLayout$LayoutParams lp#14;
        android.widget.OverScroller $u8;

        this := @this: androidx.core.widget.NestedScrollView;

        $u17 := @parameter0: int;

        $u18 := @parameter1: int;

        $u19 := @parameter2: int;

        $u20 := @parameter3: boolean;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 != 0 goto label1;

        return;

     label1:
        $u-1#3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        dy = this.<androidx.core.widget.NestedScrollView: long mLastScroll>;

        $u-1#3 = $u-1#3 - dy;

        lp = $u-1#3 cmp 250L;

        if lp <= 0 goto label2;

        $u-1#10 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#12 = virtualinvoke $u-1#10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp#14 = (android.widget.FrameLayout$LayoutParams) $u-1#12;

        $u17 = virtualinvoke $u-1#10.<android.view.View: int getHeight()>();

        $u-1 = lp#14.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $u17 = $u17 + $u-1;

        $u-1 = lp#14.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1 = $u17 + $u-1;

        $u17 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#23 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        $u17 = $u17 - $u-1#23;

        $u-1#23 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u-1#23 = $u17 - $u-1#23;

        $u17 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1 = $u-1 - $u-1#23;

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1);

        $u18 = $u17 + $u18;

        $u18 = staticinvoke <java.lang.Math: int min(int,int)>($u18, $u-1);

        $u18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u18);

        $u18 = $u18 - $u17;

        $u8 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke $u8.<android.widget.OverScroller: void startScroll(int,int,int,int,int)>($u-1, $u17, 0, $u18, $u19);

        specialinvoke this.<androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>($u20);

        goto label4;

     label2:
        $u8 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u20 = virtualinvoke $u8.<android.widget.OverScroller: boolean isFinished()>();

        if $u20 != 0 goto label3;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void abortAnimatedScroll()>();

     label3:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollBy(int,int)>($u17, $u18);

     label4:
        $u-1#3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        this.<androidx.core.widget.NestedScrollView: long mLastScroll> = $u-1#3;

        return;
    }

    public void addView(android.view.View)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u-1;
        java.lang.IllegalStateException $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 > 0 goto label1;

        specialinvoke this.<android.widget.FrameLayout: void addView(android.view.View)>($u3);

        return;

     label1:
        $u0 = new java.lang.IllegalStateException;

        specialinvoke $u0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $u0;
    }

    public void addView(android.view.View, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u4, $u-1;
        java.lang.IllegalStateException $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 > 0 goto label1;

        specialinvoke this.<android.widget.FrameLayout: void addView(android.view.View,int)>($u3, $u4);

        return;

     label1:
        $u0 = new java.lang.IllegalStateException;

        specialinvoke $u0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $u0;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u4, $u-1;
        android.view.ViewGroup$LayoutParams $u5;
        java.lang.IllegalStateException $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u5 := @parameter2: android.view.ViewGroup$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 > 0 goto label1;

        specialinvoke this.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($u3, $u4, $u5);

        return;

     label1:
        $u0 = new java.lang.IllegalStateException;

        specialinvoke $u0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $u0;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        android.view.ViewGroup$LayoutParams $u4;
        int $u-1;
        java.lang.IllegalStateException $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: android.view.ViewGroup$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 > 0 goto label1;

        specialinvoke this.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($u3, $u4);

        return;

     label1:
        $u0 = new java.lang.IllegalStateException;

        specialinvoke $u0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $u0;
    }

    public boolean arrowScroll(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u12, $u-1#7, $u-1#8, $u-1#19, $u-1#35;
        android.view.View $u-1, currentFocused;
        android.view.FocusFinder $u-1#3;
        boolean $u-1#10;
        android.graphics.Rect scrollDelta;
        android.view.ViewGroup$LayoutParams $u-1#26;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u12 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View findFocus()>();

        currentFocused = $u-1;

        if $u-1 != this goto label1;

        currentFocused = null;

     label1:
        $u-1#3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $u-1 = virtualinvoke $u-1#3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(this, currentFocused, $u12);

        $u-1#7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getMaxScrollAmount()>();

        if $u-1 == null goto label2;

        $u-1#8 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#10 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($u-1, $u-1#7, $u-1#8);

        if $u-1#10 == 0 goto label2;

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $u-1.<android.view.View: void getDrawingRect(android.graphics.Rect)>(scrollDelta);

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($u-1, scrollDelta);

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1#7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>(scrollDelta);

        specialinvoke this.<androidx.core.widget.NestedScrollView: void doScrollY(int)>($u-1#7);

        virtualinvoke $u-1.<android.view.View: boolean requestFocus(int)>($u12);

        goto label8;

     label2:
        $u-1#8 = $u-1#7;

        if $u12 != 33 goto label3;

        $u-1#19 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u-1#19 >= $u-1#7 goto label3;

        $u-1#8 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        goto label4;

     label3:
        if $u12 != 130 goto label4;

        $u-1#19 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1#19 <= 0 goto label4;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#26 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#26;

        $u-1#8 = virtualinvoke $u-1.<android.view.View: int getBottom()>();

        $u-1#19 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1#8 = $u-1#8 + $u-1#19;

        $u-1#19 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#35 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#19 = $u-1#19 + $u-1#35;

        $u-1#35 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u-1#19 = $u-1#19 - $u-1#35;

        $u-1#8 = $u-1#8 - $u-1#19;

        $u-1#8 = staticinvoke <java.lang.Math: int min(int,int)>($u-1#8, $u-1#7);

     label4:
        if $u-1#8 != 0 goto label5;

        return 0;

     label5:
        if $u12 != 130 goto label6;

        $u12 = $u-1#8;

        goto label7;

     label6:
        $u12 = neg $u-1#8;

     label7:
        specialinvoke this.<androidx.core.widget.NestedScrollView: void doScrollY(int)>($u12);

     label8:
        if currentFocused == null goto label9;

        $u-1#10 = virtualinvoke currentFocused.<android.view.View: boolean isFocused()>();

        if $u-1#10 == 0 goto label9;

        $u-1#10 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)>(currentFocused);

        if $u-1#10 == 0 goto label9;

        $u12 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getDescendantFocusability()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setDescendantFocusability(int)>(131072);

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean requestFocus()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void setDescendantFocusability(int)>($u12);

     label9:
        return 1;
    }

    public int computeHorizontalScrollExtent()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: int computeHorizontalScrollExtent()>();

        return $u-1;
    }

    public int computeHorizontalScrollOffset()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: int computeHorizontalScrollOffset()>();

        return $u-1;
    }

    public int computeHorizontalScrollRange()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: int computeHorizontalScrollRange()>();

        return $u-1;
    }

    public void computeScroll()
    {
        androidx.core.widget.NestedScrollView this;
        android.widget.OverScroller mode;
        boolean $u-1;
        int $u-1#6, mode#7, $u-1#20, $u-1#22;
        int[] $u3, $u5;
        android.widget.EdgeEffect $u2;
        float $u-1#52;

        this := @this: androidx.core.widget.NestedScrollView;

        mode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke mode.<android.widget.OverScroller: boolean isFinished()>();

        if $u-1 == 0 goto label1;

        return;

     label1:
        mode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke mode.<android.widget.OverScroller: boolean computeScrollOffset()>();

        mode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1#6 = virtualinvoke mode.<android.widget.OverScroller: int getCurrY()>();

        mode#7 = this.<androidx.core.widget.NestedScrollView: int mLastScrollerY>;

        mode#7 = $u-1#6 - mode#7;

        this.<androidx.core.widget.NestedScrollView: int mLastScrollerY> = $u-1#6;

        $u3 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        $u-1 = 0;

        $u3[1] = 0;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(0, mode#7, $u3, null, 1);

        $u3 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        $u-1#6 = $u3[1];

        mode#7 = mode#7 - $u-1#6;

        $u-1#6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        if mode#7 == 0 goto label2;

        $u-1#20 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#22 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>(0, mode#7, $u-1#22, $u-1#20, 0, $u-1#6, 0, 0, 0);

        $u-1#22 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#20 = $u-1#22 - $u-1#20;

        mode#7 = mode#7 - $u-1#20;

        $u3 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        $u3[1] = 0;

        $u5 = this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>(0, $u-1#20, 0, mode#7, $u5, 1, $u3);

        $u3 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        $u-1#20 = $u3[1];

        mode#7 = mode#7 - $u-1#20;

     label2:
        if mode#7 == 0 goto label7;

        $u-1#20 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getOverScrollMode()>();

        if $u-1#20 == 0 goto label3;

        if $u-1#20 != 1 goto label4;

        if $u-1#6 <= 0 goto label4;

     label3:
        $u-1 = 1;

     label4:
        if $u-1 == 0 goto label6;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void ensureGlows()>();

        if mode#7 >= 0 goto label5;

        $u2 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $u-1 = virtualinvoke $u2.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1 == 0 goto label6;

        $u2 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        mode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1#52 = virtualinvoke mode.<android.widget.OverScroller: float getCurrVelocity()>();

        $u-1#6 = (int) $u-1#52;

        virtualinvoke $u2.<android.widget.EdgeEffect: void onAbsorb(int)>($u-1#6);

        goto label6;

     label5:
        $u2 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $u-1 = virtualinvoke $u2.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1 == 0 goto label6;

        $u2 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        mode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1#52 = virtualinvoke mode.<android.widget.OverScroller: float getCurrVelocity()>();

        $u-1#6 = (int) $u-1#52;

        virtualinvoke $u2.<android.widget.EdgeEffect: void onAbsorb(int)>($u-1#6);

     label6:
        specialinvoke this.<androidx.core.widget.NestedScrollView: void abortAnimatedScroll()>();

     label7:
        mode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke mode.<android.widget.OverScroller: boolean isFinished()>();

        if $u-1 != 0 goto label8;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

        return;

     label8:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>(1);

        return;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        androidx.core.widget.NestedScrollView this;
        android.graphics.Rect $u11;
        int actualScreenBottom, $u-1, $u-1#6, screenTop, screenBottom, $u-1#9, lp, distanceToBottom;
        android.view.View $u-1#11;
        android.view.ViewGroup$LayoutParams $u-1#13;
        android.widget.FrameLayout$LayoutParams lp#15;

        this := @this: androidx.core.widget.NestedScrollView;

        $u11 := @parameter0: android.graphics.Rect;

        actualScreenBottom = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if actualScreenBottom != 0 goto label1;

        return 0;

     label1:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        screenTop = $u-1#6;

        screenBottom = $u-1#6 + $u-1;

        actualScreenBottom = screenBottom;

        $u-1#9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        lp = $u11.<android.graphics.Rect: int top>;

        if lp <= 0 goto label2;

        screenTop = $u-1#6 + $u-1#9;

     label2:
        $u-1#11 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#13 = virtualinvoke $u-1#11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp#15 = (android.widget.FrameLayout$LayoutParams) $u-1#13;

        $u-1#6 = $u11.<android.graphics.Rect: int bottom>;

        lp = virtualinvoke $u-1#11.<android.view.View: int getHeight()>();

        distanceToBottom = lp#15.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        lp = lp + distanceToBottom;

        distanceToBottom = lp#15.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        lp = lp + distanceToBottom;

        if $u-1#6 >= lp goto label3;

        screenBottom = screenBottom - $u-1#9;

     label3:
        $u-1#9 = 0;

        $u-1#6 = $u11.<android.graphics.Rect: int bottom>;

        if $u-1#6 <= screenBottom goto label7;

        $u-1#6 = $u11.<android.graphics.Rect: int top>;

        if $u-1#6 <= screenTop goto label7;

        $u-1#9 = virtualinvoke $u11.<android.graphics.Rect: int height()>();

        if $u-1#9 <= $u-1 goto label4;

        screenBottom = $u11.<android.graphics.Rect: int top>;

        screenTop = screenBottom - screenTop;

        goto label5;

     label4:
        screenTop = $u11.<android.graphics.Rect: int bottom>;

        screenTop = screenTop - screenBottom;

     label5:
        screenBottom = virtualinvoke $u-1#11.<android.view.View: int getBottom()>();

        $u-1 = lp#15.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        screenBottom = screenBottom + $u-1;

        actualScreenBottom = screenBottom - actualScreenBottom;

        $u-1#9 = staticinvoke <java.lang.Math: int min(int,int)>(screenTop, actualScreenBottom);

     label6:
        return $u-1#9;

     label7:
        actualScreenBottom = $u11.<android.graphics.Rect: int top>;

        if actualScreenBottom >= screenTop goto label6;

        actualScreenBottom = $u11.<android.graphics.Rect: int bottom>;

        if actualScreenBottom >= screenBottom goto label6;

        actualScreenBottom = virtualinvoke $u11.<android.graphics.Rect: int height()>();

        if actualScreenBottom <= $u-1 goto label8;

        actualScreenBottom = $u11.<android.graphics.Rect: int bottom>;

        actualScreenBottom = screenBottom - actualScreenBottom;

        actualScreenBottom = 0 - actualScreenBottom;

        goto label9;

     label8:
        actualScreenBottom = $u11.<android.graphics.Rect: int top>;

        actualScreenBottom = screenTop - actualScreenBottom;

        actualScreenBottom = 0 - actualScreenBottom;

     label9:
        screenTop = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        screenTop = neg screenTop;

        actualScreenBottom = staticinvoke <java.lang.Math: int max(int,int)>(actualScreenBottom, screenTop);

        return actualScreenBottom;
    }

    public int computeVerticalScrollExtent()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: int computeVerticalScrollExtent()>();

        return $u-1;
    }

    public int computeVerticalScrollOffset()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: int computeVerticalScrollOffset()>();

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1);

        return $u-1;
    }

    public int computeVerticalScrollRange()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1, $u-1#2, $u-1#4;
        android.view.View $u-1#11;
        android.view.ViewGroup$LayoutParams $u-1#12;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        $u-1#2 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u-1#2 = $u-1#2 - $u-1#4;

        $u-1#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        $u-1#2 = $u-1#2 - $u-1#4;

        if $u-1 != 0 goto label1;

        return $u-1#2;

     label1:
        $u-1#11 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#12 = virtualinvoke $u-1#11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#12;

        $u-1 = virtualinvoke $u-1#11.<android.view.View: int getBottom()>();

        $u-1#4 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1 = $u-1 + $u-1#4;

        $u-1#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#2 = $u-1 - $u-1#2;

        $u-1#2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#2);

        if $u-1#4 >= 0 goto label2;

        $u-1 = $u-1 - $u-1#4;

        return $u-1;

     label2:
        if $u-1#4 <= $u-1#2 goto label3;

        $u-1#2 = $u-1#4 - $u-1#2;

        $u-1 = $u-1 + $u-1#2;

     label3:
        return $u-1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.KeyEvent $u2;
        boolean $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.KeyEvent;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>($u2);

        if $u-1 != 0 goto label2;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($u2);

        if $u-1 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        float $u2, $u3;
        boolean $u4;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        $u4 := @parameter2: boolean;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u4 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>($u2, $u3, $u4);

        return $u4;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        androidx.core.widget.NestedScrollView this;
        float $u2, $u3;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>($u2, $u3);

        return $u-1;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        androidx.core.widget.NestedScrollView this;
        int $u7, $u8;
        int[] $u9, $u10;
        boolean $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: int;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int[];

        $u10 := @parameter3: int[];

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($u7, $u8, $u9, $u10, 0);

        return $u-1;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[], int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u7, $u8, $u11;
        int[] $u9, $u10;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: int;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int[];

        $u10 := @parameter3: int[];

        $u11 := @parameter4: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($u7, $u8, $u9, $u10, $u11);

        return $u-1;
    }

    public void dispatchNestedScroll(int, int, int, int, int[], int, int[])
    {
        androidx.core.widget.NestedScrollView this;
        int $u9, $u10, $u11, $u12, $u14;
        int[] $u13, $u15;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u9 := @parameter0: int;

        $u10 := @parameter1: int;

        $u11 := @parameter2: int;

        $u12 := @parameter3: int;

        $u13 := @parameter4: int[];

        $u14 := @parameter5: int;

        $u15 := @parameter6: int[];

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>($u9, $u10, $u11, $u12, $u13, $u14, $u15);

        return;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        androidx.core.widget.NestedScrollView this;
        int $u7, $u8, $u9, $u10;
        int[] $u11;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: int;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int;

        $u11 := @parameter4: int[];

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>($u7, $u8, $u9, $u10, $u11);

        return $u-1;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[], int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u8, $u9, $u10, $u11, $u13;
        int[] $u12;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u8 := @parameter0: int;

        $u9 := @parameter1: int;

        $u10 := @parameter2: int;

        $u11 := @parameter3: int;

        $u12 := @parameter4: int[];

        $u13 := @parameter5: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)>($u8, $u9, $u10, $u11, $u12, $u13);

        return $u-1;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.core.widget.NestedScrollView this;
        android.graphics.Canvas $u10;
        android.widget.EdgeEffect scrollY;
        int $u-1, $u-1#8, $u-1#10, width, $u-1#12, height, xTranslation, $u-1#16, yTranslation, $u7;
        boolean $u-1#5;
        float $u7#38, $u8;

        this := @this: androidx.core.widget.NestedScrollView;

        $u10 := @parameter0: android.graphics.Canvas;

        specialinvoke this.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>($u10);

        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if scrollY == null goto label10;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $u-1#5 = virtualinvoke scrollY.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1#5 != 0 goto label05;

        $u-1#8 = virtualinvoke $u10.<android.graphics.Canvas: int save()>();

        $u-1#10 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getWidth()>();

        width = $u-1#10;

        $u-1#12 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        height = $u-1#12;

        xTranslation = 0;

        $u-1#16 = staticinvoke <java.lang.Math: int min(int,int)>(0, $u-1);

        yTranslation = $u-1#16;

        $u7 = <android.os.Build$VERSION: int SDK_INT>;

        if $u7 < 21 goto label01;

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean getClipToPadding()>();

        if $u-1#5 == 0 goto label02;

     label01:
        width = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

        xTranslation = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingRight()>();

        width = width + xTranslation;

        width = $u-1#10 - width;

        xTranslation = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

     label02:
        $u-1#10 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1#10 < 21 goto label03;

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean getClipToPadding()>();

        if $u-1#5 == 0 goto label03;

        height = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        yTranslation = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        height = height + yTranslation;

        height = $u-1#12 - height;

        $u-1#12 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        yTranslation = $u-1#16 + $u-1#12;

     label03:
        $u7#38 = (float) xTranslation;

        $u8 = (float) yTranslation;

        virtualinvoke $u10.<android.graphics.Canvas: void translate(float,float)>($u7#38, $u8);

        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke scrollY.<android.widget.EdgeEffect: void setSize(int,int)>(width, height);

        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $u-1#5 = virtualinvoke scrollY.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($u10);

        if $u-1#5 == 0 goto label04;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label04:
        virtualinvoke $u10.<android.graphics.Canvas: void restoreToCount(int)>($u-1#8);

     label05:
        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $u-1#5 = virtualinvoke scrollY.<android.widget.EdgeEffect: boolean isFinished()>();

        if $u-1#5 != 0 goto label10;

        $u-1#8 = virtualinvoke $u10.<android.graphics.Canvas: int save()>();

        xTranslation = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getWidth()>();

        $u-1#12 = xTranslation;

        $u-1#16 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        width = $u-1#16;

        height = 0;

        yTranslation = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(yTranslation, $u-1);

        $u-1 = $u-1 + $u-1#16;

        yTranslation = <android.os.Build$VERSION: int SDK_INT>;

        if yTranslation < 21 goto label06;

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean getClipToPadding()>();

        if $u-1#5 == 0 goto label07;

     label06:
        $u-1#12 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

        height = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingRight()>();

        $u-1#12 = $u-1#12 + height;

        $u-1#12 = xTranslation - $u-1#12;

        height = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

     label07:
        xTranslation = <android.os.Build$VERSION: int SDK_INT>;

        if xTranslation < 21 goto label08;

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean getClipToPadding()>();

        if $u-1#5 == 0 goto label08;

        width = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        xTranslation = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        width = width + xTranslation;

        width = $u-1#16 - width;

        $u-1#16 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u-1 = $u-1 - $u-1#16;

     label08:
        $u-1#16 = height - $u-1#12;

        $u7#38 = (float) $u-1#16;

        $u8 = (float) $u-1;

        virtualinvoke $u10.<android.graphics.Canvas: void translate(float,float)>($u7#38, $u8);

        $u7#38 = (float) $u-1#12;

        virtualinvoke $u10.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $u7#38, 0.0F);

        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke scrollY.<android.widget.EdgeEffect: void setSize(int,int)>($u-1#12, width);

        scrollY = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $u-1#5 = virtualinvoke scrollY.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($u10);

        if $u-1#5 == 0 goto label09;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label09:
        virtualinvoke $u10.<android.graphics.Canvas: void restoreToCount(int)>($u-1#8);

     label10:
        return;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.KeyEvent $u6;
        android.graphics.Rect currentFocused;
        boolean $u-1;
        short $u1;
        int $u-1#8;
        android.view.View $u-1#11, currentFocused#12;
        android.view.FocusFinder $u-1#13;

        this := @this: androidx.core.widget.NestedScrollView;

        $u6 := @parameter0: android.view.KeyEvent;

        currentFocused = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke currentFocused.<android.graphics.Rect: void setEmpty()>();

        $u-1 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean canScroll()>();

        $u1 = 130;

        if $u-1 != 0 goto label03;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean isFocused()>();

        if $u-1 == 0 goto label02;

        $u-1#8 = virtualinvoke $u6.<android.view.KeyEvent: int getKeyCode()>();

        if $u-1#8 == 4 goto label10;

        $u-1#11 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View findFocus()>();

        currentFocused#12 = $u-1#11;

        if $u-1#11 != this goto label01;

        currentFocused#12 = null;

     label01:
        $u-1#13 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $u-1#11 = virtualinvoke $u-1#13.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(this, currentFocused#12, 130);

        if $u-1#11 == null goto label02;

        if $u-1#11 == this goto label02;

        $u-1 = virtualinvoke $u-1#11.<android.view.View: boolean requestFocus(int)>(130);

        if $u-1 == 0 goto label02;

        return 1;

     label02:
        return 0;

     label03:
        $u-1#8 = virtualinvoke $u6.<android.view.KeyEvent: int getAction()>();

        if $u-1#8 != 0 goto label11;

        $u-1#8 = virtualinvoke $u6.<android.view.KeyEvent: int getKeyCode()>();

        if $u-1#8 == 19 goto label08;

        if $u-1#8 == 20 goto label06;

        if $u-1#8 == 62 goto label04;

        return 0;

     label04:
        $u-1 = virtualinvoke $u6.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $u-1 == 0 goto label05;

        $u1 = 33;

     label05:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean pageScroll(int)>($u1);

        return 0;

     label06:
        $u-1 = virtualinvoke $u6.<android.view.KeyEvent: boolean isAltPressed()>();

        if $u-1 != 0 goto label07;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean arrowScroll(int)>(130);

        return $u-1;

     label07:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean fullScroll(int)>(130);

        return $u-1;

     label08:
        $u-1 = virtualinvoke $u6.<android.view.KeyEvent: boolean isAltPressed()>();

        if $u-1 != 0 goto label09;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean arrowScroll(int)>(33);

        return $u-1;

     label09:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean fullScroll(int)>(33);

        return $u-1;

     label10:
        return 0;

     label11:
        return 0;
    }

    public void fling(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u13, $u-1, $u-1#4;
        android.widget.OverScroller $u1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u13 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 <= 0 goto label1;

        $u1 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        $u-1#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke $u1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>($u-1, $u-1#4, 0, $u13, 0, 0, -2147483648, 2147483647, 0, 0);

        specialinvoke this.<androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>(1);

     label1:
        return;
    }

    public boolean fullScroll(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u9, $u-1, $u-1#7, $u7;
        boolean down;
        android.graphics.Rect view;
        android.view.View $u-1#10;
        android.view.ViewGroup$LayoutParams $u-1#12;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u9 := @parameter0: int;

        if $u9 != 130 goto label1;

        down = 1;

        goto label2;

     label1:
        down = 0;

     label2:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        view = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        view.<android.graphics.Rect: int top> = 0;

        view = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        view.<android.graphics.Rect: int bottom> = $u-1;

        if down == 0 goto label3;

        $u-1#7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1#7 <= 0 goto label3;

        $u-1#7 = $u-1#7 + -1;

        $u-1#10 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>($u-1#7);

        $u-1#12 = virtualinvoke $u-1#10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#12;

        view = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1#7 = virtualinvoke $u-1#10.<android.view.View: int getBottom()>();

        $u7 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1#7 = $u-1#7 + $u7;

        $u7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u-1#7 = $u-1#7 + $u7;

        view.<android.graphics.Rect: int bottom> = $u-1#7;

        view = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1#7 = view.<android.graphics.Rect: int bottom>;

        $u-1 = $u-1#7 - $u-1;

        view.<android.graphics.Rect: int top> = $u-1;

     label3:
        view = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1 = view.<android.graphics.Rect: int top>;

        view = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1#7 = view.<android.graphics.Rect: int bottom>;

        down = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>($u9, $u-1, $u-1#7);

        return down;
    }

    protected float getBottomFadingEdgeStrength()
    {
        androidx.core.widget.NestedScrollView this;
        float $u6, $u5#24;
        int $u-1, $u-1#11, $u-1#13, $u5;
        android.view.View $u-1#5;
        android.view.ViewGroup$LayoutParams $u-1#7;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 != 0 goto label1;

        return 0.0F;

     label1:
        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#7 = virtualinvoke $u-1#5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#7;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $u-1#11 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#13 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u-1#11 = $u-1#11 - $u-1#13;

        $u-1#13 = virtualinvoke $u-1#5.<android.view.View: int getBottom()>();

        $u5 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1#13 = $u-1#13 + $u5;

        $u5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#13 = $u-1#13 - $u5;

        $u-1#11 = $u-1#13 - $u-1#11;

        if $u-1#11 >= $u-1 goto label2;

        $u5#24 = (float) $u-1#11;

        $u6 = (float) $u-1;

        $u6 = $u5#24 / $u6;

        return $u6;

     label2:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;
        float $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u0 = (float) $u-1;

        $u0 = $u0 * 0.5F;

        $u-1 = (int) $u0;

        return $u-1;
    }

    public int getNestedScrollAxes()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1;
        androidx.core.view.NestedScrollingParentHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $u-1;
    }

    int getScrollRange()
    {
        androidx.core.widget.NestedScrollView this;
        int $u-1, parentSpace, $u-1#17;
        android.view.View $u-1#5;
        android.view.ViewGroup$LayoutParams $u-1#6;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 <= 0 goto label1;

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#6 = virtualinvoke $u-1#5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#6;

        $u-1 = virtualinvoke $u-1#5.<android.view.View: int getHeight()>();

        parentSpace = lp.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $u-1 = $u-1 + parentSpace;

        parentSpace = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1 = $u-1 + parentSpace;

        parentSpace = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#17 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        parentSpace = parentSpace - $u-1#17;

        $u-1#17 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        parentSpace = parentSpace - $u-1#17;

        $u-1 = $u-1 - parentSpace;

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1);

        return $u-1;

     label1:
        return 0;
    }

    protected float getTopFadingEdgeStrength()
    {
        androidx.core.widget.NestedScrollView this;
        float $u3, $u2;
        int $u-1, $u-1#6;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 != 0 goto label1;

        return 0.0F;

     label1:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $u-1#6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u-1#6 >= $u-1 goto label2;

        $u2 = (float) $u-1#6;

        $u3 = (float) $u-1;

        $u3 = $u2 / $u3;

        return $u3;

     label2:
        return 1.0F;
    }

    public boolean hasNestedScrollingParent()
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(0);

        return $u-1;
    }

    public boolean hasNestedScrollingParent(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)>($u2);

        return $u-1;
    }

    public boolean isFillViewport()
    {
        androidx.core.widget.NestedScrollView this;
        boolean ret0;

        this := @this: androidx.core.widget.NestedScrollView;

        ret0 = this.<androidx.core.widget.NestedScrollView: boolean mFillViewport>;

        return ret0;
    }

    public boolean isNestedScrollingEnabled()
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        return $u-1;
    }

    public boolean isSmoothScrollingEnabled()
    {
        androidx.core.widget.NestedScrollView this;
        boolean ret0;

        this := @this: androidx.core.widget.NestedScrollView;

        ret0 = this.<androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;

        return ret0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u4;
        int $u5, $u6, $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: int;

        $u6 := @parameter2: int;

        $u-1 = virtualinvoke $u4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

        $u-1#4 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingRight()>();

        $u6 = $u6 + $u-1#4;

        $u-1#4 = $u-1.<android.view.ViewGroup$LayoutParams: int width>;

        $u5 = staticinvoke <androidx.core.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($u5, $u6, $u-1#4);

        $u6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $u4.<android.view.View: void measure(int,int)>($u5, $u6);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u5;
        int $u6, $u7, $u8, $u9;
        android.view.ViewGroup$LayoutParams $u-1;
        android.view.ViewGroup$MarginLayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: int;

        $u7 := @parameter2: int;

        $u8 := @parameter3: int;

        $u9 := @parameter4: int;

        $u-1 = virtualinvoke $u5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.view.ViewGroup$MarginLayoutParams) $u-1;

        $u8 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

        $u9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingRight()>();

        $u8 = $u8 + $u9;

        $u9 = lp.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $u8 = $u8 + $u9;

        $u9 = lp.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $u8 = $u8 + $u9;

        $u7 = $u8 + $u7;

        $u8 = lp.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $u6 = staticinvoke <androidx.core.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($u6, $u7, $u8);

        $u7 = lp.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $u8 = lp.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $u7 = $u7 + $u8;

        $u7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u7, 0);

        virtualinvoke $u5.<android.view.View: void measure(int,int)>($u6, $u7);

        return;
    }

    public void onAttachedToWindow()
    {
        androidx.core.widget.NestedScrollView this;

        this := @this: androidx.core.widget.NestedScrollView;

        specialinvoke this.<android.widget.FrameLayout: void onAttachedToWindow()>();

        this.<androidx.core.widget.NestedScrollView: boolean mIsLaidOut> = 0;

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.MotionEvent $u7;
        int $u-1, delta#16, $u-1#18;
        boolean vscroll;
        float $u-1#9, $u-1#13;
        byte delta;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u7.<android.view.MotionEvent: int getSource()>();

        $u-1 = $u-1 & 2;

        if $u-1 == 0 goto label4;

        $u-1 = virtualinvoke $u7.<android.view.MotionEvent: int getAction()>();

        if $u-1 == 8 goto label1;

        goto label4;

     label1:
        vscroll = this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged>;

        if vscroll != 0 goto label4;

        $u-1#9 = virtualinvoke $u7.<android.view.MotionEvent: float getAxisValue(int)>(9);

        delta = $u-1#9 cmpl 0.0F;

        if delta == 0 goto label4;

        $u-1#13 = specialinvoke this.<androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()>();

        $u-1#9 = $u-1#13 * $u-1#9;

        delta#16 = (int) $u-1#9;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $u-1#18 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        delta#16 = $u-1#18 - delta#16;

        if delta#16 >= 0 goto label2;

        delta#16 = 0;

        goto label3;

     label2:
        if delta#16 <= $u-1 goto label3;

        delta#16 = $u-1;

     label3:
        if delta#16 == $u-1#18 goto label4;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        specialinvoke this.<android.widget.FrameLayout: void scrollTo(int,int)>($u-1, delta#16);

        return 1;

     label4:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.MotionEvent $u18;
        int $u-1, $u-1#10, $u10;
        boolean activePointerId;
        java.lang.StringBuilder parent;
        java.lang.String $u-1#14;
        float $u-1#17;
        android.view.VelocityTracker parent#28;
        android.view.ViewParent $u-1#29;
        android.widget.OverScroller $u10#31;

        this := @this: androidx.core.widget.NestedScrollView;

        $u18 := @parameter0: android.view.MotionEvent;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getAction()>();

        if $u-1 != 2 goto label01;

        activePointerId = this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged>;

        if activePointerId == 0 goto label01;

        return 1;

     label01:
        $u-1 = $u-1 & 255;

        if $u-1 == 0 goto label09;

        if $u-1 == 1 goto label07;

        if $u-1 == 2 goto label03;

        if $u-1 == 3 goto label07;

        if $u-1 == 6 goto label02;

        goto label11;

     label02:
        specialinvoke this.<androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>($u18);

        goto label11;

     label03:
        $u-1 = this.<androidx.core.widget.NestedScrollView: int mActivePointerId>;

        if $u-1 != -1 goto label04;

        goto label11;

     label04:
        $u-1#10 = virtualinvoke $u18.<android.view.MotionEvent: int findPointerIndex(int)>($u-1);

        if $u-1#10 != -1 goto label05;

        parent = new java.lang.StringBuilder;

        specialinvoke parent.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke parent.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        virtualinvoke parent.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u-1);

        virtualinvoke parent.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onInterceptTouchEvent");

        $u-1#14 = virtualinvoke parent.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $u-1#14);

        goto label11;

     label05:
        $u-1#17 = virtualinvoke $u18.<android.view.MotionEvent: float getY(int)>($u-1#10);

        $u-1 = (int) $u-1#17;

        $u-1#10 = this.<androidx.core.widget.NestedScrollView: int mLastMotionY>;

        $u-1#10 = $u-1 - $u-1#10;

        $u-1#10 = staticinvoke <java.lang.Math: int abs(int)>($u-1#10);

        $u10 = this.<androidx.core.widget.NestedScrollView: int mTouchSlop>;

        if $u-1#10 <= $u10 goto label11;

        $u-1#10 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getNestedScrollAxes()>();

        $u-1#10 = 2 & $u-1#10;

        if $u-1#10 != 0 goto label11;

        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = 1;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = $u-1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();

        parent#28 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke parent#28.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u18);

        this.<androidx.core.widget.NestedScrollView: int mNestedYOffset> = 0;

        $u-1#29 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if $u-1#29 == null goto label06;

        interfaceinvoke $u-1#29.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label06:
        goto label11;

     label07:
        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void recycleVelocityTracker()>();

        $u10#31 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        $u-1#10 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u10 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        activePointerId = virtualinvoke $u10#31.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($u-1, $u-1#10, 0, 0, 0, $u10);

        if activePointerId == 0 goto label08;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label08:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>(0);

        goto label11;

     label09:
        $u-1#17 = virtualinvoke $u18.<android.view.MotionEvent: float getY()>();

        $u-1 = (int) $u-1#17;

        $u-1#17 = virtualinvoke $u18.<android.view.MotionEvent: float getX()>();

        $u-1#10 = (int) $u-1#17;

        activePointerId = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean inChild(int,int)>($u-1#10, $u-1);

        if activePointerId != 0 goto label10;

        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void recycleVelocityTracker()>();

        goto label11;

     label10:
        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = $u-1;

        $u-1 = virtualinvoke $u18.<android.view.MotionEvent: int getPointerId(int)>(0);

        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = $u-1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()>();

        parent#28 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke parent#28.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u18);

        $u10#31 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $u10#31.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $u10#31 = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        activePointerId = virtualinvoke $u10#31.<android.widget.OverScroller: boolean isFinished()>();

        activePointerId = 1 ^ activePointerId;

        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = activePointerId;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, 0);

     label11:
        activePointerId = this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged>;

        return activePointerId;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u6;
        int $u7, $u8, $u9, $u10;
        android.view.View childSize;
        androidx.core.widget.NestedScrollView$SavedState lp;
        android.view.ViewGroup$LayoutParams $u-1;
        android.widget.FrameLayout$LayoutParams lp#20;

        this := @this: androidx.core.widget.NestedScrollView;

        $u6 := @parameter0: boolean;

        $u7 := @parameter1: int;

        $u8 := @parameter2: int;

        $u9 := @parameter3: int;

        $u10 := @parameter4: int;

        specialinvoke this.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>($u6, $u7, $u8, $u9, $u10);

        this.<androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty> = 0;

        childSize = this.<androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        if childSize == null goto label1;

        $u6 = staticinvoke <androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>(childSize, this);

        if $u6 == 0 goto label1;

        childSize = this.<androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)>(childSize);

     label1:
        this.<androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;

        $u6 = this.<androidx.core.widget.NestedScrollView: boolean mIsLaidOut>;

        if $u6 != 0 goto label4;

        lp = this.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState>;

        if lp == null goto label2;

        $u7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        lp = this.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState>;

        $u9 = lp.<androidx.core.widget.NestedScrollView$SavedState: int scrollPosition>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>($u7, $u9);

        this.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState> = null;

     label2:
        $u7 = 0;

        $u9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u9 <= 0 goto label3;

        childSize = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1 = virtualinvoke childSize.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp#20 = (android.widget.FrameLayout$LayoutParams) $u-1;

        $u7 = virtualinvoke childSize.<android.view.View: int getMeasuredHeight()>();

        $u9 = lp#20.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $u7 = $u7 + $u9;

        $u9 = lp#20.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u7 = $u7 + $u9;

     label3:
        $u8 = $u10 - $u8;

        $u9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        $u8 = $u8 - $u9;

        $u9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u9 = $u8 - $u9;

        $u8 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u7 = staticinvoke <androidx.core.widget.NestedScrollView: int clamp(int,int,int)>($u8, $u9, $u7);

        if $u7 == $u8 goto label4;

        $u8 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>($u8, $u7);

     label4:
        $u7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        $u8 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>($u7, $u8);

        this.<androidx.core.widget.NestedScrollView: boolean mIsLaidOut> = 1;

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u8, $u9, $u-1#12, $u-1#15;
        boolean heightMode;
        android.view.View $u-1;
        android.view.ViewGroup$LayoutParams $u-1#9;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u8 := @parameter0: int;

        $u9 := @parameter1: int;

        specialinvoke this.<android.widget.FrameLayout: void onMeasure(int,int)>($u8, $u9);

        heightMode = this.<androidx.core.widget.NestedScrollView: boolean mFillViewport>;

        if heightMode != 0 goto label1;

        return;

     label1:
        $u9 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u9);

        if $u9 != 0 goto label2;

        return;

     label2:
        $u9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u9 <= 0 goto label3;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#9 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#9;

        $u-1#12 = virtualinvoke $u-1.<android.view.View: int getMeasuredHeight()>();

        $u9 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getMeasuredHeight()>();

        $u-1#15 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        $u9 = $u9 - $u-1#15;

        $u-1#15 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u9 = $u9 - $u-1#15;

        $u-1#15 = lp.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $u9 = $u9 - $u-1#15;

        $u-1#15 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u9 = $u9 - $u-1#15;

        if $u-1#12 >= $u9 goto label3;

        $u-1#12 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

        $u-1#15 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingRight()>();

        $u-1#12 = $u-1#12 + $u-1#15;

        $u-1#15 = lp.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $u-1#12 = $u-1#12 + $u-1#15;

        $u-1#15 = lp.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        $u-1#12 = $u-1#12 + $u-1#15;

        $u-1#15 = lp.<android.widget.FrameLayout$LayoutParams: int width>;

        $u8 = staticinvoke <androidx.core.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($u8, $u-1#12, $u-1#15);

        $u9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u9, 1073741824);

        virtualinvoke $u-1.<android.view.View: void measure(int,int)>($u8, $u9);

     label3:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        float $u4, $u5;
        boolean $u6;
        int $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: float;

        $u5 := @parameter2: float;

        $u6 := @parameter3: boolean;

        if $u6 != 0 goto label1;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $u5, 1);

        $u0 = (int) $u5;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void fling(int)>($u0);

        return 1;

     label1:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2;
        float $u3, $u4;
        boolean $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>($u3, $u4);

        return $u-1;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u7;
        int $u8, $u9;
        int[] $u10;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int[];

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)>($u7, $u8, $u9, $u10, 0);

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[], int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u7;
        int $u8, $u9, $u11;
        int[] $u10;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int[];

        $u11 := @parameter4: int;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($u8, $u9, $u10, null, $u11);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u3;
        int $u4, $u5, $u6, $u7;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        $u6 := @parameter3: int;

        $u7 := @parameter4: int;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])>($u7, 0, null);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2;
        int $u3, $u4, $u5, $u6, $u7;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u7 := @parameter5: int;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])>($u6, $u7, null);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int, int[])
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u1;
        int $u2, $u3, $u4, $u5, $u6;
        int[] $u7;

        this := @this: androidx.core.widget.NestedScrollView;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        $u5 := @parameter4: int;

        $u6 := @parameter5: int;

        $u7 := @parameter6: int[];

        specialinvoke this.<androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])>($u5, $u6, $u7);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2, $u3;
        int $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>($u2, $u3, $u4, 0);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2, $u3;
        int $u4, $u5;
        androidx.core.view.NestedScrollingParentHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $u0.<androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>($u2, $u3, $u4, $u5);

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, $u5);

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        int $u1, $u2;
        boolean $u3, $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: boolean;

        $u4 := @parameter3: boolean;

        specialinvoke this.<android.widget.FrameLayout: void scrollTo(int,int)>($u1, $u2);

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        androidx.core.widget.NestedScrollView this;
        android.graphics.Rect $u5;
        int $u4;
        android.view.FocusFinder $u-1;
        android.view.View $u-1#7;
        boolean $u-1#13;

        this := @this: androidx.core.widget.NestedScrollView;

        $u4 := @parameter0: int;

        $u5 := @parameter1: android.graphics.Rect;

        if $u4 != 2 goto label1;

        $u4 = 130;

        goto label2;

     label1:
        if $u4 != 1 goto label2;

        $u4 = 33;

     label2:
        if $u5 != null goto label3;

        $u-1 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $u-1#7 = virtualinvoke $u-1.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(this, null, $u4);

        goto label4;

     label3:
        $u-1 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $u-1#7 = virtualinvoke $u-1.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>(this, $u5, $u4);

     label4:
        if $u-1#7 != null goto label5;

        return 0;

     label5:
        $u-1#13 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)>($u-1#7);

        if $u-1#13 == 0 goto label6;

        return 0;

     label6:
        $u-1#13 = virtualinvoke $u-1#7.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($u4, $u5);

        return $u-1#13;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.core.widget.NestedScrollView this;
        android.os.Parcelable $u3;
        boolean ss;
        androidx.core.widget.NestedScrollView$SavedState ss#3;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: android.os.Parcelable;

        ss = $u3 instanceof androidx.core.widget.NestedScrollView$SavedState;

        if ss != 0 goto label1;

        specialinvoke this.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($u3);

        return;

     label1:
        ss#3 = (androidx.core.widget.NestedScrollView$SavedState) $u3;

        $u3 = virtualinvoke ss#3.<androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke this.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($u3);

        this.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState> = ss#3;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void requestLayout()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.core.widget.NestedScrollView this;
        androidx.core.widget.NestedScrollView$SavedState ss;
        android.os.Parcelable $u-1;
        int $u-1#2;

        this := @this: androidx.core.widget.NestedScrollView;

        $u-1 = specialinvoke this.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        ss = new androidx.core.widget.NestedScrollView$SavedState;

        specialinvoke ss.<androidx.core.widget.NestedScrollView$SavedState: void <init>(android.os.Parcelable)>($u-1);

        $u-1#2 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        ss.<androidx.core.widget.NestedScrollView$SavedState: int scrollPosition> = $u-1#2;

        return ss;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u7, $u8, $u9, $u10;
        androidx.core.widget.NestedScrollView$OnScrollChangeListener $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u7 := @parameter0: int;

        $u8 := @parameter1: int;

        $u9 := @parameter2: int;

        $u10 := @parameter3: int;

        specialinvoke this.<android.widget.FrameLayout: void onScrollChanged(int,int,int,int)>($u7, $u8, $u9, $u10);

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener>;

        if $u0 == null goto label1;

        interfaceinvoke $u0.<androidx.core.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)>(this, $u7, $u8, $u9, $u10);

     label1:
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u3, $u4, $u5, $u6;
        android.view.View $u-1;
        boolean $u-1#3;
        android.graphics.Rect scrollDelta;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        $u6 := @parameter3: int;

        specialinvoke this.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>($u3, $u4, $u5, $u6);

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View findFocus()>();

        if $u-1 == null goto label2;

        if this != $u-1 goto label1;

        return;

     label1:
        $u-1#3 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($u-1, 0, $u6);

        if $u-1#3 == 0 goto label2;

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $u-1.<android.view.View: void getDrawingRect(android.graphics.Rect)>(scrollDelta);

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($u-1, scrollDelta);

        scrollDelta = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u3 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>(scrollDelta);

        specialinvoke this.<androidx.core.widget.NestedScrollView: void doScrollY(int)>($u3);

     label2:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2, $u3;
        int $u4;
        boolean $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)>($u2, $u3, $u4, 0);

        return $u-1;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2, $u3;
        int $u4, $u5;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u4 = $u4 & 2;

        if $u4 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)>($u2, 0);

        return;
    }

    public void onStopNestedScroll(android.view.View, int)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2;
        int $u3;
        androidx.core.view.NestedScrollingParentHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $u0.<androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)>($u2, $u3);

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>($u3);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.MotionEvent $u26, $u-1#3;
        int $u-1, index, $u-1#36, $u-1#56, range, activePointerIndex1;
        float index#5, activePointerIndex#142, deltaY;
        boolean index#25, $u-1#110;
        android.widget.OverScroller initialVelocity;
        java.lang.StringBuilder index#43;
        java.lang.String $u-1#47;
        android.view.ViewParent $u-1#59;
        int[] initialVelocity#68, activePointerIndex;
        android.view.VelocityTracker index#114;
        android.widget.EdgeEffect range#138;

        this := @this: androidx.core.widget.NestedScrollView;

        $u26 := @parameter0: android.view.MotionEvent;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();

        $u-1 = virtualinvoke $u26.<android.view.MotionEvent: int getActionMasked()>();

        if $u-1 != 0 goto label01;

        this.<androidx.core.widget.NestedScrollView: int mNestedYOffset> = 0;

     label01:
        $u-1#3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($u26);

        index = this.<androidx.core.widget.NestedScrollView: int mNestedYOffset>;

        index#5 = (float) index;

        virtualinvoke $u-1#3.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, index#5);

        if $u-1 == 0 goto label26;

        if $u-1 == 1 goto label23;

        if $u-1 == 2 goto label06;

        if $u-1 == 3 goto label04;

        if $u-1 == 5 goto label03;

        if $u-1 == 6 goto label02;

        goto label30;

     label02:
        specialinvoke this.<androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>($u26);

        $u-1 = this.<androidx.core.widget.NestedScrollView: int mActivePointerId>;

        $u-1 = virtualinvoke $u26.<android.view.MotionEvent: int findPointerIndex(int)>($u-1);

        index#5 = virtualinvoke $u26.<android.view.MotionEvent: float getY(int)>($u-1);

        $u-1 = (int) index#5;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = $u-1;

        goto label30;

     label03:
        $u-1 = virtualinvoke $u26.<android.view.MotionEvent: int getActionIndex()>();

        index#5 = virtualinvoke $u26.<android.view.MotionEvent: float getY(int)>($u-1);

        index = (int) index#5;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = index;

        $u-1 = virtualinvoke $u26.<android.view.MotionEvent: int getPointerId(int)>($u-1);

        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = $u-1;

        goto label30;

     label04:
        index#25 = this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged>;

        if index#25 == 0 goto label05;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 <= 0 goto label05;

        initialVelocity = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        index = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#36 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        index#25 = virtualinvoke initialVelocity.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($u-1, index, 0, 0, 0, $u-1#36);

        if index#25 == 0 goto label05;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label05:
        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void endDrag()>();

        goto label30;

     label06:
        $u-1 = this.<androidx.core.widget.NestedScrollView: int mActivePointerId>;

        $u-1 = virtualinvoke $u26.<android.view.MotionEvent: int findPointerIndex(int)>($u-1);

        if $u-1 != -1 goto label07;

        index#43 = new java.lang.StringBuilder;

        specialinvoke index#43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke index#43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $u-1 = this.<androidx.core.widget.NestedScrollView: int mActivePointerId>;

        virtualinvoke index#43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u-1);

        virtualinvoke index#43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onTouchEvent");

        $u-1#47 = virtualinvoke index#43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $u-1#47);

        goto label30;

     label07:
        index#5 = virtualinvoke $u26.<android.view.MotionEvent: float getY(int)>($u-1);

        $u-1#36 = (int) index#5;

        index = this.<androidx.core.widget.NestedScrollView: int mLastMotionY>;

        index = index - $u-1#36;

        index#25 = this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged>;

        if index#25 != 0 goto label10;

        $u-1#56 = staticinvoke <java.lang.Math: int abs(int)>(index);

        range = this.<androidx.core.widget.NestedScrollView: int mTouchSlop>;

        if $u-1#56 <= range goto label10;

        $u-1#59 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if $u-1#59 == null goto label08;

        interfaceinvoke $u-1#59.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label08:
        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = 1;

        if index <= 0 goto label09;

        $u-1#56 = this.<androidx.core.widget.NestedScrollView: int mTouchSlop>;

        index = index - $u-1#56;

        goto label10;

     label09:
        $u-1#56 = this.<androidx.core.widget.NestedScrollView: int mTouchSlop>;

        index = index + $u-1#56;

        goto label10;

     label10:
        index#25 = this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged>;

        if index#25 == 0 goto label22;

        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        activePointerIndex = this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset>;

        index#25 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(0, index, initialVelocity#68, activePointerIndex, 0);

        if index#25 == 0 goto label11;

        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        $u-1#56 = initialVelocity#68[1];

        index = index - $u-1#56;

        $u-1#56 = this.<androidx.core.widget.NestedScrollView: int mNestedYOffset>;

        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset>;

        range = initialVelocity#68[1];

        $u-1#56 = $u-1#56 + range;

        this.<androidx.core.widget.NestedScrollView: int mNestedYOffset> = $u-1#56;

        goto label11;

     label11:
        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset>;

        $u-1#56 = initialVelocity#68[1];

        $u-1#36 = $u-1#36 - $u-1#56;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = $u-1#36;

        $u-1#56 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#36 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        range = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getOverScrollMode()>();

        if range == 0 goto label13;

        if range != 1 goto label12;

        if $u-1#36 <= 0 goto label12;

        goto label13;

     label12:
        index#25 = 0;

        goto label14;

     label13:
        index#25 = 1;

     label14:
        range = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#110 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>(0, index, 0, range, 0, $u-1#36, 0, 0, 1);

        if $u-1#110 == 0 goto label15;

        $u-1#110 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(0);

        if $u-1#110 != 0 goto label15;

        index#114 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke index#114.<android.view.VelocityTracker: void clear()>();

     label15:
        range = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        range = range - $u-1#56;

        activePointerIndex1 = index - range;

        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        initialVelocity#68[1] = 0;

        activePointerIndex = this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset>;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>(0, range, 0, activePointerIndex1, activePointerIndex, 0, initialVelocity#68);

        range = this.<androidx.core.widget.NestedScrollView: int mLastMotionY>;

        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollOffset>;

        activePointerIndex1 = initialVelocity#68[1];

        range = range - activePointerIndex1;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = range;

        range = this.<androidx.core.widget.NestedScrollView: int mNestedYOffset>;

        activePointerIndex1 = initialVelocity#68[1];

        range = range + activePointerIndex1;

        this.<androidx.core.widget.NestedScrollView: int mNestedYOffset> = range;

        if index#25 == 0 goto label21;

        initialVelocity#68 = this.<androidx.core.widget.NestedScrollView: int[] mScrollConsumed>;

        range = initialVelocity#68[1];

        index = index - range;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void ensureGlows()>();

        $u-1#56 = $u-1#56 + index;

        if $u-1#56 >= 0 goto label17;

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        index#5 = (float) index;

        index = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        activePointerIndex#142 = (float) index;

        index#5 = index#5 / activePointerIndex#142;

        activePointerIndex#142 = virtualinvoke $u26.<android.view.MotionEvent: float getX(int)>($u-1);

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getWidth()>();

        deltaY = (float) $u-1;

        activePointerIndex#142 = activePointerIndex#142 / deltaY;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>(range#138, index#5, activePointerIndex#142);

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        index#25 = virtualinvoke range#138.<android.widget.EdgeEffect: boolean isFinished()>();

        if index#25 != 0 goto label16;

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke range#138.<android.widget.EdgeEffect: void onRelease()>();

        goto label18;

     label16:
        goto label18;

     label17:
        if $u-1#56 <= $u-1#36 goto label18;

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        index#5 = (float) index;

        index = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        activePointerIndex#142 = (float) index;

        index#5 = index#5 / activePointerIndex#142;

        activePointerIndex#142 = virtualinvoke $u26.<android.view.MotionEvent: float getX(int)>($u-1);

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getWidth()>();

        deltaY = (float) $u-1;

        activePointerIndex#142 = activePointerIndex#142 / deltaY;

        activePointerIndex#142 = 1.0F - activePointerIndex#142;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>(range#138, index#5, activePointerIndex#142);

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        index#25 = virtualinvoke range#138.<android.widget.EdgeEffect: boolean isFinished()>();

        if index#25 != 0 goto label18;

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke range#138.<android.widget.EdgeEffect: void onRelease()>();

     label18:
        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if range#138 == null goto label20;

        index#25 = virtualinvoke range#138.<android.widget.EdgeEffect: boolean isFinished()>();

        if index#25 == 0 goto label19;

        range#138 = this.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        index#25 = virtualinvoke range#138.<android.widget.EdgeEffect: boolean isFinished()>();

        if index#25 != 0 goto label20;

     label19:
        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label20:
        goto label21;

     label21:
        goto label30;

     label22:
        goto label30;

     label23:
        index#114 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        $u-1 = this.<androidx.core.widget.NestedScrollView: int mMaximumVelocity>;

        index#5 = (float) $u-1;

        virtualinvoke index#114.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, index#5);

        $u-1 = this.<androidx.core.widget.NestedScrollView: int mActivePointerId>;

        index#5 = virtualinvoke index#114.<android.view.VelocityTracker: float getYVelocity(int)>($u-1);

        $u-1 = (int) index#5;

        index = staticinvoke <java.lang.Math: int abs(int)>($u-1);

        $u-1#36 = this.<androidx.core.widget.NestedScrollView: int mMinimumVelocity>;

        if index < $u-1#36 goto label24;

        index = neg $u-1;

        index#5 = (float) index;

        index#25 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>(0.0F, index#5);

        if index#25 != 0 goto label25;

        index = neg $u-1;

        index#5 = (float) index;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, index#5, 1);

        $u-1 = neg $u-1;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void fling(int)>($u-1);

        goto label25;

     label24:
        initialVelocity = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        index = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u-1#36 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        index#25 = virtualinvoke initialVelocity.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($u-1, index, 0, 0, 0, $u-1#36);

        if index#25 == 0 goto label25;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(this);

     label25:
        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void endDrag()>();

        goto label30;

     label26:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 != 0 goto label27;

        return 0;

     label27:
        initialVelocity = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        index#25 = virtualinvoke initialVelocity.<android.widget.OverScroller: boolean isFinished()>();

        index#25 = index#25 ^ 1;

        this.<androidx.core.widget.NestedScrollView: boolean mIsBeingDragged> = index#25;

        if index#25 == 0 goto label28;

        $u-1#59 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if $u-1#59 == null goto label28;

        interfaceinvoke $u-1#59.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label28:
        initialVelocity = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        index#25 = virtualinvoke initialVelocity.<android.widget.OverScroller: boolean isFinished()>();

        if index#25 != 0 goto label29;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void abortAnimatedScroll()>();

     label29:
        index#5 = virtualinvoke $u26.<android.view.MotionEvent: float getY()>();

        $u-1 = (int) index#5;

        this.<androidx.core.widget.NestedScrollView: int mLastMotionY> = $u-1;

        $u-1 = virtualinvoke $u26.<android.view.MotionEvent: int getPointerId(int)>(0);

        this.<androidx.core.widget.NestedScrollView: int mActivePointerId> = $u-1;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, 0);

     label30:
        index#114 = this.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if index#114 == null goto label31;

        virtualinvoke index#114.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($u-1#3);

     label31:
        virtualinvoke $u-1#3.<android.view.MotionEvent: void recycle()>();

        return 1;
    }

    boolean overScrollByCompat(int, int, int, int, int, int, int, int, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        int $u27, $u28, $u29, $u30, $u31, $u32, $u33, $u34, $u-1, $u-1#3, $u-1#5;
        boolean $u35, canScrollHorizontal, $u-1#30;
        android.widget.OverScroller overScrollMode;

        this := @this: androidx.core.widget.NestedScrollView;

        $u27 := @parameter0: int;

        $u28 := @parameter1: int;

        $u29 := @parameter2: int;

        $u30 := @parameter3: int;

        $u31 := @parameter4: int;

        $u32 := @parameter5: int;

        $u33 := @parameter6: int;

        $u34 := @parameter7: int;

        $u35 := @parameter8: boolean;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getOverScrollMode()>();

        $u-1#3 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()>();

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()>();

        if $u-1#3 <= $u-1#5 goto label01;

        canScrollHorizontal = 1;

        goto label02;

     label01:
        canScrollHorizontal = 0;

     label02:
        $u-1#3 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()>();

        $u-1#5 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()>();

        if $u-1#3 <= $u-1#5 goto label03;

        $u35 = 1;

        goto label04;

     label03:
        $u35 = 0;

     label04:
        if $u-1 == 0 goto label06;

        if $u-1 != 1 goto label05;

        if canScrollHorizontal == 0 goto label05;

        goto label06;

     label05:
        canScrollHorizontal = 0;

        goto label07;

     label06:
        canScrollHorizontal = 1;

     label07:
        if $u-1 == 0 goto label09;

        if $u-1 != 1 goto label08;

        if $u35 == 0 goto label08;

        goto label09;

     label08:
        $u35 = 0;

        goto label10;

     label09:
        $u35 = 1;

     label10:
        $u27 = $u29 + $u27;

        if canScrollHorizontal != 0 goto label11;

        $u33 = 0;

        goto label11;

     label11:
        $u28 = $u30 + $u28;

        if $u35 != 0 goto label12;

        $u30 = 0;

        goto label13;

     label12:
        $u30 = $u34;

     label13:
        $u29 = neg $u33;

        $u31 = $u33 + $u31;

        $u33 = neg $u30;

        $u30 = $u30 + $u32;

        if $u27 <= $u31 goto label14;

        $u27 = $u31;

        $u35 = 1;

        goto label16;

     label14:
        if $u27 >= $u29 goto label15;

        $u27 = $u29;

        $u35 = 1;

        goto label16;

     label15:
        $u35 = 0;

     label16:
        if $u28 <= $u30 goto label17;

        $u28 = $u30;

        canScrollHorizontal = 1;

        goto label19;

     label17:
        if $u28 >= $u33 goto label18;

        $u28 = $u33;

        canScrollHorizontal = 1;

        goto label19;

     label18:
        canScrollHorizontal = 0;

     label19:
        if canScrollHorizontal == 0 goto label20;

        $u-1#30 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(1);

        if $u-1#30 != 0 goto label20;

        overScrollMode = this.<androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $u29 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        virtualinvoke overScrollMode.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($u27, $u28, 0, 0, 0, $u29);

        goto label20;

     label20:
        virtualinvoke this.<androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>($u27, $u28, $u35, canScrollHorizontal);

        if $u35 != 0 goto label22;

        if canScrollHorizontal == 0 goto label21;

        goto label22;

     label21:
        return 0;

     label22:
        return 1;
    }

    public boolean pageScroll(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u9, $u7, $u-1, $u6;
        boolean down;
        android.graphics.Rect count;
        android.view.View $u-1#12;
        android.view.ViewGroup$LayoutParams $u-1#14;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u9 := @parameter0: int;

        if $u9 != 130 goto label1;

        down = 1;

        goto label2;

     label1:
        down = 0;

     label2:
        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        if down == 0 goto label4;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u7 = $u7 + $u-1;

        count.<android.graphics.Rect: int top> = $u7;

        $u7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u7 <= 0 goto label3;

        $u7 = $u7 + -1;

        $u-1#12 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>($u7);

        $u-1#14 = virtualinvoke $u-1#12.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#14;

        $u7 = virtualinvoke $u-1#12.<android.view.View: int getBottom()>();

        $u6 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u7 = $u7 + $u6;

        $u6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u7 = $u7 + $u6;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u6 = count.<android.graphics.Rect: int top>;

        $u6 = $u6 + $u-1;

        if $u6 <= $u7 goto label3;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u7 = $u7 - $u-1;

        count.<android.graphics.Rect: int top> = $u7;

     label3:
        goto label5;

     label4:
        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u7 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u7 = $u7 - $u-1;

        count.<android.graphics.Rect: int top> = $u7;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u7 = count.<android.graphics.Rect: int top>;

        if $u7 >= 0 goto label5;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        count.<android.graphics.Rect: int top> = 0;

     label5:
        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u7 = count.<android.graphics.Rect: int top>;

        $u-1 = $u7 + $u-1;

        count.<android.graphics.Rect: int bottom> = $u-1;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u-1 = count.<android.graphics.Rect: int top>;

        count = this.<androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $u7 = count.<android.graphics.Rect: int bottom>;

        down = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>($u9, $u-1, $u7);

        return down;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u2, $u3;
        boolean $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u0 = this.<androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty>;

        if $u0 != 0 goto label1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)>($u3);

        goto label2;

     label1:
        this.<androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo> = $u3;

     label2:
        specialinvoke this.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>($u2, $u3);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        android.view.View $u4;
        android.graphics.Rect $u5;
        boolean $u6;
        int $u-1, $u-1#3, $u-1#8;

        this := @this: androidx.core.widget.NestedScrollView;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: android.graphics.Rect;

        $u6 := @parameter2: boolean;

        $u-1 = virtualinvoke $u4.<android.view.View: int getLeft()>();

        $u-1#3 = virtualinvoke $u4.<android.view.View: int getScrollX()>();

        $u-1 = $u-1 - $u-1#3;

        $u-1#3 = virtualinvoke $u4.<android.view.View: int getTop()>();

        $u-1#8 = virtualinvoke $u4.<android.view.View: int getScrollY()>();

        $u-1#3 = $u-1#3 - $u-1#8;

        virtualinvoke $u5.<android.graphics.Rect: void offset(int,int)>($u-1, $u-1#3);

        $u6 = specialinvoke this.<androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>($u5, $u6);

        return $u6;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u1 := @parameter0: boolean;

        if $u1 == 0 goto label1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void recycleVelocityTracker()>();

     label1:
        specialinvoke this.<android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>($u1);

        return;
    }

    public void requestLayout()
    {
        androidx.core.widget.NestedScrollView this;

        this := @this: androidx.core.widget.NestedScrollView;

        this.<androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;

        specialinvoke this.<android.widget.FrameLayout: void requestLayout()>();

        return;
    }

    public void scrollTo(int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u8, $u9, $u-1, $u-1#13, parentSpaceVertical, $u-1#27, $u6;
        android.view.View $u-1#6;
        android.view.ViewGroup$LayoutParams $u-1#8;
        android.widget.FrameLayout$LayoutParams lp;

        this := @this: androidx.core.widget.NestedScrollView;

        $u8 := @parameter0: int;

        $u9 := @parameter1: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getChildCount()>();

        if $u-1 <= 0 goto label2;

        $u-1#6 = virtualinvoke this.<androidx.core.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $u-1#8 = virtualinvoke $u-1#6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (android.widget.FrameLayout$LayoutParams) $u-1#8;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getWidth()>();

        $u-1#13 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingLeft()>();

        $u-1 = $u-1 - $u-1#13;

        $u-1#13 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingRight()>();

        $u-1 = $u-1 - $u-1#13;

        $u-1#13 = virtualinvoke $u-1#6.<android.view.View: int getWidth()>();

        parentSpaceVertical = lp.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $u-1#13 = $u-1#13 + parentSpaceVertical;

        parentSpaceVertical = lp.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        $u-1#13 = $u-1#13 + parentSpaceVertical;

        parentSpaceVertical = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#27 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        parentSpaceVertical = parentSpaceVertical - $u-1#27;

        $u-1#27 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        parentSpaceVertical = parentSpaceVertical - $u-1#27;

        $u-1#27 = virtualinvoke $u-1#6.<android.view.View: int getHeight()>();

        $u6 = lp.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $u-1#27 = $u-1#27 + $u6;

        $u6 = lp.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $u-1#27 = $u-1#27 + $u6;

        $u8 = staticinvoke <androidx.core.widget.NestedScrollView: int clamp(int,int,int)>($u8, $u-1, $u-1#13);

        $u9 = staticinvoke <androidx.core.widget.NestedScrollView: int clamp(int,int,int)>($u9, parentSpaceVertical, $u-1#27);

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        if $u8 != $u-1 goto label1;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u9 == $u-1 goto label2;

     label1:
        specialinvoke this.<android.widget.FrameLayout: void scrollTo(int,int)>($u8, $u9);

     label2:
        return;
    }

    public void setFillViewport(boolean)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u2, $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.core.widget.NestedScrollView: boolean mFillViewport>;

        if $u2 == $u0 goto label1;

        this.<androidx.core.widget.NestedScrollView: boolean mFillViewport> = $u2;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void requestLayout()>();

     label1:
        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u2;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>($u2);

        return;
    }

    public void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
    {
        androidx.core.widget.NestedScrollView this;
        androidx.core.widget.NestedScrollView$OnScrollChangeListener $u1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u1 := @parameter0: androidx.core.widget.NestedScrollView$OnScrollChangeListener;

        this.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener> = $u1;

        return;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        androidx.core.widget.NestedScrollView this;
        boolean $u1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u1 := @parameter0: boolean;

        this.<androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = $u1;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.core.widget.NestedScrollView this;

        this := @this: androidx.core.widget.NestedScrollView;

        return 1;
    }

    public final void smoothScrollBy(int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u3, $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>($u3, $u4, 250, 0);

        return;
    }

    public final void smoothScrollBy(int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2, $u3, $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>($u2, $u3, $u4, 0);

        return;
    }

    public final void smoothScrollTo(int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u3, $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>($u3, $u4, 250, 0);

        return;
    }

    public final void smoothScrollTo(int, int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2, $u3, $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>($u2, $u3, $u4, 0);

        return;
    }

    void smoothScrollTo(int, int, int, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        int $u3, $u4, $u5, $u-1;
        boolean $u6;

        this := @this: androidx.core.widget.NestedScrollView;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        $u6 := @parameter3: boolean;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        $u3 = $u3 - $u-1;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u4 = $u4 - $u-1;

        specialinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>($u3, $u4, $u5, $u6);

        return;
    }

    void smoothScrollTo(int, int, boolean)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2, $u3;
        boolean $u4;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u4 := @parameter2: boolean;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>($u2, $u3, 250, $u4);

        return;
    }

    public boolean startNestedScroll(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2;
        boolean $u-1;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u-1 = virtualinvoke this.<androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>($u2, 0);

        return $u-1;
    }

    public boolean startNestedScroll(int, int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2, $u3;
        boolean $u-1;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>($u2, $u3);

        return $u-1;
    }

    public void stopNestedScroll()
    {
        androidx.core.widget.NestedScrollView this;

        this := @this: androidx.core.widget.NestedScrollView;

        virtualinvoke this.<androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>(0);

        return;
    }

    public void stopNestedScroll(int)
    {
        androidx.core.widget.NestedScrollView this;
        int $u2;
        androidx.core.view.NestedScrollingChildHelper $u0;

        this := @this: androidx.core.widget.NestedScrollView;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $u0.<androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)>($u2);

        return;
    }
}
