public class androidx.constraintlayout.solver.ArrayLinkedVariables extends java.lang.Object implements androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables
{
    private static final boolean DEBUG;
    private static final boolean FULL_NEW_CHECK;
    static final int NONE;
    private static float epsilon;
    private int ROW_SIZE;
    private androidx.constraintlayout.solver.SolverVariable candidate;
    int currentSize;
    private int[] mArrayIndices;
    private int[] mArrayNextIndices;
    private float[] mArrayValues;
    protected final androidx.constraintlayout.solver.Cache mCache;
    private boolean mDidFillOnce;
    private int mHead;
    private int mLast;
    private final androidx.constraintlayout.solver.ArrayRow mRow;

    static void <clinit>()
    {
        <androidx.constraintlayout.solver.ArrayLinkedVariables: int NONE> = -1;

        <androidx.constraintlayout.solver.ArrayLinkedVariables: boolean FULL_NEW_CHECK> = 0;

        <androidx.constraintlayout.solver.ArrayLinkedVariables: boolean DEBUG> = 0;

        <androidx.constraintlayout.solver.ArrayLinkedVariables: float epsilon> = 0.001F;

        return;
    }

    void <init>(androidx.constraintlayout.solver.ArrayRow, androidx.constraintlayout.solver.Cache)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.ArrayRow $u4;
        androidx.constraintlayout.solver.Cache $u5;
        int[] $u2;
        float[] $u1;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u4 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $u5 := @parameter1: androidx.constraintlayout.solver.Cache;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = 0;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE> = 8;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable candidate> = null;

        $u2 = newarray (int)[8];

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices> = $u2;

        $u2 = newarray (int)[8];

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices> = $u2;

        $u1 = newarray (float)[8];

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues> = $u1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow> = $u4;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.Cache mCache> = $u5;

        return;
    }

    public void add(androidx.constraintlayout.solver.SolverVariable, float, boolean)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.SolverVariable $u11;
        float $u12, current, v;
        boolean $u13;
        int $u9, current#5, $u2, counter, availableIndice;
        byte v#3;
        float[] current#8;
        int[] current#9;
        androidx.constraintlayout.solver.ArrayRow current#15;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u11 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u12 := @parameter1: float;

        $u13 := @parameter2: boolean;

        current = <androidx.constraintlayout.solver.ArrayLinkedVariables: float epsilon>;

        v = neg current;

        v#3 = $u12 cmpl v;

        if v#3 <= 0 goto label01;

        v#3 = $u12 cmpg current;

        if v#3 >= 0 goto label01;

        return;

     label01:
        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if current#5 != -1 goto label02;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = 0;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#8[0] = $u12;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        current#5 = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        current#9[0] = current#5;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        current#9[current#5] = -1;

        current#5 = $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        current#5 = current#5 + 1;

        $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = current#5;

        current#15 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke $u11.<androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)>(current#15);

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        current#5 = current#5 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = current#5;

        $u13 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $u13 != 0 goto label21;

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        current#5 = current#5 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#5;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u2 = lengthof current#9;

        if current#5 < $u2 goto label21;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

        current#5 = lengthof current#9;

        current#5 = current#5 - 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#5;

        return;

     label02:
        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        current#5 = -1;

        counter = 0;

     label03:
        if $u2 == -1 goto label11;

        $u9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u9 goto label11;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u9 = current#9[$u2];

        availableIndice = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u9 != availableIndice goto label09;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current = current#8[$u2];

        $u12 = current + $u12;

        current = <androidx.constraintlayout.solver.ArrayLinkedVariables: float epsilon>;

        v = neg current;

        v#3 = $u12 cmpl v;

        if v#3 <= 0 goto label04;

        v#3 = $u12 cmpg current;

        if v#3 >= 0 goto label04;

        $u12 = 0.0F;

     label04:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#8[$u2] = $u12;

        v#3 = $u12 cmpl 0.0F;

        if v#3 != 0 goto label21;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if $u2 != counter goto label05;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#5 = current#9[$u2];

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = current#5;

        goto label06;

     label05:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        counter = current#9[$u2];

        current#9[current#5] = counter;

     label06:
        if $u13 == 0 goto label07;

        current#15 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke $u11.<androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)>(current#15);

     label07:
        $u13 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $u13 == 0 goto label08;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = $u2;

     label08:
        current#5 = $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        current#5 = current#5 - 1;

        $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = current#5;

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        current#5 = current#5 - 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = current#5;

        return;

     label09:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u9 = current#9[$u2];

        availableIndice = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u9 >= availableIndice goto label10;

        current#5 = $u2;

     label10:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $u2 = current#9[$u2];

        counter = counter + 1;

        goto label03;

     label11:
        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        $u2 = counter + 1;

        $u13 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $u13 == 0 goto label13;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u2 = current#9[counter];

        if $u2 != -1 goto label12;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        goto label13;

     label12:
        $u2 = lengthof current#9;

     label13:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = lengthof current#9;

        if $u2 < counter goto label16;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        $u9 = lengthof current#9;

        if counter >= $u9 goto label16;

        counter = 0;

     label14:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u9 = lengthof current#9;

        if counter >= $u9 goto label16;

        $u9 = current#9[counter];

        if $u9 != -1 goto label15;

        $u2 = counter;

        goto label16;

     label15:
        counter = counter + 1;

        goto label14;

     label16:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = lengthof current#9;

        if $u2 < counter goto label17;

        $u2 = lengthof current#9;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE>;

        counter = counter * 2;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE> = counter;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        $u9 = $u2 + -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = $u9;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#8 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(current#8, counter);

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues> = current#8;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE>;

        current#9 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(current#9, counter);

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices> = current#9;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE>;

        current#9 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(current#9, counter);

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices> = current#9;

     label17:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        current#9[$u2] = counter;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#8[$u2] = $u12;

        if current#5 == -1 goto label18;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        counter = current#9[current#5];

        current#9[$u2] = counter;

        current#9[current#5] = $u2;

        goto label19;

     label18:
        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        current#9[$u2] = current#5;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = $u2;

     label19:
        current#5 = $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        current#5 = current#5 + 1;

        $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = current#5;

        current#15 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke $u11.<androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)>(current#15);

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        current#5 = current#5 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = current#5;

        $u13 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $u13 != 0 goto label20;

        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        current#5 = current#5 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#5;

     label20:
        current#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        current#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u2 = lengthof current#9;

        if current#5 < $u2 goto label21;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

        current#5 = lengthof current#9;

        current#5 = current#5 - 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#5;

     label21:
        return;
    }

    public final void clear()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int current, counter, $u3;
        androidx.constraintlayout.solver.Cache variable;
        androidx.constraintlayout.solver.SolverVariable[] variable#6;
        int[] $u3#7;
        androidx.constraintlayout.solver.SolverVariable variable#9;
        androidx.constraintlayout.solver.ArrayRow $u3#10;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label3;

        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u3 goto label3;

        variable = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.Cache mCache>;

        variable#6 = variable.<androidx.constraintlayout.solver.Cache: androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables>;

        $u3#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3 = $u3#7[current];

        variable#9 = variable#6[$u3];

        if variable#9 == null goto label2;

        $u3#10 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke variable#9.<androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)>($u3#10);

     label2:
        $u3#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u3#7[current];

        counter = counter + 1;

        goto label1;

     label3:
        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = 0;

        return;
    }

    public boolean contains(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.SolverVariable $u7;
        int $u5, current, counter, $u4#7;
        int[] $u4;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u7 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if current != -1 goto label1;

        return 0;

     label1:
        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label2:
        if current == -1 goto label4;

        $u5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u5 goto label4;

        $u4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u4#7 = $u4[current];

        $u5 = $u7.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u4#7 != $u5 goto label3;

        return 1;

     label3:
        $u4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u4[current];

        counter = counter + 1;

        goto label2;

     label4:
        return 0;
    }

    public void display()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int count, i;
        java.io.PrintStream $u3;
        androidx.constraintlayout.solver.SolverVariable $u-1;
        java.lang.StringBuilder $u4;
        float $u-1#8;
        java.lang.String $u-1#11;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        count = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        $u3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $u3.<java.io.PrintStream: void print(java.lang.String)>("{ ");

        i = 0;

     label1:
        if i >= count goto label4;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        if $u-1 != null goto label2;

        goto label3;

     label2:
        $u3 = <java.lang.System: java.io.PrintStream out>;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1);

        virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $u-1#8 = virtualinvoke this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float getVariableValue(int)>(i);

        virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u-1#8);

        virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $u-1#11 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u3.<java.io.PrintStream: void print(java.lang.String)>($u-1#11);

     label3:
        i = i + 1;

        goto label1;

     label4:
        $u3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $u3.<java.io.PrintStream: void println(java.lang.String)>(" }");

        return;
    }

    public void divideByAmount(float)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        float $u5, $u3;
        int current, counter, $u2;
        float[] $u2#5;
        int[] $u2#8;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u5 := @parameter0: float;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label2;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u2 goto label2;

        $u2#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u3 = $u2#5[current];

        $u3 = $u3 / $u5;

        $u2#5[current] = $u3;

        $u2#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u2#8[current];

        counter = counter + 1;

        goto label1;

     label2:
        return;
    }

    public final float get(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.SolverVariable $u5;
        int $u3, current, counter, $u2#6;
        int[] $u2;
        float[] $u2#7;
        float $u2#8;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u5 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label3;

        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u3 goto label3;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u2#6 = $u2[current];

        $u3 = $u5.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u2#6 != $u3 goto label2;

        $u2#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u2#8 = $u2#7[current];

        return $u2#8;

     label2:
        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u2[current];

        counter = counter + 1;

        goto label1;

     label3:
        return 0.0F;
    }

    public int getCurrentSize()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int ret0;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        ret0 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        return ret0;
    }

    public int getHead()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int ret0;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        ret0 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        return ret0;
    }

    public final int getId(int)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int $u2;
        int[] $u0;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u2 = $u0[$u2];

        return $u2;
    }

    public final int getNextIndice(int)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int $u2;
        int[] $u0;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $u2 = $u0[$u2];

        return $u2;
    }

    androidx.constraintlayout.solver.SolverVariable getPivotCandidate()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int $u5, current#2, counter, $u4#16;
        androidx.constraintlayout.solver.SolverVariable current, v#15;
        float[] v;
        float v#8;
        byte v#10;
        androidx.constraintlayout.solver.Cache v#11;
        androidx.constraintlayout.solver.SolverVariable[] v#12;
        int[] $u4;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable candidate>;

        if current != null goto label4;

        current#2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

        current = null;

     label1:
        if current#2 == -1 goto label4;

        $u5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u5 goto label4;

        v = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        v#8 = v[current#2];

        v#10 = v#8 cmpg 0.0F;

        if v#10 >= 0 goto label3;

        v#11 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.Cache mCache>;

        v#12 = v#11.<androidx.constraintlayout.solver.Cache: androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables>;

        $u4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u5 = $u4[current#2];

        v#15 = v#12[$u5];

        if current == null goto label2;

        $u4#16 = current.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        $u5 = v#15.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $u4#16 >= $u5 goto label3;

     label2:
        current = v#15;

     label3:
        $u4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#2 = $u4[current#2];

        counter = counter + 1;

        goto label1;

     label4:
        return current;
    }

    public final float getValue(int)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int $u2;
        float[] $u0;
        float $u0#2;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u0#2 = $u0[$u2];

        return $u0#2;
    }

    public androidx.constraintlayout.solver.SolverVariable getVariable(int)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int $u5, current, counter, $u2;
        androidx.constraintlayout.solver.Cache $u2#5;
        androidx.constraintlayout.solver.SolverVariable[] $u2#6;
        int[] $u3;
        androidx.constraintlayout.solver.SolverVariable $u2#9;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u5 := @parameter0: int;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label3;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u2 goto label3;

        if counter != $u5 goto label2;

        $u2#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.Cache mCache>;

        $u2#6 = $u2#5.<androidx.constraintlayout.solver.Cache: androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables>;

        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u5 = $u3[current];

        $u2#9 = $u2#6[$u5];

        return $u2#9;

     label2:
        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u3[current];

        counter = counter + 1;

        goto label1;

     label3:
        return null;
    }

    public float getVariableValue(int)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int $u4, current, counter, $u2;
        float[] $u2#5;
        float $u2#6;
        int[] $u2#7;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u4 := @parameter0: int;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label3;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u2 goto label3;

        if counter != $u4 goto label2;

        $u2#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u2#6 = $u2#5[current];

        return $u2#6;

     label2:
        $u2#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u2#7[current];

        counter = counter + 1;

        goto label1;

     label3:
        return 0.0F;
    }

    boolean hasAtLeastOnePositiveVariable()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int current, counter, $u2;
        float[] $u2#5;
        float $u2#6;
        byte $u2#7;
        int[] $u2#9;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label3;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u2 goto label3;

        $u2#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u2#6 = $u2#5[current];

        $u2#7 = $u2#6 cmpl 0.0F;

        if $u2#7 <= 0 goto label2;

        return 1;

     label2:
        $u2#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u2#9[current];

        counter = counter + 1;

        goto label1;

     label3:
        return 0;
    }

    public int indexOf(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.SolverVariable $u6;
        int $u4, current, counter, $u3#6;
        int[] $u3;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u6 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if current != -1 goto label1;

        return -1;

     label1:
        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label2:
        if current == -1 goto label4;

        $u4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u4 goto label4;

        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3#6 = $u3[current];

        $u4 = $u6.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u3#6 != $u4 goto label3;

        return current;

     label3:
        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u3[current];

        counter = counter + 1;

        goto label2;

     label4:
        return -1;
    }

    public void invert()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int current, counter, $u2;
        float[] $u2#5;
        float $u3;
        int[] $u2#8;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label2;

        $u2 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u2 goto label2;

        $u2#5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u3 = $u2#5[current];

        $u3 = $u3 * -1.0F;

        $u2#5[current] = $u3;

        $u2#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u2#8[current];

        counter = counter + 1;

        goto label1;

     label2:
        return;
    }

    public final void put(androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.SolverVariable $u11;
        float $u12;
        int $u9, current#4, $u3, counter, availableIndice;
        byte current;
        float[] current#7;
        int[] current#8;
        androidx.constraintlayout.solver.ArrayRow current#14;
        boolean current#17;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u11 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u12 := @parameter1: float;

        current = $u12 cmpl 0.0F;

        if current != 0 goto label01;

        virtualinvoke this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)>($u11, 1);

        return;

     label01:
        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if current#4 != -1 goto label02;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = 0;

        current#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#7[0] = $u12;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        current#4 = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        current#8[0] = current#4;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        current#8[current#4] = -1;

        current#4 = $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        current#4 = current#4 + 1;

        $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = current#4;

        current#14 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke $u11.<androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)>(current#14);

        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        current#4 = current#4 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = current#4;

        current#17 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if current#17 != 0 goto label17;

        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        current#4 = current#4 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#4;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3 = lengthof current#8;

        if current#4 < $u3 goto label17;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

        current#4 = lengthof current#8;

        current#4 = current#4 - 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#4;

        return;

     label02:
        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        current#4 = -1;

        counter = 0;

     label03:
        if $u3 == -1 goto label06;

        $u9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u9 goto label06;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u9 = current#8[$u3];

        availableIndice = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u9 != availableIndice goto label04;

        current#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#7[$u3] = $u12;

        return;

     label04:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u9 = current#8[$u3];

        availableIndice = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if $u9 >= availableIndice goto label05;

        current#4 = $u3;

     label05:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $u3 = current#8[$u3];

        counter = counter + 1;

        goto label03;

     label06:
        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        $u3 = counter + 1;

        current#17 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if current#17 == 0 goto label08;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3 = current#8[counter];

        if $u3 != -1 goto label07;

        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        goto label08;

     label07:
        $u3 = lengthof current#8;

     label08:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = lengthof current#8;

        if $u3 < counter goto label11;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        $u9 = lengthof current#8;

        if counter >= $u9 goto label11;

        counter = 0;

     label09:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u9 = lengthof current#8;

        if counter >= $u9 goto label11;

        $u9 = current#8[counter];

        if $u9 != -1 goto label10;

        $u3 = counter;

        goto label11;

     label10:
        counter = counter + 1;

        goto label09;

     label11:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = lengthof current#8;

        if $u3 < counter goto label12;

        $u3 = lengthof current#8;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE>;

        counter = counter * 2;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE> = counter;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        $u9 = $u3 + -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = $u9;

        current#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#7 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(current#7, counter);

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues> = current#7;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE>;

        current#8 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(current#8, counter);

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices> = current#8;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int ROW_SIZE>;

        current#8 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(current#8, counter);

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices> = current#8;

     label12:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        counter = $u11.<androidx.constraintlayout.solver.SolverVariable: int id>;

        current#8[$u3] = counter;

        current#7 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        current#7[$u3] = $u12;

        if current#4 == -1 goto label13;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        counter = current#8[current#4];

        current#8[$u3] = counter;

        current#8[current#4] = $u3;

        goto label14;

     label13:
        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        current#8[$u3] = current#4;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = $u3;

     label14:
        current#4 = $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        current#4 = current#4 + 1;

        $u11.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = current#4;

        current#14 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke $u11.<androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)>(current#14);

        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        current#4 = current#4 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = current#4;

        current#17 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if current#17 != 0 goto label15;

        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        current#4 = current#4 + 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#4;

     label15:
        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3 = lengthof current#8;

        if current#4 < $u3 goto label16;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

     label16:
        current#4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast>;

        current#8 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3 = lengthof current#8;

        if current#4 < $u3 goto label17;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

        current#4 = lengthof current#8;

        current#4 = current#4 - 1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#4;

     label17:
        return;
    }

    public final float remove(androidx.constraintlayout.solver.SolverVariable, boolean)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.SolverVariable $u8, current;
        boolean $u9;
        int current#3, previous, counter, idx, $u6;
        int[] idx#9;
        androidx.constraintlayout.solver.ArrayRow $u1;
        float[] $u1#24;
        float $u1#25;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u8 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u9 := @parameter1: boolean;

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable candidate>;

        if current != $u8 goto label1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable candidate> = null;

     label1:
        current#3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if current#3 != -1 goto label2;

        return 0.0F;

     label2:
        current#3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        previous = -1;

        counter = 0;

     label3:
        if current#3 == -1 goto label9;

        idx = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= idx goto label9;

        idx#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        idx = idx#9[current#3];

        $u6 = $u8.<androidx.constraintlayout.solver.SolverVariable: int id>;

        if idx != $u6 goto label8;

        counter = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        if current#3 != counter goto label4;

        idx#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        previous = idx#9[current#3];

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead> = previous;

        goto label5;

     label4:
        idx#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        counter = idx#9[current#3];

        idx#9[previous] = counter;

     label5:
        if $u9 == 0 goto label6;

        $u1 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.ArrayRow mRow>;

        virtualinvoke $u8.<androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)>($u1);

     label6:
        previous = $u8.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        previous = previous + -1;

        $u8.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = previous;

        previous = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        previous = previous + -1;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize> = previous;

        idx#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        idx#9[current#3] = -1;

        $u9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $u9 == 0 goto label7;

        this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mLast> = current#3;

     label7:
        $u1#24 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u1#25 = $u1#24[current#3];

        return $u1#25;

     label8:
        previous = current#3;

        idx#9 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current#3 = idx#9[current#3];

        counter = counter + 1;

        goto label3;

     label9:
        return 0.0F;
    }

    public int sizeInBytes()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        int[] $u1;
        int $u1#3;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u1 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u1#3 = lengthof $u1;

        $u1#3 = $u1#3 * 4;

        $u1#3 = $u1#3 * 3;

        $u1#3 = $u1#3 + 36;

        return $u1#3;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        java.lang.String result;
        int current, counter, $u3;
        java.lang.StringBuilder $u3#6;
        float[] $u4;
        float $u4#12;
        androidx.constraintlayout.solver.Cache $u4#17;
        androidx.constraintlayout.solver.SolverVariable[] $u4#18;
        int[] $u5;
        androidx.constraintlayout.solver.SolverVariable $u4#21;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        result = "";

        current = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int mHead>;

        counter = 0;

     label1:
        if current == -1 goto label2;

        $u3 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if counter >= $u3 goto label2;

        $u3#6 = new java.lang.StringBuilder;

        specialinvoke $u3#6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(result);

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        result = virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.String toString()>();

        $u3#6 = new java.lang.StringBuilder;

        specialinvoke $u3#6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(result);

        $u4 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $u4#12 = $u4[current];

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u4#12);

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        result = virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.String toString()>();

        $u3#6 = new java.lang.StringBuilder;

        specialinvoke $u3#6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(result);

        $u4#17 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.Cache mCache>;

        $u4#18 = $u4#17.<androidx.constraintlayout.solver.Cache: androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables>;

        $u5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $u3 = $u5[current];

        $u4#21 = $u4#18[$u3];

        virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u4#21);

        result = virtualinvoke $u3#6.<java.lang.StringBuilder: java.lang.String toString()>();

        $u5 = this.<androidx.constraintlayout.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        current = $u5[current];

        counter = counter + 1;

        goto label1;

     label2:
        return result;
    }

    public float use(androidx.constraintlayout.solver.ArrayRow, boolean)
    {
        androidx.constraintlayout.solver.ArrayLinkedVariables this;
        androidx.constraintlayout.solver.ArrayRow $u8;
        boolean $u9;
        float $u6, $u-1;
        androidx.constraintlayout.solver.SolverVariable value;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables definitionVariables;
        int $u-1#6, i;

        this := @this: androidx.constraintlayout.solver.ArrayLinkedVariables;

        $u8 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $u9 := @parameter1: boolean;

        value = $u8.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float get(androidx.constraintlayout.solver.SolverVariable)>(value);

        value = $u8.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        virtualinvoke this.<androidx.constraintlayout.solver.ArrayLinkedVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)>(value, $u9);

        definitionVariables = $u8.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#6 = interfaceinvoke definitionVariables.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        i = 0;

     label1:
        if i >= $u-1#6 goto label2;

        value = interfaceinvoke definitionVariables.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        $u6 = interfaceinvoke definitionVariables.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float get(androidx.constraintlayout.solver.SolverVariable)>(value);

        $u6 = $u6 * $u-1;

        virtualinvoke this.<androidx.constraintlayout.solver.ArrayLinkedVariables: void add(androidx.constraintlayout.solver.SolverVariable,float,boolean)>(value, $u6, $u9);

        i = i + 1;

        goto label1;

     label2:
        return $u-1;
    }
}
