class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer extends java.lang.Object
{
    private static final android.graphics.Matrix IDENTITY_MATRIX;
    float mBaseHeight;
    float mBaseWidth;
    private int mChangingConfigurations;
    android.graphics.Paint mFillPaint;
    private final android.graphics.Matrix mFinalPathMatrix;
    java.lang.Boolean mIsStateful;
    private final android.graphics.Path mPath;
    private android.graphics.PathMeasure mPathMeasure;
    private final android.graphics.Path mRenderPath;
    int mRootAlpha;
    final androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup;
    java.lang.String mRootName;
    android.graphics.Paint mStrokePaint;
    final androidx.collection.ArrayMap mVGTargetsMap;
    float mViewportHeight;
    float mViewportWidth;

    static void <clinit>()
    {
        android.graphics.Matrix $u0;

        $u0 = new android.graphics.Matrix;

        specialinvoke $u0.<android.graphics.Matrix: void <init>()>();

        <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX> = $u0;

        return;
    }

    public void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        android.graphics.Matrix $u0;
        androidx.collection.ArrayMap $u0#5;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u0#6;
        android.graphics.Path $u0#7;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new android.graphics.Matrix;

        specialinvoke $u0.<android.graphics.Matrix: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $u0;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = 255;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = null;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = null;

        $u0#5 = new androidx.collection.ArrayMap;

        specialinvoke $u0#5.<androidx.collection.ArrayMap: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap> = $u0#5;

        $u0#6 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        specialinvoke $u0#6.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup> = $u0#6;

        $u0#7 = new android.graphics.Path;

        specialinvoke $u0#7.<android.graphics.Path: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath> = $u0#7;

        $u0#7 = new android.graphics.Path;

        specialinvoke $u0#7.<android.graphics.Path: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath> = $u0#7;

        return;
    }

    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this, $u4;
        androidx.collection.ArrayMap $u2;
        android.graphics.Matrix $u0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u0#6, $u1;
        android.graphics.Path $u0#8, $u1#9;
        float $u0#12;
        int $u0#16;
        java.lang.String $u0#18;
        java.lang.Boolean $u0#21;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u4 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new android.graphics.Matrix;

        specialinvoke $u0.<android.graphics.Matrix: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $u0;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = 0.0F;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = 255;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = null;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = null;

        $u2 = new androidx.collection.ArrayMap;

        specialinvoke $u2.<androidx.collection.ArrayMap: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap> = $u2;

        $u0#6 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $u1 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $u2 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap>;

        specialinvoke $u0#6.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)>($u1, $u2);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup> = $u0#6;

        $u0#8 = new android.graphics.Path;

        $u1#9 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        specialinvoke $u0#8.<android.graphics.Path: void <init>(android.graphics.Path)>($u1#9);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath> = $u0#8;

        $u0#8 = new android.graphics.Path;

        $u1#9 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        specialinvoke $u0#8.<android.graphics.Path: void <init>(android.graphics.Path)>($u1#9);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath> = $u0#8;

        $u0#12 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = $u0#12;

        $u0#12 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = $u0#12;

        $u0#12 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = $u0#12;

        $u0#12 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = $u0#12;

        $u0#16 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations> = $u0#16;

        $u0#16 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = $u0#16;

        $u0#18 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = $u0#18;

        $u0#18 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        if $u0#18 == null goto label1;

        $u2 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap>;

        virtualinvoke $u2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u0#18, this);

     label1:
        $u0#21 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = $u0#21;

        return;
    }

    private static float cross(float, float, float, float)
    {
        float $u2, $u3, $u4, $u5;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u5 := @parameter3: float;

        $u2 = $u2 * $u5;

        $u3 = $u3 * $u4;

        $u2 = $u2 - $u3;

        return $u2;
    }

    private void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, android.graphics.Matrix, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u19, childGroup#16;
        android.graphics.Matrix $u20, childGroup;
        android.graphics.Canvas $u21;
        int $u22, $u23, i, $u-1;
        android.graphics.ColorFilter $u24;
        java.util.ArrayList childGroup#6;
        java.lang.Object $u-1#10;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject child;
        boolean childGroup#14;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath childPath;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u19 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $u20 := @parameter1: android.graphics.Matrix;

        $u21 := @parameter2: android.graphics.Canvas;

        $u22 := @parameter3: int;

        $u23 := @parameter4: int;

        $u24 := @parameter5: android.graphics.ColorFilter;

        childGroup = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        virtualinvoke childGroup.<android.graphics.Matrix: void set(android.graphics.Matrix)>($u20);

        $u20 = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        childGroup = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix>;

        virtualinvoke $u20.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>(childGroup);

        virtualinvoke $u21.<android.graphics.Canvas: int save()>();

        i = 0;

     label1:
        childGroup#6 = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren>;

        $u-1 = virtualinvoke childGroup#6.<java.util.ArrayList: int size()>();

        if i >= $u-1 goto label4;

        childGroup#6 = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren>;

        $u-1#10 = virtualinvoke childGroup#6.<java.util.ArrayList: java.lang.Object get(int)>(i);

        child = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject) $u-1#10;

        childGroup#14 = child instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        if childGroup#14 == 0 goto label2;

        childGroup#16 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup) child;

        $u20 = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>(childGroup#16, $u20, $u21, $u22, $u23, $u24);

        goto label3;

     label2:
        childGroup#14 = child instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        if childGroup#14 == 0 goto label3;

        childPath = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) child;

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($u19, childPath, $u21, $u22, $u23, $u24);

        goto label3;

     label3:
        i = i + 1;

        goto label1;

     label4:
        virtualinvoke $u21.<android.graphics.Canvas: void restore()>();

        return;
    }

    private void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u19;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $u20;
        android.graphics.Canvas $u21;
        int $u22, $u23;
        android.graphics.ColorFilter $u24;
        android.graphics.Matrix groupStackedMatrix, matrixScale;
        float scaleX, $u6, minScale, end, len;
        byte path;
        android.graphics.Path path#18, fullPath;
        boolean $u-1;
        android.graphics.Path$FillType fullPath#25;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath fullPath#31;
        android.graphics.PathMeasure len#46;
        androidx.core.content.res.ComplexColorCompat len#68;
        android.graphics.Paint start;
        android.graphics.Paint$Style scaleX#76;
        android.graphics.Shader $u-1#80;
        android.graphics.Paint$Join end#107;
        android.graphics.Paint$Cap end#109;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u19 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $u20 := @parameter1: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $u21 := @parameter2: android.graphics.Canvas;

        $u22 := @parameter3: int;

        $u23 := @parameter4: int;

        $u24 := @parameter5: android.graphics.ColorFilter;

        scaleX = (float) $u22;

        $u6 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth>;

        $u6 = scaleX / $u6;

        scaleX = (float) $u23;

        minScale = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight>;

        minScale = scaleX / minScale;

        scaleX = staticinvoke <java.lang.Math: float min(float,float)>($u6, minScale);

        groupStackedMatrix = $u19.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        matrixScale = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke matrixScale.<android.graphics.Matrix: void set(android.graphics.Matrix)>(groupStackedMatrix);

        matrixScale = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke matrixScale.<android.graphics.Matrix: boolean postScale(float,float)>($u6, minScale);

        $u6 = specialinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)>(groupStackedMatrix);

        path = $u6 cmpl 0.0F;

        if path != 0 goto label01;

        return;

     label01:
        path#18 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke $u20.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)>(path#18);

        path#18 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        fullPath = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke fullPath.<android.graphics.Path: void reset()>();

        $u-1 = virtualinvoke $u20.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()>();

        if $u-1 == 0 goto label04;

        fullPath = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $u22 = $u20.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mFillRule>;

        if $u22 != 0 goto label02;

        fullPath#25 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        goto label03;

     label02:
        fullPath#25 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

     label03:
        virtualinvoke fullPath.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>(fullPath#25);

        fullPath = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        groupStackedMatrix = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke fullPath.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(path#18, groupStackedMatrix);

        path#18 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $u21.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>(path#18);

        return;

     label04:
        fullPath#31 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) $u20;

        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        path = minScale cmpl 0.0F;

        if path != 0 goto label06;

        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        path = minScale cmpl 1.0F;

        if path == 0 goto label05;

        goto label06;

     label05:
        goto label10;

     label06:
        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        end = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        minScale = minScale + end;

        minScale = minScale % 1.0F;

        end = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        len = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        end = end + len;

        len = end % 1.0F;

        len#46 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        if len#46 != null goto label07;

        len#46 = new android.graphics.PathMeasure;

        specialinvoke len#46.<android.graphics.PathMeasure: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure> = len#46;

     label07:
        len#46 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        fullPath = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke len#46.<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>(fullPath, 0);

        len#46 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        end = virtualinvoke len#46.<android.graphics.PathMeasure: float getLength()>();

        minScale = minScale * end;

        len = len * end;

        virtualinvoke path#18.<android.graphics.Path: void reset()>();

        path = minScale cmpl len;

        if path <= 0 goto label08;

        len#46 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke len#46.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(minScale, end, path#18, 1);

        len#46 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke len#46.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(0.0F, len, path#18, 1);

        goto label09;

     label08:
        len#46 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke len#46.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(minScale, len, path#18, 1);

     label09:
        virtualinvoke path#18.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F);

     label10:
        fullPath = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        groupStackedMatrix = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke fullPath.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(path#18, groupStackedMatrix);

        len#68 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor>;

        $u-1 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: boolean willDraw()>();

        if $u-1 == 0 goto label16;

        len#68 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor>;

        start = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        if start != null goto label11;

        start = new android.graphics.Paint;

        specialinvoke start.<android.graphics.Paint: void <init>(int)>(1);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint> = start;

        scaleX#76 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke start.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>(scaleX#76);

     label11:
        start = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        $u-1 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: boolean isGradient()>();

        if $u-1 == 0 goto label12;

        $u-1#80 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()>();

        groupStackedMatrix = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $u-1#80.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(groupStackedMatrix);

        virtualinvoke start.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($u-1#80);

        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        minScale = minScale * 255.0F;

        $u22 = staticinvoke <java.lang.Math: int round(float)>(minScale);

        virtualinvoke start.<android.graphics.Paint: void setAlpha(int)>($u22);

        goto label13;

     label12:
        virtualinvoke start.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

        virtualinvoke start.<android.graphics.Paint: void setAlpha(int)>(255);

        $u22 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: int getColor()>();

        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        $u22 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($u22, minScale);

        virtualinvoke start.<android.graphics.Paint: void setColor(int)>($u22);

     label13:
        virtualinvoke start.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($u24);

        path#18 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $u22 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule>;

        if $u22 != 0 goto label14;

        fullPath#25 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        goto label15;

     label14:
        fullPath#25 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

     label15:
        virtualinvoke path#18.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>(fullPath#25);

        path#18 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $u21.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(path#18, start);

     label16:
        len#68 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor>;

        $u-1 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: boolean willDraw()>();

        if $u-1 == 0 goto label22;

        len#68 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor>;

        start = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        if start != null goto label17;

        start = new android.graphics.Paint;

        specialinvoke start.<android.graphics.Paint: void <init>(int)>(1);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint> = start;

        scaleX#76 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke start.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>(scaleX#76);

     label17:
        start = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        end#107 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        if end#107 == null goto label18;

        end#107 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        virtualinvoke start.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>(end#107);

     label18:
        end#109 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        if end#109 == null goto label19;

        end#109 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        virtualinvoke start.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>(end#109);

     label19:
        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit>;

        virtualinvoke start.<android.graphics.Paint: void setStrokeMiter(float)>(minScale);

        $u-1 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: boolean isGradient()>();

        if $u-1 == 0 goto label20;

        $u-1#80 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()>();

        groupStackedMatrix = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $u-1#80.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(groupStackedMatrix);

        virtualinvoke start.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($u-1#80);

        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        minScale = minScale * 255.0F;

        $u22 = staticinvoke <java.lang.Math: int round(float)>(minScale);

        virtualinvoke start.<android.graphics.Paint: void setAlpha(int)>($u22);

        goto label21;

     label20:
        virtualinvoke start.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

        virtualinvoke start.<android.graphics.Paint: void setAlpha(int)>(255);

        $u22 = virtualinvoke len#68.<androidx.core.content.res.ComplexColorCompat: int getColor()>();

        minScale = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        $u22 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($u22, minScale);

        virtualinvoke start.<android.graphics.Paint: void setColor(int)>($u22);

     label21:
        virtualinvoke start.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($u24);

        scaleX = scaleX * $u6;

        $u6 = fullPath#31.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth>;

        scaleX = $u6 * scaleX;

        virtualinvoke start.<android.graphics.Paint: void setStrokeWidth(float)>(scaleX);

        path#18 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $u21.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(path#18, start);

     label22:
        return;
    }

    private float getMatrixScale(android.graphics.Matrix)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        android.graphics.Matrix $u11;
        float[] unitVectors;
        float scaleX, scaleY#13, crossProduct, matrixScale, maxScale, $u6;
        double scaleX#5, scaleY;
        byte $u6#30;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u11 := @parameter0: android.graphics.Matrix;

        unitVectors = newarray (float)[4];

        unitVectors[0] = 0.0F;

        unitVectors[1] = 1.0F;

        unitVectors[2] = 1.0F;

        unitVectors[3] = 0.0F;

        virtualinvoke $u11.<android.graphics.Matrix: void mapVectors(float[])>(unitVectors);

        scaleX = unitVectors[0];

        scaleX#5 = (double) scaleX;

        scaleX = unitVectors[1];

        scaleY = (double) scaleX;

        scaleX#5 = staticinvoke <java.lang.Math: double hypot(double,double)>(scaleX#5, scaleY);

        scaleX = (float) scaleX#5;

        scaleY#13 = unitVectors[2];

        scaleX#5 = (double) scaleY#13;

        scaleY#13 = unitVectors[3];

        scaleY = (double) scaleY#13;

        scaleX#5 = staticinvoke <java.lang.Math: double hypot(double,double)>(scaleX#5, scaleY);

        scaleY#13 = (float) scaleX#5;

        crossProduct = unitVectors[0];

        matrixScale = unitVectors[1];

        maxScale = unitVectors[2];

        $u6 = unitVectors[3];

        crossProduct = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)>(crossProduct, matrixScale, maxScale, $u6);

        scaleX = staticinvoke <java.lang.Math: float max(float,float)>(scaleX, scaleY#13);

        $u6#30 = scaleX cmpl 0.0F;

        if $u6#30 <= 0 goto label1;

        scaleY#13 = staticinvoke <java.lang.Math: float abs(float)>(crossProduct);

        scaleX = scaleY#13 / scaleX;

        return scaleX;

     label1:
        return 0.0F;
    }

    public void draw(android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        android.graphics.Canvas $u8;
        int $u9, $u10;
        android.graphics.ColorFilter $u11;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u1;
        android.graphics.Matrix $u2;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u8 := @parameter0: android.graphics.Canvas;

        $u9 := @parameter1: int;

        $u10 := @parameter2: int;

        $u11 := @parameter3: android.graphics.ColorFilter;

        $u1 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $u2 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX>;

        specialinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($u1, $u2, $u8, $u9, $u10, $u11);

        return;
    }

    public float getAlpha()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        int $u-1;
        float $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u-1 = virtualinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        $u0 = (float) $u-1;

        $u0 = $u0 / 255.0F;

        return $u0;
    }

    public int getRootAlpha()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        int ret0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        ret0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha>;

        return ret0;
    }

    public boolean isStateful()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        java.lang.Boolean $u0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u0#2;
        boolean $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful>;

        if $u0 != null goto label1;

        $u0#2 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $u-1 = virtualinvoke $u0#2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()>();

        $u0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($u-1);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = $u0;

     label1:
        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful>;

        $u-1 = virtualinvoke $u0.<java.lang.Boolean: boolean booleanValue()>();

        return $u-1;
    }

    public boolean onStateChanged(int[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        int[] $u2;
        boolean $u-1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u2 := @parameter0: int[];

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $u-1 = virtualinvoke $u0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])>($u2);

        return $u-1;
    }

    public void setAlpha(float)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        float $u2;
        int $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u2 := @parameter0: float;

        $u2 = 255.0F * $u2;

        $u0 = (int) $u2;

        virtualinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>($u0);

        return;
    }

    public void setRootAlpha(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer this;
        int $u1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u1 := @parameter0: int;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = $u1;

        return;
    }
}
