class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState extends android.graphics.drawable.Drawable$ConstantState
{
    boolean mAutoMirrored;
    boolean mCacheDirty;
    boolean mCachedAutoMirrored;
    android.graphics.Bitmap mCachedBitmap;
    int mCachedRootAlpha;
    int[] mCachedThemeAttrs;
    android.content.res.ColorStateList mCachedTint;
    android.graphics.PorterDuff$Mode mCachedTintMode;
    int mChangingConfigurations;
    android.graphics.Paint mTempPaint;
    android.content.res.ColorStateList mTint;
    android.graphics.PorterDuff$Mode mTintMode;
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer;

    public void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        android.graphics.PorterDuff$Mode $u0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u0#3;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        specialinvoke this.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint> = null;

        $u0 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode> = $u0;

        $u0#3 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke $u0#3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer> = $u0#3;

        return;
    }

    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this, $u4;
        android.graphics.PorterDuff$Mode $u0;
        int $u0#3;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u0#4, $u1;
        android.graphics.Paint $u0#7, $u2;
        android.content.res.ColorStateList $u0#18;
        boolean $u0#20;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u4 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        specialinvoke this.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint> = null;

        $u0 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode> = $u0;

        if $u4 == null goto label3;

        $u0#3 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations> = $u0#3;

        $u0#4 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $u1 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        specialinvoke $u0#4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)>($u1);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer> = $u0#4;

        $u0#4 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u0#7 = $u0#4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        if $u0#7 == null goto label1;

        $u0#4 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u0#7 = new android.graphics.Paint;

        $u1 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u2 = $u1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        specialinvoke $u0#7.<android.graphics.Paint: void <init>(android.graphics.Paint)>($u2);

        $u0#4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint> = $u0#7;

     label1:
        $u0#4 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u0#7 = $u0#4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        if $u0#7 == null goto label2;

        $u0#4 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u0#7 = new android.graphics.Paint;

        $u1 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u2 = $u1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        specialinvoke $u0#7.<android.graphics.Paint: void <init>(android.graphics.Paint)>($u2);

        $u0#4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint> = $u0#7;

     label2:
        $u0#18 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint> = $u0#18;

        $u0 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode> = $u0;

        $u0#20 = $u4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored> = $u0#20;

     label3:
        return;
    }

    public boolean canReuseBitmap(int, int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int $u2, $u3, $u-1;
        android.graphics.Bitmap $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap>;

        $u-1 = virtualinvoke $u0.<android.graphics.Bitmap: int getWidth()>();

        if $u2 != $u-1 goto label1;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap>;

        $u2 = virtualinvoke $u0.<android.graphics.Bitmap: int getHeight()>();

        if $u3 != $u2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canReuseCache()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int $u-1, $u0#8;
        boolean $u0, $u1#7;
        android.content.res.ColorStateList $u0#2, $u1;
        android.graphics.PorterDuff$Mode $u0#4, $u1#5;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u1#9;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty>;

        if $u0 != 0 goto label1;

        $u0#2 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint>;

        $u1 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint>;

        if $u0#2 != $u1 goto label1;

        $u0#4 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode>;

        $u1#5 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode>;

        if $u0#4 != $u1#5 goto label1;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored>;

        $u1#7 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored>;

        if $u0 != $u1#7 goto label1;

        $u0#8 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha>;

        $u1#9 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u-1 = virtualinvoke $u1#9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        if $u0#8 != $u-1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void createCachedBitmapIfNeeded(int, int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int $u2, $u3;
        android.graphics.Bitmap $u0;
        boolean $u-1;
        android.graphics.Bitmap$Config $u0#4;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)>($u2, $u3);

        if $u-1 != 0 goto label2;

     label1:
        $u0#4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $u0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($u2, $u3, $u0#4);

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap> = $u0;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty> = 1;

     label2:
        return;
    }

    public void drawCachedBitmapWithRootAlpha(android.graphics.Canvas, android.graphics.ColorFilter, android.graphics.Rect)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        android.graphics.Canvas $u4;
        android.graphics.ColorFilter $u5;
        android.graphics.Rect $u6;
        android.graphics.Bitmap $u1;
        android.graphics.Paint $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u4 := @parameter0: android.graphics.Canvas;

        $u5 := @parameter1: android.graphics.ColorFilter;

        $u6 := @parameter2: android.graphics.Rect;

        $u-1 = virtualinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)>($u5);

        $u1 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap>;

        virtualinvoke $u4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($u1, null, $u6, $u-1);

        return;
    }

    public int getChangingConfigurations()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int ret0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        ret0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations>;

        return ret0;
    }

    public android.graphics.Paint getPaint(android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        android.graphics.ColorFilter $u3;
        boolean $u-1;
        android.graphics.Paint $u0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u1;
        int $u-1#9;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u3 := @parameter0: android.graphics.ColorFilter;

        $u-1 = virtualinvoke this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()>();

        if $u-1 != 0 goto label1;

        if $u3 != null goto label1;

        return null;

     label1:
        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint>;

        if $u0 != null goto label2;

        $u0 = new android.graphics.Paint;

        specialinvoke $u0.<android.graphics.Paint: void <init>()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint> = $u0;

        virtualinvoke $u0.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

     label2:
        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint>;

        $u1 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u-1#9 = virtualinvoke $u1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        virtualinvoke $u0.<android.graphics.Paint: void setAlpha(int)>($u-1#9);

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint>;

        virtualinvoke $u0.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($u3);

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint>;

        return $u0;
    }

    public boolean hasTranslucentRoot()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int $u-1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u-1 = virtualinvoke $u0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        if $u-1 >= 255 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isStateful()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        boolean $u-1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u-1 = virtualinvoke $u0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean isStateful()>();

        return $u-1;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u0 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;

        specialinvoke $u0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>(this);

        return $u0;
    }

    public android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        android.content.res.Resources $u2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u2 := @parameter0: android.content.res.Resources;

        $u0 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;

        specialinvoke $u0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)>(this);

        return $u0;
    }

    public boolean onStateChanged(int[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int[] $u3;
        boolean $u-1, $u1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer changed;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u3 := @parameter0: int[];

        changed = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u-1 = virtualinvoke changed.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean onStateChanged(int[])>($u3);

        $u1 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty>;

        $u1 = $u1 | $u-1;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty> = $u1;

        return $u-1;
    }

    public void updateCacheStates()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int $u-1;
        android.content.res.ColorStateList $u0;
        android.graphics.PorterDuff$Mode $u0#2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u0#3;
        boolean $u0#5;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint> = $u0;

        $u0#2 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode> = $u0#2;

        $u0#3 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        $u-1 = virtualinvoke $u0#3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha> = $u-1;

        $u0#5 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored>;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored> = $u0#5;

        this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty> = 0;

        return;
    }

    public void updateCachedBitmap(int, int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState this;
        int $u4, $u5;
        android.graphics.Bitmap tmpCanvas;
        android.graphics.Canvas tmpCanvas#3;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $u1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        tmpCanvas = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap>;

        virtualinvoke tmpCanvas.<android.graphics.Bitmap: void eraseColor(int)>(0);

        tmpCanvas#3 = new android.graphics.Canvas;

        tmpCanvas = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap>;

        specialinvoke tmpCanvas#3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(tmpCanvas);

        $u1 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer>;

        virtualinvoke $u1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)>(tmpCanvas#3, $u4, $u5, null);

        return;
    }
}
