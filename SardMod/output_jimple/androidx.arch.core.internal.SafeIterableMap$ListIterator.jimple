abstract class androidx.arch.core.internal.SafeIterableMap$ListIterator extends java.lang.Object implements java.util.Iterator, androidx.arch.core.internal.SafeIterableMap$SupportRemove
{
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd;
    androidx.arch.core.internal.SafeIterableMap$Entry mNext;

    void <init>(androidx.arch.core.internal.SafeIterableMap$Entry, androidx.arch.core.internal.SafeIterableMap$Entry)
    {
        androidx.arch.core.internal.SafeIterableMap$ListIterator this;
        androidx.arch.core.internal.SafeIterableMap$Entry start, expectedEnd;

        this := @this: androidx.arch.core.internal.SafeIterableMap$ListIterator;

        start := @parameter0: androidx.arch.core.internal.SafeIterableMap$Entry;

        expectedEnd := @parameter1: androidx.arch.core.internal.SafeIterableMap$Entry;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd> = expectedEnd;

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext> = start;

        return;
    }

    private androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
    {
        androidx.arch.core.internal.SafeIterableMap$ListIterator this;
        androidx.arch.core.internal.SafeIterableMap$Entry $u1, $u0;

        this := @this: androidx.arch.core.internal.SafeIterableMap$ListIterator;

        $u0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext>;

        $u1 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd>;

        if $u0 == $u1 goto label2;

        if $u1 != null goto label1;

        goto label2;

     label1:
        $u1 = virtualinvoke this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)>($u0);

        return $u1;

     label2:
        return null;
    }

    abstract androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry);

    abstract androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry);

    public boolean hasNext()
    {
        androidx.arch.core.internal.SafeIterableMap$ListIterator this;
        androidx.arch.core.internal.SafeIterableMap$Entry $u0;

        this := @this: androidx.arch.core.internal.SafeIterableMap$ListIterator;

        $u0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext>;

        if $u0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile java.lang.Object next()
    {
        androidx.arch.core.internal.SafeIterableMap$ListIterator this;
        java.util.Map$Entry $u-1;

        this := @this: androidx.arch.core.internal.SafeIterableMap$ListIterator;

        $u-1 = virtualinvoke this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()>();

        return $u-1;
    }

    public java.util.Map$Entry next()
    {
        androidx.arch.core.internal.SafeIterableMap$ListIterator this;
        androidx.arch.core.internal.SafeIterableMap$Entry $u-1, ret0;

        this := @this: androidx.arch.core.internal.SafeIterableMap$ListIterator;

        ret0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext>;

        $u-1 = specialinvoke this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()>();

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext> = $u-1;

        return ret0;
    }

    public void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
    {
        androidx.arch.core.internal.SafeIterableMap$ListIterator this;
        androidx.arch.core.internal.SafeIterableMap$Entry entry, $u0;

        this := @this: androidx.arch.core.internal.SafeIterableMap$ListIterator;

        entry := @parameter0: androidx.arch.core.internal.SafeIterableMap$Entry;

        $u0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd>;

        if $u0 != entry goto label1;

        $u0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext>;

        if entry != $u0 goto label1;

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext> = null;

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd> = null;

     label1:
        $u0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd>;

        if $u0 != entry goto label2;

        $u0 = virtualinvoke this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)>($u0);

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd> = $u0;

     label2:
        $u0 = this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext>;

        if $u0 != entry goto label3;

        entry = specialinvoke this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()>();

        this.<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext> = entry;

     label3:
        return;
    }
}
