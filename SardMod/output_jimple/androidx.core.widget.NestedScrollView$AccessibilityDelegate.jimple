class androidx.core.widget.NestedScrollView$AccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat
{

    void <init>()
    {
        androidx.core.widget.NestedScrollView$AccessibilityDelegate this;

        this := @this: androidx.core.widget.NestedScrollView$AccessibilityDelegate;

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>();

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.core.widget.NestedScrollView$AccessibilityDelegate this;
        android.view.View $u4;
        android.view.accessibility.AccessibilityEvent $u5;
        androidx.core.widget.NestedScrollView nsvHost;
        java.lang.Class scrollable;
        java.lang.String $u-1;
        int $u-1#6;
        boolean scrollable#8;

        this := @this: androidx.core.widget.NestedScrollView$AccessibilityDelegate;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($u4, $u5);

        nsvHost = (androidx.core.widget.NestedScrollView) $u4;

        scrollable = class "Landroid/widget/ScrollView;";

        $u-1 = virtualinvoke scrollable.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $u5.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($u-1);

        $u-1#6 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        if $u-1#6 <= 0 goto label1;

        scrollable#8 = 1;

        goto label2;

     label1:
        scrollable#8 = 0;

     label2:
        virtualinvoke $u5.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>(scrollable#8);

        $u-1#6 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke $u5.<android.view.accessibility.AccessibilityEvent: void setScrollX(int)>($u-1#6);

        $u-1#6 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke $u5.<android.view.accessibility.AccessibilityEvent: void setScrollY(int)>($u-1#6);

        $u-1#6 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollX()>();

        staticinvoke <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)>($u5, $u-1#6);

        $u-1#6 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        staticinvoke <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)>($u5, $u-1#6);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.core.widget.NestedScrollView$AccessibilityDelegate this;
        android.view.View $u4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $u5;
        androidx.core.widget.NestedScrollView nsvHost;
        java.lang.Class scrollRange;
        java.lang.String $u-1;
        boolean $u-1#6;
        int $u-1#8, $u-1#11;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $u2;

        this := @this: androidx.core.widget.NestedScrollView$AccessibilityDelegate;

        $u4 := @parameter0: android.view.View;

        $u5 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($u4, $u5);

        nsvHost = (androidx.core.widget.NestedScrollView) $u4;

        scrollRange = class "Landroid/widget/ScrollView;";

        $u-1 = virtualinvoke scrollRange.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($u-1);

        $u-1#6 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: boolean isEnabled()>();

        if $u-1#6 == 0 goto label2;

        $u-1#8 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        if $u-1#8 <= 0 goto label2;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

        $u-1#11 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u-1#11 <= 0 goto label1;

        $u2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD>;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($u2);

        $u2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP>;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($u2);

     label1:
        $u-1#11 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u-1#11 >= $u-1#8 goto label2;

        $u2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD>;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($u2);

        $u2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN>;

        virtualinvoke $u5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($u2);

     label2:
        return;
    }

    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        androidx.core.widget.NestedScrollView$AccessibilityDelegate this;
        android.view.View $u7;
        int $u8, $u-1#13;
        android.os.Bundle $u9;
        boolean $u-1;
        androidx.core.widget.NestedScrollView nsvHost;

        this := @this: androidx.core.widget.NestedScrollView$AccessibilityDelegate;

        $u7 := @parameter0: android.view.View;

        $u8 := @parameter1: int;

        $u9 := @parameter2: android.os.Bundle;

        $u-1 = specialinvoke this.<androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>($u7, $u8, $u9);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        nsvHost = (androidx.core.widget.NestedScrollView) $u7;

        $u-1 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: boolean isEnabled()>();

        if $u-1 != 0 goto label2;

        return 0;

     label2:
        if $u8 == 4096 goto label5;

        if $u8 == 8192 goto label3;

        if $u8 == 16908344 goto label3;

        if $u8 == 16908346 goto label5;

        return 0;

     label3:
        $u8 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u8 = $u8 - $u-1#13;

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        $u8 = $u8 - $u-1#13;

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u8 = $u-1#13 - $u8;

        $u8 = staticinvoke <java.lang.Math: int max(int,int)>($u8, 0);

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u8 == $u-1#13 goto label4;

        virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)>(0, $u8, 1);

        return 1;

     label4:
        return 0;

     label5:
        $u8 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getHeight()>();

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getPaddingBottom()>();

        $u8 = $u8 - $u-1#13;

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getPaddingTop()>();

        $u8 = $u8 - $u-1#13;

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        $u8 = $u-1#13 + $u8;

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $u8 = staticinvoke <java.lang.Math: int min(int,int)>($u8, $u-1#13);

        $u-1#13 = virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: int getScrollY()>();

        if $u8 == $u-1#13 goto label6;

        virtualinvoke nsvHost.<androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)>(0, $u8, 1);

        return 1;

     label6:
        return 0;
    }
}
