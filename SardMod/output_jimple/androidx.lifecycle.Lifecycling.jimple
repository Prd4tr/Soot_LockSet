public class androidx.lifecycle.Lifecycling extends java.lang.Object
{
    private static final int GENERATED_CALLBACK;
    private static final int REFLECTIVE_CALLBACK;
    private static java.util.Map sCallbackCache;
    private static java.util.Map sClassToAdapters;

    static void <clinit>()
    {
        java.util.HashMap $u0;

        <androidx.lifecycle.Lifecycling: int REFLECTIVE_CALLBACK> = 1;

        <androidx.lifecycle.Lifecycling: int GENERATED_CALLBACK> = 2;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        <androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache> = $u0;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        <androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters> = $u0;

        return;
    }

    private void <init>()
    {
        androidx.lifecycle.Lifecycling this;

        this := @this: androidx.lifecycle.Lifecycling;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor, java.lang.Object)
    {
        java.lang.reflect.Constructor constructor;
        java.lang.Object $u3;
        java.lang.Object[] e;
        androidx.lifecycle.GeneratedAdapter e#5;
        java.lang.reflect.InvocationTargetException e#6;
        java.lang.RuntimeException $u1;
        java.lang.InstantiationException e#8;
        java.lang.IllegalAccessException e#10;

        constructor := @parameter0: java.lang.reflect.Constructor;

        $u3 := @parameter1: java.lang.Object;

        e = newarray (java.lang.Object)[1];

        e[0] = $u3;

     label1:
        $u3 = virtualinvoke constructor.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(e);

     label2:
        e#5 = (androidx.lifecycle.GeneratedAdapter) $u3;

        return e#5;

     label3:
        e#6 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e#6);

        throw $u1;

     label4:
        e#8 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e#8);

        throw $u1;

     label5:
        e#10 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e#10);

        throw $u1;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    {
        java.lang.Class klass, $u-1#22;
        java.lang.Package $u-1;
        java.lang.String $u-1#3, $u-1#5;
        boolean $u-1#7;
        int $u-1#10;
        java.lang.StringBuilder aClass;
        java.lang.Class[] constructor;
        java.lang.reflect.Constructor $u-1#26;
        java.lang.NoSuchMethodException aPackage;
        java.lang.RuntimeException name;
        java.lang.ClassNotFoundException aPackage#32;

        klass := @parameter0: java.lang.Class;

     label01:
        $u-1 = virtualinvoke klass.<java.lang.Class: java.lang.Package getPackage()>();

        $u-1#3 = virtualinvoke klass.<java.lang.Class: java.lang.String getCanonicalName()>();

     label02:
        if $u-1 == null goto label05;

     label03:
        $u-1#5 = virtualinvoke $u-1.<java.lang.Package: java.lang.String getName()>();

     label04:
        goto label06;

     label05:
        $u-1#5 = "";

     label06:
        $u-1#7 = virtualinvoke $u-1#5.<java.lang.String: boolean isEmpty()>();

     label07:
        if $u-1#7 == 0 goto label08;

        goto label11;

     label08:
        $u-1#10 = virtualinvoke $u-1#5.<java.lang.String: int length()>();

     label09:
        $u-1#10 = $u-1#10 + 1;

     label10:
        $u-1#3 = virtualinvoke $u-1#3.<java.lang.String: java.lang.String substring(int)>($u-1#10);

     label11:
        $u-1#3 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>($u-1#3);

        $u-1#7 = virtualinvoke $u-1#5.<java.lang.String: boolean isEmpty()>();

     label12:
        if $u-1#7 == 0 goto label13;

        $u-1#5 = $u-1#3;

        goto label15;

     label13:
        aClass = new java.lang.StringBuilder;

     label14:
        specialinvoke aClass.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke aClass.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#5);

        virtualinvoke aClass.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke aClass.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#3);

        $u-1#5 = virtualinvoke aClass.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $u-1#22 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($u-1#5);

     label16:
        constructor = newarray (java.lang.Class)[1];

        constructor[0] = klass;

     label17:
        $u-1#26 = virtualinvoke $u-1#22.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(constructor);

        $u-1#7 = virtualinvoke $u-1#26.<java.lang.reflect.Constructor: boolean isAccessible()>();

     label18:
        if $u-1#7 != 0 goto label23;

     label19:
        virtualinvoke $u-1#26.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label20:
        return $u-1#26;

     label21:
        aPackage := @caughtexception;

        name = new java.lang.RuntimeException;

        specialinvoke name.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(aPackage);

        throw name;

     label22:
        aPackage#32 := @caughtexception;

        return null;

     label23:
        return $u-1#26;

        catch java.lang.ClassNotFoundException from label01 to label02 with label22;
        catch java.lang.ClassNotFoundException from label03 to label04 with label22;
        catch java.lang.ClassNotFoundException from label06 to label07 with label22;
        catch java.lang.ClassNotFoundException from label08 to label09 with label22;
        catch java.lang.ClassNotFoundException from label10 to label11 with label22;
        catch java.lang.ClassNotFoundException from label11 to label12 with label22;
        catch java.lang.ClassNotFoundException from label14 to label15 with label22;
        catch java.lang.ClassNotFoundException from label15 to label16 with label22;
        catch java.lang.ClassNotFoundException from label17 to label18 with label22;
        catch java.lang.ClassNotFoundException from label19 to label20 with label22;
        catch java.lang.NoSuchMethodException from label01 to label02 with label21;
        catch java.lang.NoSuchMethodException from label03 to label04 with label21;
        catch java.lang.NoSuchMethodException from label06 to label07 with label21;
        catch java.lang.NoSuchMethodException from label08 to label09 with label21;
        catch java.lang.NoSuchMethodException from label10 to label11 with label21;
        catch java.lang.NoSuchMethodException from label11 to label12 with label21;
        catch java.lang.NoSuchMethodException from label14 to label15 with label21;
        catch java.lang.NoSuchMethodException from label15 to label16 with label21;
        catch java.lang.NoSuchMethodException from label17 to label18 with label21;
        catch java.lang.NoSuchMethodException from label19 to label20 with label21;
    }

    public static java.lang.String getAdapterName(java.lang.String)
    {
        java.lang.String $u3;
        java.lang.StringBuilder $u0;

        $u3 := @parameter0: java.lang.String;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $u3 = virtualinvoke $u3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "_");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u3);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_LifecycleAdapter");

        $u3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u3;
    }

    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    {
        java.lang.Object $u2;
        androidx.lifecycle.Lifecycling$1 $u1;
        androidx.lifecycle.LifecycleEventObserver $u-1;

        $u2 := @parameter0: java.lang.Object;

        $u-1 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)>($u2);

        $u1 = new androidx.lifecycle.Lifecycling$1;

        specialinvoke $u1.<androidx.lifecycle.Lifecycling$1: void <init>(androidx.lifecycle.LifecycleEventObserver)>($u-1);

        return $u1;
    }

    private static int getObserverConstructorType(java.lang.Class)
    {
        java.lang.Class klass;
        java.util.Map $u2;
        java.lang.Object $u-1;
        java.lang.Integer callbackCache;
        int $u-1#5;

        klass := @parameter0: java.lang.Class;

        $u2 = <androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache>;

        $u-1 = interfaceinvoke $u2.<java.util.Map: java.lang.Object get(java.lang.Object)>(klass);

        callbackCache = (java.lang.Integer) $u-1;

        if callbackCache == null goto label1;

        $u-1#5 = virtualinvoke callbackCache.<java.lang.Integer: int intValue()>();

        return $u-1#5;

     label1:
        $u-1#5 = staticinvoke <androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)>(klass);

        $u2 = <androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache>;

        callbackCache = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u-1#5);

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(klass, callbackCache);

        return $u-1#5;
    }

    private static boolean isLifecycleParent(java.lang.Class)
    {
        java.lang.Class klass, $u0;
        boolean $u-1;

        klass := @parameter0: java.lang.Class;

        if klass == null goto label1;

        $u0 = class "Landroidx/lifecycle/LifecycleObserver;";

        $u-1 = virtualinvoke $u0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(klass);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
    {
        java.lang.Object $u8, $u-1#18;
        boolean isLifecycleEventObserver, isFullLifecycleObserver;
        androidx.lifecycle.FullLifecycleObserverAdapter klass;
        androidx.lifecycle.FullLifecycleObserver type;
        androidx.lifecycle.LifecycleEventObserver constructors;
        java.lang.Class $u-1;
        int $u-1#14, $u-1#35;
        java.util.Map constructors#17;
        java.util.List constructors#20;
        java.lang.reflect.Constructor generatedAdapter;
        androidx.lifecycle.GeneratedAdapter $u-1#28;
        androidx.lifecycle.SingleGeneratedAdapterObserver i;
        androidx.lifecycle.GeneratedAdapter[] generatedAdapter#33;
        androidx.lifecycle.CompositeGeneratedAdaptersObserver i#42;
        androidx.lifecycle.ReflectiveGenericLifecycleObserver constructors#43;

        $u8 := @parameter0: java.lang.Object;

        isLifecycleEventObserver = $u8 instanceof androidx.lifecycle.LifecycleEventObserver;

        isFullLifecycleObserver = $u8 instanceof androidx.lifecycle.FullLifecycleObserver;

        if isLifecycleEventObserver == 0 goto label1;

        if isFullLifecycleObserver == 0 goto label1;

        klass = new androidx.lifecycle.FullLifecycleObserverAdapter;

        type = (androidx.lifecycle.FullLifecycleObserver) $u8;

        constructors = (androidx.lifecycle.LifecycleEventObserver) $u8;

        specialinvoke klass.<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>(type, constructors);

        return klass;

     label1:
        if isFullLifecycleObserver == 0 goto label2;

        klass = new androidx.lifecycle.FullLifecycleObserverAdapter;

        type = (androidx.lifecycle.FullLifecycleObserver) $u8;

        specialinvoke klass.<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>(type, null);

        return klass;

     label2:
        if isLifecycleEventObserver == 0 goto label3;

        constructors = (androidx.lifecycle.LifecycleEventObserver) $u8;

        return constructors;

     label3:
        $u-1 = virtualinvoke $u8.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#14 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>($u-1);

        if $u-1#14 != 2 goto label7;

        constructors#17 = <androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters>;

        $u-1#18 = interfaceinvoke constructors#17.<java.util.Map: java.lang.Object get(java.lang.Object)>($u-1);

        constructors#20 = (java.util.List) $u-1#18;

        $u-1#14 = interfaceinvoke constructors#20.<java.util.List: int size()>();

        if $u-1#14 != 1 goto label4;

        $u-1#18 = interfaceinvoke constructors#20.<java.util.List: java.lang.Object get(int)>(0);

        generatedAdapter = (java.lang.reflect.Constructor) $u-1#18;

        $u-1#28 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>(generatedAdapter, $u8);

        i = new androidx.lifecycle.SingleGeneratedAdapterObserver;

        specialinvoke i.<androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)>($u-1#28);

        return i;

     label4:
        $u-1#14 = interfaceinvoke constructors#20.<java.util.List: int size()>();

        generatedAdapter#33 = newarray (androidx.lifecycle.GeneratedAdapter)[$u-1#14];

        $u-1#14 = 0;

     label5:
        $u-1#35 = interfaceinvoke constructors#20.<java.util.List: int size()>();

        if $u-1#14 >= $u-1#35 goto label6;

        $u-1#18 = interfaceinvoke constructors#20.<java.util.List: java.lang.Object get(int)>($u-1#14);

        generatedAdapter = (java.lang.reflect.Constructor) $u-1#18;

        $u-1#28 = staticinvoke <androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>(generatedAdapter, $u8);

        generatedAdapter#33[$u-1#14] = $u-1#28;

        $u-1#14 = $u-1#14 + 1;

        goto label5;

     label6:
        i#42 = new androidx.lifecycle.CompositeGeneratedAdaptersObserver;

        specialinvoke i#42.<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])>(generatedAdapter#33);

        return i#42;

     label7:
        constructors#43 = new androidx.lifecycle.ReflectiveGenericLifecycleObserver;

        specialinvoke constructors#43.<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>($u8);

        return constructors#43;
    }

    private static int resolveObserverCallbackType(java.lang.Class)
    {
        java.lang.Class klass, intrface;
        java.lang.String $u-1;
        java.lang.reflect.Constructor $u-1#4;
        java.util.Map $u1;
        java.util.List $u-1#7;
        androidx.lifecycle.ClassesInfoCache hasLifecycleMethods;
        boolean $u-1#10;
        java.util.ArrayList adapterConstructors;
        int $u-1#16, $u8, $u-1#29;
        java.lang.Object $u-1#20;
        java.util.Collection $u7;
        java.lang.Class[] $u-1#23;

        klass := @parameter0: java.lang.Class;

        $u-1 = virtualinvoke klass.<java.lang.Class: java.lang.String getCanonicalName()>();

        if $u-1 != null goto label01;

        return 1;

     label01:
        $u-1#4 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>(klass);

        if $u-1#4 == null goto label02;

        $u1 = <androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters>;

        $u-1#7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u-1#4);

        interfaceinvoke $u1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(klass, $u-1#7);

        return 2;

     label02:
        hasLifecycleMethods = <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance>;

        $u-1#10 = virtualinvoke hasLifecycleMethods.<androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)>(klass);

        if $u-1#10 == 0 goto label03;

        return 1;

     label03:
        intrface = virtualinvoke klass.<java.lang.Class: java.lang.Class getSuperclass()>();

        adapterConstructors = null;

        $u-1#10 = staticinvoke <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>(intrface);

        if $u-1#10 == 0 goto label05;

        $u-1#16 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>(intrface);

        if $u-1#16 != 1 goto label04;

        return 1;

     label04:
        adapterConstructors = new java.util.ArrayList;

        $u1 = <androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters>;

        $u-1#20 = interfaceinvoke $u1.<java.util.Map: java.lang.Object get(java.lang.Object)>(intrface);

        $u7 = (java.util.Collection) $u-1#20;

        specialinvoke adapterConstructors.<java.util.ArrayList: void <init>(java.util.Collection)>($u7);

     label05:
        $u-1#23 = virtualinvoke klass.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $u-1#16 = lengthof $u-1#23;

        $u8 = 0;

     label06:
        if $u8 >= $u-1#16 goto label11;

        intrface = $u-1#23[$u8];

        $u-1#10 = staticinvoke <androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>(intrface);

        if $u-1#10 != 0 goto label07;

        goto label10;

     label07:
        $u-1#29 = staticinvoke <androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>(intrface);

        if $u-1#29 != 1 goto label08;

        return 1;

     label08:
        if adapterConstructors != null goto label09;

        adapterConstructors = new java.util.ArrayList;

        specialinvoke adapterConstructors.<java.util.ArrayList: void <init>()>();

     label09:
        $u1 = <androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters>;

        $u-1#20 = interfaceinvoke $u1.<java.util.Map: java.lang.Object get(java.lang.Object)>(intrface);

        $u7 = (java.util.Collection) $u-1#20;

        interfaceinvoke adapterConstructors.<java.util.List: boolean addAll(java.util.Collection)>($u7);

     label10:
        $u8 = $u8 + 1;

        goto label06;

     label11:
        if adapterConstructors == null goto label12;

        $u1 = <androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters>;

        interfaceinvoke $u1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(klass, adapterConstructors);

        return 2;

     label12:
        return 1;
    }
}
