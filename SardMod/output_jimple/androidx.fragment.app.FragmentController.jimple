public class androidx.fragment.app.FragmentController extends java.lang.Object
{
    private final androidx.fragment.app.FragmentHostCallback mHost;

    private void <init>(androidx.fragment.app.FragmentHostCallback)
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback callbacks;

        this := @this: androidx.fragment.app.FragmentController;

        callbacks := @parameter0: androidx.fragment.app.FragmentHostCallback;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost> = callbacks;

        return;
    }

    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    {
        androidx.fragment.app.FragmentHostCallback callbacks;
        androidx.fragment.app.FragmentController $u0;
        java.lang.Object $u-1;

        callbacks := @parameter0: androidx.fragment.app.FragmentHostCallback;

        $u0 = new androidx.fragment.app.FragmentController;

        $u-1 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(callbacks, "callbacks == null");

        callbacks = (androidx.fragment.app.FragmentHostCallback) $u-1;

        specialinvoke $u0.<androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)>(callbacks);

        return $u0;
    }

    public void attachHost(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.Fragment $u3;
        androidx.fragment.app.FragmentHostCallback $u1;
        androidx.fragment.app.FragmentManagerImpl $u0;

        this := @this: androidx.fragment.app.FragmentController;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        $u1 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0 = $u1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u1 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $u0.<androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>($u1, $u1, $u3);

        return;
    }

    public void dispatchActivityCreated()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()>();

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentController this;
        android.content.res.Configuration $u2;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.content.res.Configuration;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>($u2);

        return;
    }

    public boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentController this;
        android.view.MenuItem $u2;
        boolean $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.view.MenuItem;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>($u2);

        return $u-1;
    }

    public void dispatchCreate()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()>();

        return;
    }

    public boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentController this;
        android.view.Menu $u2;
        android.view.MenuInflater $u3;
        boolean $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.view.Menu;

        $u3 := @parameter1: android.view.MenuInflater;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>($u2, $u3);

        return $u-1;
    }

    public void dispatchDestroy()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()>();

        return;
    }

    public void dispatchDestroyView()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroyView()>();

        return;
    }

    public void dispatchLowMemory()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchLowMemory()>();

        return;
    }

    public void dispatchMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.FragmentController this;
        boolean $u2;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchMultiWindowModeChanged(boolean)>($u2);

        return;
    }

    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentController this;
        android.view.MenuItem $u2;
        boolean $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.view.MenuItem;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>($u2);

        return $u-1;
    }

    public void dispatchOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentController this;
        android.view.Menu $u2;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.view.Menu;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>($u2);

        return;
    }

    public void dispatchPause()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchPause()>();

        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.FragmentController this;
        boolean $u2;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchPictureInPictureModeChanged(boolean)>($u2);

        return;
    }

    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentController this;
        android.view.Menu $u2;
        boolean $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.view.Menu;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>($u2);

        return $u-1;
    }

    public void dispatchReallyStop()
    {
        androidx.fragment.app.FragmentController this;

        this := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void dispatchResume()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchResume()>();

        return;
    }

    public void dispatchStart()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchStart()>();

        return;
    }

    public void dispatchStop()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void dispatchStop()>();

        return;
    }

    public void doLoaderDestroy()
    {
        androidx.fragment.app.FragmentController this;

        this := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void doLoaderRetain()
    {
        androidx.fragment.app.FragmentController this;

        this := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void doLoaderStart()
    {
        androidx.fragment.app.FragmentController this;

        this := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void doLoaderStop(boolean)
    {
        androidx.fragment.app.FragmentController this;
        boolean $u1;

        this := @this: androidx.fragment.app.FragmentController;

        $u1 := @parameter0: boolean;

        return;
    }

    public void dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentController this;
        java.lang.String $u1;
        java.io.FileDescriptor $u2;
        java.io.PrintWriter $u3;
        java.lang.String[] $u4;

        this := @this: androidx.fragment.app.FragmentController;

        $u1 := @parameter0: java.lang.String;

        $u2 := @parameter1: java.io.FileDescriptor;

        $u3 := @parameter2: java.io.PrintWriter;

        $u4 := @parameter3: java.lang.String[];

        return;
    }

    public boolean execPendingActions()
    {
        androidx.fragment.app.FragmentController this;
        boolean $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        return $u-1;
    }

    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentController this;
        java.lang.String $u2;
        androidx.fragment.app.Fragment $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: java.lang.String;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>($u2);

        return $u-1;
    }

    public java.util.List getActiveFragments(java.util.List)
    {
        androidx.fragment.app.FragmentController this;
        java.util.List actives;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        actives := @parameter0: java.util.List;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        actives = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: java.util.List getActiveFragments()>();

        return actives;
    }

    public int getActiveFragmentsCount()
    {
        androidx.fragment.app.FragmentController this;
        int $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: int getActiveFragmentCount()>();

        return $u-1;
    }

    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl ret0;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        ret0 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        return ret0;
    }

    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    {
        androidx.fragment.app.FragmentController this;
        java.lang.UnsupportedOperationException $u0;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = new java.lang.UnsupportedOperationException;

        specialinvoke $u0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Loaders are managed separately from FragmentController, use LoaderManager.getInstance() to obtain a LoaderManager.");

        throw $u0;
    }

    public void noteStateNotSaved()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>();

        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentController this;
        android.view.View $u2;
        java.lang.String $u3;
        android.content.Context $u4;
        android.util.AttributeSet $u5;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: java.lang.String;

        $u4 := @parameter2: android.content.Context;

        $u5 := @parameter3: android.util.AttributeSet;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u2 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>($u2, $u3, $u4, $u5);

        return $u2;
    }

    public void reportLoaderStart()
    {
        androidx.fragment.app.FragmentController this;

        this := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void restoreAllState(android.os.Parcelable, androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentController this;
        android.os.Parcelable $u2;
        androidx.fragment.app.FragmentManagerNonConfig $u3;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u2 := @parameter0: android.os.Parcelable;

        $u3 := @parameter1: androidx.fragment.app.FragmentManagerNonConfig;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>($u2, $u3);

        return;
    }

    public void restoreAllState(android.os.Parcelable, java.util.List)
    {
        androidx.fragment.app.FragmentController this;
        android.os.Parcelable $u4;
        java.util.List nonConfigList;
        androidx.fragment.app.FragmentManagerNonConfig $u1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u4 := @parameter0: android.os.Parcelable;

        nonConfigList := @parameter1: java.util.List;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u1 = new androidx.fragment.app.FragmentManagerNonConfig;

        specialinvoke $u1.<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.Collection,java.util.Map,java.util.Map)>(nonConfigList, null, null);

        virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>($u4, $u1);

        return;
    }

    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    {
        androidx.fragment.app.FragmentController this;
        androidx.collection.SimpleArrayMap loaderManagers;

        this := @this: androidx.fragment.app.FragmentController;

        loaderManagers := @parameter0: androidx.collection.SimpleArrayMap;

        return;
    }

    public void restoreSaveState(android.os.Parcelable)
    {
        androidx.fragment.app.FragmentController this;
        android.os.Parcelable $u3;
        androidx.fragment.app.FragmentHostCallback $u0;
        boolean $u1;
        androidx.fragment.app.FragmentManagerImpl $u0#3;
        java.lang.IllegalStateException $u0#4;

        this := @this: androidx.fragment.app.FragmentController;

        $u3 := @parameter0: android.os.Parcelable;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u1 = $u0 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $u1 == 0 goto label1;

        $u0#3 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $u0#3.<androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)>($u3);

        return;

     label1:
        $u0#4 = new java.lang.IllegalStateException;

        specialinvoke $u0#4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Your FragmentHostCallback must implement ViewModelStoreOwner to call restoreSaveState(). Call restoreAllState()  if you\'re still using retainNestedNonConfig().");

        throw $u0#4;
    }

    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    {
        androidx.fragment.app.FragmentController this;

        this := @this: androidx.fragment.app.FragmentController;

        return null;
    }

    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentManagerNonConfig $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>();

        return $u-1;
    }

    public java.util.List retainNonConfig()
    {
        androidx.fragment.app.FragmentController this;
        androidx.fragment.app.FragmentHostCallback nonconf;
        androidx.fragment.app.FragmentManagerImpl nonconf#2;
        androidx.fragment.app.FragmentManagerNonConfig $u-1;
        java.util.Collection $u-1#5;
        java.util.ArrayList $u1;

        this := @this: androidx.fragment.app.FragmentController;

        nonconf = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        nonconf#2 = nonconf.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke nonconf#2.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>();

        if $u-1 == null goto label1;

        $u-1#5 = virtualinvoke $u-1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()>();

        if $u-1#5 == null goto label1;

        $u1 = new java.util.ArrayList;

        $u-1#5 = virtualinvoke $u-1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()>();

        specialinvoke $u1.<java.util.ArrayList: void <init>(java.util.Collection)>($u-1#5);

        return $u1;

     label1:
        return null;
    }

    public android.os.Parcelable saveAllState()
    {
        androidx.fragment.app.FragmentController this;
        android.os.Parcelable $u-1;
        androidx.fragment.app.FragmentHostCallback $u0;
        androidx.fragment.app.FragmentManagerImpl $u0#2;

        this := @this: androidx.fragment.app.FragmentController;

        $u0 = this.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $u0#2 = $u0.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $u-1 = virtualinvoke $u0#2.<androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>();

        return $u-1;
    }
}
