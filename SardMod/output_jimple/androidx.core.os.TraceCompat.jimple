public final class androidx.core.os.TraceCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sAsyncTraceBeginMethod;
    private static java.lang.reflect.Method sAsyncTraceEndMethod;
    private static java.lang.reflect.Method sIsTagEnabledMethod;
    private static java.lang.reflect.Method sTraceCounterMethod;
    private static long sTraceTagApp;

    static void <clinit>()
    {
        int traceTagAppField;
        java.lang.Class traceTagAppField#5, $u5;
        java.lang.reflect.Field $u-1;
        long $u-1#10;
        java.lang.Class[] $u4;
        java.lang.reflect.Method $u-1#17;
        java.lang.Exception traceTagAppField#44;

        <androidx.core.os.TraceCompat: java.lang.String TAG> = "TraceCompat";

        traceTagAppField = <android.os.Build$VERSION: int SDK_INT>;

        if traceTagAppField < 18 goto label26;

        traceTagAppField = <android.os.Build$VERSION: int SDK_INT>;

        if traceTagAppField >= 29 goto label26;

        traceTagAppField#5 = class "Landroid/os/Trace;";

     label01:
        $u-1 = virtualinvoke traceTagAppField#5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TRACE_TAG_APP");

        $u-1#10 = virtualinvoke $u-1.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);

     label02:
        <androidx.core.os.TraceCompat: long sTraceTagApp> = $u-1#10;

        traceTagAppField#5 = class "Landroid/os/Trace;";

     label03:
        $u4 = newarray (java.lang.Class)[1];

     label04:
        $u5 = <java.lang.Long: java.lang.Class TYPE>;

     label05:
        $u4[0] = $u5;

        $u-1#17 = virtualinvoke traceTagAppField#5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isTagEnabled", $u4);

     label06:
        <androidx.core.os.TraceCompat: java.lang.reflect.Method sIsTagEnabledMethod> = $u-1#17;

        traceTagAppField#5 = class "Landroid/os/Trace;";

     label07:
        $u4 = newarray (java.lang.Class)[3];

     label08:
        $u5 = <java.lang.Long: java.lang.Class TYPE>;

     label09:
        $u4[0] = $u5;

        $u4[1] = class "Ljava/lang/String;";

     label10:
        $u5 = <java.lang.Integer: java.lang.Class TYPE>;

     label11:
        $u4[2] = $u5;

        $u-1#17 = virtualinvoke traceTagAppField#5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("asyncTraceBegin", $u4);

     label12:
        <androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceBeginMethod> = $u-1#17;

        traceTagAppField#5 = class "Landroid/os/Trace;";

     label13:
        $u4 = newarray (java.lang.Class)[3];

     label14:
        $u5 = <java.lang.Long: java.lang.Class TYPE>;

     label15:
        $u4[0] = $u5;

        $u4[1] = class "Ljava/lang/String;";

     label16:
        $u5 = <java.lang.Integer: java.lang.Class TYPE>;

     label17:
        $u4[2] = $u5;

        $u-1#17 = virtualinvoke traceTagAppField#5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("asyncTraceEnd", $u4);

     label18:
        <androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceEndMethod> = $u-1#17;

        traceTagAppField#5 = class "Landroid/os/Trace;";

     label19:
        $u4 = newarray (java.lang.Class)[3];

     label20:
        $u5 = <java.lang.Long: java.lang.Class TYPE>;

     label21:
        $u4[0] = $u5;

        $u4[1] = class "Ljava/lang/String;";

     label22:
        $u5 = <java.lang.Integer: java.lang.Class TYPE>;

     label23:
        $u4[2] = $u5;

        $u-1#17 = virtualinvoke traceTagAppField#5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("traceCounter", $u4);

     label24:
        <androidx.core.os.TraceCompat: java.lang.reflect.Method sTraceCounterMethod> = $u-1#17;

        return;

     label25:
        traceTagAppField#44 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceCompat", "Unable to initialize via reflection.", traceTagAppField#44);

     label26:
        return;

        catch java.lang.Exception from label01 to label02 with label25;
        catch java.lang.Exception from label03 to label04 with label25;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Exception from label13 to label14 with label25;
        catch java.lang.Exception from label15 to label16 with label25;
        catch java.lang.Exception from label17 to label18 with label25;
        catch java.lang.Exception from label19 to label20 with label25;
        catch java.lang.Exception from label21 to label22 with label25;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    private void <init>()
    {
        androidx.core.os.TraceCompat this;

        this := @this: androidx.core.os.TraceCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void beginAsyncSection(java.lang.String, int)
    {
        java.lang.String $u6;
        int $u7, e;
        java.lang.reflect.Method e#5;
        java.lang.Object[] $u2;
        long $u4;
        java.lang.Long $u-1;
        java.lang.Integer $u-1#15;
        java.lang.Exception e#17;

        $u6 := @parameter0: java.lang.String;

        $u7 := @parameter1: int;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 29 goto label1;

        staticinvoke <android.os.Trace: void beginAsyncSection(java.lang.String,int)>($u6, $u7);

        return;

     label1:
        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 18 goto label7;

        e#5 = <androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceBeginMethod>;

     label2:
        $u2 = newarray (java.lang.Object)[3];

     label3:
        $u4 = <androidx.core.os.TraceCompat: long sTraceTagApp>;

     label4:
        $u-1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($u4);

        $u2[0] = $u-1;

        $u2[1] = $u6;

        $u-1#15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u7);

        $u2[2] = $u-1#15;

        virtualinvoke e#5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $u2);

     label5:
        return;

     label6:
        e#17 := @caughtexception;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TraceCompat", "Unable to invoke asyncTraceBegin() via reflection.");

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static void beginSection(java.lang.String)
    {
        java.lang.String $u2;
        int $u0;

        $u2 := @parameter0: java.lang.String;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 18 goto label1;

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>($u2);

     label1:
        return;
    }

    public static void endAsyncSection(java.lang.String, int)
    {
        java.lang.String $u6;
        int $u7, e;
        java.lang.reflect.Method e#5;
        java.lang.Object[] $u2;
        long $u4;
        java.lang.Long $u-1;
        java.lang.Integer $u-1#15;
        java.lang.Exception e#17;

        $u6 := @parameter0: java.lang.String;

        $u7 := @parameter1: int;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 29 goto label1;

        staticinvoke <android.os.Trace: void endAsyncSection(java.lang.String,int)>($u6, $u7);

        return;

     label1:
        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 18 goto label7;

        e#5 = <androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceEndMethod>;

     label2:
        $u2 = newarray (java.lang.Object)[3];

     label3:
        $u4 = <androidx.core.os.TraceCompat: long sTraceTagApp>;

     label4:
        $u-1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($u4);

        $u2[0] = $u-1;

        $u2[1] = $u6;

        $u-1#15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u7);

        $u2[2] = $u-1#15;

        virtualinvoke e#5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $u2);

     label5:
        return;

     label6:
        e#17 := @caughtexception;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TraceCompat", "Unable to invoke endAsyncSection() via reflection.");

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static void endSection()
    {
        int $u0;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 18 goto label1;

        staticinvoke <android.os.Trace: void endSection()>();

     label1:
        return;
    }

    public static boolean isEnabled()
    {
        int e;
        boolean $u-1;
        java.lang.reflect.Method e#7;
        java.lang.Object[] $u3;
        long $u4;
        java.lang.Long $u-1#12;
        java.lang.Object $u-1#14;
        java.lang.Boolean e#16;
        java.lang.Exception e#19;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 29 goto label1;

        $u-1 = staticinvoke <android.os.Trace: boolean isEnabled()>();

        return $u-1;

     label1:
        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 18 goto label7;

        e#7 = <androidx.core.os.TraceCompat: java.lang.reflect.Method sIsTagEnabledMethod>;

     label2:
        $u3 = newarray (java.lang.Object)[1];

     label3:
        $u4 = <androidx.core.os.TraceCompat: long sTraceTagApp>;

     label4:
        $u-1#12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($u4);

        $u3[0] = $u-1#12;

        $u-1#14 = virtualinvoke e#7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $u3);

        e#16 = (java.lang.Boolean) $u-1#14;

        $u-1 = virtualinvoke e#16.<java.lang.Boolean: boolean booleanValue()>();

     label5:
        return $u-1;

     label6:
        e#19 := @caughtexception;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TraceCompat", "Unable to invoke isTagEnabled() via reflection.");

     label7:
        return 0;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static void setCounter(java.lang.String, int)
    {
        java.lang.String $u6;
        int $u7, e;
        long e#3;
        java.lang.reflect.Method e#6;
        java.lang.Object[] $u2;
        java.lang.Long $u-1;
        java.lang.Integer $u-1#16;
        java.lang.Exception e#18;

        $u6 := @parameter0: java.lang.String;

        $u7 := @parameter1: int;

        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 29 goto label1;

        e#3 = (long) $u7;

        staticinvoke <android.os.Trace: void setCounter(java.lang.String,long)>($u6, e#3);

        return;

     label1:
        e = <android.os.Build$VERSION: int SDK_INT>;

        if e < 18 goto label7;

        e#6 = <androidx.core.os.TraceCompat: java.lang.reflect.Method sTraceCounterMethod>;

     label2:
        $u2 = newarray (java.lang.Object)[3];

     label3:
        e#3 = <androidx.core.os.TraceCompat: long sTraceTagApp>;

     label4:
        $u-1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(e#3);

        $u2[0] = $u-1;

        $u2[1] = $u6;

        $u-1#16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u7);

        $u2[2] = $u-1#16;

        virtualinvoke e#6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $u2);

     label5:
        return;

     label6:
        e#18 := @caughtexception;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TraceCompat", "Unable to invoke traceCounter() via reflection.");

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
