public class androidx.appcompat.widget.ActionBarOverlayLayout extends android.view.ViewGroup implements androidx.appcompat.widget.DecorContentParent, androidx.core.view.NestedScrollingParent, androidx.core.view.NestedScrollingParent2, androidx.core.view.NestedScrollingParent3
{
    private static final int ACTION_BAR_ANIMATE_DELAY;
    static final int[] ATTRS;
    private static final java.lang.String TAG;
    private int mActionBarHeight;
    androidx.appcompat.widget.ActionBarContainer mActionBarTop;
    private androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback;
    private final java.lang.Runnable mAddActionBarHideOffset;
    boolean mAnimatingForFling;
    private final android.graphics.Rect mBaseContentInsets;
    private androidx.core.view.WindowInsetsCompat mBaseInnerInsets;
    private final android.graphics.Rect mBaseInnerInsetsRect;
    private androidx.appcompat.widget.ContentFrameLayout mContent;
    private final android.graphics.Rect mContentInsets;
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator;
    private androidx.appcompat.widget.DecorToolbar mDecorToolbar;
    private android.widget.OverScroller mFlingEstimator;
    private boolean mHasNonEmbeddedTabs;
    private boolean mHideOnContentScroll;
    private int mHideOnContentScrollReference;
    private boolean mIgnoreWindowContentOverlay;
    private androidx.core.view.WindowInsetsCompat mInnerInsets;
    private final android.graphics.Rect mInnerInsetsRect;
    private final android.graphics.Rect mLastBaseContentInsets;
    private androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets;
    private final android.graphics.Rect mLastBaseInnerInsetsRect;
    private androidx.core.view.WindowInsetsCompat mLastInnerInsets;
    private final android.graphics.Rect mLastInnerInsetsRect;
    private int mLastSystemUiVisibility;
    private boolean mOverlayMode;
    private final androidx.core.view.NestedScrollingParentHelper mParentHelper;
    private final java.lang.Runnable mRemoveActionBarHideOffset;
    final android.animation.AnimatorListenerAdapter mTopAnimatorListener;
    private android.graphics.drawable.Drawable mWindowContentOverlay;
    private int mWindowVisibility;

    static void <clinit>()
    {
        int $u1;
        int[] $u0;

        <androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.String TAG> = "ActionBarOverlayLayout";

        <androidx.appcompat.widget.ActionBarOverlayLayout: int ACTION_BAR_ANIMATE_DELAY> = 600;

        $u0 = newarray (int)[2];

        $u1 = <androidx.appcompat.R$attr: int actionBarSize>;

        $u0[0] = $u1;

        $u0[1] = 16842841;

        <androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS> = $u0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.content.Context $u2;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.content.Context $u2;
        android.util.AttributeSet $u3;
        android.graphics.Rect $u0;
        androidx.core.view.WindowInsetsCompat $u0#9;
        androidx.appcompat.widget.ActionBarOverlayLayout$1 $u0#13;
        androidx.appcompat.widget.ActionBarOverlayLayout$2 $u0#14;
        androidx.appcompat.widget.ActionBarOverlayLayout$3 $u0#15;
        androidx.core.view.NestedScrollingParentHelper $u0#16;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.content.Context;

        $u3 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($u2, $u3);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility> = 0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets> = $u0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets> = $u0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets> = $u0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect> = $u0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsetsRect> = $u0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect> = $u0;

        $u0 = new android.graphics.Rect;

        specialinvoke $u0.<android.graphics.Rect: void <init>()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsetsRect> = $u0;

        $u0#9 = <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets> = $u0#9;

        $u0#9 = <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets> = $u0#9;

        $u0#9 = <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets> = $u0#9;

        $u0#9 = <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastInnerInsets> = $u0#9;

        $u0#13 = new androidx.appcompat.widget.ActionBarOverlayLayout$1;

        specialinvoke $u0#13.<androidx.appcompat.widget.ActionBarOverlayLayout$1: void <init>(androidx.appcompat.widget.ActionBarOverlayLayout)>(this);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener> = $u0#13;

        $u0#14 = new androidx.appcompat.widget.ActionBarOverlayLayout$2;

        specialinvoke $u0#14.<androidx.appcompat.widget.ActionBarOverlayLayout$2: void <init>(androidx.appcompat.widget.ActionBarOverlayLayout)>(this);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset> = $u0#14;

        $u0#15 = new androidx.appcompat.widget.ActionBarOverlayLayout$3;

        specialinvoke $u0#15.<androidx.appcompat.widget.ActionBarOverlayLayout$3: void <init>(androidx.appcompat.widget.ActionBarOverlayLayout)>(this);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset> = $u0#15;

        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)>($u2);

        $u0#16 = new androidx.core.view.NestedScrollingParentHelper;

        specialinvoke $u0#16.<androidx.core.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(this);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper> = $u0#16;

        return;
    }

    private void addActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        interfaceinvoke $u0.<java.lang.Runnable: void run()>();

        return;
    }

    private boolean applyInsets(android.view.View, android.graphics.Rect, boolean, boolean, boolean, boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u5;
        android.graphics.Rect $u6;
        boolean $u7, $u8, $u9, $u10, changed;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams lp;
        int $u2, $u3;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u5 := @parameter0: android.view.View;

        $u6 := @parameter1: android.graphics.Rect;

        $u7 := @parameter2: boolean;

        $u8 := @parameter3: boolean;

        $u9 := @parameter4: boolean;

        $u10 := @parameter5: boolean;

        changed = 0;

        $u-1 = virtualinvoke $u5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $u-1;

        if $u7 == 0 goto label1;

        $u2 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $u3 = $u6.<android.graphics.Rect: int left>;

        if $u2 == $u3 goto label1;

        changed = 1;

        $u2 = $u6.<android.graphics.Rect: int left>;

        lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin> = $u2;

     label1:
        if $u8 == 0 goto label2;

        $u2 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $u3 = $u6.<android.graphics.Rect: int top>;

        if $u2 == $u3 goto label2;

        changed = 1;

        $u2 = $u6.<android.graphics.Rect: int top>;

        lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin> = $u2;

     label2:
        if $u10 == 0 goto label3;

        $u2 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $u3 = $u6.<android.graphics.Rect: int right>;

        if $u2 == $u3 goto label3;

        changed = 1;

        $u2 = $u6.<android.graphics.Rect: int right>;

        lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin> = $u2;

     label3:
        if $u9 == 0 goto label4;

        $u2 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $u3 = $u6.<android.graphics.Rect: int bottom>;

        if $u2 == $u3 goto label4;

        $u2 = $u6.<android.graphics.Rect: int bottom>;

        lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin> = $u2;

        return 1;

     label4:
        return changed;
    }

    private androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u4;
        boolean $u0;
        androidx.appcompat.widget.DecorToolbar $u0#3;
        androidx.appcompat.widget.Toolbar $u0#6;
        java.lang.IllegalStateException $u0#9;
        java.lang.StringBuilder $u1;
        java.lang.Class $u-1;
        java.lang.String $u-1#14;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u4 := @parameter0: android.view.View;

        $u0 = $u4 instanceof androidx.appcompat.widget.DecorToolbar;

        if $u0 == 0 goto label1;

        $u0#3 = (androidx.appcompat.widget.DecorToolbar) $u4;

        return $u0#3;

     label1:
        $u0 = $u4 instanceof androidx.appcompat.widget.Toolbar;

        if $u0 == 0 goto label2;

        $u0#6 = (androidx.appcompat.widget.Toolbar) $u4;

        $u0#3 = virtualinvoke $u0#6.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()>();

        return $u0#3;

     label2:
        $u0#9 = new java.lang.IllegalStateException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        $u-1 = virtualinvoke $u4.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#14 = virtualinvoke $u-1.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#14);

        $u-1#14 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0#9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($u-1#14);

        throw $u0#9;
    }

    private void init(android.content.Context)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.content.Context $u6, $u-1;
        android.content.res.Resources$Theme $u-1#3;
        int[] $u1;
        android.content.res.TypedArray $u-1#6;
        boolean $u1#8, $u3;
        int $u-1#9;
        android.graphics.drawable.Drawable $u-1#12;
        android.content.pm.ApplicationInfo $u-1#15;
        android.widget.OverScroller $u1#18;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u6 := @parameter0: android.content.Context;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $u1 = <androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS>;

        $u-1#6 = virtualinvoke $u-1#3.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($u1);

        $u1#8 = 0;

        $u-1#9 = virtualinvoke $u-1#6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight> = $u-1#9;

        $u-1#12 = virtualinvoke $u-1#6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay> = $u-1#12;

        if $u-1#12 != null goto label1;

        $u3 = 1;

        goto label2;

     label1:
        $u3 = 0;

     label2:
        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void setWillNotDraw(boolean)>($u3);

        virtualinvoke $u-1#6.<android.content.res.TypedArray: void recycle()>();

        $u-1#15 = virtualinvoke $u6.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $u-1#9 = $u-1#15.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $u-1#9 >= 19 goto label3;

        $u1#8 = 1;

     label3:
        this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay> = $u1#8;

        $u1#18 = new android.widget.OverScroller;

        specialinvoke $u1#18.<android.widget.OverScroller: void <init>(android.content.Context)>($u6);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator> = $u1#18;

        return;
    }

    private void postAddActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean postDelayed(java.lang.Runnable,long)>($u0, 600L);

        return;
    }

    private void postRemoveActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean postDelayed(java.lang.Runnable,long)>($u0, 600L);

        return;
    }

    private void removeActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.Runnable $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        interfaceinvoke $u0.<java.lang.Runnable: void run()>();

        return;
    }

    private boolean shouldHideActionBarOnFling(float)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        float $u10;
        int $u4, $u-1;
        android.widget.OverScroller finalY;
        androidx.appcompat.widget.ActionBarContainer $u1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u10 := @parameter0: float;

        finalY = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator>;

        $u4 = (int) $u10;

        virtualinvoke finalY.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>(0, 0, 0, $u4, 0, 0, -2147483648, 2147483647);

        finalY = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator>;

        $u4 = virtualinvoke finalY.<android.widget.OverScroller: int getFinalY()>();

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = virtualinvoke $u1.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        if $u4 <= $u-1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean canShowOverflowMenu()>();

        return $u-1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.ViewGroup$LayoutParams $u2;
        boolean $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = $u2 instanceof androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        return $u0;
    }

    public void dismissPopups()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void dismissPopupMenus()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.graphics.Canvas $u6;
        android.graphics.drawable.Drawable top, $u4;
        boolean top#2;
        androidx.appcompat.widget.ActionBarContainer top#3;
        int $u-1, $u-1#19, $u-1#21;
        float top#10, $u-1#12;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u6 := @parameter0: android.graphics.Canvas;

        specialinvoke this.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($u6);

        top = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        if top == null goto label3;

        top#2 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay>;

        if top#2 != 0 goto label3;

        top#3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = virtualinvoke top#3.<androidx.appcompat.widget.ActionBarContainer: int getVisibility()>();

        if $u-1 != 0 goto label1;

        top#3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = virtualinvoke top#3.<androidx.appcompat.widget.ActionBarContainer: int getBottom()>();

        top#10 = (float) $u-1;

        top#3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#12 = virtualinvoke top#3.<androidx.appcompat.widget.ActionBarContainer: float getTranslationY()>();

        top#10 = top#10 + $u-1#12;

        top#10 = top#10 + 0.5F;

        $u-1 = (int) top#10;

        goto label2;

     label1:
        $u-1 = 0;

     label2:
        top = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        $u-1#19 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getWidth()>();

        $u4 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        $u-1#21 = virtualinvoke $u4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $u-1#21 = $u-1#21 + $u-1;

        virtualinvoke top.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, $u-1, $u-1#19, $u-1#21);

        top = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        virtualinvoke top.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($u6);

     label3:
        return;
    }

    protected boolean fitSystemWindows(android.graphics.Rect)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.graphics.Rect $u9, $u1;
        int changed;
        boolean $u-1, $u-1#14;
        androidx.appcompat.widget.ActionBarContainer $u2;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u9 := @parameter0: android.graphics.Rect;

        changed = <android.os.Build$VERSION: int SDK_INT>;

        if changed < 21 goto label1;

        $u-1 = specialinvoke this.<android.view.ViewGroup: boolean fitSystemWindows(android.graphics.Rect)>($u9);

        return $u-1;

     label1:
        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u2 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>($u2, $u9, 1, 1, 0, 1);

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect>;

        virtualinvoke $u1.<android.graphics.Rect: void set(android.graphics.Rect)>($u9);

        $u9 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        staticinvoke <androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)>(this, $u9, $u1);

        $u9 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsetsRect>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect>;

        $u-1#14 = virtualinvoke $u9.<android.graphics.Rect: boolean equals(java.lang.Object)>($u1);

        if $u-1#14 != 0 goto label2;

        $u-1 = 1;

        $u9 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsetsRect>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect>;

        virtualinvoke $u9.<android.graphics.Rect: void set(android.graphics.Rect)>($u1);

     label2:
        $u9 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $u-1#14 = virtualinvoke $u9.<android.graphics.Rect: boolean equals(java.lang.Object)>($u1);

        if $u-1#14 != 0 goto label3;

        $u-1 = 1;

        $u9 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke $u9.<android.graphics.Rect: void set(android.graphics.Rect)>($u1);

     label3:
        if $u-1 == 0 goto label4;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void requestLayout()>();

     label4:
        return 1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $u-1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()>();

        return $u-1;
    }

    protected androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u0 = new androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        specialinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        return $u0;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $u-1;
        android.util.AttributeSet $u1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($u1);

        return $u-1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.ViewGroup$LayoutParams $u2;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = new androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        specialinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($u2);

        return $u0;
    }

    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.util.AttributeSet $u3;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $u0;
        android.content.Context $u-1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u3 := @parameter0: android.util.AttributeSet;

        $u0 = new androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($u-1, $u3);

        return $u0;
    }

    public int getActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        float $u-1;
        androidx.appcompat.widget.ActionBarContainer $u0;
        int $u0#3;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarContainer: float getTranslationY()>();

        $u0#3 = (int) $u-1;

        $u0#3 = neg $u0#3;

        return $u0#3;

     label1:
        return 0;
    }

    public int getNestedScrollAxes()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u-1;
        androidx.core.view.NestedScrollingParentHelper $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        $u-1 = virtualinvoke $u0.<androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $u-1;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.CharSequence $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()>();

        return $u-1;
    }

    void haltActionBarHideOffsetAnimations()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.Runnable $u0;
        android.view.ViewPropertyAnimator $u0#3;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean removeCallbacks(java.lang.Runnable)>($u0);

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean removeCallbacks(java.lang.Runnable)>($u0);

        $u0#3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator>;

        if $u0#3 == null goto label1;

        virtualinvoke $u0#3.<android.view.ViewPropertyAnimator: void cancel()>();

     label1:
        return;
    }

    public boolean hasIcon()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean hasIcon()>();

        return $u-1;
    }

    public boolean hasLogo()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean hasLogo()>();

        return $u-1;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean hideOverflowMenu()>();

        return $u-1;
    }

    public void initFeature(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: int;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        if $u2 == 2 goto label3;

        if $u2 == 5 goto label2;

        if $u2 == 109 goto label1;

        return;

     label1:
        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)>(1);

        return;

     label2:
        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void initIndeterminateProgress()>();

        return;

     label3:
        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void initProgress()>();

        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean ret0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        ret0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        return ret0;
    }

    public boolean isInOverlayMode()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean ret0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        ret0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode>;

        return ret0;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowPending()>();

        return $u-1;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowing()>();

        return $u-1;
    }

    public android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.WindowInsets $u9;
        android.graphics.Rect systemInsets, $u4#33;
        androidx.core.view.WindowInsetsCompat $u-1, $u-1#26, $u4;
        int $u-1#2, $u-1#4, $u-1#6, $u-1#8;
        androidx.appcompat.widget.ActionBarContainer $u2;
        boolean $u-1#15, $u-1#29;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u9 := @parameter0: android.view.WindowInsets;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u-1 = staticinvoke <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)>($u9);

        systemInsets = new android.graphics.Rect;

        $u-1#2 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $u-1#4 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $u-1#6 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $u-1#8 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        specialinvoke systemInsets.<android.graphics.Rect: void <init>(int,int,int,int)>($u-1#2, $u-1#4, $u-1#6, $u-1#8);

        $u2 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#15 = specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>($u2, systemInsets, 1, 1, 0, 1);

        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)>(this, $u-1, systemInsets);

        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $u-1#2 = systemInsets.<android.graphics.Rect: int left>;

        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $u-1#4 = systemInsets.<android.graphics.Rect: int top>;

        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $u-1#6 = systemInsets.<android.graphics.Rect: int right>;

        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $u-1#8 = systemInsets.<android.graphics.Rect: int bottom>;

        $u-1#26 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>($u-1#2, $u-1#4, $u-1#6, $u-1#8);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets> = $u-1#26;

        $u4 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets>;

        $u-1#29 = virtualinvoke $u4.<androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)>($u-1#26);

        if $u-1#29 != 0 goto label1;

        $u-1#15 = 1;

        $u-1#26 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets> = $u-1#26;

     label1:
        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $u4#33 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $u-1#29 = virtualinvoke systemInsets.<android.graphics.Rect: boolean equals(java.lang.Object)>($u4#33);

        if $u-1#29 != 0 goto label2;

        $u-1#15 = 1;

        systemInsets = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $u4#33 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke systemInsets.<android.graphics.Rect: void set(android.graphics.Rect)>($u4#33);

     label2:
        if $u-1#15 == 0 goto label3;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void requestLayout()>();

     label3:
        $u-1 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()>();

        $u-1 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()>();

        $u-1 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()>();

        $u9 = virtualinvoke $u-1.<androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()>();

        return $u9;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.content.res.Configuration $u2;
        android.content.Context $u-1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.content.res.Configuration;

        specialinvoke this.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($u2);

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)>($u-1);

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(this);

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        specialinvoke this.<android.view.ViewGroup: void onDetachedFromWindow()>();

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u14;
        int $u15, $u16, $u17, $u18, $u11, $u12, childLeft, childTop;
        android.view.View $u-1;
        android.view.ViewGroup$LayoutParams $u-1#10;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams lp;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u14 := @parameter0: boolean;

        $u15 := @parameter1: int;

        $u16 := @parameter2: int;

        $u17 := @parameter3: int;

        $u18 := @parameter4: int;

        $u15 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getChildCount()>();

        $u16 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingLeft()>();

        $u17 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingTop()>();

        $u18 = 0;

     label1:
        if $u18 >= $u15 goto label3;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View getChildAt(int)>($u18);

        $u12 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u12 == 8 goto label2;

        $u-1#10 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $u-1#10;

        $u11 = virtualinvoke $u-1.<android.view.View: int getMeasuredWidth()>();

        $u12 = virtualinvoke $u-1.<android.view.View: int getMeasuredHeight()>();

        childLeft = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        childLeft = childLeft + $u16;

        childTop = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        childTop = childTop + $u17;

        $u11 = childLeft + $u11;

        $u12 = childTop + $u12;

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>(childLeft, childTop, $u11, $u12);

     label2:
        $u18 = $u18 + 1;

        goto label1;

     label3:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u19, $u20, topInset, $u-1#17, maxWidth#19, $u-1#23, $u-1#38, $u-1#76, $u-1#83;
        boolean stable, tabs;
        androidx.appcompat.widget.ActionBarContainer maxWidth;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams lp;
        android.view.View $u-1#44;
        android.graphics.Rect tabs#53, maxHeight;
        androidx.core.view.WindowInsetsCompat tabs#57, maxWidth#110;
        androidx.core.graphics.Insets $u-1#86;
        androidx.core.view.WindowInsetsCompat$Builder maxWidth#88;
        androidx.appcompat.widget.ContentFrameLayout maxWidth#100;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u19 := @parameter0: int;

        $u20 := @parameter1: int;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        topInset = 0;

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(maxWidth, $u19, 0, $u20, 0);

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $u-1;

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#17 = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredWidth()>();

        maxWidth#19 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $u-1#17 = $u-1#17 + maxWidth#19;

        maxWidth#19 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $u-1#17 = $u-1#17 + maxWidth#19;

        $u-1#23 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#17);

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#17 = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeight()>();

        maxWidth#19 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $u-1#17 = $u-1#17 + maxWidth#19;

        maxWidth#19 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $u-1#17 = $u-1#17 + maxWidth#19;

        maxWidth#19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#17);

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#17 = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredState()>();

        $u-1#17 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(0, $u-1#17);

        $u-1#38 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>(this);

        $u-1#38 = $u-1#38 & 256;

        if $u-1#38 == 0 goto label01;

        tabs = 1;

        goto label02;

     label01:
        tabs = 0;

     label02:
        stable = tabs;

        if tabs == 0 goto label04;

        topInset = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        tabs = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs>;

        if tabs == 0 goto label05;

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#44 = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()>();

        if $u-1#44 == null goto label03;

        $u-1#38 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        topInset = topInset + $u-1#38;

     label03:
        goto label05;

     label04:
        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1#38 = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: int getVisibility()>();

        if $u-1#38 == 8 goto label05;

        maxWidth = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        topInset = virtualinvoke maxWidth.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeight()>();

     label05:
        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        maxHeight = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke tabs#53.<android.graphics.Rect: void set(android.graphics.Rect)>(maxHeight);

        $u-1#38 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1#38 < 21 goto label06;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets> = tabs#57;

        goto label07;

     label06:
        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect>;

        maxHeight = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect>;

        virtualinvoke tabs#53.<android.graphics.Rect: void set(android.graphics.Rect)>(maxHeight);

     label07:
        tabs = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode>;

        if tabs != 0 goto label08;

        if stable != 0 goto label08;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $u-1#38 = tabs#53.<android.graphics.Rect: int top>;

        $u-1#38 = $u-1#38 + topInset;

        tabs#53.<android.graphics.Rect: int top> = $u-1#38;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $u-1#38 = tabs#53.<android.graphics.Rect: int bottom>;

        tabs#53.<android.graphics.Rect: int bottom> = $u-1#38;

        $u-1#38 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1#38 < 21 goto label10;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        tabs#57 = virtualinvoke tabs#57.<androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>(0, topInset, 0, 0);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets> = tabs#57;

        goto label10;

     label08:
        $u-1#38 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1#38 < 21 goto label09;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        $u-1#38 = virtualinvoke tabs#57.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        $u-1#76 = virtualinvoke tabs#57.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        topInset = $u-1#76 + topInset;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        $u-1#76 = virtualinvoke tabs#57.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        $u-1#83 = virtualinvoke tabs#57.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        $u-1#86 = staticinvoke <androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)>($u-1#38, topInset, $u-1#76, $u-1#83);

        maxWidth#88 = new androidx.core.view.WindowInsetsCompat$Builder;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        specialinvoke maxWidth#88.<androidx.core.view.WindowInsetsCompat$Builder: void <init>(androidx.core.view.WindowInsetsCompat)>(tabs#57);

        maxWidth#88 = virtualinvoke maxWidth#88.<androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)>($u-1#86);

        tabs#57 = virtualinvoke maxWidth#88.<androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets> = tabs#57;

        goto label10;

     label09:
        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect>;

        $u-1#38 = tabs#53.<android.graphics.Rect: int top>;

        topInset = $u-1#38 + topInset;

        tabs#53.<android.graphics.Rect: int top> = topInset;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect>;

        topInset = tabs#53.<android.graphics.Rect: int bottom>;

        tabs#53.<android.graphics.Rect: int bottom> = topInset;

     label10:
        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>(maxWidth#100, tabs#53, 1, 1, 1, 1);

        topInset = <android.os.Build$VERSION: int SDK_INT>;

        if topInset < 21 goto label11;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastInnerInsets>;

        maxWidth#110 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        stable = virtualinvoke tabs#57.<androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)>(maxWidth#110);

        if stable != 0 goto label11;

        tabs#57 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets>;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastInnerInsets> = tabs#57;

        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>(maxWidth#100, tabs#57);

        goto label12;

     label11:
        topInset = <android.os.Build$VERSION: int SDK_INT>;

        if topInset >= 21 goto label12;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsetsRect>;

        maxHeight = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect>;

        stable = virtualinvoke tabs#53.<android.graphics.Rect: boolean equals(java.lang.Object)>(maxHeight);

        if stable != 0 goto label12;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsetsRect>;

        maxHeight = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect>;

        virtualinvoke tabs#53.<android.graphics.Rect: void set(android.graphics.Rect)>(maxHeight);

        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        tabs#53 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect>;

        virtualinvoke maxWidth#100.<androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)>(tabs#53);

     label12:
        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(maxWidth#100, $u19, 0, $u20, 0);

        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $u-1 = virtualinvoke maxWidth#100.<androidx.appcompat.widget.ContentFrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $u-1;

        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        topInset = virtualinvoke maxWidth#100.<androidx.appcompat.widget.ContentFrameLayout: int getMeasuredWidth()>();

        $u-1#38 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        topInset = topInset + $u-1#38;

        $u-1#38 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        topInset = topInset + $u-1#38;

        $u-1#23 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#23, topInset);

        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        topInset = virtualinvoke maxWidth#100.<androidx.appcompat.widget.ContentFrameLayout: int getMeasuredHeight()>();

        $u-1#38 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        topInset = topInset + $u-1#38;

        $u-1#38 = lp.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        topInset = topInset + $u-1#38;

        maxWidth#19 = staticinvoke <java.lang.Math: int max(int,int)>(maxWidth#19, topInset);

        maxWidth#100 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        topInset = virtualinvoke maxWidth#100.<androidx.appcompat.widget.ContentFrameLayout: int getMeasuredState()>();

        $u-1#17 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($u-1#17, topInset);

        topInset = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingLeft()>();

        $u-1#38 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingRight()>();

        topInset = topInset + $u-1#38;

        $u-1#23 = $u-1#23 + topInset;

        topInset = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingTop()>();

        $u-1#38 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingBottom()>();

        topInset = topInset + $u-1#38;

        maxWidth#19 = maxWidth#19 + topInset;

        topInset = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getSuggestedMinimumHeight()>();

        maxWidth#19 = staticinvoke <java.lang.Math: int max(int,int)>(maxWidth#19, topInset);

        topInset = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getSuggestedMinimumWidth()>();

        $u-1#23 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#23, topInset);

        $u19 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($u-1#23, $u19, $u-1#17);

        $u-1#17 = $u-1#17 << 16;

        $u20 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(maxWidth#19, $u20, $u-1#17);

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void setMeasuredDimension(int,int)>($u19, $u20);

        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u2;
        float $u3, $u4;
        boolean $u5, $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u5 := @parameter3: boolean;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $u0 == 0 goto label4;

        if $u5 != 0 goto label1;

        goto label4;

     label1:
        $u5 = specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float)>($u4);

        if $u5 == 0 goto label2;

        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()>();

        goto label3;

     label2:
        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()>();

     label3:
        this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling> = 1;

        return 1;

     label4:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u2;
        float $u3, $u4;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        return 0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u1;
        int $u2, $u3;
        int[] $u4;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int[];

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[], int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u1;
        int $u2, $u3, $u5;
        int[] $u4;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int[];

        $u5 := @parameter4: int;

        if $u5 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])>($u1, $u2, $u3, $u4);

     label1:
        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u2;
        int $u3, $u4, $u5, $u6;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        $u3 = $u3 + $u4;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference> = $u3;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>($u3);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u1;
        int $u2, $u3, $u4, $u5, $u6;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        $u5 := @parameter4: int;

        $u6 := @parameter5: int;

        if $u6 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)>($u1, $u2, $u3, $u4, $u5);

     label1:
        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int, int[])
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u1;
        int $u2, $u3, $u4, $u5, $u6;
        int[] $u7;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        $u5 := @parameter4: int;

        $u6 := @parameter5: int;

        $u7 := @parameter6: int[];

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)>($u1, $u2, $u3, $u4, $u5, $u6);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u2, $u3;
        int $u4;
        androidx.core.view.NestedScrollingParentHelper $u0;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $u0#3;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $u0.<androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($u2, $u3, $u4);

        $u4 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference> = $u4;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $u0#3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $u0#3 == null goto label1;

        interfaceinvoke $u0#3.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStarted()>();

     label1:
        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u1, $u2;
        int $u3, $u4;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: android.view.View;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        if $u4 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($u1, $u2, $u3);

     label1:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u2, $u3;
        int $u4;
        androidx.appcompat.widget.ActionBarContainer $u0;
        boolean ret0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        $u4 = $u4 & 2;

        if $u4 == 0 goto label2;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u4 = virtualinvoke $u0.<androidx.appcompat.widget.ActionBarContainer: int getVisibility()>();

        if $u4 == 0 goto label1;

        goto label2;

     label1:
        ret0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        return ret0;

     label2:
        return 0;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u2, $u3;
        int $u4, $u5;
        boolean $u-1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.View;

        $u3 := @parameter1: android.view.View;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        if $u5 != 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>($u2, $u3, $u4);

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u3;
        int $u-1, $u0#3;
        boolean $u0;
        androidx.appcompat.widget.ActionBarContainer $u1;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $u0#6;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u3 := @parameter0: android.view.View;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $u0 == 0 goto label2;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling>;

        if $u0 != 0 goto label2;

        $u0#3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = virtualinvoke $u1.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        if $u0#3 > $u-1 goto label1;

        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()>();

        goto label2;

     label1:
        specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()>();

     label2:
        $u0#6 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $u0#6 == null goto label3;

        interfaceinvoke $u0#6.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStopped()>();

     label3:
        return;
    }

    public void onStopNestedScroll(android.view.View, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.View $u1;
        int $u2;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: android.view.View;

        $u2 := @parameter1: int;

        if $u2 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)>($u1);

     label1:
        return;
    }

    public void onWindowSystemUiVisibilityChanged(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u7, diff, barVisible;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $u5;
        boolean $u2, barVisible#7, stable;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u7 := @parameter0: int;

        diff = <android.os.Build$VERSION: int SDK_INT>;

        if diff < 16 goto label01;

        specialinvoke this.<android.view.ViewGroup: void onWindowSystemUiVisibilityChanged(int)>($u7);

     label01:
        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        diff = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        diff = diff ^ $u7;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility> = $u7;

        barVisible = $u7 & 4;

        $u2 = 1;

        if barVisible != 0 goto label02;

        barVisible#7 = 1;

        goto label03;

     label02:
        barVisible#7 = 0;

     label03:
        $u7 = $u7 & 256;

        if $u7 == 0 goto label04;

        stable = 1;

        goto label05;

     label04:
        stable = 0;

     label05:
        $u5 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $u5 == null goto label10;

        if stable != 0 goto label06;

        goto label07;

     label06:
        $u2 = 0;

     label07:
        interfaceinvoke $u5.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void enableContentAnimations(boolean)>($u2);

        if barVisible#7 != 0 goto label09;

        if stable != 0 goto label08;

        goto label09;

     label08:
        $u5 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        interfaceinvoke $u5.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void hideForSystem()>();

        goto label10;

     label09:
        $u5 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        interfaceinvoke $u5.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void showForSystem()>();

     label10:
        $u7 = diff & 256;

        if $u7 == 0 goto label11;

        $u5 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $u5 == null goto label11;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(this);

     label11:
        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u2;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: int;

        specialinvoke this.<android.view.ViewGroup: void onWindowVisibilityChanged(int)>($u2);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility> = $u2;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $u0 == null goto label1;

        interfaceinvoke $u0.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>($u2);

     label1:
        return;
    }

    void pullChildren()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.ContentFrameLayout $u0;
        int $u0#2;
        android.view.View $u-1;
        androidx.appcompat.widget.ActionBarContainer $u0#9;
        androidx.appcompat.widget.DecorToolbar $u-1#13;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        if $u0 != null goto label1;

        $u0#2 = <androidx.appcompat.R$id: int action_bar_activity_content>;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>($u0#2);

        $u0 = (androidx.appcompat.widget.ContentFrameLayout) $u-1;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent> = $u0;

        $u0#2 = <androidx.appcompat.R$id: int action_bar_container>;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>($u0#2);

        $u0#9 = (androidx.appcompat.widget.ActionBarContainer) $u-1;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop> = $u0#9;

        $u0#2 = <androidx.appcompat.R$id: int action_bar>;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>($u0#2);

        $u-1#13 = specialinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)>($u-1);

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar> = $u-1#13;

     label1:
        return;
    }

    public void restoreToolbarHierarchyState(android.util.SparseArray)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.util.SparseArray toolbarStates;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        toolbarStates := @parameter0: android.util.SparseArray;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)>(toolbarStates);

        return;
    }

    public void saveToolbarHierarchyState(android.util.SparseArray)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.util.SparseArray toolbarStates;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        toolbarStates := @parameter0: android.util.SparseArray;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)>(toolbarStates);

        return;
    }

    public void setActionBarHideOffset(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u4, $u-1;
        androidx.appcompat.widget.ActionBarContainer topHeight;
        float $u2;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u4 := @parameter0: int;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        topHeight = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u-1 = virtualinvoke topHeight.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        $u4 = staticinvoke <java.lang.Math: int min(int,int)>($u4, $u-1);

        $u4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u4);

        topHeight = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $u4 = neg $u4;

        $u2 = (float) $u4;

        virtualinvoke topHeight.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>($u2);

        return;
    }

    public void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $u3;
        int $u1;
        android.os.IBinder $u-1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u3 := @parameter0: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback> = $u3;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.os.IBinder getWindowToken()>();

        if $u-1 == null goto label1;

        $u3 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility>;

        interfaceinvoke $u3.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>($u1);

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        if $u1 == 0 goto label1;

        $u1 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)>($u1);

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(this);

     label1:
        return;
    }

    public void setHasNonEmbeddedTabs(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: boolean;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs> = $u1;

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u2, $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $u2 == $u0 goto label1;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll> = $u2;

        if $u2 != 0 goto label1;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>(0);

     label1:
        return;
    }

    public void setIcon(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: int;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setIcon(int)>($u2);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setLogo(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: int;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setLogo(int)>($u2);

        return;
    }

    public void setMenu(android.view.Menu, androidx.appcompat.view.menu.MenuPresenter$Callback)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.Menu $u2;
        androidx.appcompat.view.menu.MenuPresenter$Callback $u3;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.Menu;

        $u3 := @parameter1: androidx.appcompat.view.menu.MenuPresenter$Callback;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>($u2, $u3);

        return;
    }

    public void setMenuPrepared()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()>();

        return;
    }

    public void setOverlayMode(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u3;
        android.content.Context $u-1;
        android.content.pm.ApplicationInfo $u-1#3;
        int $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u3 := @parameter0: boolean;

        this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode> = $u3;

        if $u3 == 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $u0 = $u-1#3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $u0 >= 19 goto label1;

        $u3 = 1;

        goto label2;

     label1:
        $u3 = 0;

     label2:
        this.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay> = $u3;

        return;
    }

    public void setShowingForActionMode(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: boolean;

        return;
    }

    public void setUiOptions(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        int $u1;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u1 := @parameter0: int;

        return;
    }

    public void setWindowCallback(android.view.Window$Callback)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        android.view.Window$Callback $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: android.view.Window$Callback;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)>($u2);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        java.lang.CharSequence $u2;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $u2 := @parameter0: java.lang.CharSequence;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($u2);

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        return 0;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout this;
        boolean $u-1;
        androidx.appcompat.widget.DecorToolbar $u0;

        this := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke this.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $u0 = this.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $u-1 = interfaceinvoke $u0.<androidx.appcompat.widget.DecorToolbar: boolean showOverflowMenu()>();

        return $u-1;
    }
}
