public class androidx.core.content.res.TypedArrayUtils extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;

    private void <init>()
    {
        androidx.core.content.res.TypedArrayUtils this;

        this := @this: androidx.core.content.res.TypedArrayUtils;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getAttr(android.content.Context, int, int)
    {
        android.content.Context $u3;
        int $u4, $u5, $u1;
        android.util.TypedValue value;
        android.content.res.Resources$Theme $u-1;

        $u3 := @parameter0: android.content.Context;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        value = new android.util.TypedValue;

        specialinvoke value.<android.util.TypedValue: void <init>()>();

        $u-1 = virtualinvoke $u3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $u-1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($u4, value, 1);

        $u1 = value.<android.util.TypedValue: int resourceId>;

        if $u1 == 0 goto label1;

        return $u4;

     label1:
        return $u5;
    }

    public static boolean getBoolean(android.content.res.TypedArray, int, int, boolean)
    {
        android.content.res.TypedArray $u2;
        int $u3, $u4;
        boolean $u5;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: boolean;

        $u5 = virtualinvoke $u2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u4, $u5);

        $u5 = virtualinvoke $u2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u3, $u5);

        return $u5;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray $u1;
        int $u2, $u3;
        android.graphics.drawable.Drawable $u-1;

        $u1 := @parameter0: android.content.res.TypedArray;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($u2);

        if $u-1 != null goto label1;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($u3);

     label1:
        return $u-1;
    }

    public static int getInt(android.content.res.TypedArray, int, int, int)
    {
        android.content.res.TypedArray $u2;
        int $u3, $u4, $u5;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u4 = virtualinvoke $u2.<android.content.res.TypedArray: int getInt(int,int)>($u4, $u5);

        $u3 = virtualinvoke $u2.<android.content.res.TypedArray: int getInt(int,int)>($u3, $u4);

        return $u3;
    }

    public static boolean getNamedBoolean(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, boolean)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5;
        boolean $u6, $u-1;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u6 := @parameter4: boolean;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return $u6;

     label1:
        $u6 = virtualinvoke $u2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($u5, $u6);

        return $u6;
    }

    public static int getNamedColor(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5, $u6;
        boolean $u-1;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return $u6;

     label1:
        $u5 = virtualinvoke $u2.<android.content.res.TypedArray: int getColor(int,int)>($u5, $u6);

        return $u5;
    }

    public static android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int)
    {
        android.content.res.TypedArray $u4;
        org.xmlpull.v1.XmlPullParser $u5;
        android.content.res.Resources$Theme $u6;
        java.lang.String $u7;
        int $u8, $u1;
        boolean $u-1;
        android.util.TypedValue value;
        android.content.res.ColorStateList $u-1#10;
        android.content.res.Resources $u-1#12;
        java.lang.UnsupportedOperationException $u1#19;
        java.lang.StringBuilder $u2;

        $u4 := @parameter0: android.content.res.TypedArray;

        $u5 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u6 := @parameter2: android.content.res.Resources$Theme;

        $u7 := @parameter3: java.lang.String;

        $u8 := @parameter4: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u5, $u7);

        if $u-1 == 0 goto label3;

        value = new android.util.TypedValue;

        specialinvoke value.<android.util.TypedValue: void <init>()>();

        virtualinvoke $u4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u8, value);

        $u1 = value.<android.util.TypedValue: int type>;

        if $u1 == 2 goto label2;

        $u1 = value.<android.util.TypedValue: int type>;

        if $u1 < 28 goto label1;

        $u1 = value.<android.util.TypedValue: int type>;

        if $u1 > 31 goto label1;

        $u-1#10 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)>(value);

        return $u-1#10;

     label1:
        $u-1#12 = virtualinvoke $u4.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        $u8 = virtualinvoke $u4.<android.content.res.TypedArray: int getResourceId(int,int)>($u8, 0);

        $u-1#10 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>($u-1#12, $u8, $u6);

        return $u-1#10;

     label2:
        $u1#19 = new java.lang.UnsupportedOperationException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve attribute at index ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u8);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $u7 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1#19.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($u7);

        throw $u1#19;

     label3:
        return null;
    }

    private static android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
    {
        android.util.TypedValue $u1;
        android.content.res.ColorStateList $u-1;
        int $u0;

        $u1 := @parameter0: android.util.TypedValue;

        $u0 = $u1.<android.util.TypedValue: int data>;

        $u-1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($u0);

        return $u-1;
    }

    public static androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int, int)
    {
        android.content.res.TypedArray $u3;
        org.xmlpull.v1.XmlPullParser $u4;
        android.content.res.Resources$Theme $u5;
        java.lang.String $u6;
        int $u7, $u8, complexColor;
        boolean $u-1;
        android.util.TypedValue value;
        androidx.core.content.res.ComplexColorCompat $u-1#9;
        android.content.res.Resources $u-1#11;

        $u3 := @parameter0: android.content.res.TypedArray;

        $u4 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u5 := @parameter2: android.content.res.Resources$Theme;

        $u6 := @parameter3: java.lang.String;

        $u7 := @parameter4: int;

        $u8 := @parameter5: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u4, $u6);

        if $u-1 == 0 goto label2;

        value = new android.util.TypedValue;

        specialinvoke value.<android.util.TypedValue: void <init>()>();

        virtualinvoke $u3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($u7, value);

        complexColor = value.<android.util.TypedValue: int type>;

        if complexColor < 28 goto label1;

        complexColor = value.<android.util.TypedValue: int type>;

        if complexColor > 31 goto label1;

        $u7 = value.<android.util.TypedValue: int data>;

        $u-1#9 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>($u7);

        return $u-1#9;

     label1:
        $u-1#11 = virtualinvoke $u3.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        $u7 = virtualinvoke $u3.<android.content.res.TypedArray: int getResourceId(int,int)>($u7, 0);

        $u-1#9 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>($u-1#11, $u7, $u5);

        if $u-1#9 == null goto label2;

        return $u-1#9;

     label2:
        $u-1#9 = staticinvoke <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>($u8);

        return $u-1#9;
    }

    public static float getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5;
        float $u6;
        boolean $u-1;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u6 := @parameter4: float;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return $u6;

     label1:
        $u6 = virtualinvoke $u2.<android.content.res.TypedArray: float getFloat(int,float)>($u5, $u6);

        return $u6;
    }

    public static int getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5, $u6;
        boolean $u-1;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return $u6;

     label1:
        $u5 = virtualinvoke $u2.<android.content.res.TypedArray: int getInt(int,int)>($u5, $u6);

        return $u5;
    }

    public static int getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5, $u6;
        boolean $u-1;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return $u6;

     label1:
        $u5 = virtualinvoke $u2.<android.content.res.TypedArray: int getResourceId(int,int)>($u5, $u6);

        return $u5;
    }

    public static java.lang.String getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5;
        boolean $u-1;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return null;

     label1:
        $u4 = virtualinvoke $u2.<android.content.res.TypedArray: java.lang.String getString(int)>($u5);

        return $u4;
    }

    public static int getResourceId(android.content.res.TypedArray, int, int, int)
    {
        android.content.res.TypedArray $u2;
        int $u3, $u4, $u5;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u4 = virtualinvoke $u2.<android.content.res.TypedArray: int getResourceId(int,int)>($u4, $u5);

        $u3 = virtualinvoke $u2.<android.content.res.TypedArray: int getResourceId(int,int)>($u3, $u4);

        return $u3;
    }

    public static java.lang.String getString(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray $u1;
        int $u2, $u3;
        java.lang.String $u-1;

        $u1 := @parameter0: android.content.res.TypedArray;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: java.lang.String getString(int)>($u2);

        if $u-1 != null goto label1;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: java.lang.String getString(int)>($u3);

     label1:
        return $u-1;
    }

    public static java.lang.CharSequence getText(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray $u1;
        int $u2, $u3;
        java.lang.CharSequence $u-1;

        $u1 := @parameter0: android.content.res.TypedArray;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($u2);

        if $u-1 != null goto label1;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($u3);

     label1:
        return $u-1;
    }

    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray $u1;
        int $u2, $u3;
        java.lang.CharSequence[] $u-1;

        $u1 := @parameter0: android.content.res.TypedArray;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>($u2);

        if $u-1 != null goto label1;

        $u-1 = virtualinvoke $u1.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>($u3);

     label1:
        return $u-1;
    }

    public static boolean hasAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser $u1;
        java.lang.String $u2;

        $u1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $u2 := @parameter1: java.lang.String;

        $u2 = interfaceinvoke $u1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", $u2);

        if $u2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[])
    {
        android.content.res.Resources $u1;
        android.content.res.Resources$Theme $u2;
        android.util.AttributeSet $u3;
        int[] $u4;
        android.content.res.TypedArray $u-1;

        $u1 := @parameter0: android.content.res.Resources;

        $u2 := @parameter1: android.content.res.Resources$Theme;

        $u3 := @parameter2: android.util.AttributeSet;

        $u4 := @parameter3: int[];

        if $u2 != null goto label1;

        $u-1 = virtualinvoke $u1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($u3, $u4);

        return $u-1;

     label1:
        $u-1 = virtualinvoke $u2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($u3, $u4, 0, 0);

        return $u-1;
    }

    public static android.util.TypedValue peekNamedValue(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        android.content.res.TypedArray $u2;
        org.xmlpull.v1.XmlPullParser $u3;
        java.lang.String $u4;
        int $u5;
        boolean $u-1;
        android.util.TypedValue $u-1#3;

        $u2 := @parameter0: android.content.res.TypedArray;

        $u3 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $u4 := @parameter2: java.lang.String;

        $u5 := @parameter3: int;

        $u-1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($u3, $u4);

        if $u-1 != 0 goto label1;

        return null;

     label1:
        $u-1#3 = virtualinvoke $u2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($u5);

        return $u-1#3;
    }

    public static void <clinit>()
    {
        <androidx.core.content.res.TypedArrayUtils: java.lang.String NAMESPACE> = "http://schemas.android.com/apk/res/android";

        return;
    }
}
