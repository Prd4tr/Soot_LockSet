class androidx.constraintlayout.solver.widgets.analyzer.RunGroup extends java.lang.Object
{
    public static final int BASELINE;
    public static final int END;
    public static final int START;
    public static int index;
    int direction;
    public boolean dual;
    androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun;
    int groupIndex;
    androidx.constraintlayout.solver.widgets.analyzer.WidgetRun lastRun;
    public int position;
    java.util.ArrayList runs;

    public void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun, int)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun $u3;
        int $u4, $u0;
        java.util.ArrayList $u1;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u3 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun;

        $u4 := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int position> = 0;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean dual> = 0;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun> = null;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun lastRun> = null;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: java.util.ArrayList runs> = $u1;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int groupIndex> = 0;

        $u0 = <androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int index>;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int groupIndex> = $u0;

        $u0 = $u0 + 1;

        <androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int index> = $u0;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun> = $u3;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun lastRun> = $u3;

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int direction> = $u4;

        return;
    }

    private boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun, int)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun $u8, chainRun;
        int $u9;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u0;
        boolean[] $u0#2;
        boolean $u0#3;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode $u0#4, chainRun#18;
        java.util.List $u0#5;
        java.util.Iterator $u-1, $u-1#23;
        java.lang.Object $u-1#10;
        androidx.constraintlayout.solver.widgets.analyzer.Dependency dependency;
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun chainRun#21;
        java.util.ArrayList $u5;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u8 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun;

        $u9 := @parameter1: int;

        $u0 = $u8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u0#2 = $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean[] isTerminalWidget>;

        $u0#3 = $u0#2[$u9];

        if $u0#3 != 0 goto label01;

        return 0;

     label01:
        $u0#4 = $u8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u0#5 = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $u-1 = interfaceinvoke $u0#5.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $u0#3 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u0#3 == 0 goto label08;

        $u-1#10 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        dependency = (androidx.constraintlayout.solver.widgets.analyzer.Dependency) $u-1#10;

        $u0#3 = dependency instanceof androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;

        if $u0#3 == 0 goto label02;

        $u0#4 = (androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) dependency;

        chainRun = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        if chainRun != $u8 goto label03;

        goto label02;

     label03:
        chainRun = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        chainRun#18 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        if $u0#4 != chainRun#18 goto label02;

        $u0#3 = $u8 instanceof androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        if $u0#3 == 0 goto label06;

        chainRun#21 = (androidx.constraintlayout.solver.widgets.analyzer.ChainRun) $u8;

        $u5 = chainRun#21.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#23 = virtualinvoke $u5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $u0#3 = interfaceinvoke $u-1#23.<java.util.Iterator: boolean hasNext()>();

        if $u0#3 == 0 goto label05;

        $u-1#10 = interfaceinvoke $u-1#23.<java.util.Iterator: java.lang.Object next()>();

        chainRun = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#10;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int)>(chainRun, $u9);

        goto label04;

     label05:
        goto label07;

     label06:
        $u0#3 = $u8 instanceof androidx.constraintlayout.solver.widgets.analyzer.HelperReferences;

        if $u0#3 != 0 goto label07;

        $u0 = $u8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u0#2 = $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean[] isTerminalWidget>;

        $u0#2[$u9] = 0;

     label07:
        chainRun = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int)>(chainRun, $u9);

        goto label02;

     label08:
        $u0#4 = $u8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u0#5 = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $u-1 = interfaceinvoke $u0#5.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $u0#3 = interfaceinvoke $u-1.<java.util.Iterator: boolean hasNext()>();

        if $u0#3 == 0 goto label15;

        $u-1#10 = interfaceinvoke $u-1.<java.util.Iterator: java.lang.Object next()>();

        dependency = (androidx.constraintlayout.solver.widgets.analyzer.Dependency) $u-1#10;

        $u0#3 = dependency instanceof androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;

        if $u0#3 == 0 goto label09;

        $u0#4 = (androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) dependency;

        chainRun = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        if chainRun != $u8 goto label10;

        goto label09;

     label10:
        chainRun = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        chainRun#18 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        if $u0#4 != chainRun#18 goto label09;

        $u0#3 = $u8 instanceof androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        if $u0#3 == 0 goto label13;

        chainRun#21 = (androidx.constraintlayout.solver.widgets.analyzer.ChainRun) $u8;

        $u5 = chainRun#21.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: java.util.ArrayList widgets>;

        $u-1#23 = virtualinvoke $u5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $u0#3 = interfaceinvoke $u-1#23.<java.util.Iterator: boolean hasNext()>();

        if $u0#3 == 0 goto label12;

        $u-1#10 = interfaceinvoke $u-1#23.<java.util.Iterator: java.lang.Object next()>();

        chainRun = (androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) $u-1#10;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int)>(chainRun, $u9);

        goto label11;

     label12:
        goto label14;

     label13:
        $u0#3 = $u8 instanceof androidx.constraintlayout.solver.widgets.analyzer.HelperReferences;

        if $u0#3 != 0 goto label14;

        $u0 = $u8.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u0#2 = $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean[] isTerminalWidget>;

        $u0#2[$u9] = 0;

     label14:
        chainRun = $u0#4.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int)>(chainRun, $u9);

        goto label09;

     label15:
        return 0;
    }

    private long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode, long)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode $u11, nextNode;
        long $u12, position#2, $u7#16, $u7#25;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run, $u7;
        boolean position;
        java.util.List count;
        int $u-1, i, $u7#15;
        java.lang.Object $u-1#8;
        androidx.constraintlayout.solver.widgets.analyzer.Dependency dependency;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u11 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;

        $u12 := @parameter1: long;

        run = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        position = run instanceof androidx.constraintlayout.solver.widgets.analyzer.HelperReferences;

        if position == 0 goto label1;

        return $u12;

     label1:
        position#2 = $u12;

        count = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $u-1 = interfaceinvoke count.<java.util.List: int size()>();

        i = 0;

     label2:
        if i >= $u-1 goto label5;

        count = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $u-1#8 = interfaceinvoke count.<java.util.List: java.lang.Object get(int)>(i);

        dependency = (androidx.constraintlayout.solver.widgets.analyzer.Dependency) $u-1#8;

        position = dependency instanceof androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;

        if position == 0 goto label4;

        nextNode = (androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) dependency;

        $u7 = nextNode.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        if $u7 != run goto label3;

        goto label4;

     label3:
        $u7#15 = nextNode.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u7#16 = (long) $u7#15;

        $u7#16 = $u7#16 + $u12;

        $u7#16 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>(nextNode, $u7#16);

        position#2 = staticinvoke <java.lang.Math: long min(long,long)>(position#2, $u7#16);

     label4:
        i = i + 1;

        goto label2;

     label5:
        nextNode = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        if $u11 != nextNode goto label6;

        $u7#16 = virtualinvoke run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: long getWrapDimension()>();

        $u11 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u7#25 = $u12 - $u7#16;

        $u7#25 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>($u11, $u7#25);

        position#2 = staticinvoke <java.lang.Math: long min(long,long)>(position#2, $u7#25);

        $u12 = $u12 - $u7#16;

        $u11 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1 = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u7#16 = (long) $u-1;

        $u12 = $u12 - $u7#16;

        $u12 = staticinvoke <java.lang.Math: long min(long,long)>(position#2, $u12);

        return $u12;

     label6:
        return position#2;
    }

    private long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode, long)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode $u11, nextNode;
        long $u12, position#2, $u7#16, $u7#25;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run, $u7;
        boolean position;
        java.util.List count;
        int $u-1, i, $u7#15;
        java.lang.Object $u-1#8;
        androidx.constraintlayout.solver.widgets.analyzer.Dependency dependency;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u11 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;

        $u12 := @parameter1: long;

        run = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        position = run instanceof androidx.constraintlayout.solver.widgets.analyzer.HelperReferences;

        if position == 0 goto label1;

        return $u12;

     label1:
        position#2 = $u12;

        count = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $u-1 = interfaceinvoke count.<java.util.List: int size()>();

        i = 0;

     label2:
        if i >= $u-1 goto label5;

        count = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $u-1#8 = interfaceinvoke count.<java.util.List: java.lang.Object get(int)>(i);

        dependency = (androidx.constraintlayout.solver.widgets.analyzer.Dependency) $u-1#8;

        position = dependency instanceof androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;

        if position == 0 goto label4;

        nextNode = (androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) dependency;

        $u7 = nextNode.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun run>;

        if $u7 != run goto label3;

        goto label4;

     label3:
        $u7#15 = nextNode.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u7#16 = (long) $u7#15;

        $u7#16 = $u7#16 + $u12;

        $u7#16 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>(nextNode, $u7#16);

        position#2 = staticinvoke <java.lang.Math: long max(long,long)>(position#2, $u7#16);

     label4:
        i = i + 1;

        goto label2;

     label5:
        nextNode = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        if $u11 != nextNode goto label6;

        $u7#16 = virtualinvoke run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: long getWrapDimension()>();

        $u11 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u7#25 = $u12 + $u7#16;

        $u7#25 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>($u11, $u7#25);

        position#2 = staticinvoke <java.lang.Math: long max(long,long)>(position#2, $u7#25);

        $u12 = $u12 + $u7#16;

        $u11 = run.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1 = $u11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u7#16 = (long) $u-1;

        $u12 = $u12 - $u7#16;

        $u12 = staticinvoke <java.lang.Math: long max(long,long)>(position#2, $u12);

        return $u12;

     label6:
        return position#2;
    }

    public void add(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun $u2;
        java.util.ArrayList $u0;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u2 := @parameter0: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun;

        $u0 = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: java.util.ArrayList runs>;

        virtualinvoke $u0.<java.util.ArrayList: boolean add(java.lang.Object)>($u2);

        this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun lastRun> = $u2;

        return;
    }

    public long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer, int)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u27;
        int $u28, containerEnd#7;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun chainRun;
        boolean containerEnd, $u-1;
        androidx.constraintlayout.solver.widgets.analyzer.ChainRun chainRun#6;
        androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun chainRun#10;
        androidx.constraintlayout.solver.widgets.analyzer.DependencyNode chainRun#11, containerEnd#14, runWithStartTarget;
        androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun chainRun#12;
        java.util.List runWithStartTarget#18;
        long $u-1#27, $u-1#31, $u-1#35, chainRun#44;
        byte $u15;
        androidx.constraintlayout.solver.widgets.ConstraintWidget minPosition;
        float $u-1#68, $u6, gap, gap2;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u27 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u28 := @parameter1: int;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd = chainRun instanceof androidx.constraintlayout.solver.widgets.analyzer.ChainRun;

        if containerEnd == 0 goto label02;

        chainRun#6 = (androidx.constraintlayout.solver.widgets.analyzer.ChainRun) chainRun;

        containerEnd#7 = chainRun#6.<androidx.constraintlayout.solver.widgets.analyzer.ChainRun: int orientation>;

        if containerEnd#7 == $u28 goto label01;

        return 0L;

     label01:
        goto label04;

     label02:
        if $u28 != 0 goto label03;

        containerEnd = chainRun instanceof androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun;

        if containerEnd != 0 goto label04;

        return 0L;

     label03:
        containerEnd = chainRun instanceof androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun;

        if containerEnd != 0 goto label04;

        return 0L;

     label04:
        if $u28 != 0 goto label05;

        chainRun#10 = $u27.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun horizontalRun>;

        chainRun#11 = chainRun#10.<androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        goto label06;

     label05:
        chainRun#12 = $u27.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun verticalRun>;

        chainRun#11 = chainRun#12.<androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

     label06:
        if $u28 != 0 goto label07;

        chainRun#10 = $u27.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun horizontalRun>;

        containerEnd#14 = chainRun#10.<androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        goto label08;

     label07:
        chainRun#12 = $u27.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun verticalRun>;

        containerEnd#14 = chainRun#12.<androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

     label08:
        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        runWithStartTarget = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        runWithStartTarget#18 = runWithStartTarget.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List targets>;

        containerEnd = interfaceinvoke runWithStartTarget#18.<java.util.List: boolean contains(java.lang.Object)>(chainRun#11);

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        chainRun#11 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        runWithStartTarget#18 = chainRun#11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: java.util.List targets>;

        $u-1 = interfaceinvoke runWithStartTarget#18.<java.util.List: boolean contains(java.lang.Object)>(containerEnd#14);

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        $u-1#27 = virtualinvoke chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: long getWrapDimension()>();

        if containerEnd == 0 goto label13;

        if $u-1 == 0 goto label13;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u-1#31 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>(containerEnd#14, 0L);

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u-1#35 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>(containerEnd#14, 0L);

        $u-1#31 = $u-1#31 - $u-1#27;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        containerEnd#7 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        containerEnd#7 = neg containerEnd#7;

        chainRun#44 = (long) containerEnd#7;

        $u15 = $u-1#31 cmp chainRun#44;

        if $u15 < 0 goto label09;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        containerEnd#7 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        chainRun#44 = (long) containerEnd#7;

        $u-1#31 = $u-1#31 + chainRun#44;

     label09:
        $u-1#35 = neg $u-1#35;

        $u-1#35 = $u-1#35 - $u-1#27;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        containerEnd#7 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        chainRun#44 = (long) containerEnd#7;

        $u-1#35 = $u-1#35 - chainRun#44;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        containerEnd#7 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        chainRun#44 = (long) containerEnd#7;

        $u15 = $u-1#35 cmp chainRun#44;

        if $u15 < 0 goto label10;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        containerEnd#7 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        chainRun#44 = (long) containerEnd#7;

        $u-1#35 = $u-1#35 - chainRun#44;

     label10:
        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        minPosition = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u-1#68 = virtualinvoke minPosition.<androidx.constraintlayout.solver.widgets.ConstraintWidget: float getBiasPercent(int)>($u28);

        $u15 = $u-1#68 cmpl 0.0F;

        if $u15 <= 0 goto label11;

        $u6 = (float) $u-1#35;

        $u6 = $u6 / $u-1#68;

        gap = (float) $u-1#31;

        gap2 = 1.0F - $u-1#68;

        gap = gap / gap2;

        $u6 = $u6 + gap;

        $u-1#35 = (long) $u6;

        goto label12;

     label11:
        $u-1#35 = 0L;

     label12:
        $u6 = (float) $u-1#35;

        $u6 = $u6 * $u-1#68;

        $u6 = $u6 + 0.5F;

        $u-1#31 = (long) $u6;

        $u6 = (float) $u-1#35;

        $u-1#68 = 1.0F - $u-1#68;

        $u-1#68 = $u6 * $u-1#68;

        $u-1#68 = $u-1#68 + 0.5F;

        $u-1#35 = (long) $u-1#68;

        $u-1#27 = $u-1#31 + $u-1#27;

        $u-1#27 = $u-1#27 + $u-1#35;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u28 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#31 = (long) $u28;

        $u-1#27 = $u-1#31 + $u-1#27;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u28 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#31 = (long) $u28;

        $u-1#27 = $u-1#27 - $u-1#31;

        return $u-1#27;

     label13:
        if containerEnd == 0 goto label14;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        chainRun#11 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u28 = chainRun#11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#31 = (long) $u28;

        $u-1#31 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>(containerEnd#14, $u-1#31);

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u28 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#35 = (long) $u28;

        $u-1#27 = $u-1#35 + $u-1#27;

        $u-1#27 = staticinvoke <java.lang.Math: long max(long,long)>($u-1#31, $u-1#27);

        return $u-1#27;

     label14:
        if $u-1 == 0 goto label15;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        chainRun#11 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u28 = chainRun#11.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#31 = (long) $u28;

        $u-1#31 = specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long)>(containerEnd#14, $u-1#31);

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u28 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u28 = neg $u28;

        $u-1#35 = (long) $u28;

        $u-1#27 = $u-1#35 + $u-1#27;

        $u-1#31 = neg $u-1#31;

        $u-1#27 = staticinvoke <java.lang.Math: long max(long,long)>($u-1#31, $u-1#27);

        return $u-1#27;

     label15:
        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode start>;

        $u28 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#27 = (long) $u28;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        $u-1#31 = virtualinvoke chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: long getWrapDimension()>();

        $u-1#27 = $u-1#27 + $u-1#31;

        chainRun = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        containerEnd#14 = chainRun.<androidx.constraintlayout.solver.widgets.analyzer.WidgetRun: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode end>;

        $u28 = containerEnd#14.<androidx.constraintlayout.solver.widgets.analyzer.DependencyNode: int margin>;

        $u-1#31 = (long) $u28;

        $u-1#27 = $u-1#27 - $u-1#31;

        return $u-1#27;
    }

    public void defineTerminalWidgets(boolean, boolean)
    {
        androidx.constraintlayout.solver.widgets.analyzer.RunGroup this;
        boolean $u3, $u4;
        androidx.constraintlayout.solver.widgets.analyzer.WidgetRun $u0;

        this := @this: androidx.constraintlayout.solver.widgets.analyzer.RunGroup;

        $u3 := @parameter0: boolean;

        $u4 := @parameter1: boolean;

        if $u3 == 0 goto label1;

        $u0 = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        $u3 = $u0 instanceof androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun;

        if $u3 == 0 goto label1;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int)>($u0, 0);

     label1:
        if $u4 == 0 goto label2;

        $u0 = this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun firstRun>;

        $u3 = $u0 instanceof androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun;

        if $u3 == 0 goto label2;

        specialinvoke this.<androidx.constraintlayout.solver.widgets.analyzer.RunGroup: boolean defineTerminalWidget(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int)>($u0, 1);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int END> = 1;

        <androidx.constraintlayout.solver.widgets.analyzer.RunGroup: int BASELINE> = 2;

        return;
    }
}
