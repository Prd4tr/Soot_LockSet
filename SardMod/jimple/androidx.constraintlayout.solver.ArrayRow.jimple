public class androidx.constraintlayout.solver.ArrayRow extends java.lang.Object implements androidx.constraintlayout.solver.LinearSystem$Row
{
    private static final boolean DEBUG;
    private static final boolean FULL_NEW_CHECK;
    float constantValue;
    boolean isSimpleDefinition;
    boolean used;
    androidx.constraintlayout.solver.SolverVariable variable;
    public androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables;
    java.util.ArrayList variablesToUpdate;

    public void <init>()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        java.util.ArrayList $u1;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean used> = 0;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        this.<androidx.constraintlayout.solver.ArrayRow: java.util.ArrayList variablesToUpdate> = $u1;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        return;
    }

    public void <init>(androidx.constraintlayout.solver.Cache)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.Cache $u3;
        java.util.ArrayList $u1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.Cache;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean used> = 0;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        this.<androidx.constraintlayout.solver.ArrayRow: java.util.ArrayList variablesToUpdate> = $u1;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        $u0 = new androidx.constraintlayout.solver.ArrayLinkedVariables;

        specialinvoke $u0.<androidx.constraintlayout.solver.ArrayLinkedVariables: void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache)>(this, $u3);

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables> = $u0;

        return;
    }

    private boolean isNew(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3;
        androidx.constraintlayout.solver.LinearSystem $u4;
        int $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: androidx.constraintlayout.solver.LinearSystem;

        $u0 = $u3.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount>;

        if $u0 > 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private androidx.constraintlayout.solver.SolverVariable pickPivotInVariables(boolean[], androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        boolean[] $u12;
        androidx.constraintlayout.solver.SolverVariable $u13, pivot, $u-1#15;
        float value, $u-1#10;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables currentSize;
        int $u-1, i, $u9;
        byte v;
        boolean $u9#18;
        androidx.constraintlayout.solver.SolverVariable$Type $u9#19, $u10;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u12 := @parameter0: boolean[];

        $u13 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        value = 0.0F;

        pivot = null;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        i = 0;

     label1:
        if i >= $u-1 goto label5;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#10 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float getVariableValue(int)>(i);

        v = $u-1#10 cmpg 0.0F;

        if v >= 0 goto label4;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#15 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        if $u12 == null goto label2;

        $u9 = $u-1#15.<androidx.constraintlayout.solver.SolverVariable: int id>;

        $u9#18 = $u12[$u9];

        if $u9#18 != 0 goto label4;

     label2:
        if $u-1#15 == $u13 goto label4;

        $u9#19 = $u-1#15.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType>;

        $u10 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type SLACK>;

        if $u9#19 == $u10 goto label3;

        $u9#19 = $u-1#15.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType>;

        $u10 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type ERROR>;

        if $u9#19 != $u10 goto label4;

     label3:
        v = $u-1#10 cmpg value;

        if v >= 0 goto label4;

        value = $u-1#10;

        pivot = $u-1#15;

        goto label4;

     label4:
        i = i + 1;

        goto label1;

     label5:
        return pivot;
    }

    public androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.LinearSystem $u4;
        int $u5;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;
        androidx.constraintlayout.solver.SolverVariable $u-1;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u4 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $u5 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = virtualinvoke $u4.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)>($u5, "ep");

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u-1, 1.0F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = virtualinvoke $u4.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)>($u5, "em");

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u-1, -1.0F);

        return this;
    }

    public void addError(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u4;
        float weight;
        int $u1;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u1#12;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u4 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        weight = 1.0F;

        $u1 = $u4.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $u1 != 1 goto label1;

        weight = 1.0F;

        goto label5;

     label1:
        $u1 = $u4.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $u1 != 2 goto label2;

        weight = 1000.0F;

        goto label5;

     label2:
        $u1 = $u4.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $u1 != 3 goto label3;

        weight = 1000000.0F;

        goto label5;

     label3:
        $u1 = $u4.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $u1 != 4 goto label4;

        weight = 1.0E9F;

        goto label5;

     label4:
        $u1 = $u4.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $u1 != 5 goto label5;

        weight = 1.0E12F;

     label5:
        $u1#12 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1#12.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u4, weight);

        return;
    }

    androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3;
        int $u4;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;
        float $u1;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u1 = (float) $u4;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, $u1);

        return this;
    }

    boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.LinearSystem $u4;
        boolean addedExtra;
        androidx.constraintlayout.solver.SolverVariable $u-1;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u2;
        int $u-1#4;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u4 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        addedExtra = 0;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.solver.LinearSystem)>($u4);

        if $u-1 != null goto label1;

        addedExtra = 1;

        goto label2;

     label1:
        virtualinvoke this.<androidx.constraintlayout.solver.ArrayRow: void pivot(androidx.constraintlayout.solver.SolverVariable)>($u-1);

     label2:
        $u2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#4 = interfaceinvoke $u2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        if $u-1#4 != 0 goto label3;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 1;

     label3:
        return addedExtra;
    }

    androidx.constraintlayout.solver.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.LinearSystem $u13;
        androidx.constraintlayout.solver.SolverVariable$Type $u11, $u10;
        androidx.constraintlayout.solver.SolverVariable restrictedCandidate, unrestrictedCandidate, $u-1#15;
        float unrestrictedCandidateAmount, restrictedCandidateAmount, $u-1#12;
        boolean unrestrictedCandidateIsNew, restrictedCandidateIsNew, $u-1#21;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables currentSize;
        int $u-1, i;
        byte $u10#19;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u13 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        restrictedCandidate = null;

        unrestrictedCandidate = null;

        unrestrictedCandidateAmount = 0.0F;

        restrictedCandidateAmount = 0.0F;

        unrestrictedCandidateIsNew = 0;

        restrictedCandidateIsNew = 0;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        i = 0;

     label1:
        if i >= $u-1 goto label8;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#12 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float getVariableValue(int)>(i);

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#15 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        $u10 = $u-1#15.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType>;

        $u11 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED>;

        if $u10 != $u11 goto label4;

        if unrestrictedCandidate != null goto label2;

        unrestrictedCandidate = $u-1#15;

        unrestrictedCandidateAmount = $u-1#12;

        unrestrictedCandidateIsNew = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)>($u-1#15, $u13);

        goto label7;

     label2:
        $u10#19 = unrestrictedCandidateAmount cmpl $u-1#12;

        if $u10#19 <= 0 goto label3;

        unrestrictedCandidate = $u-1#15;

        unrestrictedCandidateAmount = $u-1#12;

        unrestrictedCandidateIsNew = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)>($u-1#15, $u13);

        goto label7;

     label3:
        if unrestrictedCandidateIsNew != 0 goto label7;

        $u-1#21 = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)>($u-1#15, $u13);

        if $u-1#21 == 0 goto label7;

        unrestrictedCandidate = $u-1#15;

        unrestrictedCandidateAmount = $u-1#12;

        unrestrictedCandidateIsNew = 1;

        goto label7;

     label4:
        if unrestrictedCandidate != null goto label7;

        $u10#19 = $u-1#12 cmpg 0.0F;

        if $u10#19 >= 0 goto label7;

        if restrictedCandidate != null goto label5;

        restrictedCandidate = $u-1#15;

        restrictedCandidateAmount = $u-1#12;

        restrictedCandidateIsNew = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)>($u-1#15, $u13);

        goto label7;

     label5:
        $u10#19 = restrictedCandidateAmount cmpl $u-1#12;

        if $u10#19 <= 0 goto label6;

        restrictedCandidate = $u-1#15;

        restrictedCandidateAmount = $u-1#12;

        restrictedCandidateIsNew = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)>($u-1#15, $u13);

        goto label7;

     label6:
        if restrictedCandidateIsNew != 0 goto label7;

        $u-1#21 = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)>($u-1#15, $u13);

        if $u-1#21 == 0 goto label7;

        restrictedCandidate = $u-1#15;

        restrictedCandidateAmount = $u-1#12;

        restrictedCandidateIsNew = 1;

     label7:
        i = i + 1;

        goto label1;

     label8:
        if unrestrictedCandidate == null goto label9;

        return unrestrictedCandidate;

     label9:
        return restrictedCandidate;
    }

    public void clear()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void clear()>();

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        return;
    }

    androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int, float, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u5, $u6, $u9, $u10;
        int $u7, $u11;
        float $u8, $u3, $u0;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u1;
        byte $u1#8;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u5 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u7 := @parameter2: int;

        $u8 := @parameter3: float;

        $u9 := @parameter4: androidx.constraintlayout.solver.SolverVariable;

        $u10 := @parameter5: androidx.constraintlayout.solver.SolverVariable;

        $u11 := @parameter6: int;

        if $u6 != $u9 goto label1;

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, 1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, 1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, -2.0F);

        return this;

     label1:
        $u1#8 = $u8 cmpl 0.5F;

        if $u1#8 != 0 goto label3;

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, 1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, -1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u9, -1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, 1.0F);

        if $u7 > 0 goto label2;

        if $u11 <= 0 goto label7;

     label2:
        $u7 = neg $u7;

        $u7 = $u7 + $u11;

        $u8 = (float) $u7;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u8;

        return this;

     label3:
        $u1#8 = $u8 cmpg 0.0F;

        if $u1#8 > 0 goto label4;

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, -1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, 1.0F);

        $u8 = (float) $u7;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u8;

        return this;

     label4:
        $u1#8 = $u8 cmpl 1.0F;

        if $u1#8 < 0 goto label5;

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, -1.0F);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u9, 1.0F);

        $u7 = neg $u11;

        $u8 = (float) $u7;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u8;

        return this;

     label5:
        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u3 = 1.0F - $u8;

        $u3 = $u3 * 1.0F;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, $u3);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u3 = 1.0F - $u8;

        $u3 = $u3 * -1.0F;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, $u3);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u3 = -1.0F * $u8;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u9, $u3);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u3 = $u8 * 1.0F;

        interfaceinvoke $u1.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, $u3);

        if $u7 > 0 goto label6;

        if $u11 <= 0 goto label7;

     label6:
        $u7 = neg $u7;

        $u3 = (float) $u7;

        $u0 = 1.0F - $u8;

        $u3 = $u3 * $u0;

        $u0 = (float) $u11;

        $u8 = $u0 * $u8;

        $u8 = $u3 + $u8;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u8;

     label7:
        return this;
    }

    androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u2;
        int $u3;
        float $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u2 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u3 := @parameter1: int;

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = $u2;

        $u0 = (float) $u3;

        $u2.<androidx.constraintlayout.solver.SolverVariable: float computedValue> = $u0;

        $u0 = (float) $u3;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u0;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 1;

        return this;
    }

    androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3, $u4;
        float $u5;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u5 := @parameter2: float;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, -1.0F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u4, $u5);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3, $u4, $u5, $u6;
        float $u7;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u5 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $u7 := @parameter4: float;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, -1.0F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u4, 1.0F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, $u7);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u7 = neg $u7;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, $u7);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float, float, float, androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        float $u16, $u17, $u18;
        androidx.constraintlayout.solver.SolverVariable $u19, $u21, $u23, $u25;
        int $u20, $u22, $u24, $u26;
        byte cw;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u13;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u16 := @parameter0: float;

        $u17 := @parameter1: float;

        $u18 := @parameter2: float;

        $u19 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $u20 := @parameter4: int;

        $u21 := @parameter5: androidx.constraintlayout.solver.SolverVariable;

        $u22 := @parameter6: int;

        $u23 := @parameter7: androidx.constraintlayout.solver.SolverVariable;

        $u24 := @parameter8: int;

        $u25 := @parameter9: androidx.constraintlayout.solver.SolverVariable;

        $u26 := @parameter10: int;

        cw = $u17 cmpl 0.0F;

        if cw == 0 goto label2;

        cw = $u16 cmpl $u18;

        if cw != 0 goto label1;

        goto label2;

     label1:
        $u16 = $u16 / $u17;

        $u17 = $u18 / $u17;

        $u16 = $u16 / $u17;

        $u20 = neg $u20;

        $u20 = $u20 - $u22;

        $u17 = (float) $u20;

        $u18 = (float) $u24;

        $u18 = $u18 * $u16;

        $u17 = $u17 + $u18;

        $u18 = (float) $u26;

        $u18 = $u18 * $u16;

        $u17 = $u17 + $u18;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u17;

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u19, 1.0F);

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u21, -1.0F);

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u25, $u16);

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u16 = neg $u16;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u23, $u16);

        return this;

     label2:
        $u20 = neg $u20;

        $u20 = $u20 - $u22;

        $u20 = $u20 + $u24;

        $u20 = $u20 + $u26;

        $u16 = (float) $u20;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u16;

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u19, 1.0F);

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u21, -1.0F);

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u25, 1.0F);

        $u13 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u13.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u23, -1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float, float, float, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        float $u7, $u8, $u9;
        androidx.constraintlayout.solver.SolverVariable $u10, $u11, $u12, $u13;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u5;
        byte nw;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u7 := @parameter0: float;

        $u8 := @parameter1: float;

        $u9 := @parameter2: float;

        $u10 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $u11 := @parameter4: androidx.constraintlayout.solver.SolverVariable;

        $u12 := @parameter5: androidx.constraintlayout.solver.SolverVariable;

        $u13 := @parameter6: androidx.constraintlayout.solver.SolverVariable;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        nw = $u8 cmpl 0.0F;

        if nw == 0 goto label4;

        nw = $u7 cmpl $u9;

        if nw != 0 goto label1;

        goto label4;

     label1:
        nw = $u7 cmpl 0.0F;

        if nw != 0 goto label2;

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, 1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u11, -1.0F);

        return this;

     label2:
        nw = $u9 cmpl 0.0F;

        if nw != 0 goto label3;

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u12, 1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u13, -1.0F);

        return this;

     label3:
        $u7 = $u7 / $u8;

        $u8 = $u9 / $u8;

        $u7 = $u7 / $u8;

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, 1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u11, -1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u13, $u7);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u7 = neg $u7;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u12, $u7);

        return this;

     label4:
        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u10, 1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u11, -1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u13, 1.0F);

        $u5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u12, -1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3;
        int $u4;
        float $u0;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0#3;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: int;

        if $u4 >= 0 goto label1;

        $u4 = $u4 * -1;

        $u0 = (float) $u4;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u0;

        $u0#3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0#3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, 1.0F);

        return this;

     label1:
        $u0 = (float) $u4;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u0;

        $u0#3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0#3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, -1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u5, $u6;
        int $u7, m;
        boolean inverse;
        float $u2;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u3;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u5 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u7 := @parameter2: int;

        inverse = 0;

        if $u7 == 0 goto label2;

        m = $u7;

        if $u7 >= 0 goto label1;

        m = $u7 * -1;

        inverse = 1;

     label1:
        $u2 = (float) m;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u2;

     label2:
        if inverse != 0 goto label3;

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, -1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, 1.0F);

        return this;

     label3:
        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, 1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, -1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3, $u5;
        int $u4;
        float $u0;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0#2;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: int;

        $u5 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $u0 = (float) $u4;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u0;

        $u0#2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0#2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, -1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u5, $u6, $u7;
        int $u8, m;
        boolean inverse;
        float $u2;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u3;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u5 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u7 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $u8 := @parameter3: int;

        inverse = 0;

        if $u8 == 0 goto label2;

        m = $u8;

        if $u8 >= 0 goto label1;

        m = $u8 * -1;

        inverse = 1;

     label1:
        $u2 = (float) m;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u2;

     label2:
        if inverse != 0 goto label3;

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, -1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, 1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u7, 1.0F);

        return this;

     label3:
        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, 1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, -1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u7, -1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u5, $u6, $u7;
        int $u8, m;
        boolean inverse;
        float $u2;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u3;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u5 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u7 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $u8 := @parameter3: int;

        inverse = 0;

        if $u8 == 0 goto label2;

        m = $u8;

        if $u8 >= 0 goto label1;

        m = $u8 * -1;

        inverse = 1;

     label1:
        $u2 = (float) m;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u2;

     label2:
        if inverse != 0 goto label3;

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, -1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, 1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u7, -1.0F);

        return this;

     label3:
        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, 1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, -1.0F);

        $u3 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u3.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u7, 1.0F);

        return this;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u3, $u4, $u5, $u6;
        float $u7;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u5 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $u7 := @parameter4: float;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u5, 0.5F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u6, 0.5F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u3, -0.5F);

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($u4, -0.5F);

        $u7 = neg $u7;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u7;

        return this;
    }

    void ensurePositiveConstant()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        float $u0;
        byte $u1;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0#6;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u1 = $u0 cmpg 0.0F;

        if $u1 >= 0 goto label1;

        $u0 = $u0 * -1.0F;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u0;

        $u0#6 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0#6.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void invert()>();

     label1:
        return;
    }

    public androidx.constraintlayout.solver.SolverVariable getKey()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable ret0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        ret0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        return ret0;
    }

    public androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem, boolean[])
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.LinearSystem $u2;
        boolean[] $u3;
        androidx.constraintlayout.solver.SolverVariable $u-1;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u2 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $u3 := @parameter1: boolean[];

        $u-1 = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.solver.SolverVariable)>($u3, null);

        return $u-1;
    }

    boolean hasKeyVariable()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u0;
        androidx.constraintlayout.solver.SolverVariable$Type $u0#2, $u1;
        float $u0#4;
        byte $u0#6;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $u0 == null goto label2;

        $u0#2 = $u0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType>;

        $u1 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED>;

        if $u0#2 == $u1 goto label1;

        $u0#4 = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u0#6 = $u0#4 cmpg 0.0F;

        if $u0#6 < 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean hasVariable(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u2;
        boolean $u-1;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u2 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: boolean contains(androidx.constraintlayout.solver.SolverVariable)>($u2);

        return $u-1;
    }

    public void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    {
        androidx.constraintlayout.solver.ArrayRow this, copiedRow#3;
        androidx.constraintlayout.solver.LinearSystem$Row $u7;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u4;
        boolean copiedRow;
        int i, $u-1;
        androidx.constraintlayout.solver.SolverVariable $u-1#11;
        float $u-1#14;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u7 := @parameter0: androidx.constraintlayout.solver.LinearSystem$Row;

        copiedRow = $u7 instanceof androidx.constraintlayout.solver.ArrayRow;

        if copiedRow == 0 goto label2;

        copiedRow#3 = (androidx.constraintlayout.solver.ArrayRow) $u7;

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        $u4 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u4.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void clear()>();

        i = 0;

     label1:
        $u4 = copiedRow#3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke $u4.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        if i >= $u-1 goto label2;

        $u4 = copiedRow#3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#11 = interfaceinvoke $u4.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        $u4 = copiedRow#3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#14 = interfaceinvoke $u4.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float getVariableValue(int)>(i);

        $u4 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u4.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void add(androidx.constraintlayout.solver.SolverVariable,float,boolean)>($u-1#11, $u-1#14, 1);

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        int $u-1;
        androidx.constraintlayout.solver.SolverVariable $u0;
        float $u0#2;
        byte $u0#3;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0#4;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $u0 != null goto label1;

        $u0#2 = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u0#3 = $u0#2 cmpl 0.0F;

        if $u0#3 != 0 goto label1;

        $u0#4 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke $u0#4.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        if $u-1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u2;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u2 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $u2 = specialinvoke this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.solver.SolverVariable)>(null, $u2);

        return $u2;
    }

    void pivot(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable $u4, amount;
        float $u-1, $u1#11;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u2;
        byte $u1;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u4 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        amount = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if amount == null goto label1;

        $u2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>(amount, -1.0F);

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

     label1:
        $u2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke $u2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)>($u4, 1);

        $u-1 = $u-1 * -1.0F;

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = $u4;

        $u1 = $u-1 cmpl 1.0F;

        if $u1 != 0 goto label2;

        return;

     label2:
        $u1#11 = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u1#11 = $u1#11 / $u-1;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u1#11;

        $u2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void divideByAmount(float)>($u-1);

        return;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u0;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        $u0 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke $u0.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: void clear()>();

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        this.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        return;
    }

    int sizeInBytes()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        int $u-1, size;
        androidx.constraintlayout.solver.SolverVariable $u1;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables $u1#5;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u-1 = 0;

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $u1 == null goto label1;

        $u-1 = 4;

     label1:
        $u-1 = $u-1 + 4;

        size = $u-1 + 4;

        $u1#5 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke $u1#5.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int sizeInBytes()>();

        $u-1 = size + $u-1;

        return $u-1;
    }

    java.lang.String toReadableString()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.SolverVariable addedVariable;
        java.lang.StringBuilder addedVariable#3;
        java.lang.String $u-1, s;
        boolean addedVariable#14;
        float count, amount;
        byte count#17;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables count#21;
        int $u-1#22, i;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        addedVariable = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if addedVariable != null goto label01;

        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $u-1 = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label01:
        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        addedVariable = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(addedVariable);

        $u-1 = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $u-1 = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        s = $u-1;

        addedVariable#14 = 0;

        count = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        count#17 = count cmpl 0.0F;

        if count#17 == 0 goto label03;

        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        count = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(count);

        s = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        addedVariable#14 = 1;

     label03:
        count#21 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1#22 = interfaceinvoke count#21.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        i = 0;

     label04:
        if i >= $u-1#22 goto label13;

        count#21 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        addedVariable = interfaceinvoke count#21.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        if addedVariable != null goto label05;

        goto label12;

     label05:
        count#21 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        count = interfaceinvoke count#21.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float getVariableValue(int)>(i);

        amount = count;

        count#17 = count cmpl 0.0F;

        if count#17 != 0 goto label06;

        goto label12;

     label06:
        $u-1 = virtualinvoke addedVariable.<androidx.constraintlayout.solver.SolverVariable: java.lang.String toString()>();

        if addedVariable#14 != 0 goto label07;

        count#17 = count cmpg 0.0F;

        if count#17 >= 0 goto label09;

        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- ");

        s = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        amount = count * -1.0F;

        goto label09;

     label07:
        count#17 = count cmpl 0.0F;

        if count#17 <= 0 goto label08;

        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        s = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        s = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        amount = count * -1.0F;

     label09:
        count#17 = amount cmpl 1.0F;

        if count#17 != 0 goto label10;

        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        s = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label10:
        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(amount);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        s = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        addedVariable#14 = 1;

     label12:
        i = i + 1;

        goto label04;

     label13:
        if addedVariable#14 != 0 goto label14;

        addedVariable#3 = new java.lang.StringBuilder;

        specialinvoke addedVariable#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.0");

        $u-1 = virtualinvoke addedVariable#3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1;

     label14:
        return s;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.ArrayRow this;
        java.lang.String $u-1;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.solver.ArrayRow: java.lang.String toReadableString()>();

        return $u-1;
    }

    public void updateFromFinalVariable(androidx.constraintlayout.solver.LinearSystem, androidx.constraintlayout.solver.SolverVariable, boolean)
    {
        androidx.constraintlayout.solver.ArrayRow this;
        androidx.constraintlayout.solver.LinearSystem $u4;
        androidx.constraintlayout.solver.SolverVariable $u5;
        boolean $u6, value;
        float $u-1, $u1, $u2;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables value#2;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u4 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $u5 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter2: boolean;

        value = $u5.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue>;

        if value != 0 goto label1;

        return;

     label1:
        value#2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke value#2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float get(androidx.constraintlayout.solver.SolverVariable)>($u5);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u2 = $u5.<androidx.constraintlayout.solver.SolverVariable: float computedValue>;

        $u-1 = $u2 * $u-1;

        $u1 = $u1 + $u-1;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u1;

        value#2 = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        interfaceinvoke value#2.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)>($u5, $u6);

        if $u6 == 0 goto label2;

        virtualinvoke $u5.<androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)>(this);

     label2:
        return;
    }

    public void updateFromRow(androidx.constraintlayout.solver.ArrayRow, boolean)
    {
        androidx.constraintlayout.solver.ArrayRow this, $u4;
        boolean $u5;
        float $u-1, $u1, $u2;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables value;
        androidx.constraintlayout.solver.SolverVariable $u1#7;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u4 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $u5 := @parameter1: boolean;

        value = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke value.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: float use(androidx.constraintlayout.solver.ArrayRow,boolean)>($u4, $u5);

        $u1 = this.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u2 = $u4.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $u-1 = $u2 * $u-1;

        $u1 = $u1 + $u-1;

        this.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $u1;

        if $u5 == 0 goto label1;

        $u1#7 = $u4.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        virtualinvoke $u1#7.<androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)>(this);

     label1:
        return;
    }

    public void updateFromSystem(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.ArrayRow this, $u4#29;
        androidx.constraintlayout.solver.LinearSystem $u8;
        int $u6, i, $u4;
        androidx.constraintlayout.solver.ArrayRow[] done;
        boolean done#3, $u4#13;
        androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables currentSize;
        androidx.constraintlayout.solver.SolverVariable $u-1;
        java.util.ArrayList $u4#14;
        java.util.Iterator $u-1#19;
        java.lang.Object $u-1#23;

        this := @this: androidx.constraintlayout.solver.ArrayRow;

        $u8 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        done = $u8.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow[] mRows>;

        $u6 = lengthof done;

        if $u6 != 0 goto label01;

        return;

     label01:
        done#3 = 0;

     label02:
        if done#3 != 0 goto label11;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u6 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: int getCurrentSize()>();

        i = 0;

     label03:
        if i >= $u6 goto label06;

        currentSize = this.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables variables>;

        $u-1 = interfaceinvoke currentSize.<androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>(i);

        $u4 = $u-1.<androidx.constraintlayout.solver.SolverVariable: int definitionId>;

        if $u4 != -1 goto label04;

        $u4#13 = $u-1.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue>;

        if $u4#13 == 0 goto label05;

     label04:
        $u4#14 = this.<androidx.constraintlayout.solver.ArrayRow: java.util.ArrayList variablesToUpdate>;

        virtualinvoke $u4#14.<java.util.ArrayList: boolean add(java.lang.Object)>($u-1);

     label05:
        i = i + 1;

        goto label03;

     label06:
        $u4#14 = this.<androidx.constraintlayout.solver.ArrayRow: java.util.ArrayList variablesToUpdate>;

        $u6 = virtualinvoke $u4#14.<java.util.ArrayList: int size()>();

        if $u6 <= 0 goto label10;

        $u4#14 = this.<androidx.constraintlayout.solver.ArrayRow: java.util.ArrayList variablesToUpdate>;

        $u-1#19 = virtualinvoke $u4#14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $u4#13 = interfaceinvoke $u-1#19.<java.util.Iterator: boolean hasNext()>();

        if $u4#13 == 0 goto label09;

        $u-1#23 = interfaceinvoke $u-1#19.<java.util.Iterator: java.lang.Object next()>();

        $u-1 = (androidx.constraintlayout.solver.SolverVariable) $u-1#23;

        $u4#13 = $u-1.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue>;

        if $u4#13 == 0 goto label08;

        virtualinvoke this.<androidx.constraintlayout.solver.ArrayRow: void updateFromFinalVariable(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,boolean)>($u8, $u-1, 1);

        goto label07;

     label08:
        done = $u8.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow[] mRows>;

        $u6 = $u-1.<androidx.constraintlayout.solver.SolverVariable: int definitionId>;

        $u4#29 = done[$u6];

        virtualinvoke this.<androidx.constraintlayout.solver.ArrayRow: void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean)>($u4#29, 1);

        goto label07;

     label09:
        $u4#14 = this.<androidx.constraintlayout.solver.ArrayRow: java.util.ArrayList variablesToUpdate>;

        virtualinvoke $u4#14.<java.util.ArrayList: void clear()>();

        goto label02;

     label10:
        done#3 = 1;

        goto label02;

     label11:
        return;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.ArrayRow: boolean FULL_NEW_CHECK> = 0;

        <androidx.constraintlayout.solver.ArrayRow: boolean DEBUG> = 0;

        return;
    }
}
