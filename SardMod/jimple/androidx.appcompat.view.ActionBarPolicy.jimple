public class androidx.appcompat.view.ActionBarPolicy extends java.lang.Object
{
    private android.content.Context mContext;

    private void <init>(android.content.Context)
    {
        androidx.appcompat.view.ActionBarPolicy this;
        android.content.Context $u1;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        $u1 := @parameter0: android.content.Context;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext> = $u1;

        return;
    }

    public static androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
    {
        android.content.Context $u1;
        androidx.appcompat.view.ActionBarPolicy $u0;

        $u1 := @parameter0: android.content.Context;

        $u0 = new androidx.appcompat.view.ActionBarPolicy;

        specialinvoke $u0.<androidx.appcompat.view.ActionBarPolicy: void <init>(android.content.Context)>($u1);

        return $u0;
    }

    public boolean enableHomeButtonByDefault()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        android.content.pm.ApplicationInfo $u-1;
        android.content.Context $u0;
        int $u0#3;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        $u0 = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1 = virtualinvoke $u0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $u0#3 = $u-1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $u0#3 >= 14 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getEmbeddedMenuWidthLimit()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        android.content.Context $u0;
        android.content.res.Resources $u-1;
        android.util.DisplayMetrics $u-1#4;
        int $u0#6;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        $u0 = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1 = virtualinvoke $u0.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#4 = virtualinvoke $u-1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $u0#6 = $u-1#4.<android.util.DisplayMetrics: int widthPixels>;

        $u0#6 = $u0#6 / 2;

        return $u0#6;
    }

    public int getMaxActionButtons()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        int widthDp, heightDp, smallest;
        android.content.Context configuration;
        android.content.res.Resources $u-1;
        android.content.res.Configuration $u-1#4;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        configuration = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1 = virtualinvoke configuration.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#4 = virtualinvoke $u-1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        widthDp = $u-1#4.<android.content.res.Configuration: int screenWidthDp>;

        heightDp = $u-1#4.<android.content.res.Configuration: int screenHeightDp>;

        smallest = $u-1#4.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if smallest > 600 goto label7;

        if widthDp > 600 goto label7;

        if widthDp <= 960 goto label1;

        if heightDp > 720 goto label7;

     label1:
        if widthDp <= 720 goto label2;

        if heightDp <= 960 goto label2;

        goto label7;

     label2:
        if widthDp >= 500 goto label6;

        if widthDp <= 640 goto label3;

        if heightDp > 480 goto label6;

     label3:
        if widthDp <= 480 goto label4;

        if heightDp <= 640 goto label4;

        goto label6;

     label4:
        if widthDp < 360 goto label5;

        return 3;

     label5:
        return 2;

     label6:
        return 4;

     label7:
        return 5;
    }

    public int getStackedTabMaxWidth()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        int $u1;
        android.content.Context $u0;
        android.content.res.Resources $u-1;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        $u0 = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1 = virtualinvoke $u0.<android.content.Context: android.content.res.Resources getResources()>();

        $u1 = <androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width>;

        $u1 = virtualinvoke $u-1.<android.content.res.Resources: int getDimensionPixelSize(int)>($u1);

        return $u1;
    }

    public int getTabContainerHeight()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        android.content.Context a;
        int[] height;
        int r, height#9;
        android.content.res.TypedArray $u-1;
        android.content.res.Resources $u-1#11;
        boolean $u-1#13;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        a = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        height = <androidx.appcompat.R$styleable: int[] ActionBar>;

        r = <androidx.appcompat.R$attr: int actionBarStyle>;

        $u-1 = virtualinvoke a.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, height, r, 0);

        r = <androidx.appcompat.R$styleable: int ActionBar_height>;

        r = virtualinvoke $u-1.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(r, 0);

        height#9 = r;

        a = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1#11 = virtualinvoke a.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#13 = virtualinvoke this.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        if $u-1#13 != 0 goto label1;

        height#9 = <androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height>;

        height#9 = virtualinvoke $u-1#11.<android.content.res.Resources: int getDimensionPixelSize(int)>(height#9);

        height#9 = staticinvoke <java.lang.Math: int min(int,int)>(r, height#9);

     label1:
        virtualinvoke $u-1.<android.content.res.TypedArray: void recycle()>();

        return height#9;
    }

    public boolean hasEmbeddedTabs()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        int $u1;
        android.content.Context $u0;
        android.content.res.Resources $u-1;
        boolean $u-1#4;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        $u0 = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1 = virtualinvoke $u0.<android.content.Context: android.content.res.Resources getResources()>();

        $u1 = <androidx.appcompat.R$bool: int abc_action_bar_embed_tabs>;

        $u-1#4 = virtualinvoke $u-1.<android.content.res.Resources: boolean getBoolean(int)>($u1);

        return $u-1#4;
    }

    public boolean showsOverflowMenuButton()
    {
        androidx.appcompat.view.ActionBarPolicy this;
        int $u0;
        android.content.Context $u0#2;
        android.view.ViewConfiguration $u-1;
        boolean $u-1#5;

        this := @this: androidx.appcompat.view.ActionBarPolicy;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 19 goto label1;

        return 1;

     label1:
        $u0#2 = this.<androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext>;

        $u-1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($u0#2);

        $u-1#5 = virtualinvoke $u-1.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        $u-1#5 = $u-1#5 ^ 1;

        return $u-1#5;
    }
}
