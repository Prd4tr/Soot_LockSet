class androidx.constraintlayout.motion.widget.MotionPaths extends java.lang.Object implements java.lang.Comparable
{
    static final int CARTESIAN;
    public static final boolean DEBUG;
    static final int OFF_HEIGHT;
    static final int OFF_PATH_ROTATE;
    static final int OFF_POSITION;
    static final int OFF_WIDTH;
    static final int OFF_X;
    static final int OFF_Y;
    public static final boolean OLD_WAY;
    static final int PERPENDICULAR;
    static final int SCREEN;
    public static final java.lang.String TAG;
    static java.lang.String[] names;
    java.util.LinkedHashMap attributes;
    float height;
    int mDrawPath;
    androidx.constraintlayout.motion.utils.Easing mKeyFrameEasing;
    int mMode;
    int mPathMotionArc;
    float mPathRotate;
    float mProgress;
    double[] mTempDelta;
    double[] mTempValue;
    float position;
    float time;
    float width;
    float x;
    float y;

    static void <clinit>()
    {
        java.lang.String[] $u-1;

        <androidx.constraintlayout.motion.widget.MotionPaths: java.lang.String TAG> = "MotionPaths";

        <androidx.constraintlayout.motion.widget.MotionPaths: int SCREEN> = 3;

        <androidx.constraintlayout.motion.widget.MotionPaths: int PERPENDICULAR> = 1;

        <androidx.constraintlayout.motion.widget.MotionPaths: boolean OLD_WAY> = 0;

        <androidx.constraintlayout.motion.widget.MotionPaths: int OFF_Y> = 2;

        <androidx.constraintlayout.motion.widget.MotionPaths: int OFF_X> = 1;

        <androidx.constraintlayout.motion.widget.MotionPaths: int OFF_WIDTH> = 3;

        <androidx.constraintlayout.motion.widget.MotionPaths: int OFF_POSITION> = 0;

        <androidx.constraintlayout.motion.widget.MotionPaths: int OFF_PATH_ROTATE> = 5;

        <androidx.constraintlayout.motion.widget.MotionPaths: int OFF_HEIGHT> = 4;

        <androidx.constraintlayout.motion.widget.MotionPaths: boolean DEBUG> = 0;

        <androidx.constraintlayout.motion.widget.MotionPaths: int CARTESIAN> = 2;

        $u-1 = newarray (java.lang.String)[6];

        $u-1[0] = "position";

        $u-1[1] = "x";

        $u-1[2] = "y";

        $u-1[3] = "width";

        $u-1[4] = "height";

        $u-1[5] = "pathRotate";

        <androidx.constraintlayout.motion.widget.MotionPaths: java.lang.String[] names> = $u-1;

        return;
    }

    public void <init>()
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        int $u1;
        java.util.LinkedHashMap $u1#4;
        double[] $u1#6;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mDrawPath> = 0;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float mPathRotate> = #NaNF;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float mProgress> = #NaNF;

        $u1 = <androidx.constraintlayout.motion.widget.Key: int UNSET>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mPathMotionArc> = $u1;

        $u1#4 = new java.util.LinkedHashMap;

        specialinvoke $u1#4.<java.util.LinkedHashMap: void <init>()>();

        this.<androidx.constraintlayout.motion.widget.MotionPaths: java.util.LinkedHashMap attributes> = $u1#4;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mMode> = 0;

        $u1#6 = newarray (double)[18];

        this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue> = $u1#6;

        $u1#6 = newarray (double)[18];

        this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempDelta> = $u1#6;

        return;
    }

    public void <init>(int, int, androidx.constraintlayout.motion.widget.KeyPosition, androidx.constraintlayout.motion.widget.MotionPaths, androidx.constraintlayout.motion.widget.MotionPaths)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u6, $u7;
        int $u3, $u4, $u1;
        androidx.constraintlayout.motion.widget.KeyPosition $u5;
        java.util.LinkedHashMap $u1#4;
        double[] $u1#6;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        $u5 := @parameter2: androidx.constraintlayout.motion.widget.KeyPosition;

        $u6 := @parameter3: androidx.constraintlayout.motion.widget.MotionPaths;

        $u7 := @parameter4: androidx.constraintlayout.motion.widget.MotionPaths;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mDrawPath> = 0;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float mPathRotate> = #NaNF;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float mProgress> = #NaNF;

        $u1 = <androidx.constraintlayout.motion.widget.Key: int UNSET>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mPathMotionArc> = $u1;

        $u1#4 = new java.util.LinkedHashMap;

        specialinvoke $u1#4.<java.util.LinkedHashMap: void <init>()>();

        this.<androidx.constraintlayout.motion.widget.MotionPaths: java.util.LinkedHashMap attributes> = $u1#4;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mMode> = 0;

        $u1#6 = newarray (double)[18];

        this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue> = $u1#6;

        $u1#6 = newarray (double)[18];

        this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempDelta> = $u1#6;

        $u1 = $u5.<androidx.constraintlayout.motion.widget.KeyPosition: int mPositionType>;

        if $u1 == 1 goto label2;

        if $u1 == 2 goto label1;

        virtualinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: void initCartesian(androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths)>($u5, $u6, $u7);

        return;

     label1:
        virtualinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: void initScreen(int,int,androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths)>($u3, $u4, $u5, $u6, $u7);

        return;

     label2:
        virtualinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: void initPath(androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths)>($u5, $u6, $u7);

        return;
    }

    private boolean diff(float, float)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        float $u5, $u6;
        boolean $u-1, $u-1#14;
        byte $u0;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u5 := @parameter0: float;

        $u6 := @parameter1: float;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($u5);

        if $u-1 != 0 goto label3;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($u6);

        if $u-1 == 0 goto label1;

        goto label3;

     label1:
        $u5 = $u5 - $u6;

        $u5 = staticinvoke <java.lang.Math: float abs(float)>($u5);

        $u0 = $u5 cmpl 1.0E-6F;

        if $u0 <= 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($u5);

        $u-1#14 = staticinvoke <java.lang.Float: boolean isNaN(float)>($u6);

        if $u-1 == $u-1#14 goto label4;

        return 1;

     label4:
        return 0;
    }

    private static final float xRotate(float, float, float, float, float, float)
    {
        float $u2, $u3, $u4, $u5, $u6, $u7;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u5 := @parameter3: float;

        $u6 := @parameter4: float;

        $u7 := @parameter5: float;

        $u6 = $u6 - $u4;

        $u5 = $u7 - $u5;

        $u3 = $u6 * $u3;

        $u2 = $u5 * $u2;

        $u2 = $u3 - $u2;

        $u2 = $u2 + $u4;

        return $u2;
    }

    private static final float yRotate(float, float, float, float, float, float)
    {
        float $u2, $u3, $u4, $u5, $u6, $u7;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        $u4 := @parameter2: float;

        $u5 := @parameter3: float;

        $u6 := @parameter4: float;

        $u7 := @parameter5: float;

        $u4 = $u6 - $u4;

        $u6 = $u7 - $u5;

        $u2 = $u4 * $u2;

        $u3 = $u6 * $u3;

        $u2 = $u2 + $u3;

        $u2 = $u2 + $u5;

        return $u2;
    }

    public void applyParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        androidx.constraintlayout.widget.ConstraintSet$Constraint $u8;
        androidx.constraintlayout.widget.ConstraintAttribute$AttributeType $u6, $u-1#26;
        androidx.constraintlayout.widget.ConstraintSet$Motion at;
        java.lang.String at#2;
        androidx.constraintlayout.motion.utils.Easing $u-1;
        int at#6;
        float at#8;
        androidx.constraintlayout.widget.ConstraintSet$PropertySet at#11;
        java.util.HashMap at#13;
        java.util.Set $u-1#14;
        java.util.Iterator $u-1#16;
        boolean $u-1#17;
        java.lang.Object $u-1#19;
        androidx.constraintlayout.widget.ConstraintAttribute attr;
        java.util.LinkedHashMap $u5;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u8 := @parameter0: androidx.constraintlayout.widget.ConstraintSet$Constraint;

        at = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: androidx.constraintlayout.widget.ConstraintSet$Motion motion>;

        at#2 = at.<androidx.constraintlayout.widget.ConstraintSet$Motion: java.lang.String mTransitionEasing>;

        $u-1 = staticinvoke <androidx.constraintlayout.motion.utils.Easing: androidx.constraintlayout.motion.utils.Easing getInterpolator(java.lang.String)>(at#2);

        this.<androidx.constraintlayout.motion.widget.MotionPaths: androidx.constraintlayout.motion.utils.Easing mKeyFrameEasing> = $u-1;

        at = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: androidx.constraintlayout.widget.ConstraintSet$Motion motion>;

        at#6 = at.<androidx.constraintlayout.widget.ConstraintSet$Motion: int mPathMotionArc>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mPathMotionArc> = at#6;

        at = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: androidx.constraintlayout.widget.ConstraintSet$Motion motion>;

        at#8 = at.<androidx.constraintlayout.widget.ConstraintSet$Motion: float mPathRotate>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float mPathRotate> = at#8;

        at = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: androidx.constraintlayout.widget.ConstraintSet$Motion motion>;

        at#6 = at.<androidx.constraintlayout.widget.ConstraintSet$Motion: int mDrawPath>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mDrawPath> = at#6;

        at#11 = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: androidx.constraintlayout.widget.ConstraintSet$PropertySet propertySet>;

        at#8 = at#11.<androidx.constraintlayout.widget.ConstraintSet$PropertySet: float mProgress>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float mProgress> = at#8;

        at#13 = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: java.util.HashMap mCustomConstraints>;

        $u-1#14 = virtualinvoke at#13.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#16 = interfaceinvoke $u-1#14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $u-1#17 = interfaceinvoke $u-1#16.<java.util.Iterator: boolean hasNext()>();

        if $u-1#17 == 0 goto label2;

        $u-1#19 = interfaceinvoke $u-1#16.<java.util.Iterator: java.lang.Object next()>();

        at#2 = (java.lang.String) $u-1#19;

        at#13 = $u8.<androidx.constraintlayout.widget.ConstraintSet$Constraint: java.util.HashMap mCustomConstraints>;

        $u-1#19 = virtualinvoke at#13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(at#2);

        attr = (androidx.constraintlayout.widget.ConstraintAttribute) $u-1#19;

        $u-1#26 = virtualinvoke attr.<androidx.constraintlayout.widget.ConstraintAttribute: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType getType()>();

        $u6 = <androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType STRING_TYPE>;

        if $u-1#26 == $u6 goto label1;

        $u5 = this.<androidx.constraintlayout.motion.widget.MotionPaths: java.util.LinkedHashMap attributes>;

        virtualinvoke $u5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(at#2, attr);

        goto label1;

     label2:
        return;
    }

    public int compareTo(androidx.constraintlayout.motion.widget.MotionPaths)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u3;
        float $u1, $u0;
        int $u-1;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u3 := @parameter0: androidx.constraintlayout.motion.widget.MotionPaths;

        $u0 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float position>;

        $u1 = $u3.<androidx.constraintlayout.motion.widget.MotionPaths: float position>;

        $u-1 = staticinvoke <java.lang.Float: int compare(float,float)>($u0, $u1);

        return $u-1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u1#2;
        int $u-1;
        java.lang.Object $u1;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u1 := @parameter0: java.lang.Object;

        $u1#2 = (androidx.constraintlayout.motion.widget.MotionPaths) $u1;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: int compareTo(androidx.constraintlayout.motion.widget.MotionPaths)>($u1#2);

        return $u-1;
    }

    void different(androidx.constraintlayout.motion.widget.MotionPaths, boolean[], java.lang.String[], boolean)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u6;
        boolean[] $u7;
        java.lang.String[] $u8;
        boolean $u9, $u2, $u-1;
        int c1, c;
        float $u3, $u4;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u6 := @parameter0: androidx.constraintlayout.motion.widget.MotionPaths;

        $u7 := @parameter1: boolean[];

        $u8 := @parameter2: java.lang.String[];

        $u9 := @parameter3: boolean;

        $u2 = $u7[0];

        $u3 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float position>;

        $u4 = $u6.<androidx.constraintlayout.motion.widget.MotionPaths: float position>;

        $u-1 = specialinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: boolean diff(float,float)>($u3, $u4);

        $u2 = $u2 | $u-1;

        $u7[0] = $u2;

        c = 1 + 1;

        $u2 = $u7[1];

        $u3 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        $u4 = $u6.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        $u-1 = specialinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: boolean diff(float,float)>($u3, $u4);

        $u-1 = $u-1 | $u9;

        $u2 = $u2 | $u-1;

        $u7[1] = $u2;

        c1 = c + 1;

        $u2 = $u7[c];

        $u3 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        $u4 = $u6.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        $u-1 = specialinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: boolean diff(float,float)>($u3, $u4);

        $u9 = $u-1 | $u9;

        $u9 = $u2 | $u9;

        $u7[c] = $u9;

        c = c1 + 1;

        $u9 = $u7[c1];

        $u3 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        $u4 = $u6.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        $u2 = specialinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: boolean diff(float,float)>($u3, $u4);

        $u9 = $u9 | $u2;

        $u7[c1] = $u9;

        $u9 = $u7[c];

        $u3 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        $u4 = $u6.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        $u2 = specialinvoke this.<androidx.constraintlayout.motion.widget.MotionPaths: boolean diff(float,float)>($u3, $u4);

        $u9 = $u9 | $u2;

        $u7[c] = $u9;

        return;
    }

    void fillStandard(double[], int[])
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        double[] $u7;
        int[] $u8;
        float[] set;
        float c;
        int c#15, i, c1, $u4;
        double $u4#23;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u7 := @parameter0: double[];

        $u8 := @parameter1: int[];

        set = newarray (float)[6];

        c = this.<androidx.constraintlayout.motion.widget.MotionPaths: float position>;

        set[0] = c;

        c = this.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        set[1] = c;

        c = this.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        set[2] = c;

        c = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        set[3] = c;

        c = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        set[4] = c;

        c = this.<androidx.constraintlayout.motion.widget.MotionPaths: float mPathRotate>;

        set[5] = c;

        c#15 = 0;

        i = 0;

     label1:
        c1 = lengthof $u8;

        if i >= c1 goto label3;

        c1 = $u8[i];

        $u4 = lengthof set;

        if c1 >= $u4 goto label2;

        $u4 = $u8[i];

        c = set[$u4];

        $u4#23 = (double) c;

        $u7[c#15] = $u4#23;

        c#15 = c#15 + 1;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    void getBounds(int[], double[], float[], int)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        int[] $u11;
        double[] $u12;
        float[] $u13;
        int $u14, $u8, i;
        float v_width, v_height, value#8;
        double value;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u11 := @parameter0: int[];

        $u12 := @parameter1: double[];

        $u13 := @parameter2: float[];

        $u14 := @parameter3: int;

        v_width = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        v_height = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        i = 0;

     label1:
        $u8 = lengthof $u11;

        if i >= $u8 goto label6;

        value = $u12[i];

        value#8 = (float) value;

        $u8 = $u11[i];

        if $u8 == 1 goto label5;

        if $u8 == 2 goto label4;

        if $u8 == 3 goto label3;

        if $u8 == 4 goto label2;

        goto label5;

     label2:
        v_height = value#8;

        goto label5;

     label3:
        v_width = value#8;

        goto label5;

     label4:
        goto label5;

     label5:
        i = i + 1;

        goto label1;

     label6:
        $u13[$u14] = v_width;

        $u14 = $u14 + 1;

        $u13[$u14] = v_height;

        return;
    }

    void getCenter(int[], double[], float[], int)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        int[] $u11;
        double[] $u12;
        float[] $u13;
        int $u14, $u8, i;
        float v_x, v_y, v_width, v_height, value#8;
        double value;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u11 := @parameter0: int[];

        $u12 := @parameter1: double[];

        $u13 := @parameter2: float[];

        $u14 := @parameter3: int;

        v_x = this.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        v_y = this.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        v_width = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        v_height = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        i = 0;

     label1:
        $u8 = lengthof $u11;

        if i >= $u8 goto label7;

        value = $u12[i];

        value#8 = (float) value;

        $u8 = $u11[i];

        if $u8 == 1 goto label5;

        if $u8 == 2 goto label4;

        if $u8 == 3 goto label3;

        if $u8 == 4 goto label2;

        goto label6;

     label2:
        v_height = value#8;

        goto label6;

     label3:
        v_width = value#8;

        goto label6;

     label4:
        v_y = value#8;

        goto label6;

     label5:
        v_x = value#8;

     label6:
        i = i + 1;

        goto label1;

     label7:
        v_width = v_width / 2.0F;

        v_x = v_width + v_x;

        v_x = v_x + 0.0F;

        $u13[$u14] = v_x;

        $u14 = $u14 + 1;

        v_height = v_height / 2.0F;

        v_y = v_height + v_y;

        v_y = v_y + 0.0F;

        $u13[$u14] = v_y;

        return;
    }

    int getCustomData(java.lang.String, double[], int)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        java.lang.String $u8;
        double[] $u9;
        int offset, $u10, $u-1#12, i#15;
        java.util.LinkedHashMap a;
        java.lang.Object $u-1;
        androidx.constraintlayout.widget.ConstraintAttribute a#5;
        float $u-1#9;
        double i;
        float[] f;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u8 := @parameter0: java.lang.String;

        $u9 := @parameter1: double[];

        $u10 := @parameter2: int;

        a = this.<androidx.constraintlayout.motion.widget.MotionPaths: java.util.LinkedHashMap attributes>;

        $u-1 = virtualinvoke a.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($u8);

        a#5 = (androidx.constraintlayout.widget.ConstraintAttribute) $u-1;

        offset = virtualinvoke a#5.<androidx.constraintlayout.widget.ConstraintAttribute: int noOfInterpValues()>();

        if offset != 1 goto label1;

        $u-1#9 = virtualinvoke a#5.<androidx.constraintlayout.widget.ConstraintAttribute: float getValueToInterpolate()>();

        i = (double) $u-1#9;

        $u9[$u10] = i;

        return 1;

     label1:
        $u-1#12 = virtualinvoke a#5.<androidx.constraintlayout.widget.ConstraintAttribute: int noOfInterpValues()>();

        f = newarray (float)[$u-1#12];

        virtualinvoke a#5.<androidx.constraintlayout.widget.ConstraintAttribute: void getValuesToInterpolate(float[])>(f);

        i#15 = 0;

     label2:
        if i#15 >= $u-1#12 goto label3;

        $u-1#9 = f[i#15];

        i = (double) $u-1#9;

        $u9[$u10] = i;

        i#15 = i#15 + 1;

        $u10 = $u10 + 1;

        goto label2;

     label3:
        return $u-1#12;
    }

    int getCustomDataCount(java.lang.String)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        java.lang.String $u2;
        java.util.LinkedHashMap $u0;
        java.lang.Object $u-1;
        androidx.constraintlayout.widget.ConstraintAttribute $u0#4;
        int $u-1#5;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u2 := @parameter0: java.lang.String;

        $u0 = this.<androidx.constraintlayout.motion.widget.MotionPaths: java.util.LinkedHashMap attributes>;

        $u-1 = virtualinvoke $u0.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($u2);

        $u0#4 = (androidx.constraintlayout.widget.ConstraintAttribute) $u-1;

        $u-1#5 = virtualinvoke $u0#4.<androidx.constraintlayout.widget.ConstraintAttribute: int noOfInterpValues()>();

        return $u-1#5;
    }

    void getRect(int[], double[], float[], int)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        int[] $u41, v_height;
        double[] $u42;
        float[] $u43;
        int $u44, i, delta_path;
        float v_x, v_y, v_width, v_height1, alpha#17, i#30, v_height#31, alpha#32, rotationX, x3, y3, y4, v_x#83, v_y#90, $u-1#105, $u-1#109;
        double alpha;
        boolean $u-1;
        byte midx;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u41 := @parameter0: int[];

        $u42 := @parameter1: double[];

        $u43 := @parameter2: float[];

        $u44 := @parameter3: int;

        v_height = $u41;

        v_x = this.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        v_y = this.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        v_width = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        v_height1 = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        i = 0;

     label01:
        delta_path = lengthof v_height;

        if i >= delta_path goto label07;

        alpha = $u42[i];

        alpha#17 = (float) alpha;

        delta_path = v_height[i];

        if delta_path == 0 goto label06;

        if delta_path == 1 goto label05;

        if delta_path == 2 goto label04;

        if delta_path == 3 goto label03;

        if delta_path == 4 goto label02;

        goto label06;

     label02:
        v_height1 = alpha#17;

        goto label06;

     label03:
        v_width = alpha#17;

        goto label06;

     label04:
        v_y = alpha#17;

        goto label06;

     label05:
        v_x = alpha#17;

        goto label06;

     label06:
        i = i + 1;

        v_height = $u41;

        goto label01;

     label07:
        i#30 = v_x;

        v_height#31 = v_y;

        alpha#32 = v_x + v_width;

        rotationX = v_y;

        x3 = alpha#32;

        y3 = v_y + v_height1;

        alpha#17 = v_x;

        y4 = y3;

        v_width = v_width / 2.0F;

        v_width = v_x + v_width;

        v_height1 = v_height1 / 2.0F;

        v_y = v_y + v_height1;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(#NaNF);

        if $u-1 != 0 goto label08;

        v_width = alpha#32 - v_x;

        v_width = v_width * #NaNF;

        v_width = v_x + v_width;

     label08:
        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(#NaNF);

        if $u-1 != 0 goto label09;

        v_y = y3 - v_height#31;

        v_y = v_y * #NaNF;

        v_y = v_height#31 + v_y;

     label09:
        midx = 1.0F cmpl 1.0F;

        if midx == 0 goto label10;

        v_x = i#30 + alpha#32;

        v_x = v_x / 2.0F;

        i#30 = i#30 - v_x;

        i#30 = i#30 * 1.0F;

        i#30 = i#30 + v_x;

        alpha#32 = alpha#32 - v_x;

        alpha#32 = alpha#32 * 1.0F;

        alpha#32 = alpha#32 + v_x;

        x3 = x3 - v_x;

        x3 = x3 * 1.0F;

        x3 = x3 + v_x;

        alpha#17 = alpha#17 - v_x;

        alpha#17 = alpha#17 * 1.0F;

        alpha#17 = alpha#17 + v_x;

     label10:
        midx = 1.0F cmpl 1.0F;

        if midx == 0 goto label11;

        v_x = v_height#31 + y3;

        v_x = v_x / 2.0F;

        v_height#31 = v_height#31 - v_x;

        v_height#31 = v_height#31 * 1.0F;

        v_height#31 = v_height#31 + v_x;

        rotationX = rotationX - v_x;

        rotationX = rotationX * 1.0F;

        rotationX = rotationX + v_x;

        y3 = y3 - v_x;

        y3 = y3 * 1.0F;

        y3 = y3 + v_x;

        y4 = y4 - v_x;

        y4 = y4 * 1.0F;

        y4 = y4 + v_x;

     label11:
        midx = 0.0F cmpl 0.0F;

        if midx == 0 goto label12;

        alpha = (double) 0.0F;

        alpha = staticinvoke <java.lang.Math: double toRadians(double)>(alpha);

        alpha = staticinvoke <java.lang.Math: double sin(double)>(alpha);

        v_x#83 = (float) alpha;

        alpha = (double) 0.0F;

        alpha = staticinvoke <java.lang.Math: double toRadians(double)>(alpha);

        alpha = staticinvoke <java.lang.Math: double cos(double)>(alpha);

        v_y#90 = (float) alpha;

        v_x = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float xRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, i#30, v_height#31);

        v_height#31 = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float yRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, i#30, v_height#31);

        v_height1 = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float xRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, alpha#32, rotationX);

        rotationX = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float yRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, alpha#32, rotationX);

        $u-1#105 = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float xRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, x3, y3);

        y3 = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float yRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, x3, y3);

        $u-1#109 = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float xRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, alpha#17, y4);

        y4 = staticinvoke <androidx.constraintlayout.motion.widget.MotionPaths: float yRotate(float,float,float,float,float,float)>(v_x#83, v_y#90, v_width, v_y, alpha#17, y4);

        i#30 = v_x;

        alpha#32 = v_height1;

        x3 = $u-1#105;

        alpha#17 = $u-1#109;

        goto label12;

     label12:
        i#30 = i#30 + 0.0F;

        v_height#31 = v_height#31 + 0.0F;

        alpha#32 = alpha#32 + 0.0F;

        rotationX = rotationX + 0.0F;

        x3 = x3 + 0.0F;

        y3 = y3 + 0.0F;

        alpha#17 = alpha#17 + 0.0F;

        y4 = y4 + 0.0F;

        i = $u44 + 1;

        $u43[$u44] = i#30;

        $u44 = i + 1;

        $u43[i] = v_height#31;

        i = $u44 + 1;

        $u43[$u44] = alpha#32;

        $u44 = i + 1;

        $u43[i] = rotationX;

        i = $u44 + 1;

        $u43[$u44] = x3;

        $u44 = i + 1;

        $u43[i] = y3;

        i = $u44 + 1;

        $u43[$u44] = alpha#17;

        $u43[i] = y4;

        return;
    }

    boolean hasCustomData(java.lang.String)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        java.lang.String $u2;
        boolean $u-1;
        java.util.LinkedHashMap $u0;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u2 := @parameter0: java.lang.String;

        $u0 = this.<androidx.constraintlayout.motion.widget.MotionPaths: java.util.LinkedHashMap attributes>;

        $u-1 = virtualinvoke $u0.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>($u2);

        return $u-1;
    }

    void initCartesian(androidx.constraintlayout.motion.widget.KeyPosition, androidx.constraintlayout.motion.widget.MotionPaths, androidx.constraintlayout.motion.widget.MotionPaths)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u24, $u25;
        androidx.constraintlayout.motion.widget.KeyPosition $u23;
        float scaleX, scaleY, pathVectorY, position#5, scaleWidth, scaleHeight, endCenterY, dydx, dxdy, path, dydy, position#26, startCenterY, endCenterX;
        int position;
        boolean $u-1;
        java.lang.String $u2;
        androidx.constraintlayout.motion.utils.Easing $u-1#96;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u23 := @parameter0: androidx.constraintlayout.motion.widget.KeyPosition;

        $u24 := @parameter1: androidx.constraintlayout.motion.widget.MotionPaths;

        $u25 := @parameter2: androidx.constraintlayout.motion.widget.MotionPaths;

        position = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: int mFramePosition>;

        scaleY = (float) position;

        position#5 = scaleY / 100.0F;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float time> = position#5;

        position = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: int mDrawPath>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mDrawPath> = position;

        scaleY = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentWidth>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(scaleY);

        if $u-1 == 0 goto label01;

        scaleWidth = position#5;

        goto label02;

     label01:
        scaleWidth = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentWidth>;

     label02:
        scaleY = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentHeight>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(scaleY);

        if $u-1 == 0 goto label03;

        scaleHeight = position#5;

        goto label04;

     label03:
        scaleHeight = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentHeight>;

     label04:
        endCenterY = $u25.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        dydx = $u24.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        scaleX = endCenterY - dydx;

        pathVectorY = $u25.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        dxdy = $u24.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        scaleY = pathVectorY - dxdy;

        path = this.<androidx.constraintlayout.motion.widget.MotionPaths: float time>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float position> = path;

        dydy = $u24.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        path = dydx / 2.0F;

        path = dydy + path;

        position#26 = $u24.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        startCenterY = dxdy / 2.0F;

        startCenterY = position#26 + startCenterY;

        endCenterX = $u25.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        endCenterY = endCenterY / 2.0F;

        endCenterY = endCenterX + endCenterY;

        endCenterX = $u25.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        pathVectorY = pathVectorY / 2.0F;

        pathVectorY = endCenterX + pathVectorY;

        path = endCenterY - path;

        pathVectorY = pathVectorY - startCenterY;

        startCenterY = path * position#5;

        dydy = dydy + startCenterY;

        startCenterY = scaleX * scaleWidth;

        startCenterY = startCenterY / 2.0F;

        dydy = dydy - startCenterY;

        position = (int) dydy;

        dydy = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = dydy;

        dydy = pathVectorY * position#5;

        position#26 = position#26 + dydy;

        dydy = scaleY * scaleHeight;

        dydy = dydy / 2.0F;

        position#26 = position#26 - dydy;

        position = (int) position#26;

        position#26 = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = position#26;

        position#26 = scaleX * scaleWidth;

        dydx = dydx + position#26;

        position = (int) dydx;

        dydx = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float width> = dydx;

        dydx = scaleY * scaleHeight;

        dxdy = dxdy + dydx;

        position = (int) dxdy;

        dxdy = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float height> = dxdy;

        dxdy = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentX>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(dxdy);

        if $u-1 == 0 goto label05;

        dydx = position#5;

        goto label06;

     label05:
        dydx = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentX>;

     label06:
        dxdy = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mAltPercentY>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(dxdy);

        if $u-1 == 0 goto label07;

        dxdy = 0.0F;

        goto label08;

     label07:
        dxdy = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mAltPercentY>;

     label08:
        position#26 = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentY>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#26);

        if $u-1 == 0 goto label09;

        goto label10;

     label09:
        position#5 = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentY>;

     label10:
        position#26 = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mAltPercentX>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#26);

        if $u-1 == 0 goto label11;

        position#26 = 0.0F;

        goto label12;

     label11:
        position#26 = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: float mAltPercentX>;

     label12:
        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mMode> = 2;

        dydy = $u24.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        dydx = path * dydx;

        dydx = dydy + dydx;

        position#26 = pathVectorY * position#26;

        dydx = dydx + position#26;

        scaleWidth = scaleX * scaleWidth;

        scaleWidth = scaleWidth / 2.0F;

        scaleWidth = dydx - scaleWidth;

        position = (int) scaleWidth;

        scaleWidth = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = scaleWidth;

        scaleWidth = $u24.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        scaleX = path * dxdy;

        scaleWidth = scaleWidth + scaleX;

        scaleX = pathVectorY * position#5;

        scaleWidth = scaleWidth + scaleX;

        scaleY = scaleY * scaleHeight;

        scaleY = scaleY / 2.0F;

        scaleY = scaleWidth - scaleY;

        position = (int) scaleY;

        scaleY = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = scaleY;

        $u2 = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: java.lang.String mTransitionEasing>;

        $u-1#96 = staticinvoke <androidx.constraintlayout.motion.utils.Easing: androidx.constraintlayout.motion.utils.Easing getInterpolator(java.lang.String)>($u2);

        this.<androidx.constraintlayout.motion.widget.MotionPaths: androidx.constraintlayout.motion.utils.Easing mKeyFrameEasing> = $u-1#96;

        position = $u23.<androidx.constraintlayout.motion.widget.KeyPosition: int mPathMotionArc>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mPathMotionArc> = position;

        return;
    }

    void initPath(androidx.constraintlayout.motion.widget.KeyPosition, androidx.constraintlayout.motion.widget.MotionPaths, androidx.constraintlayout.motion.widget.MotionPaths)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u26, $u27;
        androidx.constraintlayout.motion.widget.KeyPosition $u25;
        float normalY, position#5, position#7, scaleWidth, scaleX, scaleY, path, perpendicular, perpendicularX, perpendicularY, startCenterY, startCenterY#38, endCenterY, pathVectorX;
        int position;
        boolean $u-1;
        java.lang.String pathVectorX#102;
        androidx.constraintlayout.motion.utils.Easing $u-1#103;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u25 := @parameter0: androidx.constraintlayout.motion.widget.KeyPosition;

        $u26 := @parameter1: androidx.constraintlayout.motion.widget.MotionPaths;

        $u27 := @parameter2: androidx.constraintlayout.motion.widget.MotionPaths;

        position = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: int mFramePosition>;

        position#5 = (float) position;

        position#7 = position#5 / 100.0F;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float time> = position#7;

        position = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: int mDrawPath>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mDrawPath> = position;

        position#5 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentWidth>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#5);

        if $u-1 == 0 goto label1;

        scaleWidth = position#7;

        goto label2;

     label1:
        scaleWidth = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentWidth>;

     label2:
        position#5 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentHeight>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#5);

        if $u-1 == 0 goto label3;

        position#5 = position#7;

        goto label4;

     label3:
        position#5 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentHeight>;

     label4:
        scaleX = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        scaleY = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        scaleY = scaleX - scaleY;

        scaleX = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        path = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        scaleX = scaleX - path;

        path = this.<androidx.constraintlayout.motion.widget.MotionPaths: float time>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float position> = path;

        path = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentX>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(path);

        if $u-1 == 0 goto label5;

        goto label6;

     label5:
        position#7 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentX>;

     label6:
        perpendicular = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        perpendicularX = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        path = perpendicularX / 2.0F;

        path = path + perpendicular;

        perpendicularY = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        normalY = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        startCenterY = normalY / 2.0F;

        startCenterY#38 = perpendicularY + startCenterY;

        startCenterY = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        endCenterY = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        endCenterY = endCenterY / 2.0F;

        startCenterY = startCenterY + endCenterY;

        endCenterY = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        pathVectorX = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        pathVectorX = pathVectorX / 2.0F;

        endCenterY = endCenterY + pathVectorX;

        startCenterY = startCenterY - path;

        path = endCenterY - startCenterY#38;

        startCenterY#38 = startCenterY * position#7;

        perpendicular = perpendicular + startCenterY#38;

        startCenterY#38 = scaleY * scaleWidth;

        startCenterY#38 = startCenterY#38 / 2.0F;

        perpendicular = perpendicular - startCenterY#38;

        position = (int) perpendicular;

        perpendicular = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = perpendicular;

        perpendicular = path * position#7;

        perpendicularY = perpendicularY + perpendicular;

        perpendicular = scaleX * position#5;

        perpendicular = perpendicular / 2.0F;

        perpendicularY = perpendicularY - perpendicular;

        position = (int) perpendicularY;

        perpendicularY = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = perpendicularY;

        perpendicularY = scaleY * scaleWidth;

        perpendicularX = perpendicularX + perpendicularY;

        position = (int) perpendicularX;

        perpendicularX = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float width> = perpendicularX;

        perpendicularX = scaleX * position#5;

        normalY = normalY + perpendicularX;

        position = (int) normalY;

        normalY = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float height> = normalY;

        normalY = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentY>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(normalY);

        if $u-1 == 0 goto label7;

        normalY = 0.0F;

        goto label8;

     label7:
        normalY = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentY>;

     label8:
        perpendicularX = neg path;

        perpendicularX = perpendicularX * normalY;

        normalY = startCenterY * normalY;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mMode> = 1;

        perpendicularY = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        startCenterY = startCenterY * position#7;

        startCenterY = perpendicularY + startCenterY;

        scaleWidth = scaleY * scaleWidth;

        scaleWidth = scaleWidth / 2.0F;

        scaleWidth = startCenterY - scaleWidth;

        position = (int) scaleWidth;

        scaleWidth = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = scaleWidth;

        scaleY = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        position#7 = path * position#7;

        scaleY = scaleY + position#7;

        position#5 = scaleX * position#5;

        position#5 = position#5 / 2.0F;

        position#5 = scaleY - position#5;

        position = (int) position#5;

        position#5 = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = position#5;

        scaleX = scaleWidth + perpendicularX;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = scaleX;

        position#5 = position#5 + normalY;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = position#5;

        pathVectorX#102 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: java.lang.String mTransitionEasing>;

        $u-1#103 = staticinvoke <androidx.constraintlayout.motion.utils.Easing: androidx.constraintlayout.motion.utils.Easing getInterpolator(java.lang.String)>(pathVectorX#102);

        this.<androidx.constraintlayout.motion.widget.MotionPaths: androidx.constraintlayout.motion.utils.Easing mKeyFrameEasing> = $u-1#103;

        position = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: int mPathMotionArc>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mPathMotionArc> = position;

        return;
    }

    void initScreen(int, int, androidx.constraintlayout.motion.widget.KeyPosition, androidx.constraintlayout.motion.widget.MotionPaths, androidx.constraintlayout.motion.widget.MotionPaths)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this, $u26, $u27;
        int $u23, $u24, position;
        androidx.constraintlayout.motion.widget.KeyPosition $u25;
        float scaleX, scaleY, pathVectorY, position#3, position#5, scaleWidth, scaleHeight, endCenterY, parentHeight, path, $u15, startCenterX, startCenterY, endCenterX;
        boolean $u-1;
        java.lang.String $u12;
        androidx.constraintlayout.motion.utils.Easing $u-1#87;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u23 := @parameter0: int;

        $u24 := @parameter1: int;

        $u25 := @parameter2: androidx.constraintlayout.motion.widget.KeyPosition;

        $u26 := @parameter3: androidx.constraintlayout.motion.widget.MotionPaths;

        $u27 := @parameter4: androidx.constraintlayout.motion.widget.MotionPaths;

        position = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: int mFramePosition>;

        position#3 = (float) position;

        position#5 = position#3 / 100.0F;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float time> = position#5;

        position = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: int mDrawPath>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mDrawPath> = position;

        position#3 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentWidth>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#3);

        if $u-1 == 0 goto label1;

        scaleWidth = position#5;

        goto label2;

     label1:
        scaleWidth = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentWidth>;

     label2:
        position#3 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentHeight>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#3);

        if $u-1 == 0 goto label3;

        scaleHeight = position#5;

        goto label4;

     label3:
        scaleHeight = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentHeight>;

     label4:
        endCenterY = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        parentHeight = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        scaleX = endCenterY - parentHeight;

        pathVectorY = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        position#3 = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        scaleY = pathVectorY - position#3;

        path = this.<androidx.constraintlayout.motion.widget.MotionPaths: float time>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float position> = path;

        $u15 = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        path = parentHeight / 2.0F;

        startCenterX = $u15 + path;

        path = $u26.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        startCenterY = position#3 / 2.0F;

        startCenterY = path + startCenterY;

        endCenterX = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        endCenterY = endCenterY / 2.0F;

        endCenterY = endCenterX + endCenterY;

        endCenterX = $u27.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        pathVectorY = pathVectorY / 2.0F;

        pathVectorY = endCenterX + pathVectorY;

        startCenterX = endCenterY - startCenterX;

        pathVectorY = pathVectorY - startCenterY;

        startCenterX = startCenterX * position#5;

        $u15 = $u15 + startCenterX;

        startCenterX = scaleX * scaleWidth;

        startCenterX = startCenterX / 2.0F;

        $u15 = $u15 - startCenterX;

        position = (int) $u15;

        $u15 = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = $u15;

        position#5 = pathVectorY * position#5;

        position#5 = path + position#5;

        path = scaleY * scaleHeight;

        path = path / 2.0F;

        position#5 = position#5 - path;

        position = (int) position#5;

        position#5 = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = position#5;

        scaleWidth = scaleX * scaleWidth;

        scaleWidth = parentHeight + scaleWidth;

        position = (int) scaleWidth;

        scaleWidth = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float width> = scaleWidth;

        scaleY = scaleY * scaleHeight;

        position#3 = position#3 + scaleY;

        position = (int) position#3;

        position#3 = (float) position;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float height> = position#3;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mMode> = 3;

        position#3 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentX>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#3);

        if $u-1 != 0 goto label5;

        position#3 = (float) $u23;

        scaleY = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        position#3 = position#3 - scaleY;

        $u23 = (int) position#3;

        position#3 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentX>;

        scaleY = (float) $u23;

        position#3 = position#3 * scaleY;

        $u23 = (int) position#3;

        position#3 = (float) $u23;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = position#3;

        goto label5;

     label5:
        position#3 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentY>;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(position#3);

        if $u-1 != 0 goto label6;

        position#3 = (float) $u24;

        scaleY = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        position#3 = position#3 - scaleY;

        $u23 = (int) position#3;

        position#3 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: float mPercentY>;

        scaleY = (float) $u23;

        position#3 = position#3 * scaleY;

        $u23 = (int) position#3;

        position#3 = (float) $u23;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = position#3;

        goto label6;

     label6:
        $u12 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: java.lang.String mTransitionEasing>;

        $u-1#87 = staticinvoke <androidx.constraintlayout.motion.utils.Easing: androidx.constraintlayout.motion.utils.Easing getInterpolator(java.lang.String)>($u12);

        this.<androidx.constraintlayout.motion.widget.MotionPaths: androidx.constraintlayout.motion.utils.Easing mKeyFrameEasing> = $u-1#87;

        $u23 = $u25.<androidx.constraintlayout.motion.widget.KeyPosition: int mPathMotionArc>;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: int mPathMotionArc> = $u23;

        return;
    }

    void setBounds(float, float, float, float)
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        float $u1, $u2, $u3, $u4;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u1 := @parameter0: float;

        $u2 := @parameter1: float;

        $u3 := @parameter2: float;

        $u4 := @parameter3: float;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float x> = $u1;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float y> = $u2;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float width> = $u3;

        this.<androidx.constraintlayout.motion.widget.MotionPaths: float height> = $u4;

        return;
    }

    void setDpDt(float, float, float[], int[], double[], double[])
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        float $u23, $u24, deltaRight, deltaBottom, d_x, d_y, deltaV#9;
        float[] $u25;
        int[] $u26;
        double[] $u27, $u28;
        int i, deltaV;
        double value;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u23 := @parameter0: float;

        $u24 := @parameter1: float;

        $u25 := @parameter2: float[];

        $u26 := @parameter3: int[];

        $u27 := @parameter4: double[];

        $u28 := @parameter5: double[];

        d_x = 0.0F;

        d_y = 0.0F;

        deltaRight = 0.0F;

        deltaBottom = 0.0F;

        i = 0;

     label1:
        deltaV = lengthof $u26;

        if i >= deltaV goto label7;

        value = $u27[i];

        deltaV#9 = (float) value;

        value = $u28[i];

        deltaV = $u26[i];

        if deltaV == 1 goto label5;

        if deltaV == 2 goto label4;

        if deltaV == 3 goto label3;

        if deltaV == 4 goto label2;

        goto label6;

     label2:
        deltaBottom = deltaV#9;

        goto label6;

     label3:
        deltaRight = deltaV#9;

        goto label6;

     label4:
        d_y = deltaV#9;

        goto label6;

     label5:
        d_x = deltaV#9;

     label6:
        i = i + 1;

        goto label1;

     label7:
        deltaV#9 = 0.0F * deltaRight;

        deltaV#9 = deltaV#9 / 2.0F;

        d_x = d_x - deltaV#9;

        deltaV#9 = 0.0F * deltaBottom;

        deltaV#9 = deltaV#9 / 2.0F;

        d_y = d_y - deltaV#9;

        deltaV#9 = 0.0F + 1.0F;

        deltaRight = deltaV#9 * deltaRight;

        deltaV#9 = 0.0F + 1.0F;

        deltaBottom = deltaV#9 * deltaBottom;

        deltaRight = d_x + deltaRight;

        deltaBottom = d_y + deltaBottom;

        deltaV#9 = 1.0F - $u23;

        d_x = deltaV#9 * d_x;

        $u23 = deltaRight * $u23;

        $u23 = d_x + $u23;

        $u23 = $u23 + 0.0F;

        $u25[0] = $u23;

        $u23 = 1.0F - $u24;

        $u23 = $u23 * d_y;

        $u24 = deltaBottom * $u24;

        $u23 = $u23 + $u24;

        $u23 = $u23 + 0.0F;

        $u25[1] = $u23;

        return;
    }

    void setView(android.view.View, int[], double[], double[], double[])
    {
        androidx.constraintlayout.motion.widget.MotionPaths this;
        android.view.View $u26;
        int[] $u27;
        double[] $u28, $u29, $u30, v_y1#14;
        float v_x, v_y, v_width, v_height, dv_x, dv_y, dv_width, dv_height, path_rotate, v_width1, value, v_width#66;
        int v_y1, v_x#17, v_height#126, value#129, dv_x#130, dv_y#131, $u-1#132;
        double v_height1, v_y1#47, v_height1#55, value#111;
        boolean $u-1;
        byte deltaCycle;

        this := @this: androidx.constraintlayout.motion.widget.MotionPaths;

        $u26 := @parameter0: android.view.View;

        $u27 := @parameter1: int[];

        $u28 := @parameter2: double[];

        $u29 := @parameter3: double[];

        $u30 := @parameter4: double[];

        v_x = this.<androidx.constraintlayout.motion.widget.MotionPaths: float x>;

        v_y = this.<androidx.constraintlayout.motion.widget.MotionPaths: float y>;

        v_width = this.<androidx.constraintlayout.motion.widget.MotionPaths: float width>;

        v_height = this.<androidx.constraintlayout.motion.widget.MotionPaths: float height>;

        dv_x = 0.0F;

        dv_y = 0.0F;

        dv_width = 0.0F;

        dv_height = 0.0F;

        path_rotate = #NaNF;

        v_y1 = lengthof $u27;

        if v_y1 == 0 goto label01;

        v_y1#14 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue>;

        v_y1 = lengthof v_y1#14;

        v_x#17 = lengthof $u27;

        v_x#17 = v_x#17 - 1;

        v_x#17 = $u27[v_x#17];

        if v_y1 > v_x#17 goto label01;

        v_y1 = lengthof $u27;

        v_y1 = v_y1 - 1;

        v_y1 = $u27[v_y1];

        v_y1 = v_y1 + 1;

        v_y1#14 = newarray (double)[v_y1];

        this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue> = v_y1#14;

        v_y1#14 = newarray (double)[v_y1];

        this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempDelta> = v_y1#14;

        goto label01;

     label01:
        v_y1#14 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(v_y1#14, #NaN);

        v_y1 = 0;

     label02:
        v_x#17 = lengthof $u27;

        if v_y1 >= v_x#17 goto label03;

        v_y1#14 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue>;

        v_x#17 = $u27[v_y1];

        v_height1 = $u28[v_y1];

        v_y1#14[v_x#17] = v_height1;

        v_y1#14 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempDelta>;

        v_x#17 = $u27[v_y1];

        v_height1 = $u29[v_y1];

        v_y1#14[v_x#17] = v_height1;

        v_y1 = v_y1 + 1;

        goto label02;

     label03:
        v_y1 = 0;

     label04:
        $u28 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue>;

        v_x#17 = lengthof $u28;

        if v_y1 >= v_x#17 goto label17;

        v_height1 = $u28[v_y1];

        $u-1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v_height1);

        v_height1 = 0.0;

        if $u-1 == 0 goto label06;

        if $u30 == null goto label05;

        v_y1#47 = $u30[v_y1];

        deltaCycle = v_y1#47 cmpl 0.0;

        if deltaCycle != 0 goto label06;

        v_width1 = v_width;

        goto label10;

     label05:
        v_width1 = v_width;

        goto label10;

     label06:
        if $u30 == null goto label07;

        v_height1 = $u30[v_y1];

     label07:
        v_y1#47 = v_height1;

        $u28 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue>;

        v_height1#55 = $u28[v_y1];

        $u-1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v_height1#55);

        if $u-1 == 0 goto label08;

        goto label09;

     label08:
        $u28 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempValue>;

        v_y1#47 = $u28[v_y1];

        v_y1#47 = v_y1#47 + v_height1;

     label09:
        value = (float) v_y1#47;

        $u28 = this.<androidx.constraintlayout.motion.widget.MotionPaths: double[] mTempDelta>;

        v_width1 = v_width;

        v_height1 = $u28[v_y1];

        v_width#66 = (float) v_height1;

        if v_y1 == 0 goto label16;

        if v_y1 == 1 goto label15;

        if v_y1 == 2 goto label14;

        if v_y1 == 3 goto label13;

        if v_y1 == 4 goto label12;

        if v_y1 == 5 goto label11;

     label10:
        v_width = v_width1;

        goto label16;

     label11:
        path_rotate = value;

        goto label16;

     label12:
        dv_height = v_width#66;

        v_height = value;

        goto label16;

     label13:
        dv_width = v_width#66;

        v_width = value;

        goto label16;

     label14:
        v_y = value;

        dv_y = v_width#66;

        goto label16;

     label15:
        dv_x = v_width#66;

        v_x = value;

        goto label16;

     label16:
        v_y1 = v_y1 + 1;

        goto label04;

     label17:
        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(path_rotate);

        if $u-1 == 0 goto label19;

        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(#NaNF);

        if $u-1 != 0 goto label18;

        virtualinvoke $u26.<android.view.View: void setRotation(float)>(#NaNF);

        goto label22;

     label18:
        goto label22;

     label19:
        $u-1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(#NaNF);

        if $u-1 == 0 goto label20;

        v_width1 = 0.0F;

        goto label21;

     label20:
        v_width1 = #NaNF;

     label21:
        dv_width = dv_width / 2.0F;

        dv_x = dv_width + dv_x;

        dv_height = dv_height / 2.0F;

        dv_y = dv_height + dv_y;

        v_height1 = (double) v_width1;

        v_y1#47 = (double) path_rotate;

        v_height1#55 = (double) dv_y;

        value#111 = (double) dv_x;

        v_height1#55 = staticinvoke <java.lang.Math: double atan2(double,double)>(v_height1#55, value#111);

        v_height1#55 = staticinvoke <java.lang.Math: double toDegrees(double)>(v_height1#55);

        staticinvoke <java.lang.Double: boolean isNaN(double)>(v_y1#47);

        v_y1#47 = v_y1#47 + v_height1#55;

        staticinvoke <java.lang.Double: boolean isNaN(double)>(v_height1);

        v_height1 = v_height1 + v_y1#47;

        path_rotate = (float) v_height1;

        virtualinvoke $u26.<android.view.View: void setRotation(float)>(path_rotate);

     label22:
        path_rotate = v_x + 0.5F;

        v_y1 = (int) path_rotate;

        path_rotate = v_y + 0.5F;

        v_x#17 = (int) path_rotate;

        v_x = v_x + 0.5F;

        v_x = v_x + v_width;

        v_height#126 = (int) v_x;

        v_y = 0.5F + v_y;

        v_y = v_y + v_height;

        value#129 = (int) v_y;

        dv_x#130 = v_height#126 - v_y1;

        dv_y#131 = value#129 - v_x#17;

        $u-1#132 = virtualinvoke $u26.<android.view.View: int getMeasuredWidth()>();

        if dv_x#130 != $u-1#132 goto label24;

        $u-1#132 = virtualinvoke $u26.<android.view.View: int getMeasuredHeight()>();

        if dv_y#131 == $u-1#132 goto label23;

        goto label24;

     label23:
        $u-1 = 0;

        goto label25;

     label24:
        $u-1 = 1;

     label25:
        if $u-1 == 0 goto label26;

        dv_x#130 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(dv_x#130, 1073741824);

        dv_y#131 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(dv_y#131, 1073741824);

        virtualinvoke $u26.<android.view.View: void measure(int,int)>(dv_x#130, dv_y#131);

     label26:
        virtualinvoke $u26.<android.view.View: void layout(int,int,int,int)>(v_y1, v_x#17, v_height#126, value#129);

        return;
    }
}
