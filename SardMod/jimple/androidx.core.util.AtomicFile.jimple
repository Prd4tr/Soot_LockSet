public class androidx.core.util.AtomicFile extends java.lang.Object
{
    private final java.io.File mBackupName;
    private final java.io.File mBaseName;

    public void <init>(java.io.File)
    {
        androidx.core.util.AtomicFile this;
        java.io.File $u4, $u0;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1;

        this := @this: androidx.core.util.AtomicFile;

        $u4 := @parameter0: java.io.File;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.core.util.AtomicFile: java.io.File mBaseName> = $u4;

        $u0 = new java.io.File;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $u-1 = virtualinvoke $u4.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $u-1 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String)>($u-1);

        this.<androidx.core.util.AtomicFile: java.io.File mBackupName> = $u0;

        return;
    }

    private static boolean sync(java.io.FileOutputStream)
    {
        java.io.FileOutputStream $u1;
        java.io.FileDescriptor $u-1;
        java.io.IOException $u0;

        $u1 := @parameter0: java.io.FileOutputStream;

     label1:
        $u-1 = virtualinvoke $u1.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $u-1.<java.io.FileDescriptor: void sync()>();

     label2:
        return 1;

     label3:
        $u0 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void delete()
    {
        androidx.core.util.AtomicFile this;
        java.io.File $u0;

        this := @this: androidx.core.util.AtomicFile;

        $u0 = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke $u0.<java.io.File: boolean delete()>();

        $u0 = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        virtualinvoke $u0.<java.io.File: boolean delete()>();

        return;
    }

    public void failWrite(java.io.FileOutputStream)
    {
        androidx.core.util.AtomicFile this;
        java.io.FileOutputStream $u4;
        java.io.File e, $u1;
        java.io.IOException e#4;

        this := @this: androidx.core.util.AtomicFile;

        $u4 := @parameter0: java.io.FileOutputStream;

        if $u4 == null goto label8;

        staticinvoke <androidx.core.util.AtomicFile: boolean sync(java.io.FileOutputStream)>($u4);

     label1:
        virtualinvoke $u4.<java.io.FileOutputStream: void close()>();

     label2:
        e = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

     label3:
        virtualinvoke e.<java.io.File: boolean delete()>();

     label4:
        e = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        $u1 = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

     label5:
        virtualinvoke e.<java.io.File: boolean renameTo(java.io.File)>($u1);

     label6:
        return;

     label7:
        e#4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AtomicFile", "failWrite: Got exception:", e#4);

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public void finishWrite(java.io.FileOutputStream)
    {
        androidx.core.util.AtomicFile this;
        java.io.FileOutputStream $u4;
        java.io.File e;
        java.io.IOException e#2;

        this := @this: androidx.core.util.AtomicFile;

        $u4 := @parameter0: java.io.FileOutputStream;

        if $u4 == null goto label6;

        staticinvoke <androidx.core.util.AtomicFile: boolean sync(java.io.FileOutputStream)>($u4);

     label1:
        virtualinvoke $u4.<java.io.FileOutputStream: void close()>();

     label2:
        e = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

     label3:
        virtualinvoke e.<java.io.File: boolean delete()>();

     label4:
        return;

     label5:
        e#2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AtomicFile", "finishWrite: Got exception:", e#2);

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public java.io.File getBaseFile()
    {
        androidx.core.util.AtomicFile this;
        java.io.File ret0;

        this := @this: androidx.core.util.AtomicFile;

        ret0 = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        return ret0;
    }

    public java.io.FileInputStream openRead() throws java.io.FileNotFoundException
    {
        androidx.core.util.AtomicFile this;
        boolean $u-1;
        java.io.File $u0, $u1;
        java.io.FileInputStream $u0#6;

        this := @this: androidx.core.util.AtomicFile;

        $u0 = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        $u-1 = virtualinvoke $u0.<java.io.File: boolean exists()>();

        if $u-1 == 0 goto label1;

        $u0 = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke $u0.<java.io.File: boolean delete()>();

        $u0 = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        $u1 = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke $u0.<java.io.File: boolean renameTo(java.io.File)>($u1);

     label1:
        $u0#6 = new java.io.FileInputStream;

        $u0 = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        specialinvoke $u0#6.<java.io.FileInputStream: void <init>(java.io.File)>($u0);

        return $u0#6;
    }

    public byte[] readFully() throws java.io.IOException
    {
        androidx.core.util.AtomicFile this;
        java.io.FileInputStream $u-1;
        int pos, $u-1#3, newData;
        byte[] data, newData#16;
        java.lang.Throwable pos#17;

        this := @this: androidx.core.util.AtomicFile;

        $u-1 = virtualinvoke this.<androidx.core.util.AtomicFile: java.io.FileInputStream openRead()>();

        pos = 0;

     label01:
        $u-1#3 = virtualinvoke $u-1.<java.io.FileInputStream: int available()>();

        data = newarray (byte)[$u-1#3];

     label02:
        $u-1#3 = lengthof data;

     label03:
        $u-1#3 = $u-1#3 - pos;

     label04:
        $u-1#3 = virtualinvoke $u-1.<java.io.FileInputStream: int read(byte[],int,int)>(data, pos, $u-1#3);

     label05:
        if $u-1#3 > 0 goto label06;

        virtualinvoke $u-1.<java.io.FileInputStream: void close()>();

        return data;

     label06:
        pos = pos + $u-1#3;

     label07:
        $u-1#3 = virtualinvoke $u-1.<java.io.FileInputStream: int available()>();

        newData = lengthof data;

     label08:
        newData = newData - pos;

        if $u-1#3 <= newData goto label02;

        $u-1#3 = pos + $u-1#3;

     label09:
        newData#16 = newarray (byte)[$u-1#3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, 0, newData#16, 0, pos);

     label10:
        data = newData#16;

        goto label02;

     label11:
        pos#17 := @caughtexception;

        virtualinvoke $u-1.<java.io.FileInputStream: void close()>();

        goto label12;

     label12:
        throw pos#17;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public java.io.FileOutputStream startWrite() throws java.io.IOException
    {
        androidx.core.util.AtomicFile this;
        java.io.File str, parent;
        boolean $u-1;
        java.lang.StringBuilder str#11;
        java.lang.String $u-1#16;
        java.io.FileOutputStream str#20;
        java.io.FileNotFoundException str#22, str1;
        java.io.IOException $u3;

        this := @this: androidx.core.util.AtomicFile;

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        $u-1 = virtualinvoke str.<java.io.File: boolean exists()>();

        if $u-1 == 0 goto label2;

        str = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        $u-1 = virtualinvoke str.<java.io.File: boolean exists()>();

        if $u-1 != 0 goto label1;

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        parent = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        $u-1 = virtualinvoke str.<java.io.File: boolean renameTo(java.io.File)>(parent);

        if $u-1 != 0 goto label2;

        str#11 = new java.lang.StringBuilder;

        specialinvoke str#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t rename file ");

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(str);

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to backup file ");

        str = this.<androidx.core.util.AtomicFile: java.io.File mBackupName>;

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(str);

        $u-1#16 = virtualinvoke str#11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AtomicFile", $u-1#16);

        goto label2;

     label1:
        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke str.<java.io.File: boolean delete()>();

     label2:
        str#20 = new java.io.FileOutputStream;

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

     label3:
        specialinvoke str#20.<java.io.FileOutputStream: void <init>(java.io.File)>(str);

     label4:
        return str#20;

     label5:
        str#22 := @caughtexception;

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        str = virtualinvoke str.<java.io.File: java.io.File getParentFile()>();

        $u-1 = virtualinvoke str.<java.io.File: boolean mkdirs()>();

        if $u-1 == 0 goto label9;

        str#20 = new java.io.FileOutputStream;

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

     label6:
        specialinvoke str#20.<java.io.FileOutputStream: void <init>(java.io.File)>(str);

     label7:
        return str#20;

     label8:
        str1 := @caughtexception;

        $u3 = new java.io.IOException;

        str#11 = new java.lang.StringBuilder;

        specialinvoke str#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create ");

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(str);

        $u-1#16 = virtualinvoke str#11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<java.io.IOException: void <init>(java.lang.String)>($u-1#16);

        throw $u3;

     label9:
        $u3 = new java.io.IOException;

        str#11 = new java.lang.StringBuilder;

        specialinvoke str#11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create directory ");

        str = this.<androidx.core.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke str#11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(str);

        $u-1#16 = virtualinvoke str#11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<java.io.IOException: void <init>(java.lang.String)>($u-1#16);

        throw $u3;

        catch java.io.FileNotFoundException from label3 to label4 with label5;
        catch java.io.FileNotFoundException from label6 to label7 with label8;
    }
}
