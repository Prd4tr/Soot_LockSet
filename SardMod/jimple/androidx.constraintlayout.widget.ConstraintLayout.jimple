public class androidx.constraintlayout.widget.ConstraintLayout extends android.view.ViewGroup
{
    private static final boolean DEBUG;
    private static final boolean DEBUG_DRAW_CONSTRAINTS;
    public static final int DESIGN_INFO_ID;
    private static final boolean MEASURE;
    private static final java.lang.String TAG;
    private static final boolean USE_CONSTRAINTS_HELPER;
    public static final java.lang.String VERSION;
    android.util.SparseArray mChildrenByIds;
    private java.util.ArrayList mConstraintHelpers;
    protected androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec;
    private androidx.constraintlayout.widget.ConstraintSet mConstraintSet;
    private int mConstraintSetId;
    private androidx.constraintlayout.widget.ConstraintsChangedListener mConstraintsChangedListener;
    private java.util.HashMap mDesignIds;
    protected boolean mDirtyHierarchy;
    private int mLastMeasureHeight;
    int mLastMeasureHeightMode;
    int mLastMeasureHeightSize;
    private int mLastMeasureWidth;
    int mLastMeasureWidthMode;
    int mLastMeasureWidthSize;
    protected androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget;
    private int mMaxHeight;
    private int mMaxWidth;
    androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer;
    private androidx.constraintlayout.solver.Metrics mMetrics;
    private int mMinHeight;
    private int mMinWidth;
    private int mOnMeasureHeightMeasureSpec;
    private int mOnMeasureWidthMeasureSpec;
    private int mOptimizationLevel;
    private android.util.SparseArray mTempMapIdToWidget;

    public void <init>(android.content.Context)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.content.Context $u5;
        java.util.HashMap $u3;
        android.util.SparseArray $u0;
        java.util.ArrayList $u0#2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0#4;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer $u2;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u5 := @parameter0: android.content.Context;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context)>($u5);

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $u0;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>(int)>(4);

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $u0#2;

        $u0#4 = new androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $u0#4.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $u0#4;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId> = -1;

        $u3 = new java.util.HashMap;

        specialinvoke $u3.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds> = $u3;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $u0;

        $u2 = new androidx.constraintlayout.widget.ConstraintLayout$Measurer;

        specialinvoke $u2.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout)>(this, this);

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer> = $u2;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void init(android.util.AttributeSet,int,int)>(null, 0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.content.Context $u4;
        android.util.AttributeSet $u5;
        java.util.HashMap $u2;
        android.util.SparseArray $u0;
        java.util.ArrayList $u0#2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0#4;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer $u1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($u4, $u5);

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $u0;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>(int)>(4);

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $u0#2;

        $u0#4 = new androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $u0#4.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $u0#4;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId> = -1;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds> = $u2;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $u0;

        $u1 = new androidx.constraintlayout.widget.ConstraintLayout$Measurer;

        specialinvoke $u1.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout)>(this, this);

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer> = $u1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void init(android.util.AttributeSet,int,int)>($u5, 0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.content.Context $u4;
        android.util.AttributeSet $u5;
        int $u6;
        java.util.HashMap $u2;
        android.util.SparseArray $u0;
        java.util.ArrayList $u0#2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0#4;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer $u1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.util.AttributeSet;

        $u6 := @parameter2: int;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($u4, $u5, $u6);

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $u0;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>(int)>(4);

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $u0#2;

        $u0#4 = new androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $u0#4.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $u0#4;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId> = -1;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds> = $u2;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $u0;

        $u1 = new androidx.constraintlayout.widget.ConstraintLayout$Measurer;

        specialinvoke $u1.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout)>(this, this);

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer> = $u1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void init(android.util.AttributeSet,int,int)>($u5, $u6, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.content.Context $u4;
        android.util.AttributeSet $u5;
        int $u6, $u7;
        java.util.HashMap $u2;
        android.util.SparseArray $u0;
        java.util.ArrayList $u0#2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0#4;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer $u1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.util.AttributeSet;

        $u6 := @parameter2: int;

        $u7 := @parameter3: int;

        specialinvoke this.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($u4, $u5, $u6, $u7);

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $u0;

        $u0#2 = new java.util.ArrayList;

        specialinvoke $u0#2.<java.util.ArrayList: void <init>(int)>(4);

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $u0#2;

        $u0#4 = new androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $u0#4.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $u0#4;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight> = 2147483647;

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel> = 263;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId> = -1;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds> = $u2;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $u0 = new android.util.SparseArray;

        specialinvoke $u0.<android.util.SparseArray: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $u0;

        $u1 = new androidx.constraintlayout.widget.ConstraintLayout$Measurer;

        specialinvoke $u1.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout)>(this, this);

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer> = $u1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void init(android.util.AttributeSet,int,int)>($u5, $u6, $u7);

        return;
    }

    static java.util.ArrayList access$000(androidx.constraintlayout.widget.ConstraintLayout)
    {
        androidx.constraintlayout.widget.ConstraintLayout $u1;
        java.util.ArrayList ret0;

        $u1 := @parameter0: androidx.constraintlayout.widget.ConstraintLayout;

        ret0 = $u1.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        return ret0;
    }

    private int getPaddingWidth()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u-1, $u-1#6, $u3;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingLeft()>();

        $u-1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1);

        $u-1#6 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingRight()>();

        $u-1#6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#6);

        $u-1 = $u-1 + $u-1#6;

        $u-1#6 = 0;

        $u3 = <android.os.Build$VERSION: int SDK_INT>;

        if $u3 < 17 goto label1;

        $u-1#6 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingStart()>();

        $u-1#6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#6);

        $u3 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingEnd()>();

        $u3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u3);

        $u-1#6 = $u-1#6 + $u3;

     label1:
        if $u-1#6 <= 0 goto label2;

        return $u-1#6;

     label2:
        return $u-1;
    }

    private final androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u3;
        android.util.SparseArray view;
        java.lang.Object $u-1;
        android.view.View view#5, $u-1#6;
        android.view.ViewParent $u-1#7;
        android.view.ViewGroup$LayoutParams $u-1#11;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u1;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer ret0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget ret2;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: int;

        if $u3 != 0 goto label1;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return ret0;

     label1:
        view = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $u-1 = virtualinvoke view.<android.util.SparseArray: java.lang.Object get(int)>($u3);

        view#5 = (android.view.View) $u-1;

        if view#5 != null goto label2;

        $u-1#6 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View findViewById(int)>($u3);

        view#5 = $u-1#6;

        if $u-1#6 == null goto label2;

        if $u-1#6 == this goto label2;

        $u-1#7 = virtualinvoke $u-1#6.<android.view.View: android.view.ViewParent getParent()>();

        if $u-1#7 != this goto label2;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>($u-1#6);

     label2:
        if view#5 != this goto label3;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return ret0;

     label3:
        if view#5 != null goto label4;

        return null;

     label4:
        $u-1#11 = virtualinvoke view#5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u1 = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1#11;

        ret2 = $u1.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        return ret2;
    }

    private void init(android.util.AttributeSet, int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.util.AttributeSet $u9;
        int $u10, $u11, $u-1, id;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer a;
        android.util.SparseArray $u0#4;
        android.content.Context $u-1#8;
        int[] N;
        android.content.res.TypedArray $u-1#11;
        android.content.res.Resources$NotFoundException e, e#47;
        androidx.constraintlayout.widget.ConstraintSet e#45;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u9 := @parameter0: android.util.AttributeSet;

        $u10 := @parameter1: int;

        $u11 := @parameter2: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setCompanionWidget(java.lang.Object)>(this);

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        a = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer)>(a);

        $u0#4 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getId()>();

        virtualinvoke $u0#4.<android.util.SparseArray: void put(int,java.lang.Object)>($u-1, this);

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = null;

        if $u9 == null goto label19;

        $u-1#8 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.Context getContext()>();

        N = <androidx.constraintlayout.widget.R$styleable: int[] ConstraintLayout_Layout>;

        $u-1#11 = virtualinvoke $u-1#8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($u9, N, $u10, $u11);

        $u10 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getIndexCount()>();

        $u11 = 0;

     label01:
        if $u11 >= $u10 goto label18;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getIndex(int)>($u11);

        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_minWidth>;

        if $u-1 != id goto label02;

        id = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth>;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($u-1, id);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth> = $u-1;

        goto label17;

     label02:
        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_minHeight>;

        if $u-1 != id goto label03;

        id = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight>;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($u-1, id);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight> = $u-1;

        goto label17;

     label03:
        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_maxWidth>;

        if $u-1 != id goto label04;

        id = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth>;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($u-1, id);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth> = $u-1;

        goto label17;

     label04:
        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_maxHeight>;

        if $u-1 != id goto label05;

        id = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight>;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($u-1, id);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight> = $u-1;

        goto label17;

     label05:
        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel>;

        if $u-1 != id goto label06;

        id = this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel>;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getInt(int,int)>($u-1, id);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel> = $u-1;

        goto label17;

     label06:
        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layoutDescription>;

        if $u-1 != id goto label10;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getResourceId(int,int)>($u-1, 0);

        if $u-1 == 0 goto label17;

     label07:
        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void parseLayoutDescription(int)>($u-1);

     label08:
        goto label17;

     label09:
        e := @caughtexception;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        goto label17;

     label10:
        id = <androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_constraintSet>;

        if $u-1 != id goto label17;

        $u-1 = virtualinvoke $u-1#11.<android.content.res.TypedArray: int getResourceId(int,int)>($u-1, 0);

        e#45 = new androidx.constraintlayout.widget.ConstraintSet;

     label11:
        specialinvoke e#45.<androidx.constraintlayout.widget.ConstraintSet: void <init>()>();

     label12:
        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = e#45;

     label13:
        $u-1#8 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.Context getContext()>();

        virtualinvoke e#45.<androidx.constraintlayout.widget.ConstraintSet: void load(android.content.Context,int)>($u-1#8, $u-1);

     label14:
        goto label16;

     label15:
        e#47 := @caughtexception;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = null;

     label16:
        this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId> = $u-1;

        goto label17;

     label17:
        $u11 = $u11 + 1;

        goto label01;

     label18:
        virtualinvoke $u-1#11.<android.content.res.TypedArray: void recycle()>();

     label19:
        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u10 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)>($u10);

        return;

        catch android.content.res.Resources$NotFoundException from label07 to label08 with label09;
        catch android.content.res.Resources$NotFoundException from label11 to label12 with label15;
        catch android.content.res.Resources$NotFoundException from label13 to label14 with label15;
    }

    private void markHierarchyDirty()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        return;
    }

    private void setChildrenConstraints()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        boolean $u-1, view;
        int $u-1#2, i, $u-1#15, IdAsString#40;
        android.view.View $u-1#4;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u-1#6;
        android.content.res.Resources $u-1#13;
        java.lang.String $u-1#17, IdAsString;
        java.lang.Integer $u-1#21;
        android.content.res.Resources$NotFoundException IdAsString#33;
        androidx.constraintlayout.widget.Constraints view#43;
        androidx.constraintlayout.widget.ConstraintSet $u-1#44;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer child;
        java.util.ArrayList child#49;
        java.lang.Object $u-1#54;
        androidx.constraintlayout.widget.ConstraintHelper widget;
        androidx.constraintlayout.widget.Placeholder view#62;
        android.util.SparseArray child#63;
        android.view.ViewGroup$LayoutParams $u-1#82;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams layoutParams;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: boolean isInEditMode()>();

        $u-1#2 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getChildCount()>();

        i = 0;

     label01:
        if i >= $u-1#2 goto label04;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

        $u-1#6 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($u-1#4);

        if $u-1#6 != null goto label02;

        goto label03;

     label02:
        virtualinvoke $u-1#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void reset()>();

     label03:
        i = i + 1;

        goto label01;

     label04:
        if $u-1 == 0 goto label16;

        i = 0;

     label05:
        if i >= $u-1#2 goto label16;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

     label06:
        $u-1#13 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.res.Resources getResources()>();

        $u-1#15 = virtualinvoke $u-1#4.<android.view.View: int getId()>();

        $u-1#17 = virtualinvoke $u-1#13.<android.content.res.Resources: java.lang.String getResourceName(int)>($u-1#15);

     label07:
        IdAsString = $u-1#17;

     label08:
        $u-1#15 = virtualinvoke $u-1#4.<android.view.View: int getId()>();

        $u-1#21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u-1#15);

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void setDesignInformation(int,java.lang.Object,java.lang.Object)>(0, $u-1#17, $u-1#21);

        $u-1#15 = virtualinvoke $u-1#17.<java.lang.String: int indexOf(int)>(47);

     label09:
        if $u-1#15 == -1 goto label12;

        $u-1#15 = $u-1#15 + 1;

     label10:
        $u-1#17 = virtualinvoke $u-1#17.<java.lang.String: java.lang.String substring(int)>($u-1#15);

     label11:
        IdAsString = $u-1#17;

     label12:
        $u-1#15 = virtualinvoke $u-1#4.<android.view.View: int getId()>();

        $u-1#6 = specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>($u-1#15);

        virtualinvoke $u-1#6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDebugName(java.lang.String)>(IdAsString);

     label13:
        goto label15;

     label14:
        IdAsString#33 := @caughtexception;

     label15:
        i = i + 1;

        goto label05;

     label16:
        i = this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId>;

        if i == -1 goto label19;

        i = 0;

     label17:
        if i >= $u-1#2 goto label19;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

        $u-1#15 = virtualinvoke $u-1#4.<android.view.View: int getId()>();

        IdAsString#40 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mConstraintSetId>;

        if $u-1#15 != IdAsString#40 goto label18;

        view = $u-1#4 instanceof androidx.constraintlayout.widget.Constraints;

        if view == 0 goto label18;

        view#43 = (androidx.constraintlayout.widget.Constraints) $u-1#4;

        $u-1#44 = virtualinvoke view#43.<androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = $u-1#44;

     label18:
        i = i + 1;

        goto label17;

     label19:
        $u-1#44 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet>;

        if $u-1#44 == null goto label20;

        virtualinvoke $u-1#44.<androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>(this, 1);

     label20:
        child = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke child.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void removeAllChildren()>();

        child#49 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        i = virtualinvoke child#49.<java.util.ArrayList: int size()>();

        if i <= 0 goto label22;

        $u-1#15 = 0;

     label21:
        if $u-1#15 >= i goto label22;

        child#49 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $u-1#54 = virtualinvoke child#49.<java.util.ArrayList: java.lang.Object get(int)>($u-1#15);

        widget = (androidx.constraintlayout.widget.ConstraintHelper) $u-1#54;

        virtualinvoke widget.<androidx.constraintlayout.widget.ConstraintHelper: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)>(this);

        $u-1#15 = $u-1#15 + 1;

        goto label21;

     label22:
        i = 0;

     label23:
        if i >= $u-1#2 goto label25;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

        view = $u-1#4 instanceof androidx.constraintlayout.widget.Placeholder;

        if view == 0 goto label24;

        view#62 = (androidx.constraintlayout.widget.Placeholder) $u-1#4;

        virtualinvoke view#62.<androidx.constraintlayout.widget.Placeholder: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)>(this);

     label24:
        i = i + 1;

        goto label23;

     label25:
        child#63 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        virtualinvoke child#63.<android.util.SparseArray: void clear()>();

        child#63 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        child = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke child#63.<android.util.SparseArray: void put(int,java.lang.Object)>(0, child);

        child#63 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        i = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getId()>();

        child = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke child#63.<android.util.SparseArray: void put(int,java.lang.Object)>(i, child);

        i = 0;

     label26:
        if i >= $u-1#2 goto label27;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

        $u-1#6 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($u-1#4);

        child#63 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        $u-1#15 = virtualinvoke $u-1#4.<android.view.View: int getId()>();

        virtualinvoke child#63.<android.util.SparseArray: void put(int,java.lang.Object)>($u-1#15, $u-1#6);

        i = i + 1;

        goto label26;

     label27:
        i = 0;

     label28:
        if i >= $u-1#2 goto label31;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

        $u-1#6 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($u-1#4);

        if $u-1#6 != null goto label29;

        goto label30;

     label29:
        $u-1#82 = virtualinvoke $u-1#4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        layoutParams = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1#82;

        child = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke child.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u-1#6);

        child#63 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray)>($u-1, $u-1#4, $u-1#6, layoutParams, child#63);

     label30:
        i = i + 1;

        goto label28;

     label31:
        return;

        catch android.content.res.Resources$NotFoundException from label06 to label07 with label14;
        catch android.content.res.Resources$NotFoundException from label08 to label09 with label14;
        catch android.content.res.Resources$NotFoundException from label10 to label11 with label14;
        catch android.content.res.Resources$NotFoundException from label12 to label13 with label14;
    }

    private boolean updateHierarchy()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u-1, i;
        boolean recompute, $u-1#5;
        android.view.View $u-1#4;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getChildCount()>();

        recompute = 0;

        i = 0;

     label1:
        if i >= $u-1 goto label3;

        $u-1#4 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>(i);

        $u-1#5 = virtualinvoke $u-1#4.<android.view.View: boolean isLayoutRequested()>();

        if $u-1#5 == 0 goto label2;

        recompute = 1;

        goto label3;

     label2:
        i = i + 1;

        goto label1;

     label3:
        if recompute == 0 goto label4;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>();

     label4:
        return recompute;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.View $u3;
        int $u4;
        android.view.ViewGroup$LayoutParams $u5;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: android.view.View;

        $u4 := @parameter1: int;

        $u5 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke this.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($u3, $u4, $u5);

        $u4 = <android.os.Build$VERSION: int SDK_INT>;

        if $u4 >= 14 goto label1;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>($u3);

     label1:
        return;
    }

    protected void applyConstraintsFromLayoutParams(boolean, android.view.View, androidx.constraintlayout.solver.widgets.ConstraintWidget, androidx.constraintlayout.widget.ConstraintLayout$LayoutParams, android.util.SparseArray)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        boolean $u22, helper;
        android.view.View $u23;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u24, helper#58;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u25, resolvedGuideBegin#169;
        android.util.SparseArray idToWidget, helper#155;
        int $u-1, resolvedGuideEnd, resolveGoneLeftMargin, resolvedGuideBegin, resolvedGuideEnd#26, resolvedGuidePercent#27, resolvedLeftToLeft;
        androidx.constraintlayout.widget.ConstraintHelper helper#10;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer resolvedLeftToRight;
        androidx.constraintlayout.solver.widgets.Guideline helper#17;
        float resolvedGuidePercent;
        byte resolvedLeftToRight#23;
        java.lang.Object $u-1#56;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type resolvedLeftToRight#67, resolvedGuideEnd#68;
        android.view.ViewGroup$LayoutParams $u-1#164;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor $u-1#172, $u-1#175;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $u0;
        java.lang.String $u0#234;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u22 := @parameter0: boolean;

        $u23 := @parameter1: android.view.View;

        $u24 := @parameter2: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $u25 := @parameter3: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        idToWidget := @parameter4: android.util.SparseArray;

        virtualinvoke $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void validate()>();

        $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean helped> = 0;

        $u-1 = virtualinvoke $u23.<android.view.View: int getVisibility()>();

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVisibility(int)>($u-1);

        helper = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isInPlaceholder>;

        if helper == 0 goto label01;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setInPlaceholder(boolean)>(1);

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVisibility(int)>(8);

     label01:
        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setCompanionWidget(java.lang.Object)>($u23);

        helper = $u23 instanceof androidx.constraintlayout.widget.ConstraintHelper;

        if helper == 0 goto label02;

        helper#10 = (androidx.constraintlayout.widget.ConstraintHelper) $u23;

        resolvedLeftToRight = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        helper = virtualinvoke resolvedLeftToRight.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        virtualinvoke helper#10.<androidx.constraintlayout.widget.ConstraintHelper: void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean)>($u24, helper);

     label02:
        helper = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if helper == 0 goto label07;

        helper#17 = (androidx.constraintlayout.solver.widgets.Guideline) $u24;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolvedGuideBegin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolvedGuideEnd>;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float resolvedGuidePercent>;

        resolveGoneLeftMargin = <android.os.Build$VERSION: int SDK_INT>;

        if resolveGoneLeftMargin >= 17 goto label03;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int guideBegin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int guideEnd>;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float guidePercent>;

     label03:
        resolvedLeftToRight#23 = resolvedGuidePercent cmpl -1.0F;

        if resolvedLeftToRight#23 == 0 goto label04;

        virtualinvoke helper#17.<androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(float)>(resolvedGuidePercent);

        goto label06;

     label04:
        if $u-1 == -1 goto label05;

        virtualinvoke helper#17.<androidx.constraintlayout.solver.widgets.Guideline: void setGuideBegin(int)>($u-1);

        goto label06;

     label05:
        if resolvedGuideEnd == -1 goto label06;

        virtualinvoke helper#17.<androidx.constraintlayout.solver.widgets.Guideline: void setGuideEnd(int)>(resolvedGuideEnd);

     label06:
        return;

     label07:
        resolvedLeftToLeft = <android.os.Build$VERSION: int SDK_INT>;

        if resolvedLeftToLeft >= 17 goto label12;

        resolveGoneLeftMargin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftToLeft>;

        resolvedGuideBegin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftToRight>;

        resolvedGuideEnd#26 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightToLeft>;

        resolvedGuidePercent#27 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightToRight>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneLeftMargin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneRightMargin>;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float horizontalBias>;

        if resolveGoneLeftMargin != -1 goto label09;

        if resolvedGuideBegin != -1 goto label09;

        resolvedLeftToLeft = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToStart>;

        if resolvedLeftToLeft == -1 goto label08;

        resolveGoneLeftMargin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToStart>;

        goto label09;

     label08:
        resolvedLeftToLeft = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToEnd>;

        if resolvedLeftToLeft == -1 goto label09;

        resolvedGuideBegin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToEnd>;

        goto label09;

     label09:
        if resolvedGuideEnd#26 != -1 goto label11;

        if resolvedGuidePercent#27 != -1 goto label11;

        resolvedLeftToLeft = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToStart>;

        if resolvedLeftToLeft == -1 goto label10;

        resolvedGuideEnd#26 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToStart>;

        goto label13;

     label10:
        resolvedLeftToLeft = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToEnd>;

        if resolvedLeftToLeft == -1 goto label11;

        resolvedGuidePercent#27 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToEnd>;

        goto label13;

     label11:
        goto label13;

     label12:
        resolveGoneLeftMargin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolvedLeftToLeft>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolveGoneRightMargin>;

        resolvedGuideBegin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolvedLeftToRight>;

        resolvedGuidePercent#27 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolvedRightToRight>;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float resolvedHorizontalBias>;

        resolvedGuideEnd#26 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int resolvedRightToLeft>;

     label13:
        resolvedLeftToLeft = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleConstraint>;

        if resolvedLeftToLeft == -1 goto label15;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleConstraint>;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label14;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float circleAngle>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleRadius>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)>(helper#58, resolvedGuidePercent, $u-1);

     label14:
        goto label27;

     label15:
        if resolveGoneLeftMargin == -1 goto label17;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>(resolveGoneLeftMargin);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label16;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        resolvedGuideBegin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftMargin>;

        resolveGoneLeftMargin = resolvedGuidePercent#27;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, resolvedGuideBegin, $u-1);

        goto label18;

     label16:
        resolveGoneLeftMargin = resolvedGuidePercent#27;

        goto label18;

     label17:
        resolveGoneLeftMargin = resolvedGuidePercent#27;

        if resolvedGuideBegin == -1 goto label18;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>(resolvedGuideBegin);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label18;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        resolvedGuidePercent#27 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, resolvedGuidePercent#27, $u-1);

        goto label18;

     label18:
        if resolvedGuideEnd#26 == -1 goto label19;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>(resolvedGuideEnd#26);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label20;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, $u-1, resolvedGuideEnd);

        goto label20;

     label19:
        if resolveGoneLeftMargin == -1 goto label20;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>(resolveGoneLeftMargin);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label20;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, $u-1, resolvedGuideEnd);

        goto label20;

     label20:
        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToTop>;

        if $u-1 == -1 goto label21;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToTop>;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label22;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topMargin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneTopMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, $u-1, resolvedGuideEnd);

        goto label22;

     label21:
        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToBottom>;

        if $u-1 == -1 goto label22;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToBottom>;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label22;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topMargin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneTopMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, $u-1, resolvedGuideEnd);

        goto label22;

     label22:
        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToTop>;

        if $u-1 == -1 goto label23;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToTop>;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label24;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomMargin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, $u-1, resolvedGuideEnd);

        goto label24;

     label23:
        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToBottom>;

        if $u-1 == -1 goto label24;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToBottom>;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label24;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        resolvedGuideEnd#68 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomMargin>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)>(resolvedLeftToRight#67, helper#58, resolvedGuideEnd#68, $u-1, resolvedGuideEnd);

        goto label24;

     label24:
        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        if $u-1 == -1 goto label25;

        helper#155 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $u-1#56 = virtualinvoke helper#155.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        $u23 = (android.view.View) $u-1#56;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $u-1#56 = virtualinvoke idToWidget.<android.util.SparseArray: java.lang.Object get(int)>($u-1);

        helper#58 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $u-1#56;

        if helper#58 == null goto label25;

        if $u23 == null goto label25;

        $u-1#164 = virtualinvoke $u23.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        helper = $u-1#164 instanceof androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        if helper == 0 goto label25;

        $u-1#164 = virtualinvoke $u23.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        resolvedGuideBegin#169 = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1#164;

        $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean needsBaseline> = 1;

        resolvedGuideBegin#169.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean needsBaseline> = 1;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE>;

        $u-1#175 = virtualinvoke helper#58.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        virtualinvoke $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean)>($u-1#175, 0, -1, 1);

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHasBaseline(boolean)>(1);

        helper#58 = resolvedGuideBegin#169.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        virtualinvoke helper#58.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHasBaseline(boolean)>(1);

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        virtualinvoke $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void reset()>();

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        virtualinvoke $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void reset()>();

     label25:
        resolvedLeftToRight#23 = resolvedGuidePercent cmpl 0.0F;

        if resolvedLeftToRight#23 < 0 goto label26;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalBiasPercent(float)>(resolvedGuidePercent);

     label26:
        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalBias>;

        resolvedLeftToRight#23 = resolvedGuidePercent cmpl 0.0F;

        if resolvedLeftToRight#23 < 0 goto label27;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalBias>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalBiasPercent(float)>(resolvedGuidePercent);

     label27:
        if $u22 == 0 goto label29;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        if $u-1 != -1 goto label28;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        if $u-1 == -1 goto label29;

     label28:
        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOrigin(int,int)>($u-1, resolvedGuideEnd);

     label29:
        $u22 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        if $u22 != 0 goto label33;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int width>;

        if $u-1 != -1 goto label32;

        $u22 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean constrainedWidth>;

        if $u22 == 0 goto label30;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

        goto label31;

     label30:
        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

     label31:
        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftMargin>;

        $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = $u-1;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightMargin>;

        $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = $u-1;

        goto label34;

     label32:
        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWidth(int)>(0);

        goto label34;

     label33:
        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int width>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWidth(int)>($u-1);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int width>;

        if $u-1 != -2 goto label34;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

     label34:
        $u22 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        if $u22 != 0 goto label38;

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int height>;

        if $u-1 != -1 goto label37;

        $u22 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean constrainedHeight>;

        if $u22 == 0 goto label35;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

        goto label36;

     label35:
        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

     label36:
        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topMargin>;

        $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = $u-1;

        resolvedLeftToRight#67 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $u-1#172 = virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>(resolvedLeftToRight#67);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomMargin>;

        $u-1#172.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin> = $u-1;

        goto label39;

     label37:
        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHeight(int)>(0);

        goto label39;

     label38:
        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int height>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHeight(int)>($u-1);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int height>;

        if $u-1 != -2 goto label39;

        $u0 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($u0);

     label39:
        $u0#234 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimensionRatio(java.lang.String)>($u0#234);

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float horizontalWeight>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalWeight(float)>(resolvedGuidePercent);

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalWeight>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalWeight(float)>(resolvedGuidePercent);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int horizontalChainStyle>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)>($u-1);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int verticalChainStyle>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)>($u-1);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMinWidth>;

        resolveGoneLeftMargin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth>;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float matchConstraintPercentWidth>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalMatchStyle(int,int,int,float)>($u-1, resolvedGuideEnd, resolveGoneLeftMargin, resolvedGuidePercent);

        $u-1 = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight>;

        resolvedGuideEnd = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMinHeight>;

        resolveGoneLeftMargin = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight>;

        resolvedGuidePercent = $u25.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float matchConstraintPercentHeight>;

        virtualinvoke $u24.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalMatchStyle(int,int,int,float)>($u-1, resolvedGuideEnd, resolveGoneLeftMargin, resolvedGuidePercent);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.ViewGroup$LayoutParams $u2;
        boolean $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = $u2 instanceof androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        return $u0;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        androidx.constraintlayout.widget.ConstraintLayout this, $u0;
        android.graphics.Canvas $u26;
        java.util.ArrayList helperCount;
        int $u-1, i, helperCount#13, $u-1#44, $u-1#48, $u-1#52, i#74;
        java.lang.Object $u-1#7;
        androidx.constraintlayout.widget.ConstraintHelper helper;
        boolean $u-1#10;
        float i#16, helper#19, paint, helperCount#73, i#75, helper#76;
        android.view.View $u-1#21;
        java.lang.String coordinates;
        java.lang.String[] $u-1#34;
        android.graphics.Paint paint#70;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u26 := @parameter0: android.graphics.Canvas;

        $u0 = this;

        helperCount = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        if helperCount == null goto label2;

        $u-1 = virtualinvoke helperCount.<java.util.ArrayList: int size()>();

        if $u-1 <= 0 goto label2;

        i = 0;

     label1:
        if i >= $u-1 goto label2;

        helperCount = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $u-1#7 = virtualinvoke helperCount.<java.util.ArrayList: java.lang.Object get(int)>(i);

        helper = (androidx.constraintlayout.widget.ConstraintHelper) $u-1#7;

        virtualinvoke helper.<androidx.constraintlayout.widget.ConstraintHelper: void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout)>(this);

        i = i + 1;

        goto label1;

     label2:
        specialinvoke this.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>($u26);

        $u-1#10 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: boolean isInEditMode()>();

        if $u-1#10 == 0 goto label7;

        helperCount#13 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getChildCount()>();

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getWidth()>();

        i#16 = (float) $u-1;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getHeight()>();

        helper#19 = (float) $u-1;

        $u-1 = 0;

     label3:
        if $u-1 >= helperCount#13 goto label7;

        $u-1#21 = virtualinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>($u-1);

        i = virtualinvoke $u-1#21.<android.view.View: int getVisibility()>();

        if i != 8 goto label4;

        goto label6;

     label4:
        $u-1#7 = virtualinvoke $u-1#21.<android.view.View: java.lang.Object getTag()>();

        if $u-1#7 == null goto label6;

        $u-1#10 = $u-1#7 instanceof java.lang.String;

        if $u-1#10 == 0 goto label6;

        coordinates = (java.lang.String) $u-1#7;

        $u-1#34 = virtualinvoke coordinates.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i = lengthof $u-1#34;

        if i != 4 goto label5;

        coordinates = $u-1#34[0];

        i = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(coordinates);

        coordinates = $u-1#34[1];

        $u-1#44 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(coordinates);

        coordinates = $u-1#34[2];

        $u-1#48 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(coordinates);

        coordinates = $u-1#34[3];

        $u-1#52 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(coordinates);

        paint = (float) i;

        paint = paint / 1080.0F;

        paint = paint * i#16;

        i = (int) paint;

        paint = (float) $u-1#44;

        paint = paint / 1920.0F;

        paint = paint * helper#19;

        $u-1#44 = (int) paint;

        paint = (float) $u-1#48;

        paint = paint / 1080.0F;

        paint = paint * i#16;

        $u-1#48 = (int) paint;

        paint = (float) $u-1#52;

        paint = paint / 1920.0F;

        paint = paint * helper#19;

        $u-1#52 = (int) paint;

        paint#70 = new android.graphics.Paint;

        specialinvoke paint#70.<android.graphics.Paint: void <init>()>();

        virtualinvoke paint#70.<android.graphics.Paint: void setColor(int)>(-65536);

        paint = (float) i;

        helperCount#73 = (float) $u-1#44;

        i#74 = i + $u-1#48;

        i#75 = (float) i#74;

        helper#76 = (float) $u-1#44;

        virtualinvoke $u26.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(paint, helperCount#73, i#75, helper#76, paint#70);

        i#74 = i + $u-1#48;

        paint = (float) i#74;

        helperCount#73 = (float) $u-1#44;

        i#74 = i + $u-1#48;

        i#75 = (float) i#74;

        i#74 = $u-1#44 + $u-1#52;

        helper#76 = (float) i#74;

        virtualinvoke $u26.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(paint, helperCount#73, i#75, helper#76, paint#70);

        i#74 = i + $u-1#48;

        paint = (float) i#74;

        i#74 = $u-1#44 + $u-1#52;

        helperCount#73 = (float) i#74;

        i#75 = (float) i;

        i#74 = $u-1#44 + $u-1#52;

        helper#76 = (float) i#74;

        virtualinvoke $u26.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(paint, helperCount#73, i#75, helper#76, paint#70);

        paint = (float) i;

        i#74 = $u-1#44 + $u-1#52;

        helperCount#73 = (float) i#74;

        i#75 = (float) i;

        helper#76 = (float) $u-1#44;

        virtualinvoke $u26.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(paint, helperCount#73, i#75, helper#76, paint#70);

        virtualinvoke paint#70.<android.graphics.Paint: void setColor(int)>(-16711936);

        paint = (float) i;

        helperCount#73 = (float) $u-1#44;

        i#74 = i + $u-1#48;

        i#75 = (float) i#74;

        i#74 = $u-1#44 + $u-1#52;

        helper#76 = (float) i#74;

        virtualinvoke $u26.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(paint, helperCount#73, i#75, helper#76, paint#70);

        paint = (float) i;

        $u-1#52 = $u-1#44 + $u-1#52;

        helperCount#73 = (float) $u-1#52;

        i = i + $u-1#48;

        i#75 = (float) i;

        helper#76 = (float) $u-1#44;

        virtualinvoke $u26.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(paint, helperCount#73, i#75, helper#76, paint#70);

        goto label6;

     label5:
        goto label6;

     label6:
        $u-1 = $u-1 + 1;

        $u0 = this;

        goto label3;

     label7:
        return;
    }

    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.solver.Metrics $u2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: androidx.constraintlayout.solver.Metrics;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.Metrics mMetrics> = $u2;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void fillMetrics(androidx.constraintlayout.solver.Metrics)>($u2);

        return;
    }

    public void forceLayout()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void markHierarchyDirty()>();

        specialinvoke this.<android.view.ViewGroup: void forceLayout()>();

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u-1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams()>();

        return $u-1;
    }

    protected androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u0 = new androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        specialinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $u0;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u-1;
        android.util.AttributeSet $u1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u1 := @parameter0: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($u1);

        return $u-1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.ViewGroup$LayoutParams $u2;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = new androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        specialinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($u2);

        return $u0;
    }

    public androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.util.AttributeSet $u3;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u0;
        android.content.Context $u-1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: android.util.AttributeSet;

        $u0 = new androidx.constraintlayout.widget.ConstraintLayout$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($u-1, $u3);

        return $u0;
    }

    public java.lang.Object getDesignInformation(int, java.lang.Object)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u3;
        java.lang.Object $u4;
        boolean name;
        java.lang.String name#3;
        java.util.HashMap $u1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: int;

        $u4 := @parameter1: java.lang.Object;

        if $u3 != 0 goto label1;

        name = $u4 instanceof java.lang.String;

        if name == 0 goto label1;

        name#3 = (java.lang.String) $u4;

        $u1 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds>;

        if $u1 == null goto label1;

        name = virtualinvoke $u1.<java.util.HashMap: boolean containsKey(java.lang.Object)>(name#3);

        if name == 0 goto label1;

        $u1 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds>;

        $u4 = virtualinvoke $u1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(name#3);

        return $u4;

     label1:
        return null;
    }

    public int getMaxHeight()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int ret0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight>;

        return ret0;
    }

    public int getMaxWidth()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int ret0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth>;

        return ret0;
    }

    public int getMinHeight()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int ret0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight>;

        return ret0;
    }

    public int getMinWidth()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int ret0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth>;

        return ret0;
    }

    public int getOptimizationLevel()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u-1;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u-1 = virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getOptimizationLevel()>();

        return $u-1;
    }

    public android.view.View getViewById(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u2;
        java.lang.Object $u-1;
        android.util.SparseArray $u0;
        android.view.View $u0#3;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $u-1 = virtualinvoke $u0.<android.util.SparseArray: java.lang.Object get(int)>($u2);

        $u0#3 = (android.view.View) $u-1;

        return $u0#3;
    }

    public final androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.View $u2;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams $u0;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer ret0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget ret1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: android.view.View;

        if $u2 != this goto label1;

        ret0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return ret0;

     label1:
        if $u2 != null goto label2;

        return null;

     label2:
        $u-1 = virtualinvoke $u2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $u0 = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1;

        ret1 = $u0.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        return ret1;
    }

    protected boolean isRtl()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int isRtlSupported;
        android.content.Context $u-1;
        android.content.pm.ApplicationInfo $u-1#6;
        boolean isRtlSupported#12;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        isRtlSupported = <android.os.Build$VERSION: int SDK_INT>;

        if isRtlSupported < 17 goto label3;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.Context getContext()>();

        $u-1#6 = virtualinvoke $u-1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        isRtlSupported = $u-1#6.<android.content.pm.ApplicationInfo: int flags>;

        isRtlSupported = isRtlSupported & 4194304;

        if isRtlSupported == 0 goto label1;

        isRtlSupported#12 = 1;

        goto label2;

     label1:
        isRtlSupported#12 = 0;

     label2:
        if isRtlSupported#12 == 0 goto label3;

        isRtlSupported = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getLayoutDirection()>();

        if 1 != isRtlSupported goto label3;

        return 1;

     label3:
        return 0;
    }

    public void loadLayoutDescription(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u4;
        android.content.Context $u-1;
        androidx.constraintlayout.widget.ConstraintLayoutStates e;
        android.content.res.Resources$NotFoundException e#2;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u4 := @parameter0: int;

        if $u4 == 0 goto label5;

        e = new androidx.constraintlayout.widget.ConstraintLayoutStates;

     label1:
        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke e.<androidx.constraintlayout.widget.ConstraintLayoutStates: void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int)>($u-1, this, $u4);

     label2:
        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = e;

        goto label4;

     label3:
        e#2 := @caughtexception;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

     label4:
        return;

     label5:
        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        return;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        boolean $u15, l;
        int $u16, $u17, $u18, $u19, $u-1#20, $u-1#23;
        androidx.constraintlayout.solver.widgets.ConstraintWidget widget;
        android.view.View $u-1;
        android.view.ViewGroup$LayoutParams $u-1#6;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams params;
        androidx.constraintlayout.widget.Placeholder holder;
        java.util.ArrayList i;
        java.lang.Object $u-1#35;
        androidx.constraintlayout.widget.ConstraintHelper params#37;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u15 := @parameter0: boolean;

        $u16 := @parameter1: int;

        $u17 := @parameter2: int;

        $u18 := @parameter3: int;

        $u19 := @parameter4: int;

        $u16 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getChildCount()>();

        $u15 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: boolean isInEditMode()>();

        $u17 = 0;

     label1:
        if $u17 >= $u16 goto label5;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.view.View getChildAt(int)>($u17);

        $u-1#6 = virtualinvoke $u-1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        params = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1#6;

        widget = params.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        $u18 = virtualinvoke $u-1.<android.view.View: int getVisibility()>();

        if $u18 != 8 goto label2;

        l = params.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if l != 0 goto label2;

        l = params.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isHelper>;

        if l != 0 goto label2;

        l = params.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isVirtualGroup>;

        if l != 0 goto label2;

        if $u15 != 0 goto label2;

        goto label4;

     label2:
        l = params.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isInPlaceholder>;

        if l == 0 goto label3;

        goto label4;

     label3:
        $u18 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getX()>();

        $u19 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getY()>();

        $u-1#20 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()>();

        $u-1#20 = $u-1#20 + $u18;

        $u-1#23 = virtualinvoke widget.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()>();

        $u-1#23 = $u-1#23 + $u19;

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>($u18, $u19, $u-1#20, $u-1#23);

        l = $u-1 instanceof androidx.constraintlayout.widget.Placeholder;

        if l == 0 goto label4;

        holder = (androidx.constraintlayout.widget.Placeholder) $u-1;

        $u-1 = virtualinvoke holder.<androidx.constraintlayout.widget.Placeholder: android.view.View getContent()>();

        if $u-1 == null goto label4;

        virtualinvoke $u-1.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke $u-1.<android.view.View: void layout(int,int,int,int)>($u18, $u19, $u-1#20, $u-1#23);

     label4:
        $u17 = $u17 + 1;

        goto label1;

     label5:
        i = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $u16 = virtualinvoke i.<java.util.ArrayList: int size()>();

        if $u16 <= 0 goto label7;

        $u17 = 0;

     label6:
        if $u17 >= $u16 goto label7;

        i = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $u-1#35 = virtualinvoke i.<java.util.ArrayList: java.lang.Object get(int)>($u17);

        params#37 = (androidx.constraintlayout.widget.ConstraintHelper) $u-1#35;

        virtualinvoke params#37.<androidx.constraintlayout.widget.ConstraintHelper: void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout)>(this);

        $u17 = $u17 + 1;

        goto label6;

     label7:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u11, $u12, $u3, $u-1#14;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u2;
        boolean $u-1, $u-1#18;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u11 := @parameter0: int;

        $u12 := @parameter1: int;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = $u11;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = $u12;

        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: boolean isRtl()>();

        virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setRtl(boolean)>($u-1);

        $u-1 = this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy>;

        if $u-1 == 0 goto label1;

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 0;

        $u-1 = specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: boolean updateHierarchy()>();

        if $u-1 == 0 goto label1;

        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateHierarchy()>();

     label1:
        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u3 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel>;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int)>($u2, $u3, $u11, $u12);

        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u3 = virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u-1#14 = virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u-1 = virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()>();

        $u2 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $u-1#18 = virtualinvoke $u2.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()>();

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void resolveMeasuredDimension(int,int,int,int,boolean,boolean)>($u11, $u12, $u3, $u-1#14, $u-1, $u-1#18);

        return;
    }

    public void onViewAdded(android.view.View)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.View $u6;
        int widget;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u-1;
        boolean layoutParams;
        android.view.ViewGroup$LayoutParams $u-1#7;
        androidx.constraintlayout.widget.ConstraintLayout$LayoutParams layoutParams#9;
        androidx.constraintlayout.solver.widgets.Guideline layoutParams1;
        androidx.constraintlayout.widget.ConstraintHelper layoutParams#16;
        java.util.ArrayList $u4;
        android.util.SparseArray layoutParams#24;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u6 := @parameter0: android.view.View;

        widget = <android.os.Build$VERSION: int SDK_INT>;

        if widget < 14 goto label1;

        specialinvoke this.<android.view.ViewGroup: void onViewAdded(android.view.View)>($u6);

     label1:
        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($u6);

        layoutParams = $u6 instanceof androidx.constraintlayout.widget.Guideline;

        if layoutParams == 0 goto label2;

        layoutParams = $u-1 instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if layoutParams != 0 goto label2;

        $u-1#7 = virtualinvoke $u6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        layoutParams#9 = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1#7;

        layoutParams1 = new androidx.constraintlayout.solver.widgets.Guideline;

        specialinvoke layoutParams1.<androidx.constraintlayout.solver.widgets.Guideline: void <init>()>();

        layoutParams#9.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: androidx.constraintlayout.solver.widgets.ConstraintWidget widget> = layoutParams1;

        layoutParams#9.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isGuideline> = 1;

        $u-1 = layoutParams#9.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: androidx.constraintlayout.solver.widgets.ConstraintWidget widget>;

        layoutParams1 = (androidx.constraintlayout.solver.widgets.Guideline) $u-1;

        widget = layoutParams#9.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int orientation>;

        virtualinvoke layoutParams1.<androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)>(widget);

     label2:
        layoutParams = $u6 instanceof androidx.constraintlayout.widget.ConstraintHelper;

        if layoutParams == 0 goto label3;

        layoutParams#16 = (androidx.constraintlayout.widget.ConstraintHelper) $u6;

        virtualinvoke layoutParams#16.<androidx.constraintlayout.widget.ConstraintHelper: void validateParams()>();

        $u-1#7 = virtualinvoke $u6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        layoutParams#9 = (androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) $u-1#7;

        layoutParams#9.<androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean isHelper> = 1;

        $u4 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        layoutParams = virtualinvoke $u4.<java.util.ArrayList: boolean contains(java.lang.Object)>(layoutParams#16);

        if layoutParams != 0 goto label3;

        $u4 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        virtualinvoke $u4.<java.util.ArrayList: boolean add(java.lang.Object)>(layoutParams#16);

     label3:
        layoutParams#24 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        widget = virtualinvoke $u6.<android.view.View: int getId()>();

        virtualinvoke layoutParams#24.<android.util.SparseArray: void put(int,java.lang.Object)>(widget, $u6);

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }

    public void onViewRemoved(android.view.View)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.View $u3;
        int widget;
        android.util.SparseArray widget#3;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $u-1;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u1;
        java.util.ArrayList $u1#9;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: android.view.View;

        widget = <android.os.Build$VERSION: int SDK_INT>;

        if widget < 14 goto label1;

        specialinvoke this.<android.view.ViewGroup: void onViewRemoved(android.view.View)>($u3);

     label1:
        widget#3 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        widget = virtualinvoke $u3.<android.view.View: int getId()>();

        virtualinvoke widget#3.<android.util.SparseArray: void remove(int)>(widget);

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($u3);

        $u1 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $u1.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($u-1);

        $u1#9 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        virtualinvoke $u1#9.<java.util.ArrayList: boolean remove(java.lang.Object)>($u3);

        this.<androidx.constraintlayout.widget.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }

    protected void parseLayoutDescription(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u3;
        androidx.constraintlayout.widget.ConstraintLayoutStates $u0;
        android.content.Context $u-1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: int;

        $u0 = new androidx.constraintlayout.widget.ConstraintLayoutStates;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayoutStates: void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int)>($u-1, this, $u3);

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec> = $u0;

        return;
    }

    public void removeView(android.view.View)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        android.view.View $u3;
        int $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: android.view.View;

        specialinvoke this.<android.view.ViewGroup: void removeView(android.view.View)>($u3);

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 >= 14 goto label1;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>($u3);

     label1:
        return;
    }

    public void requestLayout()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void markHierarchyDirty()>();

        specialinvoke this.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    protected void resolveMeasuredDimension(int, int, int, int, boolean, boolean)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u9, $u10, $u11, $u12, heightPadding#2, widthPadding;
        boolean $u13, $u14;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer heightPadding;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u9 := @parameter0: int;

        $u10 := @parameter1: int;

        $u11 := @parameter2: int;

        $u12 := @parameter3: int;

        $u13 := @parameter4: boolean;

        $u14 := @parameter5: boolean;

        heightPadding = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer>;

        heightPadding#2 = heightPadding.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: int paddingHeight>;

        heightPadding = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer>;

        widthPadding = heightPadding.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: int paddingWidth>;

        $u11 = $u11 + widthPadding;

        $u12 = $u12 + heightPadding#2;

        heightPadding#2 = <android.os.Build$VERSION: int SDK_INT>;

        if heightPadding#2 < 11 goto label3;

        $u9 = staticinvoke <androidx.constraintlayout.widget.ConstraintLayout: int resolveSizeAndState(int,int,int)>($u11, $u9, 0);

        $u11 = 0 << 16;

        $u11 = staticinvoke <androidx.constraintlayout.widget.ConstraintLayout: int resolveSizeAndState(int,int,int)>($u12, $u10, $u11);

        $u10 = $u9 & 16777215;

        $u9 = $u11 & 16777215;

        $u11 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth>;

        $u10 = staticinvoke <java.lang.Math: int min(int,int)>($u11, $u10);

        $u11 = $u10;

        $u12 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight>;

        $u9 = staticinvoke <java.lang.Math: int min(int,int)>($u12, $u9);

        $u12 = $u9;

        if $u13 == 0 goto label1;

        $u11 = $u10 | 16777216;

     label1:
        if $u14 == 0 goto label2;

        $u12 = $u9 | 16777216;

     label2:
        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void setMeasuredDimension(int,int)>($u11, $u12);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = $u11;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = $u12;

        return;

     label3:
        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void setMeasuredDimension(int,int)>($u11, $u12);

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth> = $u11;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight> = $u12;

        return;
    }

    protected void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer, int, int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u27;
        int $u28, $u29, $u30, $u14, paddingHeight, heightSize1, $u-1, $u-1#4, $u-1#7, $u-1#13, $u-1#14;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer $u7;
        boolean $u-1#36;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u27 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u28 := @parameter1: int;

        $u29 := @parameter2: int;

        $u30 := @parameter3: int;

        $u-1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u29);

        heightSize1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u29);

        $u-1#4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u30);

        $u14 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u30);

        $u-1#7 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingTop()>();

        $u-1#7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u-1#7);

        paddingHeight = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingBottom()>();

        $u-1#13 = staticinvoke <java.lang.Math: int max(int,int)>(0, paddingHeight);

        paddingHeight = $u-1#7 + $u-1#13;

        $u-1#14 = specialinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()>();

        $u7 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer>;

        virtualinvoke $u7.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: void captureLayoutInfos(int,int,int,int,int,int)>($u29, $u30, $u-1#7, $u-1#13, $u-1#14, paddingHeight);

        $u29 = <android.os.Build$VERSION: int SDK_INT>;

        if $u29 < 17 goto label4;

        $u29 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingStart()>();

        $u29 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u29);

        $u30 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingEnd()>();

        $u30 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u30);

        if $u29 > 0 goto label2;

        if $u30 <= 0 goto label1;

        goto label2;

     label1:
        $u29 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingLeft()>();

        $u29 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u29);

        goto label3;

     label2:
        $u-1#36 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: boolean isRtl()>();

        if $u-1#36 == 0 goto label3;

        $u29 = $u30;

        goto label3;

     label3:
        goto label5;

     label4:
        $u29 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingLeft()>();

        $u29 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u29);

     label5:
        $u30 = heightSize1 - $u-1#14;

        heightSize1 = $u14 - paddingHeight;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int)>($u27, $u-1, $u30, $u-1#4, heightSize1);

        paddingHeight = this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureWidth>;

        $u14 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mLastMeasureHeight>;

        virtualinvoke $u27.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: long measure(int,int,int,int,int,int,int,int,int)>($u28, $u-1, $u30, $u-1#4, heightSize1, paddingHeight, $u14, $u29, $u-1#7);

        return;
    }

    public void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.widget.ConstraintSet $u1;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u1 := @parameter0: androidx.constraintlayout.widget.ConstraintSet;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintSet mConstraintSet> = $u1;

        return;
    }

    public void setDesignInformation(int, java.lang.Object, java.lang.Object)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u6;
        java.lang.Object $u7, $u8;
        java.util.HashMap $u3;
        boolean name;
        java.lang.String name#6;
        java.lang.Integer id;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u6 := @parameter0: int;

        $u7 := @parameter1: java.lang.Object;

        $u8 := @parameter2: java.lang.Object;

        if $u6 != 0 goto label3;

        name = $u7 instanceof java.lang.String;

        if name == 0 goto label3;

        name = $u8 instanceof java.lang.Integer;

        if name == 0 goto label3;

        $u3 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds>;

        if $u3 != null goto label1;

        $u3 = new java.util.HashMap;

        specialinvoke $u3.<java.util.HashMap: void <init>()>();

        this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds> = $u3;

     label1:
        name#6 = (java.lang.String) $u7;

        $u6 = virtualinvoke name#6.<java.lang.String: int indexOf(java.lang.String)>("/");

        if $u6 == -1 goto label2;

        $u6 = $u6 + 1;

        name#6 = virtualinvoke name#6.<java.lang.String: java.lang.String substring(int)>($u6);

     label2:
        id = (java.lang.Integer) $u8;

        $u6 = virtualinvoke id.<java.lang.Integer: int intValue()>();

        $u3 = this.<androidx.constraintlayout.widget.ConstraintLayout: java.util.HashMap mDesignIds>;

        id = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($u6);

        virtualinvoke $u3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name#6, id);

     label3:
        return;
    }

    public void setId(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u3, $u-1;
        android.util.SparseArray $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u3 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getId()>();

        virtualinvoke $u0.<android.util.SparseArray: void remove(int)>($u-1);

        specialinvoke this.<android.view.ViewGroup: void setId(int)>($u3);

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $u3 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getId()>();

        virtualinvoke $u0.<android.util.SparseArray: void put(int,java.lang.Object)>($u3, this);

        return;
    }

    public void setMaxHeight(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u2, $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight>;

        if $u2 != $u0 goto label1;

        return;

     label1:
        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight> = $u2;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>();

        return;
    }

    public void setMaxWidth(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u2, $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth>;

        if $u2 != $u0 goto label1;

        return;

     label1:
        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth> = $u2;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>();

        return;
    }

    public void setMinHeight(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u2, $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight>;

        if $u2 != $u0 goto label1;

        return;

     label1:
        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight> = $u2;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>();

        return;
    }

    public void setMinWidth(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u2, $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth>;

        if $u2 != $u0 goto label1;

        return;

     label1:
        this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth> = $u2;

        virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>();

        return;
    }

    public void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.widget.ConstraintsChangedListener $u2;
        androidx.constraintlayout.widget.ConstraintLayoutStates $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: androidx.constraintlayout.widget.ConstraintsChangedListener;

        this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintsChangedListener mConstraintsChangedListener> = $u2;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayoutStates: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)>($u2);

     label1:
        return;
    }

    public void setOptimizationLevel(int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u0;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u2 := @parameter0: int;

        this.<androidx.constraintlayout.widget.ConstraintLayout: int mOptimizationLevel> = $u2;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $u0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)>($u2);

        return;
    }

    protected void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer, int, int, int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $u17;
        int $u18, $u19, $u20, $u21, heightPadding#2, widthPadding, desiredWidth, desiredHeight, $u-1;
        androidx.constraintlayout.widget.ConstraintLayout$Measurer heightPadding;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour widthBehaviour, heightBehaviour;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u17 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        $u18 := @parameter1: int;

        $u19 := @parameter2: int;

        $u20 := @parameter3: int;

        $u21 := @parameter4: int;

        heightPadding = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer>;

        heightPadding#2 = heightPadding.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: int paddingHeight>;

        heightPadding = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$Measurer mMeasurer>;

        widthPadding = heightPadding.<androidx.constraintlayout.widget.ConstraintLayout$Measurer: int paddingWidth>;

        widthBehaviour = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        heightBehaviour = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        desiredWidth = 0;

        desiredHeight = 0;

        $u-1 = virtualinvoke this.<androidx.constraintlayout.widget.ConstraintLayout: int getChildCount()>();

        if $u18 == -2147483648 goto label03;

        if $u18 == 0 goto label02;

        if $u18 == 1073741824 goto label01;

        goto label04;

     label01:
        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth>;

        $u18 = $u18 - widthPadding;

        desiredWidth = staticinvoke <java.lang.Math: int min(int,int)>($u18, $u19);

        goto label04;

     label02:
        widthBehaviour = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $u-1 != 0 goto label04;

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth>;

        desiredWidth = staticinvoke <java.lang.Math: int max(int,int)>(0, $u18);

        goto label04;

     label03:
        widthBehaviour = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        desiredWidth = $u19;

        if $u-1 != 0 goto label04;

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth>;

        desiredWidth = staticinvoke <java.lang.Math: int max(int,int)>(0, $u18);

     label04:
        if $u20 == -2147483648 goto label07;

        if $u20 == 0 goto label06;

        if $u20 == 1073741824 goto label05;

        goto label08;

     label05:
        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight>;

        $u18 = $u18 - heightPadding#2;

        desiredHeight = staticinvoke <java.lang.Math: int min(int,int)>($u18, $u21);

        goto label08;

     label06:
        heightBehaviour = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $u-1 != 0 goto label08;

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight>;

        desiredHeight = staticinvoke <java.lang.Math: int max(int,int)>(0, $u18);

        goto label08;

     label07:
        heightBehaviour = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        desiredHeight = $u21;

        if $u-1 != 0 goto label08;

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight>;

        desiredHeight = staticinvoke <java.lang.Math: int max(int,int)>(0, $u18);

     label08:
        $u18 = virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        if desiredWidth != $u18 goto label09;

        $u18 = virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if desiredHeight == $u18 goto label10;

     label09:
        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void invalidateMeasures()>();

     label10:
        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setX(int)>(0);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setY(int)>(0);

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxWidth>;

        $u18 = $u18 - widthPadding;

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMaxWidth(int)>($u18);

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMaxHeight>;

        $u18 = $u18 - heightPadding#2;

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMaxHeight(int)>($u18);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMinWidth(int)>(0);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMinHeight(int)>(0);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>(widthBehaviour);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>(desiredWidth);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>(heightBehaviour);

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>(desiredHeight);

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinWidth>;

        $u18 = $u18 - widthPadding;

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMinWidth(int)>($u18);

        $u18 = this.<androidx.constraintlayout.widget.ConstraintLayout: int mMinHeight>;

        $u18 = $u18 - heightPadding#2;

        virtualinvoke $u17.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setMinHeight(int)>($u18);

        return;
    }

    public void setState(int, int, int)
    {
        androidx.constraintlayout.widget.ConstraintLayout this;
        int $u4, $u5, $u6;
        androidx.constraintlayout.widget.ConstraintLayoutStates $u0;
        float $u1, $u2;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        $u4 := @parameter0: int;

        $u5 := @parameter1: int;

        $u6 := @parameter2: int;

        $u0 = this.<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayoutStates mConstraintLayoutSpec>;

        if $u0 == null goto label1;

        $u1 = (float) $u5;

        $u2 = (float) $u6;

        virtualinvoke $u0.<androidx.constraintlayout.widget.ConstraintLayoutStates: void updateConstraints(int,float,float)>($u4, $u1, $u2);

     label1:
        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.constraintlayout.widget.ConstraintLayout this;

        this := @this: androidx.constraintlayout.widget.ConstraintLayout;

        return 0;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.widget.ConstraintLayout: java.lang.String VERSION> = "ConstraintLayout-2.0.1";

        <androidx.constraintlayout.widget.ConstraintLayout: boolean USE_CONSTRAINTS_HELPER> = 1;

        <androidx.constraintlayout.widget.ConstraintLayout: java.lang.String TAG> = "ConstraintLayout";

        <androidx.constraintlayout.widget.ConstraintLayout: boolean MEASURE> = 0;

        <androidx.constraintlayout.widget.ConstraintLayout: int DESIGN_INFO_ID> = 0;

        <androidx.constraintlayout.widget.ConstraintLayout: boolean DEBUG_DRAW_CONSTRAINTS> = 0;

        <androidx.constraintlayout.widget.ConstraintLayout: boolean DEBUG> = 0;

        return;
    }
}
