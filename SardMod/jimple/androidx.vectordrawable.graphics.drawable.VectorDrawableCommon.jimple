abstract class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon extends android.graphics.drawable.Drawable implements androidx.core.graphics.drawable.TintAwareDrawable
{
    android.graphics.drawable.Drawable mDelegateDrawable;

    void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        specialinvoke this.<android.graphics.drawable.Drawable: void <init>()>();

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.content.res.Resources$Theme $u2;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: android.content.res.Resources$Theme;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>($u0, $u2);

     label1:
        return;
    }

    public void clearColorFilter()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;

     label1:
        specialinvoke this.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u0 = virtualinvoke $u0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $u0;

     label1:
        $u0 = specialinvoke this.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $u0;
    }

    public int getMinimumHeight()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;
        int $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $u-1;
    }

    public int getMinimumWidth()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;
        int $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $u-1;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.Rect $u2;
        android.graphics.drawable.Drawable $u0;
        boolean $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: android.graphics.Rect;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($u2);

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($u2);

        return $u-1;
    }

    public int[] getState()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;
        int[] $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: int[] getState()>();

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: int[] getState()>();

        return $u-1;
    }

    public android.graphics.Region getTransparentRegion()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;
        android.graphics.Region $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $u-1;
    }

    public void jumpToCurrentState()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>($u0);

     label1:
        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        android.graphics.Rect $u2;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: android.graphics.Rect;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($u2);

        return;

     label1:
        specialinvoke this.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($u2);

        return;
    }

    protected boolean onLevelChange(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        int $u2;
        android.graphics.drawable.Drawable $u0;
        boolean $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: boolean setLevel(int)>($u2);

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>($u2);

        return $u-1;
    }

    public void setChangingConfigurations(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        int $u2;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: int;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($u2);

        return;

     label1:
        specialinvoke this.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($u2);

        return;
    }

    public void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        int $u2;
        android.graphics.PorterDuff$Mode $u3;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: int;

        $u3 := @parameter1: android.graphics.PorterDuff$Mode;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($u2, $u3);

        return;

     label1:
        specialinvoke this.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($u2, $u3);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        boolean $u2;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>($u2);

     label1:
        return;
    }

    public void setHotspot(float, float)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        float $u2, $u3;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: float;

        $u3 := @parameter1: float;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($u0, $u2, $u3);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        int $u2, $u3, $u4, $u5;
        android.graphics.drawable.Drawable $u0;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: int;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($u0, $u2, $u3, $u4, $u5);

     label1:
        return;
    }

    public boolean setState(int[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon this;
        int[] $u2;
        android.graphics.drawable.Drawable $u0;
        boolean $u-1;

        this := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $u2 := @parameter0: int[];

        $u0 = this.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<android.graphics.drawable.Drawable: boolean setState(int[])>($u2);

        return $u-1;

     label1:
        $u-1 = specialinvoke this.<android.graphics.drawable.Drawable: boolean setState(int[])>($u2);

        return $u-1;
    }
}
