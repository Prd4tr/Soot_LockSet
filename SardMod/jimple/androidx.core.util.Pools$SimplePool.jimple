public class androidx.core.util.Pools$SimplePool extends java.lang.Object implements androidx.core.util.Pools$Pool
{
    private final java.lang.Object[] mPool;
    private int mPoolSize;

    public void <init>(int)
    {
        androidx.core.util.Pools$SimplePool this;
        int $u3;
        java.lang.Object[] $u0;
        java.lang.IllegalArgumentException $u0#2;

        this := @this: androidx.core.util.Pools$SimplePool;

        $u3 := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if $u3 <= 0 goto label1;

        $u0 = newarray (java.lang.Object)[$u3];

        this.<androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool> = $u0;

        return;

     label1:
        $u0#2 = new java.lang.IllegalArgumentException;

        specialinvoke $u0#2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The max pool size must be > 0");

        throw $u0#2;
    }

    private boolean isInPool(java.lang.Object)
    {
        androidx.core.util.Pools$SimplePool this;
        java.lang.Object instance, $u1#4;
        int i, $u1;
        java.lang.Object[] $u1#3;

        this := @this: androidx.core.util.Pools$SimplePool;

        instance := @parameter0: java.lang.Object;

        i = 0;

     label1:
        $u1 = this.<androidx.core.util.Pools$SimplePool: int mPoolSize>;

        if i >= $u1 goto label3;

        $u1#3 = this.<androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool>;

        $u1#4 = $u1#3[i];

        if $u1#4 != instance goto label2;

        return 1;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.Object acquire()
    {
        androidx.core.util.Pools$SimplePool this;
        int lastPooledIndex, $u0;
        java.lang.Object[] $u3;
        java.lang.Object instance;

        this := @this: androidx.core.util.Pools$SimplePool;

        $u0 = this.<androidx.core.util.Pools$SimplePool: int mPoolSize>;

        if $u0 <= 0 goto label1;

        lastPooledIndex = $u0 + -1;

        $u3 = this.<androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool>;

        instance = $u3[lastPooledIndex];

        $u3[lastPooledIndex] = null;

        lastPooledIndex = $u0 + -1;

        this.<androidx.core.util.Pools$SimplePool: int mPoolSize> = lastPooledIndex;

        return instance;

     label1:
        return null;
    }

    public boolean release(java.lang.Object)
    {
        androidx.core.util.Pools$SimplePool this;
        java.lang.Object instance;
        int $u2, $u0;
        boolean $u-1;
        java.lang.Object[] $u1;
        java.lang.IllegalStateException $u0#7;

        this := @this: androidx.core.util.Pools$SimplePool;

        instance := @parameter0: java.lang.Object;

        $u-1 = specialinvoke this.<androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)>(instance);

        if $u-1 != 0 goto label2;

        $u0 = this.<androidx.core.util.Pools$SimplePool: int mPoolSize>;

        $u1 = this.<androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool>;

        $u2 = lengthof $u1;

        if $u0 >= $u2 goto label1;

        $u1[$u0] = instance;

        $u2 = $u0 + 1;

        this.<androidx.core.util.Pools$SimplePool: int mPoolSize> = $u2;

        return 1;

     label1:
        return 0;

     label2:
        $u0#7 = new java.lang.IllegalStateException;

        specialinvoke $u0#7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already in the pool!");

        throw $u0#7;
    }
}
