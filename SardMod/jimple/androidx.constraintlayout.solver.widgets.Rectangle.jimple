public class androidx.constraintlayout.solver.widgets.Rectangle extends java.lang.Object
{
    public int height;
    public int width;
    public int x;
    public int y;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.Rectangle this;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean contains(int, int)
    {
        androidx.constraintlayout.solver.widgets.Rectangle this;
        int $u3, $u4, $u0, $u1;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        if $u3 < $u0 goto label1;

        $u1 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $u0 = $u0 + $u1;

        if $u3 >= $u0 goto label1;

        $u3 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        if $u4 < $u3 goto label1;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $u3 = $u3 + $u0;

        if $u4 >= $u3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getCenterX()
    {
        androidx.constraintlayout.solver.widgets.Rectangle this;
        int $u1, $u0;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $u1 = $u0 + $u1;

        $u1 = $u1 / 2;

        return $u1;
    }

    public int getCenterY()
    {
        androidx.constraintlayout.solver.widgets.Rectangle this;
        int $u1, $u0;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        $u1 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $u1 = $u0 + $u1;

        $u1 = $u1 / 2;

        return $u1;
    }

    void grow(int, int)
    {
        androidx.constraintlayout.solver.widgets.Rectangle this;
        int $u3, $u4, $u0;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $u3 := @parameter0: int;

        $u4 := @parameter1: int;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        $u0 = $u0 - $u3;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int x> = $u0;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        $u0 = $u0 - $u4;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int y> = $u0;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $u3 = $u3 * 2;

        $u3 = $u0 + $u3;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int width> = $u3;

        $u3 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $u4 = $u4 * 2;

        $u3 = $u3 + $u4;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int height> = $u3;

        return;
    }

    boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)
    {
        androidx.constraintlayout.solver.widgets.Rectangle this, $u4;
        int $u0, $u1, $u2;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $u4 := @parameter0: androidx.constraintlayout.solver.widgets.Rectangle;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        $u1 = $u4.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        if $u0 < $u1 goto label1;

        $u2 = $u4.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $u1 = $u1 + $u2;

        if $u0 >= $u1 goto label1;

        $u0 = this.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        $u1 = $u4.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        if $u0 < $u1 goto label1;

        $u2 = $u4.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $u1 = $u1 + $u2;

        if $u0 >= $u1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setBounds(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.Rectangle this;
        int $u1, $u2, $u3, $u4;

        this := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $u1 := @parameter0: int;

        $u2 := @parameter1: int;

        $u3 := @parameter2: int;

        $u4 := @parameter3: int;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int x> = $u1;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int y> = $u2;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int width> = $u3;

        this.<androidx.constraintlayout.solver.widgets.Rectangle: int height> = $u4;

        return;
    }
}
