public class androidx.appcompat.widget.ActionMenuView extends androidx.appcompat.widget.LinearLayoutCompat implements androidx.appcompat.view.menu.MenuBuilder$ItemInvoker, androidx.appcompat.view.menu.MenuView
{
    static final int GENERATED_ITEM_PADDING;
    static final int MIN_CELL_SIZE;
    private static final java.lang.String TAG;
    private androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback;
    private boolean mFormatItems;
    private int mFormatItemsWidth;
    private int mGeneratedItemPadding;
    private androidx.appcompat.view.menu.MenuBuilder mMenu;
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback;
    private int mMinCellSize;
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener;
    private android.content.Context mPopupContext;
    private int mPopupTheme;
    private androidx.appcompat.widget.ActionMenuPresenter mPresenter;
    private boolean mReserveOverflow;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.content.Context $u2;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u2 := @parameter0: android.content.Context;

        specialinvoke this.<androidx.appcompat.widget.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>($u2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.content.Context $u4;
        android.util.AttributeSet $u5;
        android.content.res.Resources $u-1;
        android.util.DisplayMetrics $u-1#3;
        float density, $u2;
        int $u2#8;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u4 := @parameter0: android.content.Context;

        $u5 := @parameter1: android.util.AttributeSet;

        specialinvoke this.<androidx.appcompat.widget.LinearLayoutCompat: void <init>(android.content.Context,android.util.AttributeSet)>($u4, $u5);

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: void setBaselineAligned(boolean)>(0);

        $u-1 = virtualinvoke $u4.<android.content.Context: android.content.res.Resources getResources()>();

        $u-1#3 = virtualinvoke $u-1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        density = $u-1#3.<android.util.DisplayMetrics: float density>;

        $u2 = 56.0F * density;

        $u2#8 = (int) $u2;

        this.<androidx.appcompat.widget.ActionMenuView: int mMinCellSize> = $u2#8;

        density = 4.0F * density;

        $u2#8 = (int) density;

        this.<androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding> = $u2#8;

        this.<androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext> = $u4;

        this.<androidx.appcompat.widget.ActionMenuView: int mPopupTheme> = 0;

        return;
    }

    static int measureChildForCells(android.view.View, int, int, int, int)
    {
        android.view.View $u15;
        int $u16, $u17, $u18, $u19, $u-1#4;
        android.view.ViewGroup$LayoutParams $u-1;
        androidx.appcompat.widget.ActionMenuView$LayoutParams lp;
        boolean itemView, $u-1#14, $u11;
        androidx.appcompat.view.menu.ActionMenuItemView itemView#11;

        $u15 := @parameter0: android.view.View;

        $u16 := @parameter1: int;

        $u17 := @parameter2: int;

        $u18 := @parameter3: int;

        $u19 := @parameter4: int;

        $u-1 = virtualinvoke $u15.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1;

        $u-1#4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u18);

        $u19 = $u-1#4 - $u19;

        $u18 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u18);

        $u18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u19, $u18);

        itemView = $u15 instanceof androidx.appcompat.view.menu.ActionMenuItemView;

        if itemView == 0 goto label1;

        itemView#11 = (androidx.appcompat.view.menu.ActionMenuItemView) $u15;

        goto label2;

     label1:
        itemView#11 = null;

     label2:
        itemView = 0;

        if itemView#11 == null goto label3;

        $u-1#14 = virtualinvoke itemView#11.<androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()>();

        if $u-1#14 == 0 goto label3;

        $u-1#14 = 1;

        goto label4;

     label3:
        $u-1#14 = 0;

     label4:
        $u19 = 0;

        if $u17 <= 0 goto label7;

        if $u-1#14 == 0 goto label5;

        if $u17 < 2 goto label7;

     label5:
        $u17 = $u16 * $u17;

        $u17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u17, -2147483648);

        virtualinvoke $u15.<android.view.View: void measure(int,int)>($u17, $u18);

        $u17 = virtualinvoke $u15.<android.view.View: int getMeasuredWidth()>();

        $u19 = $u17 / $u16;

        $u17 = $u17 % $u16;

        if $u17 == 0 goto label6;

        $u19 = $u19 + 1;

     label6:
        if $u-1#14 == 0 goto label7;

        if $u19 >= 2 goto label7;

        $u19 = 2;

     label7:
        $u11 = lp.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if $u11 != 0 goto label8;

        if $u-1#14 == 0 goto label8;

        itemView = 1;

     label8:
        lp.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable> = itemView;

        lp.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed> = $u19;

        $u16 = $u19 * $u16;

        $u16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($u16, 1073741824);

        virtualinvoke $u15.<android.view.View: void measure(int,int)>($u16, $u18);

        return $u19;
    }

    private void onMeasureExactFormat(int, int)
    {
        androidx.appcompat.widget.ActionMenuView this;
        int $u41, $u42, $u-1, heightMode, $u-1#7, $u-1#9, $u-1#14, heightPadding, widthSize, maxCellsUsed, expandableItemCount, heightSize, widthPadding, $u-1#46, $u-1#71;
        boolean hasOverflow, cellCount, cellCount#88, expandableItemCount#106;
        long smallestItemsAt, cellCount#79, heightMode1;
        android.view.View $u-1#43;
        android.view.ViewGroup$LayoutParams $u-1#55;
        androidx.appcompat.widget.ActionMenuView$LayoutParams cellSizeRemaining;
        androidx.appcompat.view.menu.ActionMenuItemView heightSize#59;
        byte widthPadding#128;
        float widthSize#154, widthPadding#182;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u41 := @parameter0: int;

        $u42 := @parameter1: int;

        heightMode = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u42);

        $u-1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u41);

        $u41 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u42);

        $u-1#7 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingLeft()>();

        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingRight()>();

        $u-1#7 = $u-1#7 + $u-1#9;

        $u-1#9 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingTop()>();

        $u-1#14 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingBottom()>();

        heightPadding = $u-1#9 + $u-1#14;

        $u42 = staticinvoke <androidx.appcompat.widget.ActionMenuView: int getChildMeasureSpec(int,int,int)>($u42, heightPadding, -2);

        widthSize = $u-1 - $u-1#7;

        $u-1 = this.<androidx.appcompat.widget.ActionMenuView: int mMinCellSize>;

        $u-1#7 = widthSize / $u-1;

        $u-1#9 = widthSize % $u-1;

        if $u-1#7 != 0 goto label01;

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: void setMeasuredDimension(int,int)>(widthSize, 0);

        return;

     label01:
        $u-1#9 = $u-1#9 / $u-1#7;

        $u-1 = $u-1 + $u-1#9;

        $u-1#14 = $u-1#7;

        $u-1#9 = 0;

        maxCellsUsed = 0;

        expandableItemCount = 0;

        hasOverflow = 0;

        smallestItemsAt = 0L;

        $u-1#7 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getChildCount()>();

        heightSize = 0;

        widthPadding = 0;

     label02:
        if widthPadding >= $u-1#7 goto label12;

        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(widthPadding);

        $u-1#46 = virtualinvoke $u-1#43.<android.view.View: int getVisibility()>();

        if $u-1#46 != 8 goto label03;

        goto label11;

     label03:
        cellCount = $u-1#43 instanceof androidx.appcompat.view.menu.ActionMenuItemView;

        heightSize = heightSize + 1;

        if cellCount == 0 goto label04;

        $u-1#46 = this.<androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding>;

        virtualinvoke $u-1#43.<android.view.View: void setPadding(int,int,int,int)>($u-1#46, 0, $u-1#46, 0);

        goto label04;

     label04:
        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded> = 0;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels> = 0;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed> = 0;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable> = 0;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin> = 0;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin> = 0;

        if cellCount == 0 goto label05;

        heightSize#59 = (androidx.appcompat.view.menu.ActionMenuItemView) $u-1#43;

        cellCount = virtualinvoke heightSize#59.<androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()>();

        if cellCount == 0 goto label05;

        cellCount = 1;

        goto label06;

     label05:
        cellCount = 0;

     label06:
        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset> = cellCount;

        cellCount = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if cellCount == 0 goto label07;

        $u-1#46 = 1;

        goto label08;

     label07:
        $u-1#46 = $u-1#14;

     label08:
        $u-1#46 = staticinvoke <androidx.appcompat.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>($u-1#43, $u-1, $u-1#46, $u42, heightPadding);

        maxCellsUsed = staticinvoke <java.lang.Math: int max(int,int)>(maxCellsUsed, $u-1#46);

        cellCount = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable>;

        if cellCount == 0 goto label09;

        expandableItemCount = expandableItemCount + 1;

     label09:
        cellCount = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if cellCount == 0 goto label10;

        hasOverflow = 1;

     label10:
        $u-1#14 = $u-1#14 - $u-1#46;

        $u-1#71 = virtualinvoke $u-1#43.<android.view.View: int getMeasuredHeight()>();

        $u-1#9 = staticinvoke <java.lang.Math: int max(int,int)>($u-1#9, $u-1#71);

        if $u-1#46 != 1 goto label11;

        $u-1#46 = 1 << widthPadding;

        cellCount#79 = (long) $u-1#46;

        smallestItemsAt = smallestItemsAt | cellCount#79;

        goto label11;

     label11:
        widthPadding = widthPadding + 1;

        goto label02;

     label12:
        if hasOverflow == 0 goto label13;

        if heightSize != 2 goto label13;

        cellCount = 1;

        goto label14;

     label13:
        cellCount = 0;

     label14:
        cellCount#88 = 0;

     label15:
        if expandableItemCount <= 0 goto label27;

        if $u-1#14 <= 0 goto label27;

        widthPadding = 2147483647;

        cellCount#79 = 0L;

        $u-1#46 = 0;

        heightPadding = 0;

     label16:
        if heightPadding >= $u-1#7 goto label20;

        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(heightPadding);

        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        expandableItemCount#106 = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable>;

        if expandableItemCount#106 != 0 goto label17;

        goto label19;

     label17:
        $u-1#71 = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed>;

        if $u-1#71 >= widthPadding goto label18;

        widthPadding = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed>;

        cellCount#79 = 1L << heightPadding;

        $u-1#46 = 1;

        goto label19;

     label18:
        $u-1#71 = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed>;

        if $u-1#71 != widthPadding goto label19;

        heightMode1 = 1L << heightPadding;

        cellCount#79 = cellCount#79 | heightMode1;

        $u-1#46 = $u-1#46 + 1;

     label19:
        heightPadding = heightPadding + 1;

        goto label16;

     label20:
        heightPadding = expandableItemCount;

        smallestItemsAt = smallestItemsAt | cellCount#79;

        if $u-1#46 <= $u-1#14 goto label21;

        goto label27;

     label21:
        expandableItemCount = widthPadding + 1;

        widthPadding = 0;

     label22:
        if widthPadding >= $u-1#7 goto label26;

        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(widthPadding);

        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        $u-1#46 = 1 << widthPadding;

        heightMode1 = (long) $u-1#46;

        heightMode1 = cellCount#79 & heightMode1;

        widthPadding#128 = heightMode1 cmp 0L;

        if widthPadding#128 != 0 goto label23;

        $u-1#46 = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed>;

        if $u-1#46 != expandableItemCount goto label25;

        $u-1#46 = 1 << widthPadding;

        heightMode1 = (long) $u-1#46;

        smallestItemsAt = smallestItemsAt | heightMode1;

        goto label25;

     label23:
        if cellCount == 0 goto label24;

        cellCount#88 = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset>;

        if cellCount#88 == 0 goto label24;

        if $u-1#14 != 1 goto label24;

        $u-1#46 = this.<androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding>;

        $u-1#71 = $u-1#46 + $u-1;

        virtualinvoke $u-1#43.<android.view.View: void setPadding(int,int,int,int)>($u-1#71, 0, $u-1#46, 0);

     label24:
        $u-1#46 = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed>;

        $u-1#46 = $u-1#46 + 1;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed> = $u-1#46;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded> = 1;

        $u-1#14 = $u-1#14 + -1;

     label25:
        widthPadding = widthPadding + 1;

        goto label22;

     label26:
        cellCount#88 = 1;

        expandableItemCount = heightPadding;

        goto label15;

     label27:
        if hasOverflow != 0 goto label28;

        if heightSize != 1 goto label28;

        hasOverflow = 1;

        goto label29;

     label28:
        hasOverflow = 0;

     label29:
        if $u-1#14 <= 0 goto label44;

        widthPadding#128 = smallestItemsAt cmp 0L;

        if widthPadding#128 == 0 goto label44;

        heightSize = heightSize + -1;

        if $u-1#14 < heightSize goto label31;

        if hasOverflow != 0 goto label31;

        if maxCellsUsed <= 1 goto label30;

        goto label31;

     label30:
        goto label44;

     label31:
        maxCellsUsed = staticinvoke <java.lang.Long: int bitCount(long)>(smallestItemsAt);

        widthSize#154 = (float) maxCellsUsed;

        if hasOverflow != 0 goto label33;

        cellCount#79 = smallestItemsAt & 1L;

        widthPadding#128 = cellCount#79 cmp 0L;

        if widthPadding#128 == 0 goto label32;

        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(0);

        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        hasOverflow = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset>;

        if hasOverflow != 0 goto label32;

        widthSize#154 = widthSize#154 - 0.5F;

        goto label32;

     label32:
        maxCellsUsed = $u-1#7 + -1;

        maxCellsUsed = 1 << maxCellsUsed;

        cellCount#79 = (long) maxCellsUsed;

        cellCount#79 = smallestItemsAt & cellCount#79;

        widthPadding#128 = cellCount#79 cmp 0L;

        if widthPadding#128 == 0 goto label33;

        maxCellsUsed = $u-1#7 + -1;

        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(maxCellsUsed);

        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        hasOverflow = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset>;

        if hasOverflow != 0 goto label33;

        widthSize#154 = widthSize#154 - 0.5F;

     label33:
        widthPadding#128 = widthSize#154 cmpl 0.0F;

        if widthPadding#128 <= 0 goto label34;

        $u-1#14 = $u-1#14 * $u-1;

        widthPadding#182 = (float) $u-1#14;

        widthSize#154 = widthPadding#182 / widthSize#154;

        $u-1#14 = (int) widthSize#154;

        goto label35;

     label34:
        $u-1#14 = 0;

     label35:
        maxCellsUsed = 0;

        hasOverflow = cellCount#88;

     label36:
        if maxCellsUsed >= $u-1#7 goto label43;

        heightSize = 1 << maxCellsUsed;

        cellCount#79 = (long) heightSize;

        cellCount#79 = smallestItemsAt & cellCount#79;

        widthPadding#128 = cellCount#79 cmp 0L;

        if widthPadding#128 != 0 goto label37;

        goto label42;

     label37:
        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(maxCellsUsed);

        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        cellCount = $u-1#43 instanceof androidx.appcompat.view.menu.ActionMenuItemView;

        if cellCount == 0 goto label39;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels> = $u-1#14;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded> = 1;

        if maxCellsUsed != 0 goto label38;

        hasOverflow = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset>;

        if hasOverflow != 0 goto label38;

        heightSize = neg $u-1#14;

        heightSize = heightSize / 2;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin> = heightSize;

     label38:
        hasOverflow = 1;

        goto label42;

     label39:
        cellCount = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if cellCount == 0 goto label40;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels> = $u-1#14;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded> = 1;

        heightSize = neg $u-1#14;

        heightSize = heightSize / 2;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin> = heightSize;

        hasOverflow = 1;

        goto label42;

     label40:
        if maxCellsUsed == 0 goto label41;

        heightSize = $u-1#14 / 2;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin> = heightSize;

     label41:
        heightSize = $u-1#7 + -1;

        if maxCellsUsed == heightSize goto label42;

        heightSize = $u-1#14 / 2;

        cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin> = heightSize;

     label42:
        maxCellsUsed = maxCellsUsed + 1;

        goto label36;

     label43:
        goto label45;

     label44:
        hasOverflow = cellCount#88;

     label45:
        if hasOverflow == 0 goto label50;

        $u-1#14 = 0;

     label46:
        if $u-1#14 >= $u-1#7 goto label49;

        $u-1#43 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>($u-1#14);

        $u-1#55 = virtualinvoke $u-1#43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        cellSizeRemaining = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#55;

        hasOverflow = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded>;

        if hasOverflow != 0 goto label47;

        goto label48;

     label47:
        maxCellsUsed = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed>;

        maxCellsUsed = maxCellsUsed * $u-1;

        heightSize = cellSizeRemaining.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels>;

        maxCellsUsed = maxCellsUsed + heightSize;

        maxCellsUsed = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(maxCellsUsed, 1073741824);

        virtualinvoke $u-1#43.<android.view.View: void measure(int,int)>(maxCellsUsed, $u42);

     label48:
        $u-1#14 = $u-1#14 + 1;

        goto label46;

     label49:
        goto label50;

     label50:
        if heightMode == 1073741824 goto label51;

        $u41 = $u-1#9;

        goto label51;

     label51:
        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: void setMeasuredDimension(int,int)>(widthSize, $u41);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.view.ViewGroup$LayoutParams $u2;
        boolean $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u0 = $u2 instanceof androidx.appcompat.widget.ActionMenuView$LayoutParams;

        return $u0;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.view.accessibility.AccessibilityEvent $u2;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u2 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return 0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()>();

        return $u-1;
    }

    protected androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams params;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        params = new androidx.appcompat.widget.ActionMenuView$LayoutParams;

        specialinvoke params.<androidx.appcompat.widget.ActionMenuView$LayoutParams: void <init>(int,int)>(-2, -2);

        params.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int gravity> = 16;

        return params;
    }

    protected volatile androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()>();

        return $u-1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;
        android.util.AttributeSet $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>($u1);

        return $u-1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;
        android.view.ViewGroup$LayoutParams $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($u1);

        return $u-1;
    }

    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.util.AttributeSet $u3;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u0;
        android.content.Context $u-1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u3 := @parameter0: android.util.AttributeSet;

        $u0 = new androidx.appcompat.widget.ActionMenuView$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.content.Context getContext()>();

        specialinvoke $u0.<androidx.appcompat.widget.ActionMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($u-1, $u3);

        return $u0;
    }

    protected androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.view.ViewGroup$LayoutParams $u3;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1, $u1;
        boolean result;
        int $u1#5;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u3 := @parameter0: android.view.ViewGroup$LayoutParams;

        if $u3 == null goto label3;

        result = $u3 instanceof androidx.appcompat.widget.ActionMenuView$LayoutParams;

        if result == 0 goto label1;

        $u-1 = new androidx.appcompat.widget.ActionMenuView$LayoutParams;

        $u1 = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u3;

        specialinvoke $u-1.<androidx.appcompat.widget.ActionMenuView$LayoutParams: void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams)>($u1);

        goto label2;

     label1:
        $u-1 = new androidx.appcompat.widget.ActionMenuView$LayoutParams;

        specialinvoke $u-1.<androidx.appcompat.widget.ActionMenuView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($u3);

     label2:
        $u1#5 = $u-1.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int gravity>;

        if $u1#5 > 0 goto label4;

        $u-1.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int gravity> = 16;

        return $u-1;

     label3:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()>();

     label4:
        return $u-1;
    }

    public volatile androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;
        android.util.AttributeSet $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: android.util.AttributeSet;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>($u1);

        return $u-1;
    }

    protected volatile androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;
        android.view.ViewGroup$LayoutParams $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($u1);

        return $u-1;
    }

    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$LayoutParams $u-1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()>();

        $u-1.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton> = 1;

        return $u-1;
    }

    public android.view.Menu getMenu()
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.content.Context $u3;
        androidx.appcompat.view.menu.MenuBuilder context, $u0;
        androidx.appcompat.widget.ActionMenuPresenter $u1, $u2;
        androidx.appcompat.view.menu.MenuPresenter$Callback $u2#8;
        androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback $u1;
        androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback $u4;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        context = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu>;

        if context != null goto label3;

        $u3 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.content.Context getContext()>();

        $u0 = new androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke $u0.<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>($u3);

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu> = $u0;

        $u1 = new androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback;

        specialinvoke $u1.<androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: void <init>(androidx.appcompat.widget.ActionMenuView)>(this);

        virtualinvoke $u0.<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>($u1);

        $u2 = new androidx.appcompat.widget.ActionMenuPresenter;

        specialinvoke $u2.<androidx.appcompat.widget.ActionMenuPresenter: void <init>(android.content.Context)>($u3);

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter> = $u2;

        virtualinvoke $u2.<androidx.appcompat.widget.ActionMenuPresenter: void setReserveOverflow(boolean)>(1);

        $u1 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        $u2#8 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback>;

        if $u2#8 == null goto label1;

        goto label2;

     label1:
        $u4 = new androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback;

        $u2#8 = $u4;

        specialinvoke $u4.<androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: void <init>()>();

     label2:
        virtualinvoke $u1.<androidx.appcompat.widget.ActionMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)>($u2#8);

        context = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu>;

        $u1 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        $u3 = this.<androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext>;

        virtualinvoke context.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($u1, $u3);

        $u1 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        virtualinvoke $u1.<androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)>(this);

     label3:
        context = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu>;

        return context;
    }

    public android.graphics.drawable.Drawable getOverflowIcon()
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.graphics.drawable.Drawable $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()>();

        return $u-1;
    }

    public int getPopupTheme()
    {
        androidx.appcompat.widget.ActionMenuView this;
        int ret0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        ret0 = this.<androidx.appcompat.widget.ActionMenuView: int mPopupTheme>;

        return ret0;
    }

    public int getWindowAnimations()
    {
        androidx.appcompat.widget.ActionMenuView this;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        return 0;
    }

    protected boolean hasSupportDividerBeforeChildAt(int)
    {
        androidx.appcompat.widget.ActionMenuView this;
        int $u5, childBefore;
        android.view.View $u-1, $u-1#5;
        boolean result, $u3;
        androidx.appcompat.widget.ActionMenuView$ActionMenuChildView $u3#11;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u5 := @parameter0: int;

        if $u5 != 0 goto label1;

        return 0;

     label1:
        childBefore = $u5 + -1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(childBefore);

        $u-1#5 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>($u5);

        result = 0;

        childBefore = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getChildCount()>();

        if $u5 >= childBefore goto label2;

        $u3 = $u-1 instanceof androidx.appcompat.widget.ActionMenuView$ActionMenuChildView;

        if $u3 == 0 goto label2;

        $u3#11 = (androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) $u-1;

        result = interfaceinvoke $u3#11.<androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerAfter()>();

     label2:
        if $u5 <= 0 goto label3;

        $u3 = $u-1#5 instanceof androidx.appcompat.widget.ActionMenuView$ActionMenuChildView;

        if $u3 == 0 goto label3;

        $u3#11 = (androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) $u-1#5;

        $u3 = interfaceinvoke $u3#11.<androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerBefore()>();

        result = result | $u3;

     label3:
        return result;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void initialize(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.view.menu.MenuBuilder $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu> = $u1;

        return;
    }

    public boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.view.menu.MenuItemImpl $u3;
        boolean $u-1;
        androidx.appcompat.view.menu.MenuBuilder $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u3 := @parameter0: androidx.appcompat.view.menu.MenuItemImpl;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>($u3, 0);

        return $u-1;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean ret0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        ret0 = this.<androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow>;

        return ret0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.content.res.Configuration $u3;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u3 := @parameter0: android.content.res.Configuration;

        specialinvoke this.<androidx.appcompat.widget.LinearLayoutCompat: void onConfigurationChanged(android.content.res.Configuration)>($u3);

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        if $u0 == null goto label1;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)>(0);

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        if $u-1 == 0 goto label1;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

     label1:
        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.appcompat.widget.ActionMenuView this;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        specialinvoke this.<androidx.appcompat.widget.LinearLayoutCompat: void onDetachedFromWindow()>();

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.appcompat.widget.ActionMenuView this, $u0;
        boolean $u21, childCount;
        int $u22, $u23, $u24, $u25, $u-1, dividerWidth, overflowWidth, widthRemaining, $u-1#12, $u-1#31, $u-1#36, r, t;
        byte hasOverflow;
        android.view.View $u-1#22;
        android.view.ViewGroup$LayoutParams $u-1#27;
        androidx.appcompat.widget.ActionMenuView$LayoutParams p;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u21 := @parameter0: boolean;

        $u22 := @parameter1: int;

        $u23 := @parameter2: int;

        $u24 := @parameter3: int;

        $u25 := @parameter4: int;

        $u0 = this;

        childCount = this.<androidx.appcompat.widget.ActionMenuView: boolean mFormatItems>;

        if childCount != 0 goto label01;

        specialinvoke this.<androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)>($u21, $u22, $u23, $u24, $u25);

        return;

     label01:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getChildCount()>();

        $u23 = $u25 - $u23;

        $u23 = $u23 / 2;

        dividerWidth = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getDividerWidth()>();

        $u25 = 0;

        widthRemaining = $u24 - $u22;

        $u-1#12 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingRight()>();

        widthRemaining = widthRemaining - $u-1#12;

        $u-1#12 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingLeft()>();

        widthRemaining = widthRemaining - $u-1#12;

        hasOverflow = 0;

        $u21 = staticinvoke <androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>(this);

        $u-1#12 = 0;

     label02:
        if $u-1#12 >= $u-1 goto label09;

        $u-1#22 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>($u-1#12);

        overflowWidth = virtualinvoke $u-1#22.<android.view.View: int getVisibility()>();

        if overflowWidth != 8 goto label03;

        goto label08;

     label03:
        $u-1#27 = virtualinvoke $u-1#22.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        p = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#27;

        childCount = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if childCount == 0 goto label07;

        $u-1#31 = virtualinvoke $u-1#22.<android.view.View: int getMeasuredWidth()>();

        overflowWidth = $u-1#31;

        childCount = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)>($u-1#12);

        if childCount == 0 goto label04;

        overflowWidth = $u-1#31 + dividerWidth;

     label04:
        $u-1#31 = virtualinvoke $u-1#22.<android.view.View: int getMeasuredHeight()>();

        if $u21 == 0 goto label05;

        $u-1#36 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingLeft()>();

        r = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin>;

        $u-1#36 = $u-1#36 + r;

        r = $u-1#36 + overflowWidth;

        goto label06;

     label05:
        $u-1#36 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getWidth()>();

        r = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingRight()>();

        $u-1#36 = $u-1#36 - r;

        r = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin>;

        r = $u-1#36 - r;

        $u-1#36 = r - overflowWidth;

     label06:
        t = $u-1#31 / 2;

        t = $u23 - t;

        $u-1#31 = t + $u-1#31;

        virtualinvoke $u-1#22.<android.view.View: void layout(int,int,int,int)>($u-1#36, t, r, $u-1#31);

        widthRemaining = widthRemaining - overflowWidth;

        hasOverflow = 1;

        goto label08;

     label07:
        overflowWidth = virtualinvoke $u-1#22.<android.view.View: int getMeasuredWidth()>();

        $u-1#31 = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin>;

        overflowWidth = overflowWidth + $u-1#31;

        $u-1#31 = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin>;

        overflowWidth = overflowWidth + $u-1#31;

        widthRemaining = widthRemaining - overflowWidth;

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)>($u-1#12);

        $u25 = $u25 + 1;

     label08:
        $u-1#12 = $u-1#12 + 1;

        goto label02;

     label09:
        if $u-1 != 1 goto label10;

        if hasOverflow != 0 goto label10;

        $u-1#22 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(0);

        $u-1 = virtualinvoke $u-1#22.<android.view.View: int getMeasuredWidth()>();

        $u25 = virtualinvoke $u-1#22.<android.view.View: int getMeasuredHeight()>();

        $u22 = $u24 - $u22;

        $u22 = $u22 / 2;

        $u24 = $u-1 / 2;

        $u22 = $u22 - $u24;

        $u24 = $u25 / 2;

        $u23 = $u23 - $u24;

        $u24 = $u22 + $u-1;

        $u25 = $u23 + $u25;

        virtualinvoke $u-1#22.<android.view.View: void layout(int,int,int,int)>($u22, $u23, $u24, $u25);

        return;

     label10:
        $u22 = hasOverflow ^ 1;

        $u22 = $u25 - $u22;

        if $u22 <= 0 goto label11;

        $u22 = widthRemaining / $u22;

        goto label12;

     label11:
        $u22 = 0;

     label12:
        $u22 = staticinvoke <java.lang.Math: int max(int,int)>(0, $u22);

        if $u21 == 0 goto label17;

        $u24 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getWidth()>();

        $u25 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingRight()>();

        $u25 = $u24 - $u25;

        $u24 = 0;

     label13:
        if $u24 >= $u-1 goto label16;

        $u-1#22 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>($u24);

        $u-1#27 = virtualinvoke $u-1#22.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        p = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#27;

        widthRemaining = virtualinvoke $u-1#22.<android.view.View: int getVisibility()>();

        if widthRemaining == 8 goto label15;

        $u21 = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if $u21 == 0 goto label14;

        goto label15;

     label14:
        widthRemaining = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin>;

        $u25 = $u25 - widthRemaining;

        widthRemaining = virtualinvoke $u-1#22.<android.view.View: int getMeasuredWidth()>();

        $u-1#12 = virtualinvoke $u-1#22.<android.view.View: int getMeasuredHeight()>();

        dividerWidth = $u-1#12 / 2;

        dividerWidth = $u23 - dividerWidth;

        overflowWidth = $u25 - widthRemaining;

        $u-1#12 = dividerWidth + $u-1#12;

        virtualinvoke $u-1#22.<android.view.View: void layout(int,int,int,int)>(overflowWidth, dividerWidth, $u25, $u-1#12);

        $u-1#12 = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin>;

        widthRemaining = $u-1#12 + widthRemaining;

        widthRemaining = widthRemaining + $u22;

        $u25 = $u25 - widthRemaining;

        goto label15;

     label15:
        $u24 = $u24 + 1;

        goto label13;

     label16:
        return;

     label17:
        $u25 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getPaddingLeft()>();

        $u24 = 0;

     label18:
        if $u24 >= $u-1 goto label21;

        $u-1#22 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>($u24);

        $u-1#27 = virtualinvoke $u-1#22.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        p = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#27;

        widthRemaining = virtualinvoke $u-1#22.<android.view.View: int getVisibility()>();

        if widthRemaining == 8 goto label20;

        $u21 = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton>;

        if $u21 == 0 goto label19;

        goto label20;

     label19:
        widthRemaining = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin>;

        $u25 = $u25 + widthRemaining;

        widthRemaining = virtualinvoke $u-1#22.<android.view.View: int getMeasuredWidth()>();

        $u-1#12 = virtualinvoke $u-1#22.<android.view.View: int getMeasuredHeight()>();

        dividerWidth = $u-1#12 / 2;

        dividerWidth = $u23 - dividerWidth;

        overflowWidth = $u25 + widthRemaining;

        $u-1#12 = dividerWidth + $u-1#12;

        virtualinvoke $u-1#22.<android.view.View: void layout(int,int,int,int)>($u25, dividerWidth, overflowWidth, $u-1#12);

        $u-1#12 = p.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin>;

        widthRemaining = $u-1#12 + widthRemaining;

        widthRemaining = widthRemaining + $u22;

        $u25 = $u25 + widthRemaining;

     label20:
        $u24 = $u24 + 1;

        $u0 = this;

        goto label18;

     label21:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.appcompat.widget.ActionMenuView this;
        int $u8, $u9, $u-1, child;
        boolean wasFormatted, widthSize;
        androidx.appcompat.view.menu.MenuBuilder i;
        android.view.View $u-1#15;
        android.view.ViewGroup$LayoutParams $u-1#17;
        androidx.appcompat.widget.ActionMenuView$LayoutParams lp;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u8 := @parameter0: int;

        $u9 := @parameter1: int;

        wasFormatted = this.<androidx.appcompat.widget.ActionMenuView: boolean mFormatItems>;

        $u-1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($u8);

        if $u-1 != 1073741824 goto label1;

        widthSize = 1;

        goto label2;

     label1:
        widthSize = 0;

     label2:
        this.<androidx.appcompat.widget.ActionMenuView: boolean mFormatItems> = widthSize;

        if wasFormatted == widthSize goto label3;

        this.<androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth> = 0;

     label3:
        $u-1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($u8);

        wasFormatted = this.<androidx.appcompat.widget.ActionMenuView: boolean mFormatItems>;

        if wasFormatted == 0 goto label4;

        i = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu>;

        if i == null goto label4;

        child = this.<androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth>;

        if $u-1 == child goto label4;

        this.<androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth> = $u-1;

        virtualinvoke i.<androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

     label4:
        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: int getChildCount()>();

        wasFormatted = this.<androidx.appcompat.widget.ActionMenuView: boolean mFormatItems>;

        if wasFormatted == 0 goto label5;

        if $u-1 <= 0 goto label5;

        specialinvoke this.<androidx.appcompat.widget.ActionMenuView: void onMeasureExactFormat(int,int)>($u8, $u9);

        return;

     label5:
        child = 0;

     label6:
        if child >= $u-1 goto label7;

        $u-1#15 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.View getChildAt(int)>(child);

        $u-1#17 = virtualinvoke $u-1#15.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lp = (androidx.appcompat.widget.ActionMenuView$LayoutParams) $u-1#17;

        lp.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int rightMargin> = 0;

        lp.<androidx.appcompat.widget.ActionMenuView$LayoutParams: int leftMargin> = 0;

        child = child + 1;

        goto label6;

     label7:
        specialinvoke this.<androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)>($u8, $u9);

        return;
    }

    public androidx.appcompat.view.menu.MenuBuilder peekMenu()
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.view.menu.MenuBuilder ret0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        ret0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu>;

        return ret0;
    }

    public void setExpandedActionViewsExclusive(boolean)
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean $u2;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u2 := @parameter0: boolean;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>($u2);

        return;
    }

    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback, androidx.appcompat.view.menu.MenuBuilder$Callback)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.view.menu.MenuPresenter$Callback $u1;
        androidx.appcompat.view.menu.MenuBuilder$Callback $u2;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: androidx.appcompat.view.menu.MenuPresenter$Callback;

        $u2 := @parameter1: androidx.appcompat.view.menu.MenuBuilder$Callback;

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback> = $u1;

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback> = $u2;

        return;
    }

    public void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener;

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener> = $u1;

        return;
    }

    public void setOverflowIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ActionMenuView this;
        android.graphics.drawable.Drawable $u2;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u2 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)>($u2);

        return;
    }

    public void setOverflowReserved(boolean)
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: boolean;

        this.<androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow> = $u1;

        return;
    }

    public void setPopupTheme(int)
    {
        androidx.appcompat.widget.ActionMenuView this;
        int $u3, $u0;
        android.content.Context $u-1;
        android.view.ContextThemeWrapper $u0#4;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u3 := @parameter0: int;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: int mPopupTheme>;

        if $u0 == $u3 goto label2;

        this.<androidx.appcompat.widget.ActionMenuView: int mPopupTheme> = $u3;

        if $u3 != 0 goto label1;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.content.Context getContext()>();

        this.<androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext> = $u-1;

        return;

     label1:
        $u0#4 = new android.view.ContextThemeWrapper;

        $u-1 = virtualinvoke this.<androidx.appcompat.widget.ActionMenuView: android.content.Context getContext()>();

        specialinvoke $u0#4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($u-1, $u3);

        this.<androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext> = $u0#4;

     label2:
        return;
    }

    public void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
    {
        androidx.appcompat.widget.ActionMenuView this;
        androidx.appcompat.widget.ActionMenuPresenter $u1;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u1 := @parameter0: androidx.appcompat.widget.ActionMenuPresenter;

        this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter> = $u1;

        virtualinvoke $u1.<androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)>(this);

        return;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView this;
        boolean $u-1;
        androidx.appcompat.widget.ActionMenuPresenter $u0;

        this := @this: androidx.appcompat.widget.ActionMenuView;

        $u0 = this.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter>;

        if $u0 == null goto label1;

        $u-1 = virtualinvoke $u0.<androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        if $u-1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.ActionMenuView: java.lang.String TAG> = "ActionMenuView";

        <androidx.appcompat.widget.ActionMenuView: int MIN_CELL_SIZE> = 56;

        <androidx.appcompat.widget.ActionMenuView: int GENERATED_ITEM_PADDING> = 4;

        return;
    }
}
