public class androidx.constraintlayout.solver.SolverVariable extends java.lang.Object
{
    private static final boolean INTERNAL_DEBUG;
    static final int MAX_STRENGTH;
    public static final int STRENGTH_BARRIER;
    public static final int STRENGTH_CENTERING;
    public static final int STRENGTH_EQUALITY;
    public static final int STRENGTH_FIXED;
    public static final int STRENGTH_HIGH;
    public static final int STRENGTH_HIGHEST;
    public static final int STRENGTH_LOW;
    public static final int STRENGTH_MEDIUM;
    public static final int STRENGTH_NONE;
    private static final boolean VAR_USE_HASH;
    private static int uniqueConstantId;
    private static int uniqueErrorId;
    private static int uniqueId;
    private static int uniqueSlackId;
    private static int uniqueUnrestrictedId;
    public float computedValue;
    int definitionId;
    float[] goalStrengthVector;
    public int id;
    public boolean inGoal;
    java.util.HashSet inRows;
    public boolean isFinalValue;
    androidx.constraintlayout.solver.ArrayRow[] mClientEquations;
    int mClientEquationsCount;
    private java.lang.String mName;
    androidx.constraintlayout.solver.SolverVariable$Type mType;
    public int strength;
    float[] strengthVector;
    public int usageInRowCount;

    static void <clinit>()
    {
        <androidx.constraintlayout.solver.SolverVariable: boolean VAR_USE_HASH> = 0;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_NONE> = 0;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_MEDIUM> = 2;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_LOW> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGHEST> = 4;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGH> = 3;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_FIXED> = 8;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_EQUALITY> = 5;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_CENTERING> = 7;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_BARRIER> = 6;

        <androidx.constraintlayout.solver.SolverVariable: int MAX_STRENGTH> = 9;

        <androidx.constraintlayout.solver.SolverVariable: boolean INTERNAL_DEBUG> = 0;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueSlackId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueUnrestrictedId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueConstantId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueId> = 1;

        return;
    }

    public void <init>(androidx.constraintlayout.solver.SolverVariable$Type, java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        androidx.constraintlayout.solver.SolverVariable$Type $u4;
        java.lang.String $u5;
        float[] $u2;
        androidx.constraintlayout.solver.ArrayRow[] $u1;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter0: androidx.constraintlayout.solver.SolverVariable$Type;

        $u5 := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.SolverVariable: int id> = -1;

        this.<androidx.constraintlayout.solver.SolverVariable: int definitionId> = -1;

        this.<androidx.constraintlayout.solver.SolverVariable: int strength> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue> = 0;

        $u2 = newarray (float)[9];

        this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector> = $u2;

        $u2 = newarray (float)[9];

        this.<androidx.constraintlayout.solver.SolverVariable: float[] goalStrengthVector> = $u2;

        $u1 = newarray (androidx.constraintlayout.solver.ArrayRow)[16];

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations> = $u1;

        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: java.util.HashSet inRows> = null;

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $u4;

        return;
    }

    public void <init>(java.lang.String, androidx.constraintlayout.solver.SolverVariable$Type)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        java.lang.String $u4;
        androidx.constraintlayout.solver.SolverVariable$Type $u5;
        float[] $u2;
        androidx.constraintlayout.solver.ArrayRow[] $u1;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter0: java.lang.String;

        $u5 := @parameter1: androidx.constraintlayout.solver.SolverVariable$Type;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.constraintlayout.solver.SolverVariable: int id> = -1;

        this.<androidx.constraintlayout.solver.SolverVariable: int definitionId> = -1;

        this.<androidx.constraintlayout.solver.SolverVariable: int strength> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue> = 0;

        $u2 = newarray (float)[9];

        this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector> = $u2;

        $u2 = newarray (float)[9];

        this.<androidx.constraintlayout.solver.SolverVariable: float[] goalStrengthVector> = $u2;

        $u1 = newarray (androidx.constraintlayout.solver.ArrayRow)[16];

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations> = $u1;

        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: java.util.HashSet inRows> = null;

        this.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName> = $u4;

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $u5;

        return;
    }

    private static java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type, java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable$Type $u3;
        java.lang.String $u4;
        java.lang.StringBuilder $u0;
        int $u1;
        int[] $u0#5;
        java.lang.AssertionError $u0#20;

        $u3 := @parameter0: androidx.constraintlayout.solver.SolverVariable$Type;

        $u4 := @parameter1: java.lang.String;

        if $u4 == null goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u4);

        $u1 = <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        $u4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u4;

     label1:
        $u0#5 = <androidx.constraintlayout.solver.SolverVariable$1: int[] $SwitchMap$androidx$constraintlayout$solver$SolverVariable$Type>;

        $u1 = virtualinvoke $u3.<androidx.constraintlayout.solver.SolverVariable$Type: int ordinal()>();

        $u1 = $u0#5[$u1];

        if $u1 == 1 goto label6;

        if $u1 == 2 goto label5;

        if $u1 == 3 goto label4;

        if $u1 == 4 goto label3;

        if $u1 != 5 goto label2;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V");

        $u1 = <androidx.constraintlayout.solver.SolverVariable: int uniqueId>;

        $u1 = $u1 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueId> = $u1;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        $u4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u4;

     label2:
        $u0#20 = new java.lang.AssertionError;

        $u4 = virtualinvoke $u3.<androidx.constraintlayout.solver.SolverVariable$Type: java.lang.String name()>();

        specialinvoke $u0#20.<java.lang.AssertionError: void <init>(java.lang.Object)>($u4);

        throw $u0#20;

     label3:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("e");

        $u1 = <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId>;

        $u1 = $u1 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId> = $u1;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        $u4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u4;

     label4:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $u1 = <androidx.constraintlayout.solver.SolverVariable: int uniqueSlackId>;

        $u1 = $u1 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueSlackId> = $u1;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        $u4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u4;

     label5:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $u1 = <androidx.constraintlayout.solver.SolverVariable: int uniqueConstantId>;

        $u1 = $u1 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueConstantId> = $u1;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        $u4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u4;

     label6:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("U");

        $u1 = <androidx.constraintlayout.solver.SolverVariable: int uniqueUnrestrictedId>;

        $u1 = $u1 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueUnrestrictedId> = $u1;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u1);

        $u4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u4;
    }

    static void increaseErrorId()
    {
        int $u0;

        $u0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId>;

        $u0 = $u0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId> = $u0;

        return;
    }

    public final void addToRow(androidx.constraintlayout.solver.ArrayRow)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        androidx.constraintlayout.solver.ArrayRow $u4, $u1#4;
        int $u2, $u1;
        java.lang.Object[] $u-1;
        androidx.constraintlayout.solver.ArrayRow[] $u1#3;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u4 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $u2 = 0;

     label1:
        $u1 = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        if $u2 >= $u1 goto label3;

        $u1#3 = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u1#4 = $u1#3[$u2];

        if $u1#4 != $u4 goto label2;

        return;

     label2:
        $u2 = $u2 + 1;

        goto label1;

     label3:
        $u1#3 = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u2 = lengthof $u1#3;

        if $u1 < $u2 goto label4;

        $u1 = lengthof $u1#3;

        $u1 = $u1 * 2;

        $u-1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($u1#3, $u1);

        $u1#3 = (androidx.constraintlayout.solver.ArrayRow[]) $u-1;

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations> = $u1#3;

     label4:
        $u1#3 = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u1 = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        $u1#3[$u1] = $u4;

        $u1 = $u1 + 1;

        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = $u1;

        return;
    }

    void clearStrengths()
    {
        androidx.constraintlayout.solver.SolverVariable this;
        int i;
        float[] $u1;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        i = 0;

     label1:
        if i >= 9 goto label2;

        $u1 = this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $u1[i] = 0.0F;

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getName()
    {
        androidx.constraintlayout.solver.SolverVariable this;
        java.lang.String ret0;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        ret0 = this.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName>;

        return ret0;
    }

    public final void removeFromRow(androidx.constraintlayout.solver.ArrayRow)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        androidx.constraintlayout.solver.ArrayRow $u6, j#3;
        int count, i, $u3;
        androidx.constraintlayout.solver.ArrayRow[] j;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u6 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        count = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        i = 0;

     label1:
        if i >= count goto label5;

        j = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        j#3 = j[i];

        if j#3 != $u6 goto label4;

     label2:
        $u3 = count + -1;

        if i >= $u3 goto label3;

        j = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u3 = i + 1;

        $u6 = j[$u3];

        j[i] = $u6;

        i = i + 1;

        goto label2;

     label3:
        count = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        count = count + -1;

        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = count;

        return;

     label4:
        i = i + 1;

        goto label1;

     label5:
        return;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.SolverVariable this;
        int count, i;
        androidx.constraintlayout.solver.ArrayRow[] $u5;
        androidx.constraintlayout.solver.SolverVariable$Type $u1;
        float[] $u0;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        this.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName> = null;

        $u1 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNKNOWN>;

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $u1;

        this.<androidx.constraintlayout.solver.SolverVariable: int strength> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: int id> = -1;

        this.<androidx.constraintlayout.solver.SolverVariable: int definitionId> = -1;

        this.<androidx.constraintlayout.solver.SolverVariable: float computedValue> = 0.0F;

        this.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue> = 0;

        count = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        i = 0;

     label1:
        if i >= count goto label2;

        $u5 = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u5[i] = null;

        i = i + 1;

        goto label1;

     label2:
        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = 0;

        this.<androidx.constraintlayout.solver.SolverVariable: boolean inGoal> = 0;

        $u0 = this.<androidx.constraintlayout.solver.SolverVariable: float[] goalStrengthVector>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($u0, 0.0F);

        return;
    }

    public void setFinalValue(androidx.constraintlayout.solver.LinearSystem, float)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        androidx.constraintlayout.solver.LinearSystem $u5;
        float $u6;
        int count, i;
        androidx.constraintlayout.solver.ArrayRow[] $u3;
        androidx.constraintlayout.solver.ArrayRow $u3#5;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u5 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $u6 := @parameter1: float;

        this.<androidx.constraintlayout.solver.SolverVariable: float computedValue> = $u6;

        this.<androidx.constraintlayout.solver.SolverVariable: boolean isFinalValue> = 1;

        count = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        i = 0;

     label1:
        if i >= count goto label2;

        $u3 = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u3#5 = $u3[i];

        virtualinvoke $u3#5.<androidx.constraintlayout.solver.ArrayRow: void updateFromFinalVariable(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,boolean)>($u5, this, 0);

        i = i + 1;

        goto label1;

     label2:
        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        return;
    }

    public void setName(java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        java.lang.String $u1;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u1 := @parameter0: java.lang.String;

        this.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName> = $u1;

        return;
    }

    public void setType(androidx.constraintlayout.solver.SolverVariable$Type, java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        androidx.constraintlayout.solver.SolverVariable$Type $u1;
        java.lang.String $u2;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u1 := @parameter0: androidx.constraintlayout.solver.SolverVariable$Type;

        $u2 := @parameter1: java.lang.String;

        this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $u1;

        return;
    }

    java.lang.String strengthsToString()
    {
        androidx.constraintlayout.solver.SolverVariable this;
        java.lang.StringBuilder representation;
        java.lang.String $u-1;
        boolean negative, empty;
        int j, $u4#9;
        float[] $u4;
        float $u5;
        byte $u5#17;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        representation = new java.lang.StringBuilder;

        specialinvoke representation.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $u-1 = virtualinvoke representation.<java.lang.StringBuilder: java.lang.String toString()>();

        negative = 0;

        empty = 1;

        j = 0;

     label1:
        $u4 = this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $u4#9 = lengthof $u4;

        if j >= $u4#9 goto label7;

        representation = new java.lang.StringBuilder;

        specialinvoke representation.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        $u4 = this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $u5 = $u4[j];

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($u5);

        $u-1 = virtualinvoke representation.<java.lang.StringBuilder: java.lang.String toString()>();

        $u4 = this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $u5 = $u4[j];

        $u5#17 = $u5 cmpl 0.0F;

        if $u5#17 <= 0 goto label2;

        negative = 0;

        goto label3;

     label2:
        $u5 = $u4[j];

        $u5#17 = $u5 cmpg 0.0F;

        if $u5#17 >= 0 goto label3;

        negative = 1;

     label3:
        $u4 = this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $u5 = $u4[j];

        $u5#17 = $u5 cmpl 0.0F;

        if $u5#17 == 0 goto label4;

        empty = 0;

     label4:
        $u4 = this.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $u4#9 = lengthof $u4;

        $u4#9 = $u4#9 + -1;

        if j >= $u4#9 goto label5;

        representation = new java.lang.StringBuilder;

        specialinvoke representation.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $u-1 = virtualinvoke representation.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        representation = new java.lang.StringBuilder;

        specialinvoke representation.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $u-1 = virtualinvoke representation.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        j = j + 1;

        goto label1;

     label7:
        if negative == 0 goto label8;

        representation = new java.lang.StringBuilder;

        specialinvoke representation.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (-)");

        $u-1 = virtualinvoke representation.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        if empty == 0 goto label9;

        representation = new java.lang.StringBuilder;

        specialinvoke representation.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1);

        virtualinvoke representation.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (*)");

        $u-1 = virtualinvoke representation.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        return $u-1;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.SolverVariable this;
        java.lang.String $u1;
        java.lang.StringBuilder $u1#3;
        int $u2;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u1 = this.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName>;

        if $u1 == null goto label1;

        $u1#3 = new java.lang.StringBuilder;

        specialinvoke $u1#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $u1 = this.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName>;

        virtualinvoke $u1#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u1);

        $u1 = virtualinvoke $u1#3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u1;

     label1:
        $u1#3 = new java.lang.StringBuilder;

        specialinvoke $u1#3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1#3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $u2 = this.<androidx.constraintlayout.solver.SolverVariable: int id>;

        virtualinvoke $u1#3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($u2);

        $u1 = virtualinvoke $u1#3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u1;
    }

    public final void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow)
    {
        androidx.constraintlayout.solver.SolverVariable this;
        androidx.constraintlayout.solver.ArrayRow $u5, $u3#3;
        int count, i;
        androidx.constraintlayout.solver.ArrayRow[] $u3;

        this := @this: androidx.constraintlayout.solver.SolverVariable;

        $u5 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        count = this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        i = 0;

     label1:
        if i >= count goto label2;

        $u3 = this.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $u3#3 = $u3[i];

        virtualinvoke $u3#3.<androidx.constraintlayout.solver.ArrayRow: void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean)>($u5, 0);

        i = i + 1;

        goto label1;

     label2:
        this.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        return;
    }
}
