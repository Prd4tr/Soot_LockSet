final class androidx.collection.MapCollections$ArrayIterator extends java.lang.Object implements java.util.Iterator
{
    boolean mCanRemove;
    int mIndex;
    final int mOffset;
    int mSize;
    final androidx.collection.MapCollections this$0;

    void <init>(androidx.collection.MapCollections, int)
    {
        androidx.collection.MapCollections$ArrayIterator this;
        androidx.collection.MapCollections $u2;
        int $u3;

        this := @this: androidx.collection.MapCollections$ArrayIterator;

        $u2 := @parameter0: androidx.collection.MapCollections;

        $u3 := @parameter1: int;

        this.<androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0> = $u2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove> = 0;

        this.<androidx.collection.MapCollections$ArrayIterator: int mOffset> = $u3;

        $u3 = virtualinvoke $u2.<androidx.collection.MapCollections: int colGetSize()>();

        this.<androidx.collection.MapCollections$ArrayIterator: int mSize> = $u3;

        return;
    }

    public boolean hasNext()
    {
        androidx.collection.MapCollections$ArrayIterator this;
        int $u1, $u0;

        this := @this: androidx.collection.MapCollections$ArrayIterator;

        $u0 = this.<androidx.collection.MapCollections$ArrayIterator: int mIndex>;

        $u1 = this.<androidx.collection.MapCollections$ArrayIterator: int mSize>;

        if $u0 >= $u1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        androidx.collection.MapCollections$ArrayIterator this;
        boolean $u-1;
        androidx.collection.MapCollections res;
        int $u1, $u2;
        java.lang.Object $u-1#6;
        java.util.NoSuchElementException res#11;

        this := @this: androidx.collection.MapCollections$ArrayIterator;

        $u-1 = virtualinvoke this.<androidx.collection.MapCollections$ArrayIterator: boolean hasNext()>();

        if $u-1 == 0 goto label1;

        res = this.<androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0>;

        $u1 = this.<androidx.collection.MapCollections$ArrayIterator: int mIndex>;

        $u2 = this.<androidx.collection.MapCollections$ArrayIterator: int mOffset>;

        $u-1#6 = virtualinvoke res.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>($u1, $u2);

        $u1 = this.<androidx.collection.MapCollections$ArrayIterator: int mIndex>;

        $u1 = $u1 + 1;

        this.<androidx.collection.MapCollections$ArrayIterator: int mIndex> = $u1;

        this.<androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove> = 1;

        return $u-1#6;

     label1:
        res#11 = new java.util.NoSuchElementException;

        specialinvoke res#11.<java.util.NoSuchElementException: void <init>()>();

        throw res#11;
    }

    public void remove()
    {
        androidx.collection.MapCollections$ArrayIterator this;
        boolean $u0;
        int $u0#2, $u1;
        androidx.collection.MapCollections $u1#7;
        java.lang.IllegalStateException $u0#8;

        this := @this: androidx.collection.MapCollections$ArrayIterator;

        $u0 = this.<androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove>;

        if $u0 == 0 goto label1;

        $u0#2 = this.<androidx.collection.MapCollections$ArrayIterator: int mIndex>;

        $u0#2 = $u0#2 + -1;

        this.<androidx.collection.MapCollections$ArrayIterator: int mIndex> = $u0#2;

        $u1 = this.<androidx.collection.MapCollections$ArrayIterator: int mSize>;

        $u1 = $u1 + -1;

        this.<androidx.collection.MapCollections$ArrayIterator: int mSize> = $u1;

        this.<androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove> = 0;

        $u1#7 = this.<androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0>;

        virtualinvoke $u1#7.<androidx.collection.MapCollections: void colRemoveAt(int)>($u0#2);

        return;

     label1:
        $u0#8 = new java.lang.IllegalStateException;

        specialinvoke $u0#8.<java.lang.IllegalStateException: void <init>()>();

        throw $u0#8;
    }
}
