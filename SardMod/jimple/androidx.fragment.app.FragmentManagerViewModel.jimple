class androidx.fragment.app.FragmentManagerViewModel extends androidx.lifecycle.ViewModel
{
    private static final androidx.lifecycle.ViewModelProvider$Factory FACTORY;
    private final java.util.HashMap mChildNonConfigs;
    private boolean mHasBeenCleared;
    private boolean mHasSavedSnapshot;
    private final java.util.HashSet mRetainedFragments;
    private final boolean mStateAutomaticallySaved;
    private final java.util.HashMap mViewModelStores;

    static void <clinit>()
    {
        androidx.fragment.app.FragmentManagerViewModel$1 $u0;

        $u0 = new androidx.fragment.app.FragmentManagerViewModel$1;

        specialinvoke $u0.<androidx.fragment.app.FragmentManagerViewModel$1: void <init>()>();

        <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> = $u0;

        return;
    }

    void <init>(boolean)
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        boolean $u2;
        java.util.HashSet $u0;
        java.util.HashMap $u0#2;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u2 := @parameter0: boolean;

        specialinvoke this.<androidx.lifecycle.ViewModel: void <init>()>();

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments> = $u0;

        $u0#2 = new java.util.HashMap;

        specialinvoke $u0#2.<java.util.HashMap: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs> = $u0#2;

        $u0#2 = new java.util.HashMap;

        specialinvoke $u0#2.<java.util.HashMap: void <init>()>();

        this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores> = $u0#2;

        this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared> = 0;

        this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot> = 0;

        this.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved> = $u2;

        return;
    }

    static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    {
        androidx.lifecycle.ViewModelStore $u2;
        androidx.lifecycle.ViewModelProvider viewModelProvider;
        androidx.lifecycle.ViewModel $u-1;
        androidx.lifecycle.ViewModelProvider$Factory $u1;
        androidx.fragment.app.FragmentManagerViewModel $u1#4;

        $u2 := @parameter0: androidx.lifecycle.ViewModelStore;

        viewModelProvider = new androidx.lifecycle.ViewModelProvider;

        $u1 = <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>;

        specialinvoke viewModelProvider.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>($u2, $u1);

        $u-1 = virtualinvoke viewModelProvider.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>(class "Landroidx/fragment/app/FragmentManagerViewModel;");

        $u1#4 = (androidx.fragment.app.FragmentManagerViewModel) $u-1;

        return $u1#4;
    }

    boolean addRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        androidx.fragment.app.Fragment $u2;
        boolean $u-1;
        java.util.HashSet $u0;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u2 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1 = virtualinvoke $u0.<java.util.HashSet: boolean add(java.lang.Object)>($u2);

        return $u-1;
    }

    void clearNonConfigState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel this, childNonConfig#11;
        androidx.fragment.app.Fragment $u5;
        java.lang.String $u3;
        boolean childNonConfig;
        java.lang.StringBuilder childNonConfig#2;
        java.util.HashMap childNonConfig#7;
        java.lang.Object $u-1;
        androidx.lifecycle.ViewModelStore viewModelStore;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u5 := @parameter0: androidx.fragment.app.Fragment;

        childNonConfig = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if childNonConfig == 0 goto label1;

        childNonConfig#2 = new java.lang.StringBuilder;

        specialinvoke childNonConfig#2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke childNonConfig#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing non-config state for ");

        virtualinvoke childNonConfig#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u5);

        $u3 = virtualinvoke childNonConfig#2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $u3);

     label1:
        childNonConfig#7 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u3 = $u5.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke childNonConfig#7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u3);

        childNonConfig#11 = (androidx.fragment.app.FragmentManagerViewModel) $u-1;

        if childNonConfig#11 == null goto label2;

        virtualinvoke childNonConfig#11.<androidx.fragment.app.FragmentManagerViewModel: void onCleared()>();

        childNonConfig#7 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u3 = $u5.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke childNonConfig#7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($u3);

     label2:
        childNonConfig#7 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u3 = $u5.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke childNonConfig#7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u3);

        viewModelStore = (androidx.lifecycle.ViewModelStore) $u-1;

        if viewModelStore == null goto label3;

        virtualinvoke viewModelStore.<androidx.lifecycle.ViewModelStore: void clear()>();

        childNonConfig#7 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u3 = $u5.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke childNonConfig#7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($u3);

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.fragment.app.FragmentManagerViewModel this, that;
        java.lang.Object $u6;
        java.lang.Class $u-1, $u-1#4;
        java.util.HashSet $u3, $u4;
        boolean $u-1#10;
        java.util.HashMap $u3#12, $u4#13;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u6 := @parameter0: java.lang.Object;

        if this != $u6 goto label1;

        return 1;

     label1:
        if $u6 == null goto label4;

        $u-1 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $u-1#4 = virtualinvoke $u6.<java.lang.Object: java.lang.Class getClass()>();

        if $u-1 == $u-1#4 goto label2;

        return 0;

     label2:
        that = (androidx.fragment.app.FragmentManagerViewModel) $u6;

        $u3 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u4 = that.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1#10 = virtualinvoke $u3.<java.util.HashSet: boolean equals(java.lang.Object)>($u4);

        if $u-1#10 == 0 goto label3;

        $u3#12 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u4#13 = that.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u-1#10 = virtualinvoke $u3#12.<java.util.HashMap: boolean equals(java.lang.Object)>($u4#13);

        if $u-1#10 == 0 goto label3;

        $u3#12 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u4#13 = that.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u-1#10 = virtualinvoke $u3#12.<java.util.HashMap: boolean equals(java.lang.Object)>($u4#13);

        if $u-1#10 == 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel this, childNonConfig#4;
        androidx.fragment.app.Fragment $u4;
        java.lang.Object $u-1;
        java.util.HashMap childNonConfig;
        java.lang.String $u1;
        boolean $u2;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        childNonConfig = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u1 = $u4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke childNonConfig.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u1);

        childNonConfig#4 = (androidx.fragment.app.FragmentManagerViewModel) $u-1;

        if childNonConfig#4 != null goto label1;

        childNonConfig#4 = new androidx.fragment.app.FragmentManagerViewModel;

        $u2 = this.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>;

        specialinvoke childNonConfig#4.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>($u2);

        childNonConfig = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u1 = $u4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke childNonConfig.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u1, childNonConfig#4);

     label1:
        return childNonConfig#4;
    }

    java.util.Collection getRetainedFragments()
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        java.util.HashSet ret0;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        ret0 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        return ret0;
    }

    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
    {
        androidx.fragment.app.FragmentManagerViewModel this, childNonConfig;
        java.util.HashSet childNonConfigs;
        boolean $u-1;
        java.util.HashMap childNonConfigs#5, $u2, childNonConfig#41;
        java.util.Set $u-1#13;
        java.util.Iterator $u-1#15;
        java.lang.Object $u-1#19;
        java.util.Map$Entry entry;
        androidx.fragment.app.FragmentManagerNonConfig $u-1#25;
        java.util.ArrayList $u2#38;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        childNonConfigs = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1 = virtualinvoke childNonConfigs.<java.util.HashSet: boolean isEmpty()>();

        if $u-1 == 0 goto label1;

        childNonConfigs#5 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u-1 = virtualinvoke childNonConfigs#5.<java.util.HashMap: boolean isEmpty()>();

        if $u-1 == 0 goto label1;

        childNonConfigs#5 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u-1 = virtualinvoke childNonConfigs#5.<java.util.HashMap: boolean isEmpty()>();

        if $u-1 == 0 goto label1;

        return null;

     label1:
        childNonConfigs#5 = new java.util.HashMap;

        specialinvoke childNonConfigs#5.<java.util.HashMap: void <init>()>();

        $u2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u-1#13 = virtualinvoke $u2.<java.util.HashMap: java.util.Set entrySet()>();

        $u-1#15 = interfaceinvoke $u-1#13.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $u-1 = interfaceinvoke $u-1#15.<java.util.Iterator: boolean hasNext()>();

        if $u-1 == 0 goto label3;

        $u-1#19 = interfaceinvoke $u-1#15.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $u-1#19;

        $u-1#19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        childNonConfig = (androidx.fragment.app.FragmentManagerViewModel) $u-1#19;

        $u-1#25 = virtualinvoke childNonConfig.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()>();

        if $u-1#25 == null goto label2;

        $u-1#19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke childNonConfigs#5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u-1#19, $u-1#25);

        goto label2;

     label3:
        this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot> = 1;

        childNonConfigs = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1 = virtualinvoke childNonConfigs.<java.util.HashSet: boolean isEmpty()>();

        if $u-1 == 0 goto label4;

        $u-1 = virtualinvoke childNonConfigs#5.<java.util.HashMap: boolean isEmpty()>();

        if $u-1 == 0 goto label4;

        $u2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u-1 = virtualinvoke $u2.<java.util.HashMap: boolean isEmpty()>();

        if $u-1 == 0 goto label4;

        return null;

     label4:
        $u-1#25 = new androidx.fragment.app.FragmentManagerNonConfig;

        $u2#38 = new java.util.ArrayList;

        childNonConfigs = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        specialinvoke $u2#38.<java.util.ArrayList: void <init>(java.util.Collection)>(childNonConfigs);

        $u2 = new java.util.HashMap;

        childNonConfig#41 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        specialinvoke $u2.<java.util.HashMap: void <init>(java.util.Map)>(childNonConfig#41);

        specialinvoke $u-1#25.<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.Collection,java.util.Map,java.util.Map)>($u2#38, childNonConfigs#5, $u2);

        return $u-1#25;
    }

    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        androidx.fragment.app.Fragment $u4;
        java.lang.String $u2;
        java.lang.Object $u-1;
        java.util.HashMap viewModelStore;
        androidx.lifecycle.ViewModelStore viewModelStore#4;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u4 := @parameter0: androidx.fragment.app.Fragment;

        viewModelStore = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u2 = $u4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $u-1 = virtualinvoke viewModelStore.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($u2);

        viewModelStore#4 = (androidx.lifecycle.ViewModelStore) $u-1;

        if viewModelStore#4 != null goto label1;

        viewModelStore#4 = new androidx.lifecycle.ViewModelStore;

        specialinvoke viewModelStore#4.<androidx.lifecycle.ViewModelStore: void <init>()>();

        viewModelStore = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u2 = $u4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke viewModelStore.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u2, viewModelStore#4);

     label1:
        return viewModelStore#4;
    }

    public int hashCode()
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        java.util.HashSet result;
        int $u-1, $u-1#6;
        java.util.HashMap $u2;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        result = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1 = virtualinvoke result.<java.util.HashSet: int hashCode()>();

        $u-1 = $u-1 * 31;

        $u2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u-1#6 = virtualinvoke $u2.<java.util.HashMap: int hashCode()>();

        $u-1 = $u-1 + $u-1#6;

        $u-1 = $u-1 * 31;

        $u2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u-1#6 = virtualinvoke $u2.<java.util.HashMap: int hashCode()>();

        $u-1 = $u-1 + $u-1#6;

        return $u-1;
    }

    boolean isCleared()
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        boolean ret0;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        ret0 = this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared>;

        return ret0;
    }

    protected void onCleared()
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        java.lang.String $u-1;
        boolean $u0;
        java.lang.StringBuilder $u0#2;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $u0 == 0 goto label1;

        $u0#2 = new java.lang.StringBuilder;

        specialinvoke $u0#2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCleared called for ");

        virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        $u-1 = virtualinvoke $u0#2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $u-1);

     label1:
        this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared> = 1;

        return;
    }

    boolean removeRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        androidx.fragment.app.Fragment $u2;
        boolean $u-1;
        java.util.HashSet $u0;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u2 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1 = virtualinvoke $u0.<java.util.HashSet: boolean remove(java.lang.Object)>($u2);

        return $u-1;
    }

    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManagerViewModel this, childViewModel;
        androidx.fragment.app.FragmentManagerNonConfig $u8, $u5;
        java.util.HashSet fragments;
        java.util.HashMap fragments#2;
        java.util.Collection $u-1;
        java.util.Map $u-1#7;
        java.util.Set $u-1#9;
        java.util.Iterator $u-1#11;
        boolean $u-1#13;
        java.lang.Object $u-1#15;
        java.util.Map$Entry entry;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u8 := @parameter0: androidx.fragment.app.FragmentManagerNonConfig;

        fragments = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        virtualinvoke fragments.<java.util.HashSet: void clear()>();

        fragments#2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        virtualinvoke fragments#2.<java.util.HashMap: void clear()>();

        fragments#2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        virtualinvoke fragments#2.<java.util.HashMap: void clear()>();

        if $u8 == null goto label4;

        $u-1 = virtualinvoke $u8.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()>();

        if $u-1 == null goto label1;

        fragments = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        virtualinvoke fragments.<java.util.HashSet: boolean addAll(java.util.Collection)>($u-1);

     label1:
        $u-1#7 = virtualinvoke $u8.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getChildNonConfigs()>();

        if $u-1#7 == null goto label3;

        $u-1#9 = interfaceinvoke $u-1#7.<java.util.Map: java.util.Set entrySet()>();

        $u-1#11 = interfaceinvoke $u-1#9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $u-1#13 = interfaceinvoke $u-1#11.<java.util.Iterator: boolean hasNext()>();

        if $u-1#13 == 0 goto label3;

        $u-1#15 = interfaceinvoke $u-1#11.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $u-1#15;

        childViewModel = new androidx.fragment.app.FragmentManagerViewModel;

        $u-1#13 = this.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>;

        specialinvoke childViewModel.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>($u-1#13);

        $u-1#15 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $u5 = (androidx.fragment.app.FragmentManagerNonConfig) $u-1#15;

        virtualinvoke childViewModel.<androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)>($u5);

        fragments#2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u-1#15 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke fragments#2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($u-1#15, childViewModel);

        goto label2;

     label3:
        $u-1#7 = virtualinvoke $u8.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getViewModelStores()>();

        if $u-1#7 == null goto label4;

        fragments#2 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        virtualinvoke fragments#2.<java.util.HashMap: void putAll(java.util.Map)>($u-1#7);

     label4:
        this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot> = 0;

        return;
    }

    boolean shouldDestroy(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        androidx.fragment.app.Fragment $u3;
        boolean $u-1;
        java.util.HashSet $u0;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        $u3 := @parameter0: androidx.fragment.app.Fragment;

        $u0 = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1 = virtualinvoke $u0.<java.util.HashSet: boolean contains(java.lang.Object)>($u3);

        if $u-1 != 0 goto label1;

        return 1;

     label1:
        $u-1 = this.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>;

        if $u-1 == 0 goto label2;

        $u-1 = this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared>;

        return $u-1;

     label2:
        $u-1 = this.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot>;

        $u-1 = $u-1 ^ 1;

        return $u-1;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.FragmentManagerViewModel this;
        java.lang.StringBuilder sb;
        int $u-1;
        java.lang.String $u-1#4;
        java.util.HashSet fragmentIterator;
        java.util.Iterator $u-1#8;
        boolean $u-1#10;
        java.lang.Object $u-1#13;
        java.util.HashMap childNonConfigIterator;
        java.util.Set $u-1#19;

        this := @this: androidx.fragment.app.FragmentManagerViewModel;

        sb = new java.lang.StringBuilder;

        specialinvoke sb.<java.lang.StringBuilder: void <init>(java.lang.String)>("FragmentManagerViewModel{");

        $u-1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this);

        $u-1#4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($u-1);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#4);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} Fragments (");

        fragmentIterator = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments>;

        $u-1#8 = virtualinvoke fragmentIterator.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $u-1#10 = interfaceinvoke $u-1#8.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label2;

        $u-1#13 = interfaceinvoke $u-1#8.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1#13);

        $u-1#10 = interfaceinvoke $u-1#8.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label1;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label1;

     label2:
        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Child Non Config (");

        childNonConfigIterator = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $u-1#19 = virtualinvoke childNonConfigIterator.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#8 = interfaceinvoke $u-1#19.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $u-1#10 = interfaceinvoke $u-1#8.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label4;

        $u-1#13 = interfaceinvoke $u-1#8.<java.util.Iterator: java.lang.Object next()>();

        $u-1#4 = (java.lang.String) $u-1#13;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#4);

        $u-1#10 = interfaceinvoke $u-1#8.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label3;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label3;

     label4:
        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ViewModelStores (");

        childNonConfigIterator = this.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $u-1#19 = virtualinvoke childNonConfigIterator.<java.util.HashMap: java.util.Set keySet()>();

        $u-1#8 = interfaceinvoke $u-1#19.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $u-1#10 = interfaceinvoke $u-1#8.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label6;

        $u-1#13 = interfaceinvoke $u-1#8.<java.util.Iterator: java.lang.Object next()>();

        $u-1#4 = (java.lang.String) $u-1#13;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#4);

        $u-1#10 = interfaceinvoke $u-1#8.<java.util.Iterator: boolean hasNext()>();

        if $u-1#10 == 0 goto label5;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label5;

     label6:
        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $u-1#4 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1#4;
    }
}
