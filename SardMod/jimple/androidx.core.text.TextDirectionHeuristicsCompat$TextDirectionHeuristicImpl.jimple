abstract class androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl extends java.lang.Object implements androidx.core.text.TextDirectionHeuristicCompat
{
    private final androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm;

    void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl this;
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm $u1;

        this := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $u1 := @parameter0: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm> = $u1;

        return;
    }

    private boolean doCheck(java.lang.CharSequence, int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl this;
        java.lang.CharSequence $u3;
        int $u4, $u5;
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm $u0;
        boolean $u-1;

        this := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $u3 := @parameter0: java.lang.CharSequence;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        $u0 = this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm>;

        $u4 = interfaceinvoke $u0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)>($u3, $u4, $u5);

        if $u4 == 0 goto label2;

        if $u4 == 1 goto label1;

        $u-1 = virtualinvoke this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean defaultIsRtl()>();

        return $u-1;

     label1:
        return 0;

     label2:
        return 1;
    }

    protected abstract boolean defaultIsRtl();

    public boolean isRtl(java.lang.CharSequence, int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl this;
        java.lang.CharSequence $u2;
        int $u3, $u4, $u-1;
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm $u0;
        boolean $u-1#5;
        java.lang.IllegalArgumentException $u0#9;

        this := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $u2 := @parameter0: java.lang.CharSequence;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        if $u2 == null goto label2;

        if $u3 < 0 goto label2;

        if $u4 < 0 goto label2;

        $u-1 = interfaceinvoke $u2.<java.lang.CharSequence: int length()>();

        $u-1 = $u-1 - $u4;

        if $u-1 < $u3 goto label2;

        $u0 = this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm>;

        if $u0 != null goto label1;

        $u-1#5 = virtualinvoke this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean defaultIsRtl()>();

        return $u-1#5;

     label1:
        $u-1#5 = specialinvoke this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)>($u2, $u3, $u4);

        return $u-1#5;

     label2:
        $u0#9 = new java.lang.IllegalArgumentException;

        specialinvoke $u0#9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $u0#9;
    }

    public boolean isRtl(char[], int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl this;
        char[] $u2;
        int $u3, $u4;
        java.nio.CharBuffer $u-1;
        boolean $u-1#3;

        this := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $u2 := @parameter0: char[];

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u-1 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($u2);

        $u-1#3 = virtualinvoke this.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)>($u-1, $u3, $u4);

        return $u-1#3;
    }
}
