public final class androidx.core.widget.TextViewCompat extends java.lang.Object
{
    public static final int AUTO_SIZE_TEXT_TYPE_NONE;
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM;
    private static final int LINES;
    private static final java.lang.String LOG_TAG;
    private static java.lang.reflect.Field sMaxModeField;
    private static boolean sMaxModeFieldFetched;
    private static java.lang.reflect.Field sMaximumField;
    private static boolean sMaximumFieldFetched;
    private static java.lang.reflect.Field sMinModeField;
    private static boolean sMinModeFieldFetched;
    private static java.lang.reflect.Field sMinimumField;
    private static boolean sMinimumFieldFetched;

    private void <init>()
    {
        androidx.core.widget.TextViewCompat this;

        this := @this: androidx.core.widget.TextViewCompat;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        boolean $u0#4;
        androidx.core.widget.AutoSizeableTextView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        $u0 = virtualinvoke $u2.<android.widget.TextView: int getAutoSizeMaxTextSize()>();

        return $u0;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.AutoSizeableTextView) $u2;

        $u0 = interfaceinvoke $u0#6.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeMaxTextSize()>();

        return $u0;

     label2:
        return -1;
    }

    public static int getAutoSizeMinTextSize(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        boolean $u0#4;
        androidx.core.widget.AutoSizeableTextView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        $u0 = virtualinvoke $u2.<android.widget.TextView: int getAutoSizeMinTextSize()>();

        return $u0;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.AutoSizeableTextView) $u2;

        $u0 = interfaceinvoke $u0#6.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeMinTextSize()>();

        return $u0;

     label2:
        return -1;
    }

    public static int getAutoSizeStepGranularity(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        boolean $u0#4;
        androidx.core.widget.AutoSizeableTextView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        $u0 = virtualinvoke $u2.<android.widget.TextView: int getAutoSizeStepGranularity()>();

        return $u0;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.AutoSizeableTextView) $u2;

        $u0 = interfaceinvoke $u0#6.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeStepGranularity()>();

        return $u0;

     label2:
        return -1;
    }

    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        int[] $u-1;
        boolean $u0#4;
        androidx.core.widget.AutoSizeableTextView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        $u-1 = virtualinvoke $u2.<android.widget.TextView: int[] getAutoSizeTextAvailableSizes()>();

        return $u-1;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.AutoSizeableTextView) $u2;

        $u-1 = interfaceinvoke $u0#6.<androidx.core.widget.AutoSizeableTextView: int[] getAutoSizeTextAvailableSizes()>();

        return $u-1;

     label2:
        $u-1 = newarray (int)[0];

        return $u-1;
    }

    public static int getAutoSizeTextType(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        boolean $u0#4;
        androidx.core.widget.AutoSizeableTextView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        $u0 = virtualinvoke $u2.<android.widget.TextView: int getAutoSizeTextType()>();

        return $u0;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.AutoSizeableTextView) $u2;

        $u0 = interfaceinvoke $u0#6.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeTextType()>();

        return $u0;

     label2:
        return 0;
    }

    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        android.content.res.ColorStateList $u-1;
        boolean $u0#4;
        androidx.core.widget.TintableCompoundDrawablesView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($u2);

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 24 goto label1;

        $u-1 = virtualinvoke $u2.<android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>();

        return $u-1;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.TintableCompoundDrawablesView) $u2;

        $u-1 = interfaceinvoke $u0#6.<androidx.core.widget.TintableCompoundDrawablesView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()>();

        return $u-1;

     label2:
        return null;
    }

    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        android.graphics.PorterDuff$Mode $u-1;
        boolean $u0#4;
        androidx.core.widget.TintableCompoundDrawablesView $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($u2);

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 24 goto label1;

        $u-1 = virtualinvoke $u2.<android.widget.TextView: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()>();

        return $u-1;

     label1:
        $u0#4 = $u2 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $u0#4 == 0 goto label2;

        $u0#6 = (androidx.core.widget.TintableCompoundDrawablesView) $u2;

        $u-1 = interfaceinvoke $u0#6.<androidx.core.widget.TintableCompoundDrawablesView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()>();

        return $u-1;

     label2:
        return null;
    }

    public static android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
    {
        android.widget.TextView $u6;
        android.graphics.drawable.Drawable start, end;
        int rtl;
        android.graphics.drawable.Drawable[] $u-1;
        boolean compounds;

        $u6 := @parameter0: android.widget.TextView;

        rtl = <android.os.Build$VERSION: int SDK_INT>;

        if rtl < 18 goto label1;

        $u-1 = virtualinvoke $u6.<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>();

        return $u-1;

     label1:
        rtl = <android.os.Build$VERSION: int SDK_INT>;

        if rtl < 17 goto label4;

        rtl = virtualinvoke $u6.<android.widget.TextView: int getLayoutDirection()>();

        compounds = 1;

        if rtl != 1 goto label2;

        goto label3;

     label2:
        compounds = 0;

     label3:
        $u-1 = virtualinvoke $u6.<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>();

        if compounds == 0 goto label5;

        start = $u-1[2];

        end = $u-1[0];

        $u-1[0] = start;

        $u-1[2] = end;

        return $u-1;

     label4:
        $u-1 = virtualinvoke $u6.<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>();

     label5:
        return $u-1;
    }

    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u-1, $u1;
        android.text.TextPaint $u-1#3;
        android.graphics.Paint$FontMetricsInt $u-1#5;

        $u2 := @parameter0: android.widget.TextView;

        $u-1 = virtualinvoke $u2.<android.widget.TextView: int getPaddingTop()>();

        $u-1#3 = virtualinvoke $u2.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#5 = virtualinvoke $u-1#3.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $u1 = $u-1#5.<android.graphics.Paint$FontMetricsInt: int top>;

        $u-1 = $u-1 - $u1;

        return $u-1;
    }

    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u-1, $u1;
        android.text.TextPaint $u-1#3;
        android.graphics.Paint$FontMetricsInt $u-1#5;

        $u2 := @parameter0: android.widget.TextView;

        $u-1 = virtualinvoke $u2.<android.widget.TextView: int getPaddingBottom()>();

        $u-1#3 = virtualinvoke $u2.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#5 = virtualinvoke $u-1#3.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $u1 = $u-1#5.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $u-1 = $u-1 + $u1;

        return $u-1;
    }

    public static int getMaxLines(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        boolean $u0#5;
        java.lang.reflect.Field $u-1;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 16 goto label1;

        $u0 = virtualinvoke $u2.<android.widget.TextView: int getMaxLines()>();

        return $u0;

     label1:
        $u0#5 = <androidx.core.widget.TextViewCompat: boolean sMaxModeFieldFetched>;

        if $u0#5 != 0 goto label2;

        $u-1 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMaxMode");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField> = $u-1;

        <androidx.core.widget.TextViewCompat: boolean sMaxModeFieldFetched> = 1;

     label2:
        $u-1 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField>;

        if $u-1 == null goto label4;

        $u0 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($u-1, $u2);

        if $u0 != 1 goto label4;

        $u0#5 = <androidx.core.widget.TextViewCompat: boolean sMaximumFieldFetched>;

        if $u0#5 != 0 goto label3;

        $u-1 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMaximum");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField> = $u-1;

        <androidx.core.widget.TextViewCompat: boolean sMaximumFieldFetched> = 1;

     label3:
        $u-1 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField>;

        if $u-1 == null goto label4;

        $u0 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($u-1, $u2);

        return $u0;

     label4:
        return -1;
    }

    public static int getMinLines(android.widget.TextView)
    {
        android.widget.TextView $u2;
        int $u0;
        boolean $u0#5;
        java.lang.reflect.Field $u-1;

        $u2 := @parameter0: android.widget.TextView;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 16 goto label1;

        $u0 = virtualinvoke $u2.<android.widget.TextView: int getMinLines()>();

        return $u0;

     label1:
        $u0#5 = <androidx.core.widget.TextViewCompat: boolean sMinModeFieldFetched>;

        if $u0#5 != 0 goto label2;

        $u-1 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMinMode");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField> = $u-1;

        <androidx.core.widget.TextViewCompat: boolean sMinModeFieldFetched> = 1;

     label2:
        $u-1 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField>;

        if $u-1 == null goto label4;

        $u0 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($u-1, $u2);

        if $u0 != 1 goto label4;

        $u0#5 = <androidx.core.widget.TextViewCompat: boolean sMinimumFieldFetched>;

        if $u0#5 != 0 goto label3;

        $u-1 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMinimum");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField> = $u-1;

        <androidx.core.widget.TextViewCompat: boolean sMinimumFieldFetched> = 1;

     label3:
        $u-1 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField>;

        if $u-1 == null goto label4;

        $u0 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($u-1, $u2);

        return $u0;

     label4:
        return -1;
    }

    private static int getTextDirection(android.text.TextDirectionHeuristic)
    {
        android.text.TextDirectionHeuristic $u2, $u0;

        $u2 := @parameter0: android.text.TextDirectionHeuristic;

        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        if $u2 != $u0 goto label1;

        return 1;

     label1:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if $u2 != $u0 goto label2;

        return 1;

     label2:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        if $u2 != $u0 goto label3;

        return 2;

     label3:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        if $u2 != $u0 goto label4;

        return 3;

     label4:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        if $u2 != $u0 goto label5;

        return 4;

     label5:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        if $u2 != $u0 goto label6;

        return 5;

     label6:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if $u2 != $u0 goto label7;

        return 6;

     label7:
        $u0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        if $u2 != $u0 goto label8;

        return 7;

     label8:
        return 1;
    }

    private static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    {
        android.widget.TextView $u5;
        android.text.method.TransformationMethod $u-1;
        boolean symbols;
        int symbols#5;
        java.util.Locale $u-1#13;
        android.icu.text.DecimalFormatSymbols $u-1#15;
        java.lang.String[] $u-1#17;
        java.lang.String zero;
        byte $u-1#22;
        android.text.TextDirectionHeuristic ret0;

        $u5 := @parameter0: android.widget.TextView;

        $u-1 = virtualinvoke $u5.<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>();

        symbols = $u-1 instanceof android.text.method.PasswordTransformationMethod;

        if symbols == 0 goto label01;

        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return ret0;

     label01:
        symbols#5 = <android.os.Build$VERSION: int SDK_INT>;

        symbols = 0;

        if symbols#5 < 28 goto label04;

        symbols#5 = virtualinvoke $u5.<android.widget.TextView: int getInputType()>();

        symbols#5 = symbols#5 & 15;

        if symbols#5 != 3 goto label04;

        $u-1#13 = virtualinvoke $u5.<android.widget.TextView: java.util.Locale getTextLocale()>();

        $u-1#15 = staticinvoke <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>($u-1#13);

        $u-1#17 = virtualinvoke $u-1#15.<android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>();

        zero = $u-1#17[0];

        symbols#5 = virtualinvoke zero.<java.lang.String: int codePointAt(int)>(0);

        $u-1#22 = staticinvoke <java.lang.Character: byte getDirectionality(int)>(symbols#5);

        if $u-1#22 == 1 goto label03;

        if $u-1#22 != 2 goto label02;

        goto label03;

     label02:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return ret0;

     label03:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return ret0;

     label04:
        symbols#5 = virtualinvoke $u5.<android.widget.TextView: int getLayoutDirection()>();

        if symbols#5 != 1 goto label05;

        symbols = 1;

     label05:
        symbols#5 = virtualinvoke $u5.<android.widget.TextView: int getTextDirection()>();

        lookupswitch(symbols#5)
        {
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            default: goto label06;
        };

     label06:
        if symbols == 0 goto label13;

        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        return ret0;

     label07:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        return ret0;

     label08:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        return ret0;

     label09:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        return ret0;

     label10:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return ret0;

     label11:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return ret0;

     label12:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        return ret0;

     label13:
        ret0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        return ret0;
    }

    public static androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
    {
        android.widget.TextView $u3;
        int builder;
        androidx.core.text.PrecomputedTextCompat$Params builder#3;
        android.text.PrecomputedText$Params $u-1;
        androidx.core.text.PrecomputedTextCompat$Params$Builder builder#6;
        android.text.TextPaint $u1, $u-1#8;
        android.text.TextDirectionHeuristic $u-1#18;

        $u3 := @parameter0: android.widget.TextView;

        builder = <android.os.Build$VERSION: int SDK_INT>;

        if builder < 28 goto label1;

        builder#3 = new androidx.core.text.PrecomputedTextCompat$Params;

        $u-1 = virtualinvoke $u3.<android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>();

        specialinvoke builder#3.<androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>($u-1);

        return builder#3;

     label1:
        builder#6 = new androidx.core.text.PrecomputedTextCompat$Params$Builder;

        $u1 = new android.text.TextPaint;

        $u-1#8 = virtualinvoke $u3.<android.widget.TextView: android.text.TextPaint getPaint()>();

        specialinvoke $u1.<android.text.TextPaint: void <init>(android.graphics.Paint)>($u-1#8);

        specialinvoke builder#6.<androidx.core.text.PrecomputedTextCompat$Params$Builder: void <init>(android.text.TextPaint)>($u1);

        builder = <android.os.Build$VERSION: int SDK_INT>;

        if builder < 23 goto label2;

        builder = virtualinvoke $u3.<android.widget.TextView: int getBreakStrategy()>();

        virtualinvoke builder#6.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)>(builder);

        builder = virtualinvoke $u3.<android.widget.TextView: int getHyphenationFrequency()>();

        virtualinvoke builder#6.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)>(builder);

     label2:
        builder = <android.os.Build$VERSION: int SDK_INT>;

        if builder < 18 goto label3;

        $u-1#18 = staticinvoke <androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)>($u3);

        virtualinvoke builder#6.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>($u-1#18);

     label3:
        builder#3 = virtualinvoke builder#6.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>();

        return builder#3;
    }

    private static java.lang.reflect.Field retrieveField(java.lang.String)
    {
        java.lang.String $u4;
        java.lang.reflect.Field field, $u-1;
        java.lang.Class e;
        java.lang.NoSuchFieldException e#6;
        java.lang.StringBuilder $u2;

        $u4 := @parameter0: java.lang.String;

        field = null;

        e = class "Landroid/widget/TextView;";

     label1:
        $u-1 = virtualinvoke e.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($u4);

     label2:
        field = $u-1;

     label3:
        virtualinvoke $u-1.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label4:
        return $u-1;

     label5:
        e#6 := @caughtexception;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve ");

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u4);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field.");

        $u4 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextViewCompat", $u4);

        return field;

        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
        catch java.lang.NoSuchFieldException from label3 to label4 with label5;
    }

    private static int retrieveIntFromField(java.lang.reflect.Field, android.widget.TextView)
    {
        java.lang.reflect.Field $u3;
        android.widget.TextView $u4;
        int $u-1;
        java.lang.IllegalAccessException e;
        java.lang.StringBuilder $u1;
        java.lang.String $u-1#6;

        $u3 := @parameter0: java.lang.reflect.Field;

        $u4 := @parameter1: android.widget.TextView;

     label1:
        $u-1 = virtualinvoke $u3.<java.lang.reflect.Field: int getInt(java.lang.Object)>($u4);

     label2:
        return $u-1;

     label3:
        e := @caughtexception;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve value of ");

        $u-1#6 = virtualinvoke $u3.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($u-1#6);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field.");

        $u-1#6 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextViewCompat", $u-1#6);

        return -1;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView, int, int, int, int) throws java.lang.IllegalArgumentException
    {
        android.widget.TextView $u2;
        int $u3, $u4, $u5, $u6, $u0;
        boolean $u0#2;
        androidx.core.widget.AutoSizeableTextView $u0#4;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: int;

        $u4 := @parameter2: int;

        $u5 := @parameter3: int;

        $u6 := @parameter4: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        virtualinvoke $u2.<android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>($u3, $u4, $u5, $u6);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.widget.AutoSizeableTextView) $u2;

        interfaceinvoke $u0#4.<androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>($u3, $u4, $u5, $u6);

     label2:
        return;
    }

    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView, int[], int) throws java.lang.IllegalArgumentException
    {
        android.widget.TextView $u2;
        int[] $u3;
        int $u4, $u0;
        boolean $u0#2;
        androidx.core.widget.AutoSizeableTextView $u0#4;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: int[];

        $u4 := @parameter2: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        virtualinvoke $u2.<android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>($u3, $u4);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.widget.AutoSizeableTextView) $u2;

        interfaceinvoke $u0#4.<androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>($u3, $u4);

     label2:
        return;
    }

    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView, int)
    {
        android.widget.TextView $u2;
        int $u3, $u0;
        boolean $u0#2;
        androidx.core.widget.AutoSizeableTextView $u0#4;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 27 goto label1;

        virtualinvoke $u2.<android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)>($u3);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.widget.AutoSizeableTextView;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.widget.AutoSizeableTextView) $u2;

        interfaceinvoke $u0#4.<androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)>($u3);

     label2:
        return;
    }

    public static void setCompoundDrawableTintList(android.widget.TextView, android.content.res.ColorStateList)
    {
        android.widget.TextView $u2;
        android.content.res.ColorStateList $u3;
        int $u0;
        boolean $u0#2;
        androidx.core.widget.TintableCompoundDrawablesView $u0#4;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: android.content.res.ColorStateList;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($u2);

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 24 goto label1;

        virtualinvoke $u2.<android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>($u3);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.widget.TintableCompoundDrawablesView) $u2;

        interfaceinvoke $u0#4.<androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)>($u3);

     label2:
        return;
    }

    public static void setCompoundDrawableTintMode(android.widget.TextView, android.graphics.PorterDuff$Mode)
    {
        android.widget.TextView $u2;
        android.graphics.PorterDuff$Mode $u3;
        int $u0;
        boolean $u0#2;
        androidx.core.widget.TintableCompoundDrawablesView $u0#4;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: android.graphics.PorterDuff$Mode;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($u2);

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 24 goto label1;

        virtualinvoke $u2.<android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)>($u3);

        return;

     label1:
        $u0#2 = $u2 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $u0#2 == 0 goto label2;

        $u0#4 = (androidx.core.widget.TintableCompoundDrawablesView) $u2;

        interfaceinvoke $u0#4.<androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)>($u3);

     label2:
        return;
    }

    public static void setCompoundDrawablesRelative(android.widget.TextView, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView $u3;
        android.graphics.drawable.Drawable $u4, $u5, $u6, $u7, $u1#8;
        int $u-1;
        boolean $u1, rtl;

        $u3 := @parameter0: android.widget.TextView;

        $u4 := @parameter1: android.graphics.drawable.Drawable;

        $u5 := @parameter2: android.graphics.drawable.Drawable;

        $u6 := @parameter3: android.graphics.drawable.Drawable;

        $u7 := @parameter4: android.graphics.drawable.Drawable;

        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 18 goto label1;

        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u4, $u5, $u6, $u7);

        return;

     label1:
        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 17 goto label8;

        $u-1 = virtualinvoke $u3.<android.widget.TextView: int getLayoutDirection()>();

        $u1 = 1;

        if $u-1 != 1 goto label2;

        goto label3;

     label2:
        $u1 = 0;

     label3:
        rtl = $u1;

        if $u1 == 0 goto label4;

        $u1#8 = $u6;

        goto label5;

     label4:
        $u1#8 = $u4;

     label5:
        if rtl == 0 goto label6;

        goto label7;

     label6:
        $u4 = $u6;

     label7:
        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u1#8, $u5, $u4, $u7);

        return;

     label8:
        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u4, $u5, $u6, $u7);

        return;
    }

    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView, int, int, int, int)
    {
        android.widget.TextView $u3;
        int $u4, $u5, $u6, $u7, $u-1;
        boolean $u1, rtl;

        $u3 := @parameter0: android.widget.TextView;

        $u4 := @parameter1: int;

        $u5 := @parameter2: int;

        $u6 := @parameter3: int;

        $u7 := @parameter4: int;

        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 18 goto label1;

        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>($u4, $u5, $u6, $u7);

        return;

     label1:
        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 17 goto label8;

        $u-1 = virtualinvoke $u3.<android.widget.TextView: int getLayoutDirection()>();

        $u1 = 1;

        if $u-1 != 1 goto label2;

        goto label3;

     label2:
        $u1 = 0;

     label3:
        rtl = $u1;

        if $u1 == 0 goto label4;

        $u-1 = $u6;

        goto label5;

     label4:
        $u-1 = $u4;

     label5:
        if rtl == 0 goto label6;

        goto label7;

     label6:
        $u4 = $u6;

     label7:
        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>($u-1, $u5, $u4, $u7);

        return;

     label8:
        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>($u4, $u5, $u6, $u7);

        return;
    }

    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView $u3;
        android.graphics.drawable.Drawable $u4, $u5, $u6, $u7, $u1#8;
        int $u-1;
        boolean $u1, rtl;

        $u3 := @parameter0: android.widget.TextView;

        $u4 := @parameter1: android.graphics.drawable.Drawable;

        $u5 := @parameter2: android.graphics.drawable.Drawable;

        $u6 := @parameter3: android.graphics.drawable.Drawable;

        $u7 := @parameter4: android.graphics.drawable.Drawable;

        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 18 goto label1;

        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u4, $u5, $u6, $u7);

        return;

     label1:
        $u-1 = <android.os.Build$VERSION: int SDK_INT>;

        if $u-1 < 17 goto label8;

        $u-1 = virtualinvoke $u3.<android.widget.TextView: int getLayoutDirection()>();

        $u1 = 1;

        if $u-1 != 1 goto label2;

        goto label3;

     label2:
        $u1 = 0;

     label3:
        rtl = $u1;

        if $u1 == 0 goto label4;

        $u1#8 = $u6;

        goto label5;

     label4:
        $u1#8 = $u4;

     label5:
        if rtl == 0 goto label6;

        goto label7;

     label6:
        $u4 = $u6;

     label7:
        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u1#8, $u5, $u4, $u7);

        return;

     label8:
        virtualinvoke $u3.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($u4, $u5, $u6, $u7);

        return;
    }

    public static void setCustomSelectionActionModeCallback(android.widget.TextView, android.view.ActionMode$Callback)
    {
        android.widget.TextView $u1;
        android.view.ActionMode$Callback $u2;

        $u1 := @parameter0: android.widget.TextView;

        $u2 := @parameter1: android.view.ActionMode$Callback;

        $u2 = staticinvoke <androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)>($u1, $u2);

        virtualinvoke $u1.<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>($u2);

        return;
    }

    public static void setFirstBaselineToTopHeight(android.widget.TextView, int)
    {
        android.widget.TextView $u6;
        int $u7, fontMetrics, $u-1#12, $u-1#17;
        android.text.TextPaint $u-1;
        android.graphics.Paint$FontMetricsInt $u-1#5;
        boolean $u-1#9;

        $u6 := @parameter0: android.widget.TextView;

        $u7 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>($u7);

        fontMetrics = <android.os.Build$VERSION: int SDK_INT>;

        if fontMetrics < 28 goto label1;

        virtualinvoke $u6.<android.widget.TextView: void setFirstBaselineToTopHeight(int)>($u7);

        return;

     label1:
        $u-1 = virtualinvoke $u6.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#5 = virtualinvoke $u-1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        fontMetrics = <android.os.Build$VERSION: int SDK_INT>;

        if fontMetrics < 16 goto label3;

        $u-1#9 = virtualinvoke $u6.<android.widget.TextView: boolean getIncludeFontPadding()>();

        if $u-1#9 == 0 goto label2;

        goto label3;

     label2:
        fontMetrics = $u-1#5.<android.graphics.Paint$FontMetricsInt: int ascent>;

        goto label4;

     label3:
        fontMetrics = $u-1#5.<android.graphics.Paint$FontMetricsInt: int top>;

     label4:
        $u-1#12 = staticinvoke <java.lang.Math: int abs(int)>(fontMetrics);

        if $u7 <= $u-1#12 goto label5;

        $u7 = $u7 + fontMetrics;

        fontMetrics = virtualinvoke $u6.<android.widget.TextView: int getPaddingLeft()>();

        $u-1#12 = virtualinvoke $u6.<android.widget.TextView: int getPaddingRight()>();

        $u-1#17 = virtualinvoke $u6.<android.widget.TextView: int getPaddingBottom()>();

        virtualinvoke $u6.<android.widget.TextView: void setPadding(int,int,int,int)>(fontMetrics, $u7, $u-1#12, $u-1#17);

     label5:
        return;
    }

    public static void setLastBaselineToBottomHeight(android.widget.TextView, int)
    {
        android.widget.TextView $u6;
        int $u7, fontMetricsBottom, $u-1#10, $u-1#15;
        android.text.TextPaint $u-1;
        android.graphics.Paint$FontMetricsInt $u-1#3;
        boolean $u-1#7;

        $u6 := @parameter0: android.widget.TextView;

        $u7 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>($u7);

        $u-1 = virtualinvoke $u6.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#3 = virtualinvoke $u-1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        fontMetricsBottom = <android.os.Build$VERSION: int SDK_INT>;

        if fontMetricsBottom < 16 goto label2;

        $u-1#7 = virtualinvoke $u6.<android.widget.TextView: boolean getIncludeFontPadding()>();

        if $u-1#7 == 0 goto label1;

        goto label2;

     label1:
        fontMetricsBottom = $u-1#3.<android.graphics.Paint$FontMetricsInt: int descent>;

        goto label3;

     label2:
        fontMetricsBottom = $u-1#3.<android.graphics.Paint$FontMetricsInt: int bottom>;

     label3:
        $u-1#10 = staticinvoke <java.lang.Math: int abs(int)>(fontMetricsBottom);

        if $u7 <= $u-1#10 goto label4;

        $u7 = $u7 - fontMetricsBottom;

        fontMetricsBottom = virtualinvoke $u6.<android.widget.TextView: int getPaddingLeft()>();

        $u-1#10 = virtualinvoke $u6.<android.widget.TextView: int getPaddingTop()>();

        $u-1#15 = virtualinvoke $u6.<android.widget.TextView: int getPaddingRight()>();

        virtualinvoke $u6.<android.widget.TextView: void setPadding(int,int,int,int)>(fontMetricsBottom, $u-1#10, $u-1#15, $u7);

     label4:
        return;
    }

    public static void setLineHeight(android.widget.TextView, int)
    {
        android.widget.TextView $u3;
        int $u4, $u-1#4;
        android.text.TextPaint $u-1;
        float $u1;

        $u3 := @parameter0: android.widget.TextView;

        $u4 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>($u4);

        $u-1 = virtualinvoke $u3.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#4 = virtualinvoke $u-1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        if $u4 == $u-1#4 goto label1;

        $u4 = $u4 - $u-1#4;

        $u1 = (float) $u4;

        virtualinvoke $u3.<android.widget.TextView: void setLineSpacing(float,float)>($u1, 1.0F);

     label1:
        return;
    }

    public static void setPrecomputedText(android.widget.TextView, androidx.core.text.PrecomputedTextCompat)
    {
        android.widget.TextView $u3;
        androidx.core.text.PrecomputedTextCompat $u4;
        int param;
        android.text.PrecomputedText $u-1;
        androidx.core.text.PrecomputedTextCompat$Params $u-1#5, $u-1#7;
        boolean $u-1#9;
        java.lang.IllegalArgumentException $u1;

        $u3 := @parameter0: android.widget.TextView;

        $u4 := @parameter1: androidx.core.text.PrecomputedTextCompat;

        param = <android.os.Build$VERSION: int SDK_INT>;

        if param < 29 goto label1;

        $u-1 = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()>();

        virtualinvoke $u3.<android.widget.TextView: void setText(java.lang.CharSequence)>($u-1);

        return;

     label1:
        $u-1#5 = staticinvoke <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>($u3);

        $u-1#7 = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()>();

        $u-1#9 = virtualinvoke $u-1#5.<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>($u-1#7);

        if $u-1#9 == 0 goto label2;

        virtualinvoke $u3.<android.widget.TextView: void setText(java.lang.CharSequence)>($u4);

        return;

     label2:
        $u1 = new java.lang.IllegalArgumentException;

        specialinvoke $u1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given text can not be applied to TextView.");

        throw $u1;
    }

    public static void setTextAppearance(android.widget.TextView, int)
    {
        android.widget.TextView $u2;
        int $u3, $u0;
        android.content.Context $u-1;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: int;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 23 goto label1;

        virtualinvoke $u2.<android.widget.TextView: void setTextAppearance(int)>($u3);

        return;

     label1:
        $u-1 = virtualinvoke $u2.<android.widget.TextView: android.content.Context getContext()>();

        virtualinvoke $u2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($u-1, $u3);

        return;
    }

    public static void setTextMetricsParams(android.widget.TextView, androidx.core.text.PrecomputedTextCompat$Params)
    {
        android.widget.TextView $u3;
        androidx.core.text.PrecomputedTextCompat$Params $u4;
        int paintTextScaleX;
        android.text.TextDirectionHeuristic $u-1;
        android.text.TextPaint $u-1#9, $u-1#15;
        float $u-1#11, $u-1#17;
        byte $u1;

        $u3 := @parameter0: android.widget.TextView;

        $u4 := @parameter1: androidx.core.text.PrecomputedTextCompat$Params;

        paintTextScaleX = <android.os.Build$VERSION: int SDK_INT>;

        if paintTextScaleX < 18 goto label1;

        $u-1 = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()>();

        paintTextScaleX = staticinvoke <androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)>($u-1);

        virtualinvoke $u3.<android.widget.TextView: void setTextDirection(int)>(paintTextScaleX);

     label1:
        paintTextScaleX = <android.os.Build$VERSION: int SDK_INT>;

        if paintTextScaleX >= 23 goto label3;

        $u-1#9 = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()>();

        $u-1#11 = virtualinvoke $u-1#9.<android.text.TextPaint: float getTextScaleX()>();

        $u-1#9 = virtualinvoke $u3.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#15 = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()>();

        virtualinvoke $u-1#9.<android.text.TextPaint: void set(android.text.TextPaint)>($u-1#15);

        $u-1#17 = virtualinvoke $u3.<android.widget.TextView: float getTextScaleX()>();

        $u1 = $u-1#11 cmpl $u-1#17;

        if $u1 != 0 goto label2;

        $u-1#17 = $u-1#11 / 2.0F;

        $u-1#17 = $u-1#17 + 1.0F;

        virtualinvoke $u3.<android.widget.TextView: void setTextScaleX(float)>($u-1#17);

     label2:
        virtualinvoke $u3.<android.widget.TextView: void setTextScaleX(float)>($u-1#11);

        return;

     label3:
        $u-1#9 = virtualinvoke $u3.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $u-1#15 = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()>();

        virtualinvoke $u-1#9.<android.text.TextPaint: void set(android.text.TextPaint)>($u-1#15);

        paintTextScaleX = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()>();

        virtualinvoke $u3.<android.widget.TextView: void setBreakStrategy(int)>(paintTextScaleX);

        paintTextScaleX = virtualinvoke $u4.<androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()>();

        virtualinvoke $u3.<android.widget.TextView: void setHyphenationFrequency(int)>(paintTextScaleX);

        return;
    }

    public static android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView, android.view.ActionMode$Callback)
    {
        android.widget.TextView $u2;
        android.view.ActionMode$Callback $u3;
        int $u0;
        boolean $u0#5;
        androidx.core.widget.TextViewCompat$OreoCallback $u0#6;

        $u2 := @parameter0: android.widget.TextView;

        $u3 := @parameter1: android.view.ActionMode$Callback;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 < 26 goto label2;

        $u0 = <android.os.Build$VERSION: int SDK_INT>;

        if $u0 > 27 goto label2;

        $u0#5 = $u3 instanceof androidx.core.widget.TextViewCompat$OreoCallback;

        if $u0#5 == 0 goto label1;

        return $u3;

     label1:
        $u0#6 = new androidx.core.widget.TextViewCompat$OreoCallback;

        specialinvoke $u0#6.<androidx.core.widget.TextViewCompat$OreoCallback: void <init>(android.view.ActionMode$Callback,android.widget.TextView)>($u3, $u2);

        return $u0#6;

     label2:
        return $u3;
    }

    public static void <clinit>()
    {
        <androidx.core.widget.TextViewCompat: java.lang.String LOG_TAG> = "TextViewCompat";

        <androidx.core.widget.TextViewCompat: int LINES> = 1;

        <androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_UNIFORM> = 1;

        <androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_NONE> = 0;

        return;
    }
}
