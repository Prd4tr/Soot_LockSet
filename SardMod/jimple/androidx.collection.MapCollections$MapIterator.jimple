final class androidx.collection.MapCollections$MapIterator extends java.lang.Object implements java.util.Iterator, java.util.Map$Entry
{
    int mEnd;
    boolean mEntryValid;
    int mIndex;
    final androidx.collection.MapCollections this$0;

    void <init>(androidx.collection.MapCollections)
    {
        androidx.collection.MapCollections$MapIterator this;
        androidx.collection.MapCollections $u2;
        int $u-1;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u2 := @parameter0: androidx.collection.MapCollections;

        this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0> = $u2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid> = 0;

        $u-1 = virtualinvoke $u2.<androidx.collection.MapCollections: int colGetSize()>();

        $u-1 = $u-1 + -1;

        this.<androidx.collection.MapCollections$MapIterator: int mEnd> = $u-1;

        this.<androidx.collection.MapCollections$MapIterator: int mIndex> = -1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.collection.MapCollections$MapIterator this;
        java.lang.Object $u7, $u-1;
        int $u5;
        boolean e;
        java.util.Map$Entry e#5;
        androidx.collection.MapCollections $u3;
        java.lang.IllegalStateException e#23;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u7 := @parameter0: java.lang.Object;

        e = this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid>;

        if e == 0 goto label3;

        e = $u7 instanceof java.util.Map$Entry;

        if e != 0 goto label1;

        return 0;

     label1:
        e#5 = (java.util.Map$Entry) $u7;

        $u7 = interfaceinvoke e#5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $u3 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        $u5 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u-1 = virtualinvoke $u3.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>($u5, 0);

        e = staticinvoke <androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)>($u7, $u-1);

        if e == 0 goto label2;

        $u7 = interfaceinvoke e#5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $u3 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        $u5 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u-1 = virtualinvoke $u3.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>($u5, 1);

        e = staticinvoke <androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)>($u7, $u-1);

        if e == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        e#23 = new java.lang.IllegalStateException;

        specialinvoke e#23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw e#23;
    }

    public java.lang.Object getKey()
    {
        androidx.collection.MapCollections$MapIterator this;
        java.lang.Object $u-1;
        boolean $u0;
        androidx.collection.MapCollections $u0#2;
        int $u1;
        java.lang.IllegalStateException $u0#5;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u0 = this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid>;

        if $u0 == 0 goto label1;

        $u0#2 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u-1 = virtualinvoke $u0#2.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>($u1, 0);

        return $u-1;

     label1:
        $u0#5 = new java.lang.IllegalStateException;

        specialinvoke $u0#5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $u0#5;
    }

    public java.lang.Object getValue()
    {
        androidx.collection.MapCollections$MapIterator this;
        java.lang.Object $u-1;
        boolean $u0;
        androidx.collection.MapCollections $u0#2;
        int $u1;
        java.lang.IllegalStateException $u0#5;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u0 = this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid>;

        if $u0 == 0 goto label1;

        $u0#2 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u-1 = virtualinvoke $u0#2.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>($u1, 1);

        return $u-1;

     label1:
        $u0#5 = new java.lang.IllegalStateException;

        specialinvoke $u0#5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $u0#5;
    }

    public boolean hasNext()
    {
        androidx.collection.MapCollections$MapIterator this;
        int $u1, $u0;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u0 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mEnd>;

        if $u0 >= $u1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        androidx.collection.MapCollections$MapIterator this;
        boolean key;
        androidx.collection.MapCollections key#2;
        int value, $u2;
        java.lang.Object $u-1, $u-1#9;
        java.lang.IllegalStateException key#15;

        this := @this: androidx.collection.MapCollections$MapIterator;

        key = this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid>;

        if key == 0 goto label5;

        key#2 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        value = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u2 = 0;

        $u-1 = virtualinvoke key#2.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>(value, 0);

        key#2 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        value = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u-1#9 = virtualinvoke key#2.<androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)>(value, 1);

        if $u-1 != null goto label1;

        value = 0;

        goto label2;

     label1:
        value = virtualinvoke $u-1.<java.lang.Object: int hashCode()>();

     label2:
        if $u-1#9 != null goto label3;

        goto label4;

     label3:
        $u2 = virtualinvoke $u-1#9.<java.lang.Object: int hashCode()>();

     label4:
        $u2 = $u2 ^ value;

        return $u2;

     label5:
        key#15 = new java.lang.IllegalStateException;

        specialinvoke key#15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw key#15;
    }

    public volatile java.lang.Object next()
    {
        androidx.collection.MapCollections$MapIterator this;
        java.util.Map$Entry $u-1;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u-1 = virtualinvoke this.<androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()>();

        return $u-1;
    }

    public java.util.Map$Entry next()
    {
        androidx.collection.MapCollections$MapIterator this;
        boolean $u-1;
        int $u0;
        java.util.NoSuchElementException $u0#4;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u-1 = virtualinvoke this.<androidx.collection.MapCollections$MapIterator: boolean hasNext()>();

        if $u-1 == 0 goto label1;

        $u0 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u0 = $u0 + 1;

        this.<androidx.collection.MapCollections$MapIterator: int mIndex> = $u0;

        this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid> = 1;

        return this;

     label1:
        $u0#4 = new java.util.NoSuchElementException;

        specialinvoke $u0#4.<java.util.NoSuchElementException: void <init>()>();

        throw $u0#4;
    }

    public void remove()
    {
        androidx.collection.MapCollections$MapIterator this;
        int $u1;
        boolean $u0;
        androidx.collection.MapCollections $u0#2;
        java.lang.IllegalStateException $u0#8;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u0 = this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid>;

        if $u0 == 0 goto label1;

        $u0#2 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        virtualinvoke $u0#2.<androidx.collection.MapCollections: void colRemoveAt(int)>($u1);

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        $u1 = $u1 + -1;

        this.<androidx.collection.MapCollections$MapIterator: int mIndex> = $u1;

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mEnd>;

        $u1 = $u1 + -1;

        this.<androidx.collection.MapCollections$MapIterator: int mEnd> = $u1;

        this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid> = 0;

        return;

     label1:
        $u0#8 = new java.lang.IllegalStateException;

        specialinvoke $u0#8.<java.lang.IllegalStateException: void <init>()>();

        throw $u0#8;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        androidx.collection.MapCollections$MapIterator this;
        java.lang.Object object;
        boolean $u0;
        androidx.collection.MapCollections $u0#2;
        int $u1;
        java.lang.IllegalStateException $u0#5;

        this := @this: androidx.collection.MapCollections$MapIterator;

        object := @parameter0: java.lang.Object;

        $u0 = this.<androidx.collection.MapCollections$MapIterator: boolean mEntryValid>;

        if $u0 == 0 goto label1;

        $u0#2 = this.<androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0>;

        $u1 = this.<androidx.collection.MapCollections$MapIterator: int mIndex>;

        object = virtualinvoke $u0#2.<androidx.collection.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)>($u1, object);

        return object;

     label1:
        $u0#5 = new java.lang.IllegalStateException;

        specialinvoke $u0#5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $u0#5;
    }

    public java.lang.String toString()
    {
        androidx.collection.MapCollections$MapIterator this;
        java.lang.StringBuilder $u0;
        java.lang.Object $u-1;
        java.lang.String $u-1#7;

        this := @this: androidx.collection.MapCollections$MapIterator;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $u-1 = virtualinvoke this.<androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $u-1 = virtualinvoke this.<androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u-1);

        $u-1#7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $u-1#7;
    }
}
